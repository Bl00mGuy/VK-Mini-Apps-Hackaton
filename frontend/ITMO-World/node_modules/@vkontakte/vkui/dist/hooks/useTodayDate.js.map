{"version":3,"sources":["../../src/hooks/useTodayDate.ts"],"sourcesContent":["import * as React from 'react';\nimport { differenceInMilliseconds, endOfToday, isSameDay } from 'date-fns';\nimport { useDOM } from '../lib/dom';\n\n/**\n * Опционально обновляемая дата сегодняшнего дня\n *\n * Дата - сегодня (в соответствии с системным временем)\n *\n * Часы, минуты, секунды, миллисекунды - произвольные\n *\n * @param listenDayChangesForUpdate - флаг по которому определяется, будет ли создаваться подписка на смену календарного дня\n */\nexport function useTodayDate(listenDayChangesForUpdate = false): Date {\n  const { document, window } = useDOM();\n  const [todayDate, setTodayDate] = React.useState(() => new Date());\n\n  React.useEffect(() => {\n    if (!listenDayChangesForUpdate || !document || !window) {\n      return;\n    }\n\n    let timeout: number | undefined = undefined;\n\n    const recalcTimeout = () => {\n      if (document.visibilityState === 'visible') {\n        const now = new Date();\n\n        const timeToDayChange = differenceInMilliseconds(endOfToday(), now);\n\n        // Удаляем старый таймаут\n        window.clearTimeout(timeout);\n\n        // Создаем новый таймаут\n        timeout = window.setTimeout(() => {\n          setTodayDate(now);\n        }, timeToDayChange);\n\n        // Если todayDate не обновился в таймаут - обновить при заходе на вкладку\n        if (!isSameDay(todayDate, now)) {\n          setTodayDate(now);\n        }\n      }\n    };\n\n    recalcTimeout();\n\n    // Создаем слушатель visibilitychange, чтобы предотвратить пропуск обновления стейта после заморозки вкладки\n    // Если человек ее долго не трогал или закрывал крышку ноута и тп\n    // https://developer.chrome.com/blog/page-lifecycle-api/\n    document.addEventListener('visibilitychange', recalcTimeout);\n\n    return () => {\n      window.clearTimeout(timeout);\n      document.removeEventListener('visibilitychange', recalcTimeout);\n    };\n  }, [document, listenDayChangesForUpdate, todayDate, window]);\n\n  return todayDate;\n}\n"],"names":["React","differenceInMilliseconds","endOfToday","isSameDay","useDOM","useTodayDate","listenDayChangesForUpdate","document","window","todayDate","setTodayDate","useState","Date","useEffect","timeout","undefined","recalcTimeout","visibilityState","now","timeToDayChange","clearTimeout","setTimeout","addEventListener","removeEventListener"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,wBAAwB,EAAEC,UAAU,EAAEC,SAAS,QAAQ,WAAW;AAC3E,SAASC,MAAM,QAAQ,aAAa;AAEpC;;;;;;;;CAQC,GACD,OAAO,SAASC,aAAaC,4BAA4B,KAAK;IAC5D,MAAM,EAAEC,QAAQ,EAAEC,MAAM,EAAE,GAAGJ;IAC7B,MAAM,CAACK,WAAWC,aAAa,GAAGV,MAAMW,QAAQ,CAAC,IAAM,IAAIC;IAE3DZ,MAAMa,SAAS,CAAC;QACd,IAAI,CAACP,6BAA6B,CAACC,YAAY,CAACC,QAAQ;YACtD;QACF;QAEA,IAAIM,UAA8BC;QAElC,MAAMC,gBAAgB;YACpB,IAAIT,SAASU,eAAe,KAAK,WAAW;gBAC1C,MAAMC,MAAM,IAAIN;gBAEhB,MAAMO,kBAAkBlB,yBAAyBC,cAAcgB;gBAE/D,yBAAyB;gBACzBV,OAAOY,YAAY,CAACN;gBAEpB,wBAAwB;gBACxBA,UAAUN,OAAOa,UAAU,CAAC;oBAC1BX,aAAaQ;gBACf,GAAGC;gBAEH,yEAAyE;gBACzE,IAAI,CAAChB,UAAUM,WAAWS,MAAM;oBAC9BR,aAAaQ;gBACf;YACF;QACF;QAEAF;QAEA,4GAA4G;QAC5G,iEAAiE;QACjE,wDAAwD;QACxDT,SAASe,gBAAgB,CAAC,oBAAoBN;QAE9C,OAAO;YACLR,OAAOY,YAAY,CAACN;YACpBP,SAASgB,mBAAmB,CAAC,oBAAoBP;QACnD;IACF,GAAG;QAACT;QAAUD;QAA2BG;QAAWD;KAAO;IAE3D,OAAOC;AACT"}