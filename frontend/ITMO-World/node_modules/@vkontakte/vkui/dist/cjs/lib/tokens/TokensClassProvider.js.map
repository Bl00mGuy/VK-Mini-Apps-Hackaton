{"version":3,"sources":["../../../../src/lib/tokens/TokensClassProvider.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useTokensClassName } from './useTokenClassName';\nimport styles from './TokensClassProvider.module.css';\n\ntype ProvidedChildProps = {\n  className?: string;\n};\n\ntype InjectTokenClassNameToChildProps = {\n  children: React.ReactElement<ProvidedChildProps>;\n};\n\nconst InjectTokenClassNameToChild = ({ children }: InjectTokenClassNameToChildProps) => {\n  const tokensClassName = useTokensClassName();\n\n  return React.cloneElement(children, {\n    className: classNames(\n      tokensClassName,\n      styles['TokensClassProvider--default-color'],\n      children.props.className,\n    ),\n  });\n};\n\nexport interface TokensClassProviderProps {\n  children: React.ReactNode;\n}\n\nexport const TokensClassProvider: React.FC<TokensClassProviderProps> = ({ children }) => {\n  return React.Children.map(children, (child) => {\n    if (React.isValidElement<ProvidedChildProps>(child)) {\n      return <InjectTokenClassNameToChild>{child}</InjectTokenClassNameToChild>;\n    }\n    return child;\n  });\n};\n"],"names":["TokensClassProvider","InjectTokenClassNameToChild","children","tokensClassName","useTokensClassName","React","cloneElement","className","classNames","props","Children","map","child","isValidElement"],"mappings":";;;;+BA6BaA;;;eAAAA;;;;;iEA7BU;sBACI;mCACQ;AAWnC,MAAMC,8BAA8B,CAAC,EAAEC,QAAQ,EAAoC;IACjF,MAAMC,kBAAkBC,IAAAA,qCAAkB;IAE1C,qBAAOC,OAAMC,YAAY,CAACJ,UAAU;QAClCK,WAAWC,IAAAA,gBAAU,EACnBL,2DAEAD,SAASO,KAAK,CAACF,SAAS;IAE5B;AACF;AAMO,MAAMP,sBAA0D,CAAC,EAAEE,QAAQ,EAAE;IAClF,OAAOG,OAAMK,QAAQ,CAACC,GAAG,CAACT,UAAU,CAACU;QACnC,kBAAIP,OAAMQ,cAAc,CAAqBD,QAAQ;YACnD,qBAAO,qBAACX;0BAA6BW;;QACvC;QACA,OAAOA;IACT;AACF"}