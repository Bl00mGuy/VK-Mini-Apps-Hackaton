{"version":3,"sources":["../../../../src/components/Pagination/Pagination.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Icon24ChevronCompactLeft, Icon24ChevronCompactRight } from '@vkontakte/icons';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { type PaginationPageType, usePagination } from '../../hooks/usePagination';\nimport type { HasComponent, HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden';\nimport {\n  type CustomPaginationNavigationButton,\n  PaginationNavigationButton,\n  type PaginationNavigationButtonProps,\n} from './PaginationNavigationButton/PaginationNavigationButton';\nimport {\n  type CustomPaginationPageButtonProps,\n  PaginationPageButton,\n} from './PaginationPage/PaginationPageButton';\nimport { PaginationPageEllipsis } from './PaginationPage/PaginationPageEllipsis';\nimport { getPageLabelDefault } from './utils';\nimport styles from './Pagination.module.css';\n\nexport interface PaginationProps extends Omit<HTMLAttributesWithRootRef<HTMLElement>, 'onChange'> {\n  /**\n   * Текущая страница.\n   */\n  currentPage?: number;\n  /**\n   * Кол-во всегда видимых страниц по краям текущей страницы.\n   */\n  siblingCount?: number;\n  /**\n   * Кол-во всегда видимых страниц в начале и в конце.\n   */\n  boundaryCount?: number;\n  /**\n   * Общее кол-во страниц.\n   */\n  totalPages?: number;\n  /**\n   * Блокировка всех кнопок.\n   */\n  disabled?: boolean;\n  /**\n   * Декоративный текст для кнопки навигации назад.\n   *\n   * > Note: Экранные дикторы будут использовать `prevButtonLabel`.\n   */\n  prevButtonCaption?: string;\n  /**\n   * Декоративный текст для кнопки навигации вперёд.\n   *\n   * > Note: Экранные дикторы будут использовать `nextButtonLabel`.\n   */\n  nextButtonCaption?: string;\n  /**\n   * Задаёт стиль отображения кнопок навигации.\n   *\n   * - `icon` – показывать только иконку;\n   * - `caption` – показывать только подпись;\n   * - `both` – показывать и иконку, и подпись.\n   */\n  navigationButtonsStyle?: PaginationNavigationButtonProps['style'];\n  /**\n   * [a11y] Метка для обозначения блока навигации.\n   */\n  navigationLabel?: string;\n  navigationLabelComponent?: HasComponent['Component'];\n  /**\n   * [a11y] Метка для кнопки навигации назад.\n   */\n  prevButtonLabel?: string;\n  /**\n   * [a11y] Метка для кнопки навигации вперёд.\n   */\n  nextButtonLabel?: string;\n  /**\n   * [a11y] Функция для переопределения и/или локализации метки кнопки страницы.\n   */\n  getPageLabel?: (isCurrent: boolean) => string;\n  onChange?: (page: number, event: React.MouseEvent<HTMLElement>) => void;\n  /**\n   * Функция для кастомного рендера кнопок страниц.\n   *\n   * > Note: `CustomPaginationPageButtonProps` наследует API [Tappable](https://vkcom.github.io/VKUI/#/Tappable).\n   */\n  renderPageButton?: (props: CustomPaginationPageButtonProps) => React.ReactNode;\n  /**\n   Функция для кастомного рендера кнопок навигации `prev` и `next`.\n   *\n   * > Note: `CustomPaginationNavigationButton` наследует API [Button](https://vkcom.github.io/VKUI/#/Button).\n   */\n  renderNavigationButton?: (props: CustomPaginationNavigationButton) => React.ReactNode;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Pagination\n */\nexport const Pagination = ({\n  currentPage = 1,\n  siblingCount = 1,\n  boundaryCount = 1,\n  totalPages = 1,\n  disabled,\n  prevButtonCaption = 'Назад',\n  nextButtonCaption = 'Вперёд',\n  navigationButtonsStyle = 'icon',\n  getPageLabel = getPageLabelDefault,\n  navigationLabel = 'Навигация по страницам',\n  navigationLabelComponent = 'h2',\n  prevButtonLabel = 'Перейти на предыдущую страницу',\n  nextButtonLabel = 'Перейти на следующую страницу',\n  onChange,\n  renderPageButton,\n  renderNavigationButton,\n  ...resetProps\n}: PaginationProps): React.ReactNode => {\n  const pages = usePagination({\n    currentPage,\n    totalPages,\n    siblingCount,\n    boundaryCount,\n  });\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPages;\n  const prevPage = isFirstPage ? undefined : currentPage - 1;\n  const nextPage = isLastPage ? undefined : currentPage + 1;\n\n  const handlePrevClick = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (onChange && prevPage !== undefined) {\n        onChange(prevPage, event);\n      }\n    },\n    [prevPage, onChange],\n  );\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      const page: string = event.currentTarget.dataset.page || '1';\n      onChange?.(Number(page), event);\n    },\n    [onChange],\n  );\n\n  const handleNextClick = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (onChange && nextPage !== undefined) {\n        onChange(nextPage, event);\n      }\n    },\n    [nextPage, onChange],\n  );\n\n  const { sizeY } = useAdaptivity();\n\n  const renderPages = React.useCallback(\n    (page: PaginationPageType) => {\n      switch (page) {\n        case 'start-ellipsis':\n        case 'end-ellipsis':\n          return (\n            <li key={page}>\n              <PaginationPageEllipsis disabled={disabled} />\n            </li>\n          );\n        default: {\n          const isCurrent = page === currentPage;\n\n          return (\n            <li key={page}>\n              <PaginationPageButton\n                getPageLabel={getPageLabel}\n                isCurrent={isCurrent}\n                onClick={handleClick}\n                disabled={disabled}\n                sizeY={sizeY}\n                renderPageButton={renderPageButton}\n              >\n                {page}\n              </PaginationPageButton>\n            </li>\n          );\n        }\n      }\n    },\n    [currentPage, disabled, getPageLabel, handleClick, renderPageButton, sizeY],\n  );\n\n  return (\n    <RootComponent Component=\"nav\" role=\"navigation\" {...resetProps}>\n      <VisuallyHidden Component={navigationLabelComponent}>{navigationLabel}</VisuallyHidden>\n      <ul className={styles['Pagination__list']}>\n        <li className={styles['Pagination__prevButtonContainer']}>\n          <PaginationNavigationButton\n            type=\"prev\"\n            style={navigationButtonsStyle}\n            caption={prevButtonCaption}\n            Icon={Icon24ChevronCompactLeft}\n            a11yLabel={prevButtonLabel}\n            disabled={isFirstPage || disabled}\n            onClick={handlePrevClick}\n            data-page={prevPage}\n            renderNavigationButton={renderNavigationButton}\n          />\n        </li>\n        {pages.map(renderPages)}\n        <li className={styles['Pagination__nextButtonContainer']}>\n          <PaginationNavigationButton\n            type=\"next\"\n            style={navigationButtonsStyle}\n            caption={nextButtonCaption}\n            Icon={Icon24ChevronCompactRight}\n            a11yLabel={nextButtonLabel}\n            disabled={isLastPage || disabled}\n            onClick={handleNextClick}\n            data-page={nextPage}\n            renderNavigationButton={renderNavigationButton}\n          />\n        </li>\n      </ul>\n    </RootComponent>\n  );\n};\n"],"names":["Pagination","currentPage","siblingCount","boundaryCount","totalPages","disabled","prevButtonCaption","nextButtonCaption","navigationButtonsStyle","getPageLabel","getPageLabelDefault","navigationLabel","navigationLabelComponent","prevButtonLabel","nextButtonLabel","onChange","renderPageButton","renderNavigationButton","resetProps","pages","usePagination","isFirstPage","isLastPage","prevPage","undefined","nextPage","handlePrevClick","React","useCallback","event","handleClick","page","currentTarget","dataset","Number","handleNextClick","sizeY","useAdaptivity","renderPages","li","PaginationPageEllipsis","isCurrent","PaginationPageButton","onClick","RootComponent","Component","role","VisuallyHidden","ul","className","PaginationNavigationButton","type","style","caption","Icon","Icon24ChevronCompactLeft","a11yLabel","data-page","map","Icon24ChevronCompactRight"],"mappings":"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"}