{"version":3,"sources":["../../../../src/components/CustomScrollView/useDetectScrollDirection.ts"],"sourcesContent":["import * as React from 'react';\n\n/**\n * Хук определяет в каком измерении происходит скролл(в горизонтальном или вертикальном)\n */\nexport const useDetectScrollDirection = () => {\n  const lastScrollLeft = React.useRef(0);\n  const lastScrollTop = React.useRef(0);\n\n  return React.useCallback((event: React.UIEvent<HTMLElement>) => {\n    const { scrollTop, scrollLeft } = event.currentTarget;\n    if (scrollTop !== lastScrollTop.current) {\n      lastScrollTop.current = scrollTop;\n      return 'vertical';\n    } else if (scrollLeft !== lastScrollLeft.current) {\n      lastScrollLeft.current = scrollLeft;\n      return 'horizontal';\n    }\n    return null;\n  }, []);\n};\n"],"names":["useDetectScrollDirection","lastScrollLeft","React","useRef","lastScrollTop","useCallback","event","scrollTop","scrollLeft","currentTarget","current"],"mappings":";;;;+BAKaA;;;eAAAA;;;;iEALU;AAKhB,MAAMA,2BAA2B;IACtC,MAAMC,iBAAiBC,OAAMC,MAAM,CAAC;IACpC,MAAMC,gBAAgBF,OAAMC,MAAM,CAAC;IAEnC,OAAOD,OAAMG,WAAW,CAAC,CAACC;QACxB,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAE,GAAGF,MAAMG,aAAa;QACrD,IAAIF,cAAcH,cAAcM,OAAO,EAAE;YACvCN,cAAcM,OAAO,GAAGH;YACxB,OAAO;QACT,OAAO,IAAIC,eAAeP,eAAeS,OAAO,EAAE;YAChDT,eAAeS,OAAO,GAAGF;YACzB,OAAO;QACT;QACA,OAAO;IACT,GAAG,EAAE;AACP"}