import type { HasChildren, HTMLAttributesWithRootRef } from '../../../types';
export interface FlexItemProps extends HTMLAttributesWithRootRef<HTMLDivElement>, HasChildren {
    /**
     * Для задания выравнивания, отлично от родительского, эквивалентно `align-self`
     */
    alignSelf?: 'start' | 'end' | 'center' | 'baseline' | 'stretch';
    /**
     * Позволяет задать предопределенные значения свойства `flex`:
     *
     * - `grow` соответствует значению `1 0 auto`
     * - `shrink` соответствует значению `0 1 auto`
     * - `content` соответствует значению `1 1 auto`
     * - `fixed` соответствует значению `0 0 auto`
     */
    flex?: 'grow' | 'shrink' | 'content' | 'fixed';
    /**
     * Изначальный размер элемента, эквивалентно `flex-basis`
     */
    flexBasis?: number | string;
}
export declare const FlexItem: ({ children, alignSelf, flex, flexBasis, style, ...rest }: FlexItemProps) => React.ReactNode;
//# sourceMappingURL=FlexItem.d.ts.map