import * as React from 'react';
import type { HasRootRef } from '../../types';
import { type TrackerOptionsProps } from './useTrackerVisibility';
export interface CustomScrollViewProps extends React.AllHTMLAttributes<HTMLDivElement>, HasRootRef<HTMLDivElement>, TrackerOptionsProps {
    windowResize?: boolean;
    boxRef?: React.Ref<HTMLDivElement>;
    className?: HTMLDivElement['className'];
    onScroll?: (event: React.UIEvent<HTMLDivElement>) => void;
    children: React.ReactNode;
    /**
     * Поведение overscroll, подробнее можно почитать в [документации](https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior)
     */
    overscrollBehavior?: 'auto' | 'contain' | 'none';
    /**
     * Включение замены горизонтального скролла
     *
     * > ⚠️ Важно: На версиях Firefox ниже 64 могут возникнуть проблемы при использовании этого флага, будьте осторожны
     */
    enableHorizontalScroll?: boolean;
}
/**
 * @see https://vkcom.github.io/VKUI/#/CustomScrollView
 */
export declare const CustomScrollView: ({ className, children, boxRef: externalBoxRef, windowResize, autoHideScrollbar, autoHideScrollbarDelay, enableHorizontalScroll, onScroll: onScrollProp, getRootRef, overscrollBehavior, ...restProps }: CustomScrollViewProps) => React.ReactNode;
//# sourceMappingURL=CustomScrollView.d.ts.map