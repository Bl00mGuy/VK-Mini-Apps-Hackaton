{"version":3,"sources":["../../../../../src/components/Typography/EllipsisText/EllipsisText.tsx"],"sourcesContent":["import { useRef } from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useIsomorphicLayoutEffect } from '../../../lib/useIsomorphicLayoutEffect';\nimport type { HasRootRef } from '../../../types';\nimport type { RootComponentProps } from '../../RootComponent/RootComponent';\nimport styles from './EllipsisText.module.css';\n\nexport interface EllipsisTextProps\n  extends RootComponentProps<HTMLElement>,\n    HasRootRef<HTMLElement> {\n  /**\n   * Пользовательская маскимальная ширина.\n   *\n   * Используйте в случаях, когда у контейнера ширина зависит от размера контента,\n   * другими словами, когда ширина не ограничена.\n   */\n  maxWidth?: number;\n  /**\n   * Максимальное количество видимых строк\n   *\n   * > При `maxLines > 1` используется свойство line-clamp, которое поддерживается не всеми версиями браузеров. Используйте с осторожностью\n   * > @see [line-clamp](https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-line-clamp)\n   */\n  maxLines?: number;\n}\n\n/** Компонент ограничивает текстовый контент убирая его в многоточие.\n *\n * @since 6.1.0\n * @see https://vkcom.github.io/VKUI/#/EllipsisText\n */\nconst EllipsisText = ({\n  className,\n  getRootRef,\n  children,\n  maxWidth,\n  maxLines = 1,\n  ...restProps\n}: EllipsisTextProps): React.ReactNode => {\n  const contentRef = useRef<HTMLSpanElement | null>(null);\n\n  useIsomorphicLayoutEffect(() => {\n    if (contentRef && contentRef.current) {\n      contentRef.current.style.setProperty('-webkit-line-clamp', maxLines > 1 ? `${maxLines}` : '');\n    }\n  }, [contentRef, maxLines]);\n\n  return (\n    <span ref={getRootRef} className={classNames(styles['EllipsisText'], className)} {...restProps}>\n      <span\n        style={{ maxWidth }}\n        ref={contentRef}\n        className={classNames(\n          styles['EllipsisText__content'],\n          maxLines > 1 && styles['EllipsisText__content--multiline'],\n        )}\n      >\n        {children}\n      </span>\n    </span>\n  );\n};\n\nexport { EllipsisText };\n"],"names":["EllipsisText","className","getRootRef","children","maxWidth","maxLines","restProps","contentRef","useRef","useIsomorphicLayoutEffect","current","style","setProperty","span","ref","classNames"],"mappings":";;;;+BA+DSA;;;eAAAA;;;;;;;uBA/Dc;sBACI;2CACe;AAwB1C;;;;CAIC,GACD,MAAMA,eAAe;QAAC,EACpBC,SAAS,EACTC,UAAU,EACVC,QAAQ,EACRC,QAAQ,EACRC,WAAW,CAAC,EAEM,WADfC;QALHL;QACAC;QACAC;QACAC;QACAC;;IAGA,MAAME,aAAaC,IAAAA,aAAM,EAAyB;IAElDC,IAAAA,oDAAyB,EAAC;QACxB,IAAIF,cAAcA,WAAWG,OAAO,EAAE;YACpCH,WAAWG,OAAO,CAACC,KAAK,CAACC,WAAW,CAAC,sBAAsBP,WAAW,IAAI,CAAC,EAAEA,SAAS,CAAC,GAAG;QAC5F;IACF,GAAG;QAACE;QAAYF;KAAS;IAEzB,qBACE,qBAACQ;QAAKC,KAAKZ;QAAYD,WAAWc,IAAAA,gBAAU,sBAAyBd;OAAgBK;kBACnF,cAAA,qBAACO;YACCF,OAAO;gBAAEP;YAAS;YAClBU,KAAKP;YACLN,WAAWc,IAAAA,gBAAU,+BAEnBV,WAAW;sBAGZF;;;AAIT"}