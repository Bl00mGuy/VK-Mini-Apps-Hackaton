{"version":3,"sources":["../../../../src/components/DatePicker/DatePicker.tsx"],"sourcesContent":["import * as React from 'react';\nimport { leadingZero } from '@vkontakte/vkjs';\nimport { clamp } from '../../helpers/math';\nimport { range } from '../../helpers/range';\nimport { useAdaptivityHasPointer } from '../../hooks/useAdaptivityHasPointer';\nimport { useCustomEnsuredControl } from '../../hooks/useEnsuredControl';\nimport { useNativeFormResetListener } from '../../hooks/useNativeFormResetListener';\nimport type { HasOnlyExpectedProps, HTMLAttributesWithRootRef } from '../../types';\nimport { CustomSelect } from '../CustomSelect/CustomSelect';\nimport { Input, type InputProps } from '../Input/Input';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './DatePicker.module.css';\n\nconst DefaultMonths: string[] = [\n  'Января',\n  'Февраля',\n  'Марта',\n  'Апреля',\n  'Мая',\n  'Июня',\n  'Июля',\n  'Августа',\n  'Сентября',\n  'Октября',\n  'Ноября',\n  'Декабря',\n];\n\nexport type DatePickerDateFormat = {\n  day: number;\n  month: number;\n  year: number;\n};\n\nconst DEFAULT_EMPTY_DATE = { day: 0, month: 0, year: 0 };\n\nexport interface DatePickerProps\n  extends Omit<\n    HTMLAttributesWithRootRef<HTMLDivElement>,\n    'defaultValue' | 'value' | 'min' | 'max'\n  > {\n  min?: DatePickerDateFormat;\n  max?: DatePickerDateFormat;\n  name?: string;\n  defaultValue?: DatePickerDateFormat;\n  value?: DatePickerDateFormat;\n  popupDirection?: 'top' | 'bottom';\n  monthNames?: string[];\n  dayPlaceholder?: string;\n  monthPlaceholder?: string;\n  yearPlaceholder?: string;\n  onDateChange?: (value: DatePickerDateFormat) => void; // TODO [>=7] заменить на onChange\n  disabled?: boolean;\n}\n\n// Переводим state к формату гг-мм-дд\nfunction convertToInputFormat(value: Partial<DatePickerDateFormat> | undefined) {\n  if (!value) {\n    return undefined;\n  }\n  const { day = 0, month = 0, year = 0 } = value;\n  return `${year}-${leadingZero(month)}-${leadingZero(day)}`;\n}\n\n// Переводим дату формата гг-мм-дд к объекту\nfunction parseInputDate(date: string): DatePickerDateFormat {\n  if (date.length === 0) {\n    return DEFAULT_EMPTY_DATE;\n  }\n  const splited = date.split('-');\n\n  return {\n    day: Number(splited[2]),\n    month: Number(splited[1]),\n    year: Number(splited[0]),\n  };\n}\n\nfunction getMonthMaxDay(month?: number, year?: number) {\n  return month ? new Date(year || 2016, month, 0).getDate() : 31;\n}\n\nconst DatePickerCustom = ({\n  name,\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  popupDirection,\n  value,\n  monthNames,\n  onDateChange,\n  disabled,\n  defaultValue = DEFAULT_EMPTY_DATE,\n  ...restProps\n}: DatePickerProps) => {\n  const isControlled = value !== undefined;\n  const [internalValue, setInternalValue] = useCustomEnsuredControl({ value, defaultValue });\n  const hiddenInput = React.useRef<HTMLInputElement>(null);\n\n  const onSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const nextDate = {\n      day: internalValue.day,\n      month: internalValue.month,\n      year: internalValue.year,\n    };\n    nextDate[e.target.name as keyof typeof nextDate] = Number(e.target.value);\n    nextDate.day = nextDate.day\n      ? clamp(nextDate.day, 1, getMonthMaxDay(nextDate.month, nextDate.year))\n      : nextDate.day;\n    setInternalValue(nextDate);\n    onDateChange?.(nextDate);\n  };\n  const dayOptions = range(1, getMonthMaxDay(internalValue.month, internalValue.year)).map(\n    (value) => ({\n      label: String(value),\n      value,\n    }),\n  );\n  const monthOptions = (monthNames || DefaultMonths).map((name, index) => ({\n    label: name,\n    value: index + 1,\n  }));\n  const yearOptions = range(max.year, min.year).map((value) => ({\n    label: String(value),\n    value: value,\n  }));\n\n  useNativeFormResetListener(hiddenInput, () => {\n    if (!isControlled) {\n      setInternalValue(defaultValue);\n    }\n  });\n\n  return (\n    <RootComponent baseClassName={styles['DatePicker']} {...restProps}>\n      <div className={styles['DatePicker__container']}>\n        <div className={styles['DatePicker__day']}>\n          <CustomSelect\n            name=\"day\"\n            value={internalValue.day}\n            options={dayOptions}\n            placeholder={dayPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div className={styles['DatePicker__month']}>\n          <CustomSelect\n            className={styles['DatePicker__monthSelect']}\n            name=\"month\"\n            value={internalValue.month}\n            options={monthOptions}\n            placeholder={monthPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div className={styles['DatePicker__year']}>\n          <CustomSelect\n            name=\"year\"\n            value={internalValue.year}\n            options={yearOptions}\n            placeholder={yearPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n      </div>\n      <input\n        type=\"hidden\"\n        name={name}\n        ref={hiddenInput}\n        value={convertToInputFormat(internalValue)}\n      />\n    </RootComponent>\n  );\n};\n\nconst DatePickerNative = ({\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  monthNames,\n  popupDirection,\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  value,\n  defaultValue = DEFAULT_EMPTY_DATE,\n  onDateChange,\n  ...restProps\n}: DatePickerProps) => {\n  const onStringChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(\n    (e) => {\n      onDateChange?.(parseInputDate(e.currentTarget.value));\n    },\n    [onDateChange],\n  );\n  const inputProps: HasOnlyExpectedProps<\n    typeof restProps & Pick<InputProps, 'value' | 'defaultValue'>,\n    InputProps\n  > = restProps;\n\n  const valueProps = value\n    ? { value: convertToInputFormat(value) }\n    : { defaultValue: convertToInputFormat(defaultValue) };\n\n  return (\n    <Input\n      {...inputProps}\n      {...valueProps}\n      type=\"date\"\n      onChange={onStringChange}\n      min={convertToInputFormat(min)}\n      max={convertToInputFormat(max)}\n    />\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/DatePicker\n *\n * @deprecated 6.2.0\n *\n * Компонент устарел и будет удален в v7. Используйте вместо него компоненты\n * [Input](https://vkcom.github.io/VKUI/#/Input) и\n * [Select](https://vkcom.github.io/VKUI/#/Select).\n */\nexport const DatePicker = ({ onDateChange, ...props }: DatePickerProps): React.ReactNode => {\n  const hasPointer = useAdaptivityHasPointer();\n\n  const onChange = (update: DatePickerDateFormat) => {\n    onDateChange && onDateChange({ ...update });\n  };\n\n  const Cmp = hasPointer ? DatePickerCustom : DatePickerNative;\n  return <Cmp {...props} onDateChange={onChange} />;\n};\n"],"names":["DatePicker","DefaultMonths","DEFAULT_EMPTY_DATE","day","month","year","convertToInputFormat","value","undefined","leadingZero","parseInputDate","date","length","splited","split","Number","getMonthMaxDay","Date","getDate","DatePickerCustom","name","min","max","dayPlaceholder","monthPlaceholder","yearPlaceholder","popupDirection","monthNames","onDateChange","disabled","defaultValue","restProps","isControlled","internalValue","setInternalValue","useCustomEnsuredControl","hiddenInput","React","useRef","onSelectChange","e","nextDate","target","clamp","dayOptions","range","map","label","String","monthOptions","index","yearOptions","useNativeFormResetListener","RootComponent","baseClassName","div","className","CustomSelect","options","placeholder","onChange","input","type","ref","DatePickerNative","onStringChange","useCallback","currentTarget","inputProps","valueProps","Input","props","hasPointer","useAdaptivityHasPointer","update","Cmp"],"mappings":";;;;+BAwOaA;;;eAAAA;;;;;;;;iEAxOU;sBACK;sBACN;uBACA;yCACkB;mCACA;4CACG;8BAEd;uBACU;+BACT;AAG9B,MAAMC,gBAA0B;IAC9B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAQD,MAAMC,qBAAqB;IAAEC,KAAK;IAAGC,OAAO;IAAGC,MAAM;AAAE;AAqBvD,qCAAqC;AACrC,SAASC,qBAAqBC,KAAgD;IAC5E,IAAI,CAACA,OAAO;QACV,OAAOC;IACT;IACA,MAAM,EAAEL,MAAM,CAAC,EAAEC,QAAQ,CAAC,EAAEC,OAAO,CAAC,EAAE,GAAGE;IACzC,OAAO,CAAC,EAAEF,KAAK,CAAC,EAAEI,IAAAA,iBAAW,EAACL,OAAO,CAAC,EAAEK,IAAAA,iBAAW,EAACN,KAAK,CAAC;AAC5D;AAEA,4CAA4C;AAC5C,SAASO,eAAeC,IAAY;IAClC,IAAIA,KAAKC,MAAM,KAAK,GAAG;QACrB,OAAOV;IACT;IACA,MAAMW,UAAUF,KAAKG,KAAK,CAAC;IAE3B,OAAO;QACLX,KAAKY,OAAOF,OAAO,CAAC,EAAE;QACtBT,OAAOW,OAAOF,OAAO,CAAC,EAAE;QACxBR,MAAMU,OAAOF,OAAO,CAAC,EAAE;IACzB;AACF;AAEA,SAASG,eAAeZ,KAAc,EAAEC,IAAa;IACnD,OAAOD,QAAQ,IAAIa,KAAKZ,QAAQ,MAAMD,OAAO,GAAGc,OAAO,KAAK;AAC9D;AAEA,MAAMC,mBAAmB;QAAC,EACxBC,IAAI,EACJC,MAAM;QAAElB,KAAK;QAAGC,OAAO;QAAGC,MAAM;IAAE,CAAC,EACnCiB,MAAM;QAAEnB,KAAK;QAAIC,OAAO;QAAIC,MAAM;IAAK,CAAC,EACxCkB,cAAc,EACdC,gBAAgB,EAChBC,eAAe,EACfC,cAAc,EACdnB,KAAK,EACLoB,UAAU,EACVC,YAAY,EACZC,QAAQ,EACRC,eAAe5B,kBAAkB,EAEjB,WADb6B;QAZHX;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAnB;QACAoB;QACAC;QACAC;QACAC;;IAGA,MAAME,eAAezB,UAAUC;IAC/B,MAAM,CAACyB,eAAeC,iBAAiB,GAAGC,IAAAA,0CAAuB,EAAC;QAAE5B;QAAOuB;IAAa;IACxF,MAAMM,cAAcC,OAAMC,MAAM,CAAmB;IAEnD,MAAMC,iBAA8D,CAACC;QACnE,MAAMC,WAAW;YACftC,KAAK8B,cAAc9B,GAAG;YACtBC,OAAO6B,cAAc7B,KAAK;YAC1BC,MAAM4B,cAAc5B,IAAI;QAC1B;QACAoC,QAAQ,CAACD,EAAEE,MAAM,CAACtB,IAAI,CAA0B,GAAGL,OAAOyB,EAAEE,MAAM,CAACnC,KAAK;QACxEkC,SAAStC,GAAG,GAAGsC,SAAStC,GAAG,GACvBwC,IAAAA,WAAK,EAACF,SAAStC,GAAG,EAAE,GAAGa,eAAeyB,SAASrC,KAAK,EAAEqC,SAASpC,IAAI,KACnEoC,SAAStC,GAAG;QAChB+B,iBAAiBO;QACjBb,yBAAAA,mCAAAA,aAAea;IACjB;IACA,MAAMG,aAAaC,IAAAA,YAAK,EAAC,GAAG7B,eAAeiB,cAAc7B,KAAK,EAAE6B,cAAc5B,IAAI,GAAGyC,GAAG,CACtF,CAACvC,QAAW,CAAA;YACVwC,OAAOC,OAAOzC;YACdA;QACF,CAAA;IAEF,MAAM0C,eAAe,AAACtB,CAAAA,cAAc1B,aAAY,EAAG6C,GAAG,CAAC,CAAC1B,MAAM8B,QAAW,CAAA;YACvEH,OAAO3B;YACPb,OAAO2C,QAAQ;QACjB,CAAA;IACA,MAAMC,cAAcN,IAAAA,YAAK,EAACvB,IAAIjB,IAAI,EAAEgB,IAAIhB,IAAI,EAAEyC,GAAG,CAAC,CAACvC,QAAW,CAAA;YAC5DwC,OAAOC,OAAOzC;YACdA,OAAOA;QACT,CAAA;IAEA6C,IAAAA,sDAA0B,EAAChB,aAAa;QACtC,IAAI,CAACJ,cAAc;YACjBE,iBAAiBJ;QACnB;IACF;IAEA,qBACE,sBAACuB,4BAAa;QAACC,aAAa;OAA4BvB;;0BACtD,sBAACwB;gBAAIC,SAAS;;kCACZ,qBAACD;wBAAIC,SAAS;kCACZ,cAAA,qBAACC,0BAAY;4BACXrC,MAAK;4BACLb,OAAO0B,cAAc9B,GAAG;4BACxBuD,SAASd;4BACTe,aAAapC;4BACbG,gBAAgBA;4BAChBkC,UAAUrB;4BACVV,UAAUA;;;kCAGd,qBAAC0B;wBAAIC,SAAS;kCACZ,cAAA,qBAACC,0BAAY;4BACXD,SAAS;4BACTpC,MAAK;4BACLb,OAAO0B,cAAc7B,KAAK;4BAC1BsD,SAAST;4BACTU,aAAanC;4BACbE,gBAAgBA;4BAChBkC,UAAUrB;4BACVV,UAAUA;;;kCAGd,qBAAC0B;wBAAIC,SAAS;kCACZ,cAAA,qBAACC,0BAAY;4BACXrC,MAAK;4BACLb,OAAO0B,cAAc5B,IAAI;4BACzBqD,SAASP;4BACTQ,aAAalC;4BACbC,gBAAgBA;4BAChBkC,UAAUrB;4BACVV,UAAUA;;;;;0BAIhB,qBAACgC;gBACCC,MAAK;gBACL1C,MAAMA;gBACN2C,KAAK3B;gBACL7B,OAAOD,qBAAqB2B;;;;AAIpC;AAEA,MAAM+B,mBAAmB;QAAC,EACxB3C,MAAM;QAAElB,KAAK;QAAGC,OAAO;QAAGC,MAAM;IAAE,CAAC,EACnCiB,MAAM;QAAEnB,KAAK;QAAIC,OAAO;QAAIC,MAAM;IAAK,CAAC,EACxCsB,UAAU,EACVD,cAAc,EACdH,cAAc,EACdC,gBAAgB,EAChBC,eAAe,EACflB,KAAK,EACLuB,eAAe5B,kBAAkB,EACjC0B,YAAY,EAEI,WADbG;QAVHV;QACAC;QACAK;QACAD;QACAH;QACAC;QACAC;QACAlB;QACAuB;QACAF;;IAGA,MAAMqC,iBAA6D5B,OAAM6B,WAAW,CAClF,CAAC1B;QACCZ,yBAAAA,mCAAAA,aAAelB,eAAe8B,EAAE2B,aAAa,CAAC5D,KAAK;IACrD,GACA;QAACqB;KAAa;IAEhB,MAAMwC,aAGFrC;IAEJ,MAAMsC,aAAa9D,QACf;QAAEA,OAAOD,qBAAqBC;IAAO,IACrC;QAAEuB,cAAcxB,qBAAqBwB;IAAc;IAEvD,qBACE,qBAACwC,YAAK,8CACAF,YACAC;QACJP,MAAK;QACLF,UAAUK;QACV5C,KAAKf,qBAAqBe;QAC1BC,KAAKhB,qBAAqBgB;;AAGhC;AAWO,MAAMtB,aAAa;QAAC,EAAE4B,YAAY,EAA6B,WAAxB2C;QAAjB3C;;IAC3B,MAAM4C,aAAaC,IAAAA,gDAAuB;IAE1C,MAAMb,WAAW,CAACc;QAChB9C,gBAAgBA,aAAa,qBAAK8C;IACpC;IAEA,MAAMC,MAAMH,aAAarD,mBAAmB6C;IAC5C,qBAAO,qBAACW,iDAAQJ;QAAO3C,cAAcgC;;AACvC"}