{"version":3,"sources":["../../../../src/components/ContentBadge/ContentBadge.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { Caption } from '../Typography/Caption/Caption';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport type { TypographyProps } from '../Typography/Typography';\nimport { ContentBadgeContext } from './ContentBadgeContext';\nimport { ContentBadgeSlotIcon } from './ContentBadgeSlotIcon';\nimport type { ContentBadgeModeType, ContentBadgeSizeType } from './types';\nimport styles from './ContentBadge.module.css';\n\nconst appearanceClassNames = {\n  'accent': {\n    primary: styles['ContentBadge--primary-accent'],\n    secondary: styles['ContentBadge--secondary-accent'],\n    outline: styles['ContentBadge--outline-accent'],\n  },\n  'neutral': {\n    primary: styles['ContentBadge--primary-neutral'],\n    secondary: styles['ContentBadge--secondary-neutral'],\n    outline: styles['ContentBadge--outline-neutral'],\n  },\n  'accent-green': {\n    primary: styles['ContentBadge--primary-accent-green'],\n    secondary: styles['ContentBadge--secondary-accent-green'],\n    outline: styles['ContentBadge--outline-accent-green'],\n  },\n  'accent-red': {\n    primary: styles['ContentBadge--primary-accent-red'],\n    secondary: styles['ContentBadge--secondary-accent-red'],\n    outline: styles['ContentBadge--outline-accent-red'],\n  },\n  'overlay': {\n    primary: styles['ContentBadge--primary-overlay'],\n    secondary: styles['ContentBadge--secondary-overlay'],\n    outline: styles['ContentBadge--outline-overlay'],\n  },\n};\n\nconst sizeClassNames = {\n  s: styles['ContentBadge--size-s'],\n  m: styles['ContentBadge--size-m'],\n  l: styles['ContentBadge--size-l'],\n};\n\nexport interface ContentBadgeProps\n  extends HTMLAttributesWithRootRef<HTMLDivElement>,\n    Pick<TypographyProps, 'weight'> {\n  /**\n   * Вид отображения.\n   */\n  mode?: ContentBadgeModeType;\n  /**\n   * Цвет оформления.\n   */\n  appearance?: 'accent' | 'neutral' | 'accent-green' | 'accent-red' | 'overlay';\n  /**\n   * Включает приближение значения закругления к форме круга.\n   *\n   * > Note: игнорируется при size=\"s\"\n   */\n  capsule?: boolean;\n  /**\n   * Определяет отступы и размер текста.\n   *\n   * Соответствие размеров иконок в слоте `<ContentBadge.SlotIcon />`:\n   *\n   * - size=\"s\" – ⚠️ не поддерживает иконки;\n   * - size=\"m\" – при **одиночной** иконке `16x16`, в остальных случаях `12x12`;\n   * - size=\"l\" – при **одиночной** иконке `20x20`, в остальных случаях `16x16`;\n   */\n  size?: ContentBadgeSizeType;\n}\n\n/**\n * Компонент, который позволяет добавить текстовые или иконочные бейджи. Как правило, используются\n * поверх других элементов или рядом с ними.\n *\n * Используйте `ContentBadge.SlotIcon` для размещения иконок внутри `ContentBadge`.\n *\n * @since 6.1.0\n * @see https://vkcom.github.io/VKUI/#/ContentBadge\n *\n * TODO [>=7]: переименовать в Badge\n */\nexport const ContentBadge: React.FC<ContentBadgeProps> & {\n  SlotIcon: typeof ContentBadgeSlotIcon;\n} = ({\n  appearance = 'accent',\n  mode = 'primary',\n  capsule,\n  size = 'm',\n  weight = '2',\n  className,\n  children,\n  ...restProps\n}: ContentBadgeProps) => {\n  const TypographyComponent = size === 'l' ? Footnote : Caption;\n\n  return (\n    <TypographyComponent\n      {...restProps}\n      weight={weight}\n      normalize\n      className={classNames(\n        className,\n        styles.ContentBadge,\n        size !== 's' && capsule && styles['ContentBadge--capsule'],\n        mode === 'outline' && styles['ContentBadge--mode-outline'],\n        appearanceClassNames[appearance][mode],\n        sizeClassNames[size],\n      )}\n    >\n      <ContentBadgeContext.Provider\n        value={{ isSingleChild: React.Children.count(children) === 1, size }}\n      >\n        {children}\n      </ContentBadgeContext.Provider>\n    </TypographyComponent>\n  );\n};\n\nContentBadge.displayName = 'ContentBadge';\n\nContentBadge.SlotIcon = ContentBadgeSlotIcon;\nContentBadge.SlotIcon.displayName = 'ContentBadge.SlotIcon';\n"],"names":["ContentBadge","appearanceClassNames","primary","secondary","outline","sizeClassNames","s","m","l","appearance","mode","capsule","size","weight","className","children","restProps","TypographyComponent","Footnote","Caption","normalize","classNames","ContentBadgeContext","Provider","value","isSingleChild","React","Children","count","displayName","SlotIcon","ContentBadgeSlotIcon"],"mappings":";;;;+BAqFaA;;;eAAAA;;;;;;;;iEArFU;sBACI;yBAEH;0BACC;qCAEW;sCACC;AAIrC,MAAMC,uBAAuB;IAC3B,UAAU;QACRC,OAAO;QACPC,SAAS;QACTC,OAAO;IACT;IACA,WAAW;QACTF,OAAO;QACPC,SAAS;QACTC,OAAO;IACT;IACA,gBAAgB;QACdF,OAAO;QACPC,SAAS;QACTC,OAAO;IACT;IACA,cAAc;QACZF,OAAO;QACPC,SAAS;QACTC,OAAO;IACT;IACA,WAAW;QACTF,OAAO;QACPC,SAAS;QACTC,OAAO;IACT;AACF;AAEA,MAAMC,iBAAiB;IACrBC,CAAC;IACDC,CAAC;IACDC,CAAC;AACH;AA0CO,MAAMR,eAET;QAAC,EACHS,aAAa,QAAQ,EACrBC,OAAO,SAAS,EAChBC,OAAO,EACPC,OAAO,GAAG,EACVC,SAAS,GAAG,EACZC,SAAS,EACTC,QAAQ,EAEU,WADfC;QAPHP;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;;IAGA,MAAME,sBAAsBL,SAAS,MAAMM,kBAAQ,GAAGC,gBAAO;IAE7D,qBACE,qBAACF,iEACKD;QACJH,QAAQA;QACRO,SAAS;QACTN,WAAWO,IAAAA,gBAAU,EACnBP,+BAEAF,SAAS,OAAOD,wCAChBD,SAAS,+CACTT,oBAAoB,CAACQ,WAAW,CAACC,KAAK,EACtCL,cAAc,CAACO,KAAK;kBAGtB,cAAA,qBAACU,wCAAmB,CAACC,QAAQ;YAC3BC,OAAO;gBAAEC,eAAeC,OAAMC,QAAQ,CAACC,KAAK,CAACb,cAAc;gBAAGH;YAAK;sBAElEG;;;AAIT;AAEAf,aAAa6B,WAAW,GAAG;AAE3B7B,aAAa8B,QAAQ,GAAGC,0CAAoB;AAC5C/B,aAAa8B,QAAQ,CAACD,WAAW,GAAG"}