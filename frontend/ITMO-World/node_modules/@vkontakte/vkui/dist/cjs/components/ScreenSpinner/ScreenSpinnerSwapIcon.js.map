{"version":3,"sources":["../../../../src/components/ScreenSpinner/ScreenSpinnerSwapIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Icon24Cancel } from '@vkontakte/icons';\nimport { mergeCalls } from '../../lib/mergeCalls';\nimport { clickByKeyboardHandler } from '../../lib/utils';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Icon48CancelCircle } from './Icon48CancelCircle';\nimport { Icon48DoneOutline } from './Icon48DoneOutline';\nimport { ScreenSpinnerContext } from './context';\nimport { type ScreenSpinnerProps } from './types';\nimport styles from './ScreenSpinner.module.css';\n\ntype ScreenSpinnerSwapIconProps = HTMLAttributesWithRootRef<HTMLElement> & {\n  cancelLabel?: ScreenSpinnerProps['cancelLabel'];\n};\n\nconst ScreenSpinnerCancelIcon: React.FC<ScreenSpinnerSwapIconProps> = ({\n  onKeyDown,\n  'aria-label': ariaLabel = 'Отменить',\n  ...restProps\n}: ScreenSpinnerSwapIconProps) => {\n  const handlers = mergeCalls(\n    { onKeyDown: clickByKeyboardHandler },\n    {\n      onKeyDown,\n    },\n  );\n  let clickableProps: React.HTMLAttributes<HTMLSpanElement> = {\n    ...handlers,\n    'tabIndex': 0,\n    'role': 'button',\n    'aria-label': ariaLabel,\n  };\n\n  return (\n    <RootComponent baseClassName={styles['ScreenSpinner__icon']} {...clickableProps} {...restProps}>\n      <Icon24Cancel />\n    </RootComponent>\n  );\n};\n\nScreenSpinnerCancelIcon.displayName = 'ScreenSpinnerCancelIcon';\n\nexport const ScreenSpinnerSwapIcon: React.FC<ScreenSpinnerSwapIconProps> = ({\n  cancelLabel,\n  ...restProps\n}: ScreenSpinnerSwapIconProps) => {\n  const { state } = React.useContext(ScreenSpinnerContext);\n\n  if (state === 'cancelable') {\n    return <ScreenSpinnerCancelIcon aria-label={cancelLabel} {...restProps} />;\n  }\n\n  const Icon = {\n    loading: () => null,\n    done: Icon48DoneOutline,\n    error: Icon48CancelCircle,\n  }[state];\n\n  return (\n    <RootComponent baseClassName={styles['ScreenSpinner__icon']} {...restProps}>\n      <Icon />\n    </RootComponent>\n  );\n};\n\nScreenSpinnerSwapIcon.displayName = 'ScreenSpinnerSwapIcon';\n"],"names":["ScreenSpinnerSwapIcon","ScreenSpinnerCancelIcon","onKeyDown","ariaLabel","restProps","handlers","mergeCalls","clickByKeyboardHandler","clickableProps","RootComponent","baseClassName","Icon24Cancel","displayName","cancelLabel","state","React","useContext","ScreenSpinnerContext","aria-label","Icon","loading","done","Icon48DoneOutline","error","Icon48CancelCircle"],"mappings":";;;;+BA2CaA;;;eAAAA;;;;;;;;iEA3CU;uBACM;4BACF;uBACY;+BAET;oCACK;mCACD;yBACG;AAQrC,MAAMC,0BAAgE;QAAC,EACrEC,SAAS,EACT,cAAcC,YAAY,UAAU,EAET,WADxBC;QAFHF;QACA;;IAGA,MAAMG,WAAWC,IAAAA,sBAAU,EACzB;QAAEJ,WAAWK,6BAAsB;IAAC,GACpC;QACEL;IACF;IAEF,IAAIM,iBAAwD,4CACvDH;QACH,YAAY;QACZ,QAAQ;QACR,cAAcF;;IAGhB,qBACE,qBAACM,4BAAa;QAACC,aAAa;OAAqCF,gBAAoBJ;kBACnF,cAAA,qBAACO,mBAAY;;AAGnB;AAEAV,wBAAwBW,WAAW,GAAG;AAE/B,MAAMZ,wBAA8D;QAAC,EAC1Ea,WAAW,EAEgB,WADxBT;QADHS;;IAGA,MAAM,EAAEC,KAAK,EAAE,GAAGC,OAAMC,UAAU,CAACC,6BAAoB;IAEvD,IAAIH,UAAU,cAAc;QAC1B,qBAAO,qBAACb;YAAwBiB,cAAYL;WAAiBT;IAC/D;IAEA,MAAMe,OAAO;QACXC,SAAS,IAAM;QACfC,MAAMC,oCAAiB;QACvBC,OAAOC,sCAAkB;IAC3B,CAAC,CAACV,MAAM;IAER,qBACE,qBAACL,4BAAa;QAACC,aAAa;OAAqCN;kBAC/D,cAAA,qBAACe;;AAGP;AAEAnB,sBAAsBY,WAAW,GAAG"}