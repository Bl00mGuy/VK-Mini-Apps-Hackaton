{"version":3,"sources":["../../../../src/components/View/View.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { blurActiveElement, useDOM } from '../../lib/dom';\nimport { getNavId, type NavIdProps } from '../../lib/getNavId';\nimport { warnOnce } from '../../lib/warnOnce';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { useScroll } from '../AppRoot/ScrollContext';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { NavViewIdContext } from '../NavIdContext/NavIdContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { NavTransitionDirectionProvider } from '../NavTransitionDirectionContext/NavTransitionDirectionContext';\nimport { useSplitCol } from '../SplitCol/SplitColContext';\nimport { type CustomTouchEvent, Touch } from '../Touch/Touch';\nimport { useLayoutEffectCall } from './useLayoutEffectCall';\nimport {\n  getSwipeBackPredicates,\n  hasHorizontalScrollableElementWithScrolledToLeft,\n  swipeBackExcluded,\n} from './utils';\nimport styles from './View.module.css';\n\ninterface Scrolls {\n  [index: string]: number | undefined;\n}\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\nexport let scrollsCache: ViewsScrolls = {};\n\nexport interface ViewProps extends HTMLAttributesWithRootRef<HTMLElement>, NavIdProps {\n  activePanel: string;\n  onTransition?: (params: { isBack: boolean; from: string; to: string }) => void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?: () => void;\n  /**\n   * callback начала анимации свайпа назад.\n   *\n   * Чтобы остановить свайп назад, возвращайте `\"prevent\"`.\n   */\n  onSwipeBackStart?: (activePanel: string | null) => void | 'prevent';\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?: () => void;\n  history?: string[];\n\n  children: React.ReactElement | Iterable<React.ReactElement>;\n}\n\nconst warn = warnOnce('View');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/View\n */\nexport const View = ({\n  activePanel: activePanelProp,\n  history,\n  nav,\n  onTransition,\n  onSwipeBack,\n  onSwipeBackStart,\n  onSwipeBackCancel: onSwipeBackCancelProp,\n  children,\n  className,\n  ...restProps\n}: ViewProps): React.ReactNode => {\n  const id = getNavId({ nav, id: restProps.id });\n  const scrolls = React.useRef(scrollsCache[id as string] || {});\n  const layoutEffectCall = useLayoutEffectCall();\n\n  React.useEffect(() => () => {\n    if (id) {\n      scrollsCache[id] = scrolls.current;\n    }\n  });\n\n  const panelNodes = React.useRef<{ [id: string]: HTMLDivElement | null }>({});\n\n  const { window, document } = useDOM();\n  const scroll = useScroll();\n  const configProvider = useConfigProvider();\n  const splitCol = useSplitCol();\n  const platform = usePlatform();\n\n  const [animated, setAnimated] = React.useState(false);\n\n  const [visiblePanels, setVisiblePanels] = React.useState([activePanelProp]);\n  const [activePanel, setActivePanel] = React.useState<string | null>(activePanelProp);\n  const [isBack, setIsBack] = React.useState<boolean | undefined>(undefined);\n  const [prevPanel, setPrevPanel] = React.useState<string | null>(null);\n  const [nextPanel, setNextPanel] = React.useState<string | null>(null);\n\n  const swipeBackPrevented = React.useRef<boolean>(false);\n  const [swipingBack, setSwipingBack] = React.useState<boolean | undefined>(undefined);\n  const [swipeBackStartX, setSwipeBackStartX] = React.useState<number>(0);\n  const [swipeBackShift, setSwipeBackShift] = React.useState<number>(0);\n  const [swipeBackNextPanel, setSwipeBackNextPanel] = React.useState<string | null>(null);\n  const [swipeBackPrevPanel, setSwipeBackPrevPanel] = React.useState<string | null>(null);\n  const [swipeBackResult, setSwipeBackResult] = React.useState<'success' | 'fail' | null>(null);\n\n  const [browserSwipe, setBrowserSwipe] = React.useState(false);\n\n  const prevActivePanel = usePrevious(activePanelProp);\n  const prevSwipingBack = usePrevious(swipingBack);\n  const prevBrowserSwipe = usePrevious(browserSwipe);\n  const prevSwipeBackResult = usePrevious(swipeBackResult);\n  const prevSwipeBackShift = usePrevious(swipeBackShift);\n  const prevSwipeBackPrevPanel = usePrevious(swipeBackPrevPanel);\n  const prevOnTransition = usePrevious(onTransition);\n\n  const panels = (React.Children.toArray(children) as React.ReactElement[]).filter(\n    (panel: React.ReactElement) => {\n      const panelId = getNavId(panel.props, warn);\n\n      return (\n        (panelId !== undefined && visiblePanels.includes(panelId)) ||\n        panelId === swipeBackPrevPanel ||\n        panelId === swipeBackNextPanel\n      );\n    },\n  );\n\n  const disableAnimation =\n    !configProvider.transitionMotionEnabled || !splitCol.animate || platform === 'vkcom';\n  const iOSSwipeBackSimulationEnabled =\n    !disableAnimation && platform === 'ios' && configProvider.isWebView && Boolean(onSwipeBack);\n\n  const flushTransition = React.useCallback(\n    (prevPanel: string, isBackTransition: boolean) => {\n      if (isBackTransition) {\n        scrolls.current[prevPanel] = 0;\n      }\n      setPrevPanel(null);\n      setNextPanel(null);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n      setAnimated(false);\n      setIsBack(isBackTransition);\n\n      layoutEffectCall(() => {\n        scroll?.scrollTo(0, isBackTransition ? scrolls.current[activePanelProp] : 0);\n        onTransition &&\n          onTransition({\n            isBack: isBackTransition,\n            from: prevPanel,\n            to: activePanelProp,\n          });\n      });\n    },\n    [activePanelProp, layoutEffectCall, onTransition, scroll],\n  );\n\n  const handleAnimatedTargetAnimationEnd = () => {\n    if (prevPanel !== null) {\n      flushTransition(prevPanel, Boolean(isBack));\n    }\n  };\n\n  const onSwipeBackSuccess = React.useCallback(() => {\n    onSwipeBack && onSwipeBack();\n  }, [onSwipeBack]);\n\n  const onSwipeBackCancel = React.useCallback(() => {\n    onSwipeBackCancelProp && onSwipeBackCancelProp();\n    setSwipeBackPrevPanel(null);\n    setSwipeBackNextPanel(null);\n    setSwipingBack(false);\n    setSwipeBackResult(null);\n    setSwipeBackStartX(0);\n    setSwipeBackShift(0);\n  }, [onSwipeBackCancelProp]);\n\n  const swipingBackTransitionEndHandler = React.useCallback(() => {\n    switch (swipeBackResult) {\n      case 'fail':\n        onSwipeBackCancel();\n        break;\n      case 'success':\n        onSwipeBackSuccess();\n    }\n  }, [onSwipeBackCancel, onSwipeBackSuccess, swipeBackResult]);\n\n  const handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext = (event: CustomTouchEvent) => {\n    if (browserSwipe) {\n      return;\n    }\n    const { swipeBackTriggered, viewportStartEdgeTouched, viewportEndEdgeTouched } =\n      getSwipeBackPredicates(event.startX, event.shiftX, window!.innerWidth);\n\n    if ((viewportStartEdgeTouched || viewportEndEdgeTouched) && swipeBackTriggered) {\n      setBrowserSwipe(true);\n    }\n  };\n\n  const handleTouchMoveXForIOSSwipeBackSimulation = (event: CustomTouchEvent) => {\n    if (swipeBackPrevented.current || swipeBackExcluded(event)) {\n      return;\n    }\n\n    const { swipedToOpposite, swipeBackTriggered, viewportStartEdgeTouched } =\n      getSwipeBackPredicates(event.startX, event.shiftX, window!.innerWidth);\n\n    if (animated && swipeBackTriggered) {\n      return;\n    }\n\n    if (!swipingBack && history && history.length > 1) {\n      if (swipedToOpposite) {\n        swipeBackPrevented.current = true;\n        return;\n      }\n\n      if (!swipeBackTriggered) {\n        return;\n      }\n\n      if (\n        !viewportStartEdgeTouched &&\n        hasHorizontalScrollableElementWithScrolledToLeft(event.originalEvent.target as HTMLElement)\n      ) {\n        swipeBackPrevented.current = true;\n        return;\n      }\n      // Начался свайп назад\n      if (onSwipeBackStart) {\n        const payload = onSwipeBackStart(activePanel);\n        if (payload === 'prevent') {\n          swipeBackPrevented.current = true;\n          return;\n        }\n      }\n\n      if (activePanel !== null) {\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        blurActiveElement(document);\n        scrolls.current[activePanel] = scroll?.getScroll().y;\n      }\n\n      setSwipingBack(true);\n      setSwipeBackStartX(event.startX);\n      setSwipeBackPrevPanel(activePanel);\n      setSwipeBackNextPanel(history.slice(-2)[0]);\n    }\n\n    if (swipingBack) {\n      if (event.shiftX < 0) {\n        setSwipeBackShift(0);\n      } else if (event.shiftX > window!.innerWidth - swipeBackStartX) {\n        setSwipeBackShift(window!.innerWidth);\n      } else {\n        setSwipeBackShift(event.shiftX);\n      }\n    }\n  };\n\n  const handleTouchEndForIOSSwipeBackSimulation = (event: CustomTouchEvent) => {\n    swipeBackPrevented.current = false;\n    if (swipingBack) {\n      const speed = (swipeBackShift / event.duration) * 1000;\n      if (swipeBackShift === 0) {\n        onSwipeBackCancel();\n      } else if (swipeBackShift >= (window!.innerWidth ?? 0)) {\n        onSwipeBackSuccess();\n      } else if (speed > 250 || swipeBackShift >= window!.innerWidth / 2) {\n        setSwipeBackResult('success');\n      } else {\n        setSwipeBackResult('fail');\n      }\n    }\n  };\n\n  const calcPanelSwipeStyles = (isPrev: boolean, isNext: boolean): React.CSSProperties => {\n    if ((!isPrev && !isNext) || swipeBackResult) {\n      return {};\n    }\n\n    if (isNext) {\n      return window\n        ? {\n            transform: `translate3d(${-50 + (swipeBackShift * 100) / window.innerWidth / 2}%, 0, 0)`,\n          }\n        : {};\n    }\n\n    if (isPrev) {\n      return { transform: `translate3d(${swipeBackShift}px, 0, 0)` };\n    }\n\n    return {};\n  };\n\n  const calcPanelSwipeBackOverlayStyles = (isNext: boolean): React.CSSProperties => {\n    if (!window || !isNext) {\n      return {};\n    }\n    const opacityOnSwipeEnd =\n      swipeBackResult === 'success' ? 0 : swipeBackResult === 'fail' ? 1 : null;\n\n    return {\n      display: 'block',\n      opacity:\n        opacityOnSwipeEnd === null ? 1 - swipeBackShift / window.innerWidth : opacityOnSwipeEnd,\n    };\n  };\n\n  const handleSwipeBackTargetTransitionEnd = (event: React.TransitionEvent<HTMLDivElement>) => {\n    if (event.propertyName.includes('transform')) {\n      swipingBackTransitionEndHandler();\n    }\n  };\n\n  React.useEffect(() => {\n    // Нужен переход\n    if (\n      prevActivePanel &&\n      prevActivePanel !== activePanelProp &&\n      !prevSwipingBack &&\n      !prevBrowserSwipe\n    ) {\n      const firstLayerId = (React.Children.toArray(children) as React.ReactElement[])\n        .map((panel) => getNavId(panel.props, warn))\n        .find((id) => id === prevActivePanel || id === activePanelProp);\n\n      const isBackTransition = firstLayerId === activePanelProp;\n      scrolls.current[prevActivePanel] = scroll?.getScroll({ compensateKeyboardHeight: false }).y;\n\n      if (disableAnimation) {\n        flushTransition(prevActivePanel, isBackTransition);\n      } else {\n        blurActiveElement(document);\n\n        setVisiblePanels([prevActivePanel, activePanelProp]);\n        setPrevPanel(prevActivePanel);\n        setNextPanel(activePanelProp);\n        setActivePanel(null);\n        setAnimated(true);\n        setIsBack(isBackTransition);\n      }\n    }\n\n    // Закончилась анимация свайпа назад\n    if (prevActivePanel && prevActivePanel !== activePanelProp && prevSwipingBack) {\n      const nextPanel = activePanelProp;\n      const prevPanel = prevActivePanel;\n      if (prevSwipeBackPrevPanel) {\n        scrolls.current[prevSwipeBackPrevPanel] = 0;\n      }\n\n      setSwipeBackPrevPanel(null);\n      setSwipeBackNextPanel(null);\n      setSwipingBack(false);\n      setSwipeBackResult(null);\n      setSwipeBackStartX(0);\n      setSwipeBackShift(0);\n      setActivePanel(nextPanel);\n      setVisiblePanels([nextPanel]);\n      setIsBack(true);\n\n      layoutEffectCall(() => {\n        if (nextPanel !== null) {\n          scroll?.scrollTo(0, scrolls.current[nextPanel]);\n        }\n        prevOnTransition &&\n          prevOnTransition({\n            isBack: true,\n            from: prevPanel,\n            to: nextPanel,\n          });\n      });\n    }\n\n    // Началась анимация завершения свайпа назад.\n    // см. `onTransitionEnd()`\n\n    // Закончился Safari свайп\n    if (prevActivePanel !== activePanelProp && browserSwipe) {\n      setBrowserSwipe(false);\n      setNextPanel(null);\n      setPrevPanel(null);\n      setAnimated(false);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n    }\n  }, [\n    activePanelProp,\n    activePanel,\n    browserSwipe,\n    children,\n    disableAnimation,\n    document,\n    flushTransition,\n    prevActivePanel,\n    prevBrowserSwipe,\n    prevOnTransition,\n    prevSwipeBackPrevPanel,\n    prevSwipeBackResult,\n    prevSwipingBack,\n    scroll,\n    swipeBackNextPanel,\n    swipeBackResult,\n    layoutEffectCall,\n  ]);\n\n  React.useEffect(\n    function restoreScrollPositionWhenSwipeBackIsCancelled() {\n      // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n      const swipeBackCancelledInTheMiddleOfAction =\n        prevSwipeBackResult === 'fail' && !swipeBackResult;\n      const swipeBackCancelledByMovingPanelBackToInitialPoint =\n        prevSwipingBack && !swipingBack && prevSwipeBackShift === 0;\n\n      if (\n        (swipeBackCancelledInTheMiddleOfAction ||\n          swipeBackCancelledByMovingPanelBackToInitialPoint) &&\n        activePanel !== null\n      ) {\n        scroll?.scrollTo(0, scrolls.current[activePanel]);\n      }\n    },\n    [\n      prevSwipeBackResult,\n      swipeBackResult,\n      prevSwipingBack,\n      swipingBack,\n      prevSwipeBackShift,\n      activePanel,\n      scroll,\n    ],\n  );\n\n  return (\n    <NavViewIdContext.Provider value={id}>\n      <Touch\n        Component=\"section\"\n        {...restProps}\n        className={classNames(\n          styles['View'],\n          platform === 'ios' && classNames(styles['View--ios'], 'vkuiInternalView--ios'),\n          !disableAnimation && animated && styles['View--animated'],\n          !disableAnimation && swipingBack && styles['View--swiping-back'],\n          disableAnimation && styles['View--no-motion'],\n          className,\n        )}\n        onMoveX={\n          iOSSwipeBackSimulationEnabled\n            ? handleTouchMoveXForIOSSwipeBackSimulation\n            : platform === 'ios'\n              ? handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext\n              : undefined\n        }\n        onEnd={iOSSwipeBackSimulationEnabled ? handleTouchEndForIOSSwipeBackSimulation : undefined}\n      >\n        <div className={styles['View__panels']}>\n          {panels.map((panel: React.ReactElement) => {\n            const panelId = getNavId(panel.props, warn);\n\n            const isPanelActive = panelId === activePanel;\n            const isPanelPrev = panelId === prevPanel;\n            const isPanelNext = panelId === nextPanel;\n            const isAnimatedTarget = animated && (isBack ? isPanelPrev : isPanelNext);\n\n            const isSwipeBackPrev = panelId === swipeBackPrevPanel;\n            const isSwipeBackNext = panelId === swipeBackNextPanel;\n            const isSwipeBackTarget = swipeBackResult && isSwipeBackPrev;\n\n            let scrollCompensateStyle: React.CSSProperties | undefined = undefined;\n\n            if (isPanelPrev || (isPanelNext && isBack) || isSwipeBackPrev || isSwipeBackNext) {\n              const marginTop = scrolls.current[panelId];\n              if (marginTop !== undefined) {\n                scrollCompensateStyle = { marginTop: -1 * marginTop };\n              }\n            }\n\n            return (\n              <div\n                className={classNames(\n                  styles['View__panel'],\n\n                  isPanelActive && styles['View__panel--active'],\n                  isPanelPrev && styles['View__panel--prev'],\n                  isPanelNext && styles['View__panel--next'],\n\n                  isSwipeBackPrev && styles['View__panel--swipe-back-prev'],\n                  isSwipeBackNext && styles['View__panel--swipe-back-next'],\n                  swipeBackResult === 'success' && styles['View__panel--swipe-back-success'],\n                  swipeBackResult === 'fail' && styles['View__panel--swipe-back-failed'],\n                )}\n                onTransitionEnd={isSwipeBackTarget ? handleSwipeBackTargetTransitionEnd : undefined}\n                onAnimationEnd={isAnimatedTarget ? handleAnimatedTargetAnimationEnd : undefined}\n                ref={(el) => panelId !== undefined && (panelNodes.current[panelId] = el)}\n                style={calcPanelSwipeStyles(isSwipeBackPrev, isSwipeBackNext)}\n                key={panelId}\n              >\n                {platform === 'ios' && (\n                  <div\n                    className={styles['View__panel-overlay']}\n                    style={calcPanelSwipeBackOverlayStyles(isSwipeBackNext)}\n                  />\n                )}\n                <div className={styles['View__panel-in']} style={scrollCompensateStyle}>\n                  <NavTransitionDirectionProvider isBack={swipingBack || isBack}>\n                    <NavTransitionProvider\n                      entering={panelId === nextPanel || panelId === swipeBackNextPanel}\n                    >\n                      {panel}\n                    </NavTransitionProvider>\n                  </NavTransitionDirectionProvider>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </Touch>\n    </NavViewIdContext.Provider>\n  );\n};\n"],"names":["View","scrollsCache","warn","warnOnce","activePanel","activePanelProp","history","nav","onTransition","onSwipeBack","onSwipeBackStart","onSwipeBackCancel","onSwipeBackCancelProp","children","className","restProps","id","getNavId","scrolls","React","useRef","layoutEffectCall","useLayoutEffectCall","useEffect","current","panelNodes","window","document","useDOM","scroll","useScroll","configProvider","useConfigProvider","splitCol","useSplitCol","platform","usePlatform","animated","setAnimated","useState","visiblePanels","setVisiblePanels","setActivePanel","isBack","setIsBack","undefined","prevPanel","setPrevPanel","nextPanel","setNextPanel","swipeBackPrevented","swipingBack","setSwipingBack","swipeBackStartX","setSwipeBackStartX","swipeBackShift","setSwipeBackShift","swipeBackNextPanel","setSwipeBackNextPanel","swipeBackPrevPanel","setSwipeBackPrevPanel","swipeBackResult","setSwipeBackResult","browserSwipe","setBrowserSwipe","prevActivePanel","usePrevious","prevSwipingBack","prevBrowserSwipe","prevSwipeBackResult","prevSwipeBackShift","prevSwipeBackPrevPanel","prevOnTransition","panels","Children","toArray","filter","panel","panelId","props","includes","disableAnimation","transitionMotionEnabled","animate","iOSSwipeBackSimulationEnabled","isWebView","Boolean","flushTransition","useCallback","isBackTransition","scrollTo","from","to","handleAnimatedTargetAnimationEnd","onSwipeBackSuccess","swipingBackTransitionEndHandler","handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext","event","swipeBackTriggered","viewportStartEdgeTouched","viewportEndEdgeTouched","getSwipeBackPredicates","startX","shiftX","innerWidth","handleTouchMoveXForIOSSwipeBackSimulation","swipeBackExcluded","swipedToOpposite","length","hasHorizontalScrollableElementWithScrolledToLeft","originalEvent","target","payload","blurActiveElement","getScroll","y","slice","handleTouchEndForIOSSwipeBackSimulation","speed","duration","calcPanelSwipeStyles","isPrev","isNext","transform","calcPanelSwipeBackOverlayStyles","opacityOnSwipeEnd","display","opacity","handleSwipeBackTargetTransitionEnd","propertyName","firstLayerId","map","find","compensateKeyboardHeight","restoreScrollPositionWhenSwipeBackIsCancelled","swipeBackCancelledInTheMiddleOfAction","swipeBackCancelledByMovingPanelBackToInitialPoint","NavViewIdContext","Provider","value","Touch","Component","classNames","onMoveX","onEnd","div","isPanelActive","isPanelPrev","isPanelNext","isAnimatedTarget","isSwipeBackPrev","isSwipeBackNext","isSwipeBackTarget","scrollCompensateStyle","marginTop","onTransitionEnd","onAnimationEnd","ref","el","style","NavTransitionDirectionProvider","NavTransitionProvider","entering"],"mappings":";;;;;;;;;;;IA4DaA,IAAI;eAAJA;;IA7BFC,YAAY;eAAZA;;;;;;;;iEA/BY;sBACI;6BACC;6BACA;qBACc;0BACA;0BACjB;+BAEC;uCACQ;8BACD;sCACK;+CACS;iCACnB;uBACiB;qCACT;uBAK7B;AAWA,IAAIA,eAA6B,CAAC;AAwBzC,MAAMC,OAAOC,IAAAA,kBAAQ,EAAC;AAKf,MAAMH,OAAO;QAAC,EACnBI,aAAaC,eAAe,EAC5BC,OAAO,EACPC,GAAG,EACHC,YAAY,EACZC,WAAW,EACXC,gBAAgB,EAChBC,mBAAmBC,qBAAqB,EACxCC,QAAQ,EACRC,SAAS,EAEC,WADPC;QATHX;QACAE;QACAC;QACAC;QACAC;QACAC;QACAC;QACAE;QACAC;;IAGA,MAAME,KAAKC,IAAAA,kBAAQ,EAAC;QAAEV;QAAKS,IAAID,UAAUC,EAAE;IAAC;IAC5C,MAAME,UAAUC,OAAMC,MAAM,CAACnB,YAAY,CAACe,GAAa,IAAI,CAAC;IAC5D,MAAMK,mBAAmBC,IAAAA,wCAAmB;IAE5CH,OAAMI,SAAS,CAAC,IAAM;YACpB,IAAIP,IAAI;gBACNf,YAAY,CAACe,GAAG,GAAGE,QAAQM,OAAO;YACpC;QACF;IAEA,MAAMC,aAAaN,OAAMC,MAAM,CAA0C,CAAC;IAE1E,MAAM,EAAEM,MAAM,EAAEC,QAAQ,EAAE,GAAGC,IAAAA,WAAM;IACnC,MAAMC,SAASC,IAAAA,wBAAS;IACxB,MAAMC,iBAAiBC,IAAAA,wCAAiB;IACxC,MAAMC,WAAWC,IAAAA,4BAAW;IAC5B,MAAMC,WAAWC,IAAAA,wBAAW;IAE5B,MAAM,CAACC,UAAUC,YAAY,GAAGnB,OAAMoB,QAAQ,CAAC;IAE/C,MAAM,CAACC,eAAeC,iBAAiB,GAAGtB,OAAMoB,QAAQ,CAAC;QAAClC;KAAgB;IAC1E,MAAM,CAACD,aAAasC,eAAe,GAAGvB,OAAMoB,QAAQ,CAAgBlC;IACpE,MAAM,CAACsC,QAAQC,UAAU,GAAGzB,OAAMoB,QAAQ,CAAsBM;IAChE,MAAM,CAACC,WAAWC,aAAa,GAAG5B,OAAMoB,QAAQ,CAAgB;IAChE,MAAM,CAACS,WAAWC,aAAa,GAAG9B,OAAMoB,QAAQ,CAAgB;IAEhE,MAAMW,qBAAqB/B,OAAMC,MAAM,CAAU;IACjD,MAAM,CAAC+B,aAAaC,eAAe,GAAGjC,OAAMoB,QAAQ,CAAsBM;IAC1E,MAAM,CAACQ,iBAAiBC,mBAAmB,GAAGnC,OAAMoB,QAAQ,CAAS;IACrE,MAAM,CAACgB,gBAAgBC,kBAAkB,GAAGrC,OAAMoB,QAAQ,CAAS;IACnE,MAAM,CAACkB,oBAAoBC,sBAAsB,GAAGvC,OAAMoB,QAAQ,CAAgB;IAClF,MAAM,CAACoB,oBAAoBC,sBAAsB,GAAGzC,OAAMoB,QAAQ,CAAgB;IAClF,MAAM,CAACsB,iBAAiBC,mBAAmB,GAAG3C,OAAMoB,QAAQ,CAA4B;IAExF,MAAM,CAACwB,cAAcC,gBAAgB,GAAG7C,OAAMoB,QAAQ,CAAC;IAEvD,MAAM0B,kBAAkBC,IAAAA,wBAAW,EAAC7D;IACpC,MAAM8D,kBAAkBD,IAAAA,wBAAW,EAACf;IACpC,MAAMiB,mBAAmBF,IAAAA,wBAAW,EAACH;IACrC,MAAMM,sBAAsBH,IAAAA,wBAAW,EAACL;IACxC,MAAMS,qBAAqBJ,IAAAA,wBAAW,EAACX;IACvC,MAAMgB,yBAAyBL,IAAAA,wBAAW,EAACP;IAC3C,MAAMa,mBAAmBN,IAAAA,wBAAW,EAAC1D;IAErC,MAAMiE,SAAS,AAACtD,OAAMuD,QAAQ,CAACC,OAAO,CAAC9D,UAAmC+D,MAAM,CAC9E,CAACC;QACC,MAAMC,UAAU7D,IAAAA,kBAAQ,EAAC4D,MAAME,KAAK,EAAE7E;QAEtC,OACE,AAAC4E,YAAYjC,aAAaL,cAAcwC,QAAQ,CAACF,YACjDA,YAAYnB,sBACZmB,YAAYrB;IAEhB;IAGF,MAAMwB,mBACJ,CAAClD,eAAemD,uBAAuB,IAAI,CAACjD,SAASkD,OAAO,IAAIhD,aAAa;IAC/E,MAAMiD,gCACJ,CAACH,oBAAoB9C,aAAa,SAASJ,eAAesD,SAAS,IAAIC,QAAQ7E;IAEjF,MAAM8E,kBAAkBpE,OAAMqE,WAAW,CACvC,CAAC1C,WAAmB2C;QAClB,IAAIA,kBAAkB;YACpBvE,QAAQM,OAAO,CAACsB,UAAU,GAAG;QAC/B;QACAC,aAAa;QACbE,aAAa;QACbR,iBAAiB;YAACpC;SAAgB;QAClCqC,eAAerC;QACfiC,YAAY;QACZM,UAAU6C;QAEVpE,iBAAiB;YACfQ,mBAAAA,6BAAAA,OAAQ6D,QAAQ,CAAC,GAAGD,mBAAmBvE,QAAQM,OAAO,CAACnB,gBAAgB,GAAG;YAC1EG,gBACEA,aAAa;gBACXmC,QAAQ8C;gBACRE,MAAM7C;gBACN8C,IAAIvF;YACN;QACJ;IACF,GACA;QAACA;QAAiBgB;QAAkBb;QAAcqB;KAAO;IAG3D,MAAMgE,mCAAmC;QACvC,IAAI/C,cAAc,MAAM;YACtByC,gBAAgBzC,WAAWwC,QAAQ3C;QACrC;IACF;IAEA,MAAMmD,qBAAqB3E,OAAMqE,WAAW,CAAC;QAC3C/E,eAAeA;IACjB,GAAG;QAACA;KAAY;IAEhB,MAAME,oBAAoBQ,OAAMqE,WAAW,CAAC;QAC1C5E,yBAAyBA;QACzBgD,sBAAsB;QACtBF,sBAAsB;QACtBN,eAAe;QACfU,mBAAmB;QACnBR,mBAAmB;QACnBE,kBAAkB;IACpB,GAAG;QAAC5C;KAAsB;IAE1B,MAAMmF,kCAAkC5E,OAAMqE,WAAW,CAAC;QACxD,OAAQ3B;YACN,KAAK;gBACHlD;gBACA;YACF,KAAK;gBACHmF;QACJ;IACF,GAAG;QAACnF;QAAmBmF;QAAoBjC;KAAgB;IAE3D,MAAMmC,mDAAmD,CAACC;QACxD,IAAIlC,cAAc;YAChB;QACF;QACA,MAAM,EAAEmC,kBAAkB,EAAEC,wBAAwB,EAAEC,sBAAsB,EAAE,GAC5EC,IAAAA,6BAAsB,EAACJ,MAAMK,MAAM,EAAEL,MAAMM,MAAM,EAAE7E,OAAQ8E,UAAU;QAEvE,IAAI,AAACL,CAAAA,4BAA4BC,sBAAqB,KAAMF,oBAAoB;YAC9ElC,gBAAgB;QAClB;IACF;IAEA,MAAMyC,4CAA4C,CAACR;QACjD,IAAI/C,mBAAmB1B,OAAO,IAAIkF,IAAAA,wBAAiB,EAACT,QAAQ;YAC1D;QACF;QAEA,MAAM,EAAEU,gBAAgB,EAAET,kBAAkB,EAAEC,wBAAwB,EAAE,GACtEE,IAAAA,6BAAsB,EAACJ,MAAMK,MAAM,EAAEL,MAAMM,MAAM,EAAE7E,OAAQ8E,UAAU;QAEvE,IAAInE,YAAY6D,oBAAoB;YAClC;QACF;QAEA,IAAI,CAAC/C,eAAe7C,WAAWA,QAAQsG,MAAM,GAAG,GAAG;YACjD,IAAID,kBAAkB;gBACpBzD,mBAAmB1B,OAAO,GAAG;gBAC7B;YACF;YAEA,IAAI,CAAC0E,oBAAoB;gBACvB;YACF;YAEA,IACE,CAACC,4BACDU,IAAAA,uDAAgD,EAACZ,MAAMa,aAAa,CAACC,MAAM,GAC3E;gBACA7D,mBAAmB1B,OAAO,GAAG;gBAC7B;YACF;YACA,sBAAsB;YACtB,IAAId,kBAAkB;gBACpB,MAAMsG,UAAUtG,iBAAiBN;gBACjC,IAAI4G,YAAY,WAAW;oBACzB9D,mBAAmB1B,OAAO,GAAG;oBAC7B;gBACF;YACF;YAEA,IAAIpB,gBAAgB,MAAM;gBACxB,+EAA+E;gBAC/E6G,IAAAA,sBAAiB,EAACtF;gBAClBT,QAAQM,OAAO,CAACpB,YAAY,GAAGyB,mBAAAA,6BAAAA,OAAQqF,SAAS,GAAGC,CAAC;YACtD;YAEA/D,eAAe;YACfE,mBAAmB2C,MAAMK,MAAM;YAC/B1C,sBAAsBxD;YACtBsD,sBAAsBpD,QAAQ8G,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE;QAC5C;QAEA,IAAIjE,aAAa;YACf,IAAI8C,MAAMM,MAAM,GAAG,GAAG;gBACpB/C,kBAAkB;YACpB,OAAO,IAAIyC,MAAMM,MAAM,GAAG7E,OAAQ8E,UAAU,GAAGnD,iBAAiB;gBAC9DG,kBAAkB9B,OAAQ8E,UAAU;YACtC,OAAO;gBACLhD,kBAAkByC,MAAMM,MAAM;YAChC;QACF;IACF;IAEA,MAAMc,0CAA0C,CAACpB;QAC/C/C,mBAAmB1B,OAAO,GAAG;QAC7B,IAAI2B,aAAa;YACf,MAAMmE,QAAQ,AAAC/D,iBAAiB0C,MAAMsB,QAAQ,GAAI;gBAGpB7F;YAF9B,IAAI6B,mBAAmB,GAAG;gBACxB5C;YACF,OAAO,IAAI4C,kBAAmB7B,CAAAA,CAAAA,qBAAAA,OAAQ8E,UAAU,cAAlB9E,gCAAAA,qBAAsB,CAAA,GAAI;gBACtDoE;YACF,OAAO,IAAIwB,QAAQ,OAAO/D,kBAAkB7B,OAAQ8E,UAAU,GAAG,GAAG;gBAClE1C,mBAAmB;YACrB,OAAO;gBACLA,mBAAmB;YACrB;QACF;IACF;IAEA,MAAM0D,uBAAuB,CAACC,QAAiBC;QAC7C,IAAI,AAAC,CAACD,UAAU,CAACC,UAAW7D,iBAAiB;YAC3C,OAAO,CAAC;QACV;QAEA,IAAI6D,QAAQ;YACV,OAAOhG,SACH;gBACEiG,WAAW,CAAC,YAAY,EAAE,CAAC,KAAK,AAACpE,iBAAiB,MAAO7B,OAAO8E,UAAU,GAAG,EAAE,QAAQ,CAAC;YAC1F,IACA,CAAC;QACP;QAEA,IAAIiB,QAAQ;YACV,OAAO;gBAAEE,WAAW,CAAC,YAAY,EAAEpE,eAAe,SAAS,CAAC;YAAC;QAC/D;QAEA,OAAO,CAAC;IACV;IAEA,MAAMqE,kCAAkC,CAACF;QACvC,IAAI,CAAChG,UAAU,CAACgG,QAAQ;YACtB,OAAO,CAAC;QACV;QACA,MAAMG,oBACJhE,oBAAoB,YAAY,IAAIA,oBAAoB,SAAS,IAAI;QAEvE,OAAO;YACLiE,SAAS;YACTC,SACEF,sBAAsB,OAAO,IAAItE,iBAAiB7B,OAAO8E,UAAU,GAAGqB;QAC1E;IACF;IAEA,MAAMG,qCAAqC,CAAC/B;QAC1C,IAAIA,MAAMgC,YAAY,CAACjD,QAAQ,CAAC,cAAc;YAC5Ce;QACF;IACF;IAEA5E,OAAMI,SAAS,CAAC;QACd,gBAAgB;QAChB,IACE0C,mBACAA,oBAAoB5D,mBACpB,CAAC8D,mBACD,CAACC,kBACD;YACA,MAAM8D,eAAe,AAAC/G,OAAMuD,QAAQ,CAACC,OAAO,CAAC9D,UAC1CsH,GAAG,CAAC,CAACtD,QAAU5D,IAAAA,kBAAQ,EAAC4D,MAAME,KAAK,EAAE7E,OACrCkI,IAAI,CAAC,CAACpH,KAAOA,OAAOiD,mBAAmBjD,OAAOX;YAEjD,MAAMoF,mBAAmByC,iBAAiB7H;YAC1Ca,QAAQM,OAAO,CAACyC,gBAAgB,GAAGpC,mBAAAA,6BAAAA,OAAQqF,SAAS,CAAC;gBAAEmB,0BAA0B;YAAM,GAAGlB,CAAC;YAE3F,IAAIlC,kBAAkB;gBACpBM,gBAAgBtB,iBAAiBwB;YACnC,OAAO;gBACLwB,IAAAA,sBAAiB,EAACtF;gBAElBc,iBAAiB;oBAACwB;oBAAiB5D;iBAAgB;gBACnD0C,aAAakB;gBACbhB,aAAa5C;gBACbqC,eAAe;gBACfJ,YAAY;gBACZM,UAAU6C;YACZ;QACF;QAEA,oCAAoC;QACpC,IAAIxB,mBAAmBA,oBAAoB5D,mBAAmB8D,iBAAiB;YAC7E,MAAMnB,YAAY3C;YAClB,MAAMyC,YAAYmB;YAClB,IAAIM,wBAAwB;gBAC1BrD,QAAQM,OAAO,CAAC+C,uBAAuB,GAAG;YAC5C;YAEAX,sBAAsB;YACtBF,sBAAsB;YACtBN,eAAe;YACfU,mBAAmB;YACnBR,mBAAmB;YACnBE,kBAAkB;YAClBd,eAAeM;YACfP,iBAAiB;gBAACO;aAAU;YAC5BJ,UAAU;YAEVvB,iBAAiB;gBACf,IAAI2B,cAAc,MAAM;oBACtBnB,mBAAAA,6BAAAA,OAAQ6D,QAAQ,CAAC,GAAGxE,QAAQM,OAAO,CAACwB,UAAU;gBAChD;gBACAwB,oBACEA,iBAAiB;oBACf7B,QAAQ;oBACRgD,MAAM7C;oBACN8C,IAAI5C;gBACN;YACJ;QACF;QAEA,6CAA6C;QAC7C,0BAA0B;QAE1B,0BAA0B;QAC1B,IAAIiB,oBAAoB5D,mBAAmB0D,cAAc;YACvDC,gBAAgB;YAChBf,aAAa;YACbF,aAAa;YACbT,YAAY;YACZG,iBAAiB;gBAACpC;aAAgB;YAClCqC,eAAerC;QACjB;IACF,GAAG;QACDA;QACAD;QACA2D;QACAlD;QACAoE;QACAtD;QACA4D;QACAtB;QACAG;QACAI;QACAD;QACAF;QACAF;QACAtC;QACA4B;QACAI;QACAxC;KACD;IAEDF,OAAMI,SAAS,CACb,SAAS+G;QACP,+EAA+E;QAC/E,MAAMC,wCACJlE,wBAAwB,UAAU,CAACR;QACrC,MAAM2E,oDACJrE,mBAAmB,CAAChB,eAAemB,uBAAuB;QAE5D,IACE,AAACiE,CAAAA,yCACCC,iDAAgD,KAClDpI,gBAAgB,MAChB;YACAyB,mBAAAA,6BAAAA,OAAQ6D,QAAQ,CAAC,GAAGxE,QAAQM,OAAO,CAACpB,YAAY;QAClD;IACF,GACA;QACEiE;QACAR;QACAM;QACAhB;QACAmB;QACAlE;QACAyB;KACD;IAGH,qBACE,qBAAC4G,8BAAgB,CAACC,QAAQ;QAACC,OAAO3H;kBAChC,cAAA,qBAAC4H,YAAK;YACJC,WAAU;WACN9H;YACJD,WAAWgI,IAAAA,gBAAU,cAEnB3G,aAAa,SAAS2G,IAAAA,gBAAU,mBAAsB,0BACtD,CAAC7D,oBAAoB5C,kCACrB,CAAC4C,oBAAoB9B,yCACrB8B,2CACAnE;YAEFiI,SACE3D,gCACIqB,4CACAtE,aAAa,QACX6D,mDACAnD;YAERmG,OAAO5D,gCAAgCiC,0CAA0CxE;sBAEjF,cAAA,qBAACoG;gBAAInI,SAAS;0BACX2D,OAAO0D,GAAG,CAAC,CAACtD;oBACX,MAAMC,UAAU7D,IAAAA,kBAAQ,EAAC4D,MAAME,KAAK,EAAE7E;oBAEtC,MAAMgJ,gBAAgBpE,YAAY1E;oBAClC,MAAM+I,cAAcrE,YAAYhC;oBAChC,MAAMsG,cAActE,YAAY9B;oBAChC,MAAMqG,mBAAmBhH,YAAaM,CAAAA,SAASwG,cAAcC,WAAU;oBAEvE,MAAME,kBAAkBxE,YAAYnB;oBACpC,MAAM4F,kBAAkBzE,YAAYrB;oBACpC,MAAM+F,oBAAoB3F,mBAAmByF;oBAE7C,IAAIG,wBAAyD5G;oBAE7D,IAAIsG,eAAgBC,eAAezG,UAAW2G,mBAAmBC,iBAAiB;wBAChF,MAAMG,YAAYxI,QAAQM,OAAO,CAACsD,QAAQ;wBAC1C,IAAI4E,cAAc7G,WAAW;4BAC3B4G,wBAAwB;gCAAEC,WAAW,CAAC,IAAIA;4BAAU;wBACtD;oBACF;oBAEA,qBACE,sBAACT;wBACCnI,WAAWgI,IAAAA,gBAAU,qBAGnBI,4CACAC,wCACAC,wCAEAE,uDACAC,uDACA1F,oBAAoB,oDACpBA,oBAAoB;wBAEtB8F,iBAAiBH,oBAAoBxB,qCAAqCnF;wBAC1E+G,gBAAgBP,mBAAmBxD,mCAAmChD;wBACtEgH,KAAK,CAACC,KAAOhF,YAAYjC,aAAcpB,CAAAA,WAAWD,OAAO,CAACsD,QAAQ,GAAGgF,EAAC;wBACtEC,OAAOvC,qBAAqB8B,iBAAiBC;;4BAG5CpH,aAAa,uBACZ,qBAAC8G;gCACCnI,SAAS;gCACTiJ,OAAOnC,gCAAgC2B;;0CAG3C,qBAACN;gCAAInI,SAAS;gCAA4BiJ,OAAON;0CAC/C,cAAA,qBAACO,6DAA8B;oCAACrH,QAAQQ,eAAeR;8CACrD,cAAA,qBAACsH,2CAAqB;wCACpBC,UAAUpF,YAAY9B,aAAa8B,YAAYrB;kDAE9CoB;;;;;uBAbFC;gBAmBX;;;;AAKV"}