{"version":3,"sources":["../../../../src/components/Avatar/Avatar.tsx"],"sourcesContent":["import { classNames } from '@vkontakte/vkjs';\nimport { ImageBase, type ImageBaseOverlayProps, type ImageBaseProps } from '../ImageBase/ImageBase';\nimport { AvatarBadge, type AvatarBadgeProps } from './AvatarBadge/AvatarBadge';\nimport {\n  AvatarBadgeWithPreset,\n  type AvatarBadgeWithPresetProps,\n} from './AvatarBadge/AvatarBadgeWithPreset';\nimport { getInitialsFontSize } from './helpers';\nimport styles from './Avatar.module.css';\n\nexport type {\n  AvatarBadgeProps,\n  AvatarBadgeWithPresetProps,\n  ImageBaseOverlayProps as AvatarOverlayProps,\n};\n\nconst AVATAR_DEFAULT_SIZE = 48;\n\nconst COLORS_NUMBER_TO_TEXT_MAP = {\n  1: 'red',\n  2: 'orange',\n  3: 'yellow',\n  4: 'green',\n  5: 'l-blue',\n  6: 'violet',\n} as const;\n\n/**\n * Градиенты, которые можно использовать в алгоритме поиска градиентов по числовому идентификатору пользователя.\n * @example user.id % 6 + 1\n */\nexport type InitialsAvatarNumberGradients = keyof typeof COLORS_NUMBER_TO_TEXT_MAP;\n\nexport type InitialsAvatarTextGradients =\n  | (typeof COLORS_NUMBER_TO_TEXT_MAP)[InitialsAvatarNumberGradients]\n  | 'blue';\n\nconst gradientStyles = {\n  'red': styles['Avatar--gradient-red'],\n  'orange': styles['Avatar--gradient-orange'],\n  'yellow': styles['Avatar--gradient-yellow'],\n  'green': styles['Avatar--gradient-green'],\n  'blue': styles['Avatar--gradient-blue'],\n  'l-blue': styles['Avatar--gradient-l-blue'],\n  'violet': styles['Avatar--gradient-violet'],\n};\n\nexport interface AvatarProps extends Omit<ImageBaseProps, 'widthSize' | 'heightSize'> {\n  /**\n   * Инициалы пользователя.\n   *\n   * > Note: Если аватарка не прогрузится, то пользователь увидит инициалы.\n   *\n   * > ⚠️ Перебивает `fallbackIcon`.\n   */\n  initials?: string;\n  /**\n   * Задаёт градиент для фона.\n   *\n   * Если передано число, то оно будет сконвертировано в строчное представление цвета по следующей схеме:\n   *\n   * 1: 'red'\n   * 2: 'orange'\n   * 3: 'yellow'\n   * 4: 'green'\n   * 5: 'l-blue'\n   * 6: 'violet'\n   *\n   * > Если необходимо задать свой градиент, то используйте значение `\"custom\"` и определите цвет градиента либо через\n   * > свой класс в `className`, либо через `style={{ backgroundImage: \"...\" }}`.\n   */\n  gradientColor?: InitialsAvatarNumberGradients | InitialsAvatarTextGradients | 'custom';\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Avatar\n */\nexport const Avatar: React.FC<AvatarProps> & {\n  Badge: typeof AvatarBadge;\n  BadgeWithPreset: typeof AvatarBadgeWithPreset;\n  Overlay: typeof ImageBase.Overlay;\n  getInitialsFontSize: typeof getInitialsFontSize;\n} = ({\n  size = AVATAR_DEFAULT_SIZE,\n  className,\n  gradientColor,\n  initials,\n  fallbackIcon: fallbackIconProp,\n  children,\n  ...restProps\n}: AvatarProps) => {\n  const gradientName =\n    typeof gradientColor === 'number' ? COLORS_NUMBER_TO_TEXT_MAP[gradientColor] : gradientColor;\n  const isGradientNotCustom = gradientName && gradientName !== 'custom';\n\n  const fallbackIcon = initials ? (\n    <div\n      className={styles['Avatar__initials']}\n      style={{\n        fontSize: getInitialsFontSize(size),\n      }}\n    >\n      {initials}\n    </div>\n  ) : (\n    fallbackIconProp\n  );\n\n  return (\n    <ImageBase\n      {...restProps}\n      size={size}\n      fallbackIcon={fallbackIcon}\n      className={classNames(\n        styles['Avatar'],\n        gradientName && styles['Avatar--has-gradient'],\n        isGradientNotCustom && gradientStyles[gradientName],\n        className,\n      )}\n    >\n      {children}\n    </ImageBase>\n  );\n};\n\nAvatar.displayName = 'Avatar';\n\nAvatar.Badge = AvatarBadge;\nAvatar.Badge.displayName = 'Avatar.Badge';\n\nAvatar.BadgeWithPreset = AvatarBadgeWithPreset;\nAvatar.BadgeWithPreset.displayName = 'Avatar.BadgeWithPreset';\n\nAvatar.Overlay = ImageBase.Overlay;\nAvatar.Overlay.displayName = 'Avatar.Overlay';\n\nAvatar.getInitialsFontSize = getInitialsFontSize;\n"],"names":["Avatar","AVATAR_DEFAULT_SIZE","COLORS_NUMBER_TO_TEXT_MAP","gradientStyles","size","className","gradientColor","initials","fallbackIcon","fallbackIconProp","children","restProps","gradientName","isGradientNotCustom","div","style","fontSize","getInitialsFontSize","ImageBase","classNames","displayName","Badge","AvatarBadge","BadgeWithPreset","AvatarBadgeWithPreset","Overlay"],"mappings":";;;;+BA6EaA;;;eAAAA;;;;;;;sBA7Ec;2BACgD;6BACxB;uCAI5C;yBAC6B;AASpC,MAAMC,sBAAsB;AAE5B,MAAMC,4BAA4B;IAChC,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;AACL;AAYA,MAAMC,iBAAiB;IACrB,KAAK;IACL,QAAQ;IACR,QAAQ;IACR,OAAO;IACP,MAAM;IACN,QAAQ;IACR,QAAQ;AACV;AAgCO,MAAMH,SAKT;QAAC,EACHI,OAAOH,mBAAmB,EAC1BI,SAAS,EACTC,aAAa,EACbC,QAAQ,EACRC,cAAcC,gBAAgB,EAC9BC,QAAQ,EAEI,WADTC;QANHP;QACAC;QACAC;QACAC;QACAC;QACAE;;IAGA,MAAME,eACJ,OAAON,kBAAkB,WAAWJ,yBAAyB,CAACI,cAAc,GAAGA;IACjF,MAAMO,sBAAsBD,gBAAgBA,iBAAiB;IAE7D,MAAMJ,eAAeD,yBACnB,qBAACO;QACCT,SAAS;QACTU,OAAO;YACLC,UAAUC,IAAAA,4BAAmB,EAACb;QAChC;kBAECG;SAGHE;IAGF,qBACE,qBAACS,oBAAS,8CACJP;QACJP,MAAMA;QACNI,cAAcA;QACdH,WAAWc,IAAAA,gBAAU,gBAEnBP,4CACAC,uBAAuBV,cAAc,CAACS,aAAa,EACnDP;kBAGDK;;AAGP;AAEAV,OAAOoB,WAAW,GAAG;AAErBpB,OAAOqB,KAAK,GAAGC,wBAAW;AAC1BtB,OAAOqB,KAAK,CAACD,WAAW,GAAG;AAE3BpB,OAAOuB,eAAe,GAAGC,4CAAqB;AAC9CxB,OAAOuB,eAAe,CAACH,WAAW,GAAG;AAErCpB,OAAOyB,OAAO,GAAGP,oBAAS,CAACO,OAAO;AAClCzB,OAAOyB,OAAO,CAACL,WAAW,GAAG;AAE7BpB,OAAOiB,mBAAmB,GAAGA,4BAAmB"}