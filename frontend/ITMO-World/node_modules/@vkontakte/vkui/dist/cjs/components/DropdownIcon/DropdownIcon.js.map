{"version":3,"sources":["../../../../src/components/DropdownIcon/DropdownIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Icon20ChevronUp,\n  Icon20Dropdown,\n  Icon24ChevronDown,\n  Icon24ChevronUp,\n} from '@vkontakte/icons';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivityConditionalRender } from '../../hooks/useAdaptivityConditionalRender';\nimport type { HTMLAttributesWithRootRef } from '../../types';\n\nexport interface DropdownIconProps extends HTMLAttributesWithRootRef<SVGSVGElement> {\n  opened?: boolean;\n}\n\nexport const DropdownIcon = ({\n  opened = false,\n  className,\n  ...restProps\n}: DropdownIconProps): React.ReactNode => {\n  const { sizeY } = useAdaptivityConditionalRender();\n  const IconCompact = opened ? Icon20ChevronUp : Icon20Dropdown;\n  const IconRegular = opened ? Icon24ChevronUp : Icon24ChevronDown;\n\n  return (\n    <React.Fragment>\n      {sizeY.compact && (\n        <IconCompact className={classNames(sizeY.compact.className, className)} {...restProps} />\n      )}\n      {sizeY.regular && (\n        <IconRegular className={classNames(sizeY.regular.className, className)} {...restProps} />\n      )}\n    </React.Fragment>\n  );\n};\n"],"names":["DropdownIcon","opened","className","restProps","sizeY","useAdaptivityConditionalRender","IconCompact","Icon20ChevronUp","Icon20Dropdown","IconRegular","Icon24ChevronUp","Icon24ChevronDown","React","Fragment","compact","classNames","regular"],"mappings":";;;;+BAeaA;;;eAAAA;;;;;;;iEAfU;uBAMhB;sBACoB;gDACoB;AAOxC,MAAMA,eAAe;QAAC,EAC3BC,SAAS,KAAK,EACdC,SAAS,EAES,WADfC;QAFHF;QACAC;;IAGA,MAAM,EAAEE,KAAK,EAAE,GAAGC,IAAAA,8DAA8B;IAChD,MAAMC,cAAcL,SAASM,sBAAe,GAAGC,qBAAc;IAC7D,MAAMC,cAAcR,SAASS,sBAAe,GAAGC,wBAAiB;IAEhE,qBACE,sBAACC,OAAMC,QAAQ;;YACZT,MAAMU,OAAO,kBACZ,qBAACR;gBAAYJ,WAAWa,IAAAA,gBAAU,EAACX,MAAMU,OAAO,CAACZ,SAAS,EAAEA;eAAgBC;YAE7EC,MAAMY,OAAO,kBACZ,qBAACP;gBAAYP,WAAWa,IAAAA,gBAAU,EAACX,MAAMY,OAAO,CAACd,SAAS,EAAEA;eAAgBC;;;AAIpF"}