{"version":3,"sources":["../../../../src/components/Snackbar/Snackbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useFocusWithin } from '../../hooks/useFocusWithin';\nimport { useGlobalEscKeyDown } from '../../hooks/useGlobalEscKeyDown';\nimport { useMediaQueries } from '../../hooks/useMediaQueries';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useCSSKeyframesAnimationController } from '../../lib/animation';\nimport { getRelativeBoundingClientRect } from '../../lib/dom';\nimport { UIPanGestureRecognizer } from '../../lib/touch';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { Button } from '../Button/Button';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Basic, type BasicProps } from './subcomponents/Basic/Basic';\nimport type { ShiftData, SnackbarPlacement } from './types';\nimport {\n  getInitialShiftData,\n  getMovedShiftData,\n  resolveOffsetYCssStyle,\n  shouldBeClosedByShiftData,\n} from './utils';\nimport styles from './Snackbar.module.css';\n\nconst placementClassNames = {\n  'top-start': styles['Snackbar--placement-top-start'],\n  'top': styles['Snackbar--placement-top'],\n  'top-end': styles['Snackbar--placement-top-end'],\n  'bottom-start': styles['Snackbar--placement-bottom-start'],\n  'bottom': styles['Snackbar--placement-bottom'],\n  'bottom-end': styles['Snackbar--placement-bottom-end'],\n};\n\nconst animationStateClassNames = {\n  enter: styles['Snackbar--state-enter'],\n  entering: styles['Snackbar--state-entering'],\n  entered: styles['Snackbar--state-entered'],\n  exit: styles['Snackbar--state-exit'],\n  exiting: styles['Snackbar--state-exiting'],\n  exited: undefined,\n};\n\nexport interface SnackbarProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'role'>,\n    BasicProps {\n  /**\n   * Задаёт расположение компонента.\n   *\n   * > Note: в мобильном режиме:\n   * > - `\"top-start\"`/`\"top-end\"` перебивается на `\"top\"`, чтобы поведение было схожим с нативными\n   * >   уведомлениями;\n   * > - `\"bottom\"` перебивается на `\"bottom-start\"`, чтобы избежать вызова системных\n   * >   функций, таких как **Pull To Refresh** и **Режим управления одной рукой**.\n   * > - `\"bottom-start\"`/`\"bottom-end\"` закрываются смахиванием в любое из направлений\n   * >   по горизонтальной оси.\n   */\n  placement?: SnackbarPlacement;\n  /**\n   * Название кнопки действия в уведомлении\n   * Не может использоваться одновременно с `subtitle`\n   */\n  action?: React.ReactNode;\n  /**\n   * Будет вызвано при клике на кнопку действия\n   */\n  onActionClick?: (event: React.MouseEvent) => void;\n  /**\n   * Время в миллисекундах, через которое плашка скроется\n   */\n  duration?: number;\n  /**\n   * Обработчик закрытия уведомления\n   */\n  onClose: () => void;\n  /**\n   * Величина отступа снизу. Используется для позиционирования элемента в случае, когда нежелательно, чтобы Snackbar при появлении перекрывал важные элементы интерфейса.\n   */\n  offsetY?: React.CSSProperties['bottom'];\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Snackbar\n */\nexport const Snackbar: React.FC<SnackbarProps> & { Basic: typeof Basic } = ({\n  placement = 'bottom-start',\n  children,\n  layout,\n  action,\n  before,\n  after,\n  duration = 4000,\n  onActionClick,\n  onClose,\n  mode = 'default',\n  subtitle,\n  offsetY,\n  style,\n  getRootRef,\n  ...restProps\n}: SnackbarProps) => {\n  const platform = usePlatform();\n\n  const [open, setOpen] = React.useState(true);\n  const [touched, setTouched] = React.useState(false);\n\n  const rootRef = useExternRef(getRootRef);\n  const focused = useFocusWithin(rootRef);\n  const inRef = React.useRef<HTMLDivElement>(null);\n  const panGestureRecognizer = React.useRef<UIPanGestureRecognizer | null>(null);\n\n  const shiftDataRef = React.useRef<ShiftData | null>(null);\n\n  const rafRef = React.useRef<ReturnType<typeof requestAnimationFrame> | null>(null);\n  const closeTimeoutIdRef = React.useRef<ReturnType<typeof setTimeout>>();\n  const mediaQueries = useMediaQueries();\n  const [animationState, animationHandlers] = useCSSKeyframesAnimationController(\n    open ? 'enter' : 'exit',\n    {\n      onExited: onClose,\n    },\n  );\n\n  const clearRAF = React.useCallback(() => {\n    if (rafRef.current !== null) {\n      cancelAnimationFrame(rafRef.current);\n      rafRef.current = null;\n    }\n  }, []);\n\n  const updateShiftAxisCSSProperties = React.useCallback(\n    (x: number | null, y: number | null, direction: number | null) => {\n      rafRef.current = requestAnimationFrame(() => {\n        if (rootRef.current) {\n          x === null\n            ? rootRef.current.style.removeProperty('--vkui_internal--snackbar_shift_x')\n            : rootRef.current.style.setProperty('--vkui_internal--snackbar_shift_x', `${x}px`);\n          y === null\n            ? rootRef.current.style.removeProperty('--vkui_internal--snackbar_shift_y')\n            : rootRef.current.style.setProperty('--vkui_internal--snackbar_shift_y', `${y}px`);\n          direction === null\n            ? rootRef.current.style.removeProperty('--vkui_internal--snackbar_direction')\n            : /* istanbul ignore next: TODO чтобы протестировать кейс, нужно мокать useMediaQueries(), чтобы перебивать mediaQueries.smallTabletPlus.matches */\n              rootRef.current.style.setProperty(\n                '--vkui_internal--snackbar_direction',\n                `${direction}`,\n              );\n        }\n      });\n    },\n    [rootRef],\n  );\n\n  const close = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const handleActionClick = (event: React.MouseEvent) => {\n    close();\n    if (action) {\n      onActionClick?.(event);\n    }\n  };\n\n  const handleTouchStart = (event: React.UIEvent<HTMLDivElement>) => {\n    panGestureRecognizer.current = new UIPanGestureRecognizer();\n    panGestureRecognizer.current.setStartCoords(event.nativeEvent);\n    shiftDataRef.current = getInitialShiftData(\n      rootRef.current!.offsetWidth,\n      rootRef.current!.offsetHeight,\n      mediaQueries,\n    );\n    setTouched(true);\n  };\n\n  const handleTouchMove = (event: React.UIEvent<HTMLDivElement>) => {\n    if (shiftDataRef.current && panGestureRecognizer.current) {\n      panGestureRecognizer.current.setInitialTimeOnce();\n      panGestureRecognizer.current.setEndCoords(event.nativeEvent);\n      shiftDataRef.current = getMovedShiftData(\n        placement,\n        shiftDataRef.current,\n        panGestureRecognizer.current.delta(),\n      );\n\n      if (shiftDataRef.current.shifted) {\n        updateShiftAxisCSSProperties(\n          shiftDataRef.current.x,\n          shiftDataRef.current.y,\n          shiftDataRef.current.direction,\n        );\n      }\n    }\n  };\n\n  const handleTouchEnd = () => {\n    if (\n      touched &&\n      shiftDataRef.current &&\n      panGestureRecognizer.current &&\n      shouldBeClosedByShiftData(\n        placement,\n        shiftDataRef.current,\n        getRelativeBoundingClientRect(rootRef.current!, inRef.current!),\n        panGestureRecognizer.current.velocity(),\n      )\n    ) {\n      close();\n    }\n\n    setTouched(false);\n  };\n\n  useIsomorphicLayoutEffect(\n    function closeAfterDelay() {\n      if (!open || focused || touched || animationState !== 'entered') {\n        return;\n      }\n      closeTimeoutIdRef.current = setTimeout(close, duration);\n      return function preventCloseAfterDelayOnUnmount() {\n        clearTimeout(closeTimeoutIdRef.current);\n      };\n    },\n    [open, focused, touched, animationState, close, duration],\n  );\n\n  useIsomorphicLayoutEffect(\n    function clearUserInteractionDataAfterTouchEnd() {\n      if (!touched) {\n        clearRAF();\n        shiftDataRef.current = null;\n        panGestureRecognizer.current = null;\n\n        if (open) {\n          updateShiftAxisCSSProperties(null, null, null);\n        }\n      }\n    },\n    [touched, open, updateShiftAxisCSSProperties, clearRAF],\n  );\n\n  React.useEffect(() => clearRAF, [clearRAF]);\n\n  useGlobalEscKeyDown(open, close);\n\n  if (animationState === 'exited') {\n    return null;\n  }\n\n  return (\n    <RootComponent\n      {...restProps}\n      role=\"presentation\"\n      baseClassName={classNames(\n        styles['Snackbar'],\n        platform === 'ios' && styles['Snackbar--ios'],\n        touched && styles['Snackbar--touched'],\n        placementClassNames[placement],\n        animationStateClassNames[animationState],\n      )}\n      style={resolveOffsetYCssStyle(placement, style, offsetY)}\n      getRootRef={rootRef}\n    >\n      <div\n        role=\"alert\"\n        className={styles['Snackbar__in']}\n        ref={inRef}\n        // mobile\n        onTouchStart={handleTouchStart}\n        onTouchMove={handleTouchMove}\n        onTouchEnd={handleTouchEnd}\n        // desktop\n        onMouseDown={handleTouchStart}\n        onMouseMove={handleTouchMove}\n        onMouseUp={handleTouchEnd}\n        onMouseLeave={handleTouchEnd}\n        {...animationHandlers}\n      >\n        <Basic\n          mode={mode}\n          layout={layout}\n          before={before}\n          after={after}\n          subtitle={subtitle}\n          action={\n            action && (\n              <Button\n                align=\"left\"\n                mode=\"link\"\n                appearance={\n                  mode === 'dark'\n                    ? /* istanbul ignore next: проверяется в e2e */\n                      'overlay'\n                    : 'accent'\n                }\n                size=\"s\"\n                onClick={handleActionClick}\n              >\n                {action}\n              </Button>\n            )\n          }\n        >\n          {children}\n        </Basic>\n      </div>\n    </RootComponent>\n  );\n};\n\nSnackbar.Basic = Basic;\n"],"names":["Snackbar","placementClassNames","animationStateClassNames","enter","entering","entered","exit","exiting","exited","undefined","placement","children","layout","action","before","after","duration","onActionClick","onClose","mode","subtitle","offsetY","style","getRootRef","restProps","platform","usePlatform","open","setOpen","React","useState","touched","setTouched","rootRef","useExternRef","focused","useFocusWithin","inRef","useRef","panGestureRecognizer","shiftDataRef","rafRef","closeTimeoutIdRef","mediaQueries","useMediaQueries","animationState","animationHandlers","useCSSKeyframesAnimationController","onExited","clearRAF","useCallback","current","cancelAnimationFrame","updateShiftAxisCSSProperties","x","y","direction","requestAnimationFrame","removeProperty","setProperty","close","handleActionClick","event","handleTouchStart","UIPanGestureRecognizer","setStartCoords","nativeEvent","getInitialShiftData","offsetWidth","offsetHeight","handleTouchMove","setInitialTimeOnce","setEndCoords","getMovedShiftData","delta","shifted","handleTouchEnd","shouldBeClosedByShiftData","getRelativeBoundingClientRect","velocity","useIsomorphicLayoutEffect","closeAfterDelay","setTimeout","preventCloseAfterDelayOnUnmount","clearTimeout","clearUserInteractionDataAfterTouchEnd","useEffect","useGlobalEscKeyDown","RootComponent","role","baseClassName","classNames","resolveOffsetYCssStyle","div","className","ref","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","Basic","Button","align","appearance","size","onClick"],"mappings":"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"}