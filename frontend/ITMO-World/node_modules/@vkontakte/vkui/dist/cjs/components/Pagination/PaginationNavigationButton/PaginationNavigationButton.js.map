{"version":3,"sources":["../../../../../src/components/Pagination/PaginationNavigationButton/PaginationNavigationButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Button, type ButtonProps } from '../../Button/Button';\nimport { VisuallyHidden } from '../../VisuallyHidden/VisuallyHidden';\n\nexport interface PaginationNavigationButtonOpts {\n  'type': 'prev' | 'next';\n  'style': 'icon' | 'caption' | 'both';\n  'caption': React.ReactNode;\n  'Icon': React.ComponentType;\n  'a11yLabel': React.ReactNode;\n  'disabled'?: boolean;\n  'onClick': (event: React.MouseEvent<HTMLElement>) => void;\n  'data-page': number | undefined;\n}\n\nexport interface PaginationNavigationButtonProps extends PaginationNavigationButtonOpts {\n  renderNavigationButton?: (props: CustomPaginationNavigationButton) => React.ReactNode;\n}\n\n/**\n * @private\n */\nconst getButtonPropsFromPaginationNavigationButton = (\n  opts: PaginationNavigationButtonOpts,\n): ButtonProps & { 'data-page': number | undefined } => {\n  const icon: React.ReactElement | null =\n    opts.style !== 'caption' ? (\n      <>\n        <VisuallyHidden>{opts.a11yLabel}</VisuallyHidden>\n        <opts.Icon />\n      </>\n    ) : null;\n  const caption: React.ReactElement | null =\n    opts.style === 'caption' ? (\n      <>\n        <VisuallyHidden>{opts.a11yLabel}</VisuallyHidden>\n        <span aria-hidden=\"true\">{opts.caption}</span>\n      </>\n    ) : opts.style !== 'icon' ? (\n      <span aria-hidden=\"true\">{opts.caption}</span>\n    ) : null;\n\n  return {\n    'size': 'l',\n    'before': opts.type === 'prev' ? icon : null,\n    'after': opts.type === 'next' ? icon : null,\n    'appearance': opts.style === 'caption' ? 'neutral' : 'accent',\n    'mode': 'tertiary',\n    'disabled': opts.disabled,\n    'onClick': opts.onClick,\n    'children': caption,\n    'data-page': opts['data-page'],\n  } satisfies ButtonProps & { 'data-page': number | undefined };\n};\n\n/**\n * @private\n */\nexport type CustomPaginationNavigationButton = ReturnType<\n  typeof getButtonPropsFromPaginationNavigationButton\n>;\n\n/**\n * @private\n */\nexport const PaginationNavigationButton = ({\n  renderNavigationButton,\n  ...restProps\n}: PaginationNavigationButtonProps): React.ReactNode => {\n  const buttonProps = getButtonPropsFromPaginationNavigationButton(restProps);\n\n  if (typeof renderNavigationButton === 'function') {\n    return renderNavigationButton(buttonProps);\n  }\n\n  return <Button {...buttonProps} />;\n};\n"],"names":["PaginationNavigationButton","getButtonPropsFromPaginationNavigationButton","opts","icon","style","VisuallyHidden","a11yLabel","Icon","caption","span","aria-hidden","type","disabled","onClick","renderNavigationButton","restProps","buttonProps","Button"],"mappings":";;;;+BAiEaA;;;eAAAA;;;;;;;iEAjEU;wBACkB;gCACV;AAiB/B;;CAEC,GACD,MAAMC,+CAA+C,CACnDC;IAEA,MAAMC,OACJD,KAAKE,KAAK,KAAK,0BACb;;0BACE,qBAACC,8BAAc;0BAAEH,KAAKI,SAAS;;0BAC/B,qBAACJ,KAAKK,IAAI;;SAEV;IACN,MAAMC,UACJN,KAAKE,KAAK,KAAK,0BACb;;0BACE,qBAACC,8BAAc;0BAAEH,KAAKI,SAAS;;0BAC/B,qBAACG;gBAAKC,eAAY;0BAAQR,KAAKM,OAAO;;;SAEtCN,KAAKE,KAAK,KAAK,uBACjB,qBAACK;QAAKC,eAAY;kBAAQR,KAAKM,OAAO;SACpC;IAEN,OAAO;QACL,QAAQ;QACR,UAAUN,KAAKS,IAAI,KAAK,SAASR,OAAO;QACxC,SAASD,KAAKS,IAAI,KAAK,SAASR,OAAO;QACvC,cAAcD,KAAKE,KAAK,KAAK,YAAY,YAAY;QACrD,QAAQ;QACR,YAAYF,KAAKU,QAAQ;QACzB,WAAWV,KAAKW,OAAO;QACvB,YAAYL;QACZ,aAAaN,IAAI,CAAC,YAAY;IAChC;AACF;AAYO,MAAMF,6BAA6B;QAAC,EACzCc,sBAAsB,EAEU,WAD7BC;QADHD;;IAGA,MAAME,cAAcf,6CAA6Cc;IAEjE,IAAI,OAAOD,2BAA2B,YAAY;QAChD,OAAOA,uBAAuBE;IAChC;IAEA,qBAAO,qBAACC,cAAM,uBAAKD;AACrB"}