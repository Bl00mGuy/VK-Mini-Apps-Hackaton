{"version":3,"sources":["../../../../src/components/PullToRefresh/PullToRefreshSpinner.tsx"],"sourcesContent":["import { classNames } from '@vkontakte/vkjs';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden';\nimport styles from './PullToRefresh.module.css';\n\nfunction calcStrokeDashOffset(value: number, radius: number) {\n  const progress = value / 100;\n  return 2 * Math.PI * radius * (1 - progress);\n}\n\nexport interface PullToRefreshSpinnerProps extends HTMLAttributesWithRootRef<HTMLDivElement> {\n  size?: number;\n  strokeWidth?: number;\n  on?: boolean;\n  progress?: number;\n}\n\nexport const PullToRefreshSpinner = ({\n  on = true,\n  size = 24,\n  strokeWidth = 2.5,\n  progress = 0,\n  children = 'Пожалуйста, подождите...',\n  ...restProps\n}: PullToRefreshSpinnerProps): React.ReactNode => {\n  const radius = 0.5 * size - 0.5 * strokeWidth;\n  const dasharray = 2 * Math.PI * radius;\n  const circleCenter = 0.5 * size;\n\n  const dashoffset = calcStrokeDashOffset(on ? 80 : progress, radius);\n\n  return (\n    <RootComponent\n      baseClassName={classNames(\n        styles['PullToRefresh__spinner'],\n        on && styles['PullToRefresh__spinner--on'],\n      )}\n      {...restProps}\n    >\n      {on && <VisuallyHidden>{children}</VisuallyHidden>}\n      <svg\n        role=\"presentation\"\n        className={styles['PullToRefresh__spinner-self']}\n        style={{\n          width: size,\n          height: size,\n        }}\n        viewBox={`0 0 ${size} ${size}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g\n          style={{\n            width: size,\n            height: size,\n            transformOrigin: `${circleCenter}px ${circleCenter}px`,\n          }}\n        >\n          <circle\n            className={styles['PullToRefresh__spinner-path']}\n            fill=\"none\"\n            strokeDasharray={dasharray}\n            strokeDashoffset={dashoffset}\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n            cx={circleCenter}\n            cy={circleCenter}\n            r={radius}\n          />\n        </g>\n      </svg>\n    </RootComponent>\n  );\n};\n"],"names":["PullToRefreshSpinner","calcStrokeDashOffset","value","radius","progress","Math","PI","on","size","strokeWidth","children","restProps","dasharray","circleCenter","dashoffset","RootComponent","baseClassName","classNames","VisuallyHidden","svg","role","className","style","width","height","viewBox","xmlns","g","transformOrigin","circle","fill","strokeDasharray","strokeDashoffset","strokeLinecap","cx","cy","r"],"mappings":";;;;+BAkBaA;;;eAAAA;;;;;;;sBAlBc;+BAEG;gCACC;AAG/B,SAASC,qBAAqBC,KAAa,EAAEC,MAAc;IACzD,MAAMC,WAAWF,QAAQ;IACzB,OAAO,IAAIG,KAAKC,EAAE,GAAGH,SAAU,CAAA,IAAIC,QAAO;AAC5C;AASO,MAAMJ,uBAAuB;QAAC,EACnCO,KAAK,IAAI,EACTC,OAAO,EAAE,EACTC,cAAc,GAAG,EACjBL,WAAW,CAAC,EACZM,WAAW,0BAA0B,EAEX,WADvBC;QALHJ;QACAC;QACAC;QACAL;QACAM;;IAGA,MAAMP,SAAS,MAAMK,OAAO,MAAMC;IAClC,MAAMG,YAAY,IAAIP,KAAKC,EAAE,GAAGH;IAChC,MAAMU,eAAe,MAAML;IAE3B,MAAMM,aAAab,qBAAqBM,KAAK,KAAKH,UAAUD;IAE5D,qBACE,sBAACY,4BAAa;QACZC,eAAeC,IAAAA,gBAAU,gCAEvBV;OAEEI;;YAEHJ,oBAAM,qBAACW,8BAAc;0BAAER;;0BACxB,qBAACS;gBACCC,MAAK;gBACLC,SAAS;gBACTC,OAAO;oBACLC,OAAOf;oBACPgB,QAAQhB;gBACV;gBACAiB,SAAS,CAAC,IAAI,EAAEjB,KAAK,CAAC,EAAEA,KAAK,CAAC;gBAC9BkB,OAAM;0BAEN,cAAA,qBAACC;oBACCL,OAAO;wBACLC,OAAOf;wBACPgB,QAAQhB;wBACRoB,iBAAiB,CAAC,EAAEf,aAAa,GAAG,EAAEA,aAAa,EAAE,CAAC;oBACxD;8BAEA,cAAA,qBAACgB;wBACCR,SAAS;wBACTS,MAAK;wBACLC,iBAAiBnB;wBACjBoB,kBAAkBlB;wBAClBL,aAAaA;wBACbwB,eAAc;wBACdC,IAAIrB;wBACJsB,IAAItB;wBACJuB,GAAGjC;;;;;;AAMf"}