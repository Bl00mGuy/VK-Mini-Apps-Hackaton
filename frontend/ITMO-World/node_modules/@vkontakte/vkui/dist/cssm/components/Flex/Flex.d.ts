import { type GapsProp } from '../../lib/layouts';
import type { HTMLAttributesWithRootRef } from '../../types';
import { FlexItem, type FlexItemProps } from './FlexItem/FlexItem';
export type { FlexItemProps };
type FlexContentProps = 'start' | 'end' | 'center' | 'space-around' | 'space-between' | 'space-evenly';
export interface FlexProps extends HTMLAttributesWithRootRef<HTMLDivElement> {
    /**
     * Направление осей, эквивалентно `flex-direction`.
     */
    direction?: 'row' | 'column';
    /**
     * Отступы между элементами.
     * Значение из списка предопределённых пресетов или число, которое будет приведено к пикселям.
     * Через массив можно задать отступ между столбцами и строками [column, row], если они отличаются.
     *
     * TODO [>=7]: порядок следования будет [row, column]
     */
    gap?: GapsProp;
    /**
     * Отключает перенос контента, эквивалентно `flex-wrap=nowrap`.
     */
    noWrap?: boolean;
    /**
     * Выравнивание элементов по вспомогательной оси, эквивалентно `align-items`.
     */
    align?: 'start' | 'end' | 'center' | 'stretch' | 'baseline';
    /**
     * Выравнивание элементов по главной оси, эквивалентно `justify-content`.
     */
    justify?: FlexContentProps;
    /**
     * Значение `auto` позволяет задать платформенные отступы вокруг контейнера.
     */
    margin?: 'none' | 'auto';
    /**
     * Для инвертирования направления, эквивалентно `row-reverse` `column-reverse`.
     */
    reverse?: boolean;
}
export declare const Flex: React.FC<FlexProps> & {
    Item: typeof FlexItem;
};
//# sourceMappingURL=Flex.d.ts.map