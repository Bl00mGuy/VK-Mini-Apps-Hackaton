{"version":3,"sources":["../../../../src/components/DatePicker/DatePicker.tsx"],"sourcesContent":["import * as React from 'react';\nimport { leadingZero } from '@vkontakte/vkjs';\nimport { clamp } from '../../helpers/math';\nimport { range } from '../../helpers/range';\nimport { useAdaptivityHasPointer } from '../../hooks/useAdaptivityHasPointer';\nimport { useCustomEnsuredControl } from '../../hooks/useEnsuredControl';\nimport { useNativeFormResetListener } from '../../hooks/useNativeFormResetListener';\nimport type { HasOnlyExpectedProps, HTMLAttributesWithRootRef } from '../../types';\nimport { CustomSelect } from '../CustomSelect/CustomSelect';\nimport { Input, type InputProps } from '../Input/Input';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './DatePicker.module.css';\n\nconst DefaultMonths: string[] = [\n  'Января',\n  'Февраля',\n  'Марта',\n  'Апреля',\n  'Мая',\n  'Июня',\n  'Июля',\n  'Августа',\n  'Сентября',\n  'Октября',\n  'Ноября',\n  'Декабря',\n];\n\nexport type DatePickerDateFormat = {\n  day: number;\n  month: number;\n  year: number;\n};\n\nconst DEFAULT_EMPTY_DATE = { day: 0, month: 0, year: 0 };\n\nexport interface DatePickerProps\n  extends Omit<\n    HTMLAttributesWithRootRef<HTMLDivElement>,\n    'defaultValue' | 'value' | 'min' | 'max'\n  > {\n  min?: DatePickerDateFormat;\n  max?: DatePickerDateFormat;\n  name?: string;\n  defaultValue?: DatePickerDateFormat;\n  value?: DatePickerDateFormat;\n  popupDirection?: 'top' | 'bottom';\n  monthNames?: string[];\n  dayPlaceholder?: string;\n  monthPlaceholder?: string;\n  yearPlaceholder?: string;\n  onDateChange?: (value: DatePickerDateFormat) => void; // TODO [>=7] заменить на onChange\n  disabled?: boolean;\n}\n\n// Переводим state к формату гг-мм-дд\nfunction convertToInputFormat(value: Partial<DatePickerDateFormat> | undefined) {\n  if (!value) {\n    return undefined;\n  }\n  const { day = 0, month = 0, year = 0 } = value;\n  return `${year}-${leadingZero(month)}-${leadingZero(day)}`;\n}\n\n// Переводим дату формата гг-мм-дд к объекту\nfunction parseInputDate(date: string): DatePickerDateFormat {\n  if (date.length === 0) {\n    return DEFAULT_EMPTY_DATE;\n  }\n  const splited = date.split('-');\n\n  return {\n    day: Number(splited[2]),\n    month: Number(splited[1]),\n    year: Number(splited[0]),\n  };\n}\n\nfunction getMonthMaxDay(month?: number, year?: number) {\n  return month ? new Date(year || 2016, month, 0).getDate() : 31;\n}\n\nconst DatePickerCustom = ({\n  name,\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  popupDirection,\n  value,\n  monthNames,\n  onDateChange,\n  disabled,\n  defaultValue = DEFAULT_EMPTY_DATE,\n  ...restProps\n}: DatePickerProps) => {\n  const isControlled = value !== undefined;\n  const [internalValue, setInternalValue] = useCustomEnsuredControl({ value, defaultValue });\n  const hiddenInput = React.useRef<HTMLInputElement>(null);\n\n  const onSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const nextDate = {\n      day: internalValue.day,\n      month: internalValue.month,\n      year: internalValue.year,\n    };\n    nextDate[e.target.name as keyof typeof nextDate] = Number(e.target.value);\n    nextDate.day = nextDate.day\n      ? clamp(nextDate.day, 1, getMonthMaxDay(nextDate.month, nextDate.year))\n      : nextDate.day;\n    setInternalValue(nextDate);\n    onDateChange?.(nextDate);\n  };\n  const dayOptions = range(1, getMonthMaxDay(internalValue.month, internalValue.year)).map(\n    (value) => ({\n      label: String(value),\n      value,\n    }),\n  );\n  const monthOptions = (monthNames || DefaultMonths).map((name, index) => ({\n    label: name,\n    value: index + 1,\n  }));\n  const yearOptions = range(max.year, min.year).map((value) => ({\n    label: String(value),\n    value: value,\n  }));\n\n  useNativeFormResetListener(hiddenInput, () => {\n    if (!isControlled) {\n      setInternalValue(defaultValue);\n    }\n  });\n\n  return (\n    <RootComponent baseClassName={styles['DatePicker']} {...restProps}>\n      <div className={styles['DatePicker__container']}>\n        <div className={styles['DatePicker__day']}>\n          <CustomSelect\n            name=\"day\"\n            value={internalValue.day}\n            options={dayOptions}\n            placeholder={dayPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div className={styles['DatePicker__month']}>\n          <CustomSelect\n            className={styles['DatePicker__monthSelect']}\n            name=\"month\"\n            value={internalValue.month}\n            options={monthOptions}\n            placeholder={monthPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div className={styles['DatePicker__year']}>\n          <CustomSelect\n            name=\"year\"\n            value={internalValue.year}\n            options={yearOptions}\n            placeholder={yearPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n      </div>\n      <input\n        type=\"hidden\"\n        name={name}\n        ref={hiddenInput}\n        value={convertToInputFormat(internalValue)}\n      />\n    </RootComponent>\n  );\n};\n\nconst DatePickerNative = ({\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  monthNames,\n  popupDirection,\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  value,\n  defaultValue = DEFAULT_EMPTY_DATE,\n  onDateChange,\n  ...restProps\n}: DatePickerProps) => {\n  const onStringChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(\n    (e) => {\n      onDateChange?.(parseInputDate(e.currentTarget.value));\n    },\n    [onDateChange],\n  );\n  const inputProps: HasOnlyExpectedProps<\n    typeof restProps & Pick<InputProps, 'value' | 'defaultValue'>,\n    InputProps\n  > = restProps;\n\n  const valueProps = value\n    ? { value: convertToInputFormat(value) }\n    : { defaultValue: convertToInputFormat(defaultValue) };\n\n  return (\n    <Input\n      {...inputProps}\n      {...valueProps}\n      type=\"date\"\n      onChange={onStringChange}\n      min={convertToInputFormat(min)}\n      max={convertToInputFormat(max)}\n    />\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/DatePicker\n *\n * @deprecated 6.2.0\n *\n * Компонент устарел и будет удален в v7. Используйте вместо него компоненты\n * [Input](https://vkcom.github.io/VKUI/#/Input) и\n * [Select](https://vkcom.github.io/VKUI/#/Select).\n */\nexport const DatePicker = ({ onDateChange, ...props }: DatePickerProps): React.ReactNode => {\n  const hasPointer = useAdaptivityHasPointer();\n\n  const onChange = (update: DatePickerDateFormat) => {\n    onDateChange && onDateChange({ ...update });\n  };\n\n  const Cmp = hasPointer ? DatePickerCustom : DatePickerNative;\n  return <Cmp {...props} onDateChange={onChange} />;\n};\n"],"names":["React","leadingZero","clamp","range","useAdaptivityHasPointer","useCustomEnsuredControl","useNativeFormResetListener","CustomSelect","Input","RootComponent","styles","DefaultMonths","DEFAULT_EMPTY_DATE","day","month","year","convertToInputFormat","value","undefined","parseInputDate","date","length","splited","split","Number","getMonthMaxDay","Date","getDate","DatePickerCustom","name","min","max","dayPlaceholder","monthPlaceholder","yearPlaceholder","popupDirection","monthNames","onDateChange","disabled","defaultValue","restProps","isControlled","internalValue","setInternalValue","hiddenInput","useRef","onSelectChange","e","nextDate","target","dayOptions","map","label","String","monthOptions","index","yearOptions","baseClassName","div","className","options","placeholder","onChange","input","type","ref","DatePickerNative","onStringChange","useCallback","currentTarget","inputProps","valueProps","DatePicker","props","hasPointer","update","Cmp"],"mappings":"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"}