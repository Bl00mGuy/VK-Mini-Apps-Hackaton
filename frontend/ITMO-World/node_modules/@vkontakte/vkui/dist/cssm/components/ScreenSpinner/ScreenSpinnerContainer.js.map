{"version":3,"sources":["../../../../src/components/ScreenSpinner/ScreenSpinnerContainer.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { ScreenSpinnerContext } from './context';\nimport { type ScreenSpinnerProps } from './types';\nimport styles from './ScreenSpinner.module.css';\n\nconst stateClassNames = {\n  cancelable: styles['ScreenSpinner--state-cancelable'],\n  done: styles['ScreenSpinner--state-done'],\n  error: styles['ScreenSpinner--state-error'],\n};\n\nconst modeClassNames = {\n  shadow: styles['ScreenSpinner--mode-shadow'],\n  overlay: styles['ScreenSpinner--mode-overlay'],\n};\n\ntype ScreenSpinnerContainerProps = HTMLAttributesWithRootRef<HTMLSpanElement> &\n  Pick<ScreenSpinnerProps, 'state' | 'mode' | 'caption'>;\n\nexport const ScreenSpinnerContainer: React.FC<ScreenSpinnerContainerProps> = ({\n  state = 'loading',\n  mode = 'shadow',\n  caption,\n  children,\n  ...restProps\n}: ScreenSpinnerContainerProps) => {\n  return (\n    <ScreenSpinnerContext.Provider value={{ state, caption }}>\n      <RootComponent\n        baseClassName={classNames(\n          styles['ScreenSpinner'],\n          modeClassNames[mode],\n          state !== 'loading' && stateClassNames[state],\n          hasReactNode(caption) && styles['ScreenSpinner--has-caption'],\n        )}\n        {...restProps}\n      >\n        <div className={styles['ScreenSpinner__icon-slot']}>{children}</div>\n        {hasReactNode(caption) && (\n          <Footnote className={styles.ScreenSpinner__caption} aria-hidden>\n            {caption}\n          </Footnote>\n        )}\n      </RootComponent>\n    </ScreenSpinnerContext.Provider>\n  );\n};\n\nScreenSpinnerContainer.displayName = 'ScreenSpinnerContainer';\n"],"names":["React","classNames","hasReactNode","RootComponent","Footnote","ScreenSpinnerContext","styles","stateClassNames","cancelable","done","error","modeClassNames","shadow","overlay","ScreenSpinnerContainer","state","mode","caption","children","restProps","Provider","value","baseClassName","div","className","ScreenSpinner__caption","aria-hidden","displayName"],"mappings":";AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,UAAU,EAAEC,YAAY,QAAQ,kBAAkB;AAE3D,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,QAAQ,QAAQ,kCAAkC;AAC3D,SAASC,oBAAoB,QAAQ,YAAY;AAEjD,OAAOC,YAAY,6BAA6B;AAEhD,MAAMC,kBAAkB;IACtBC,YAAYF,MAAM,CAAC,kCAAkC;IACrDG,MAAMH,MAAM,CAAC,4BAA4B;IACzCI,OAAOJ,MAAM,CAAC,6BAA6B;AAC7C;AAEA,MAAMK,iBAAiB;IACrBC,QAAQN,MAAM,CAAC,6BAA6B;IAC5CO,SAASP,MAAM,CAAC,8BAA8B;AAChD;AAKA,OAAO,MAAMQ,yBAAgE,CAAC,EAC5EC,QAAQ,SAAS,EACjBC,OAAO,QAAQ,EACfC,OAAO,EACPC,QAAQ,EACR,GAAGC,WACyB;IAC5B,qBACE,KAACd,qBAAqBe,QAAQ;QAACC,OAAO;YAAEN;YAAOE;QAAQ;kBACrD,cAAA,MAACd;YACCmB,eAAerB,WACbK,MAAM,CAAC,gBAAgB,EACvBK,cAAc,CAACK,KAAK,EACpBD,UAAU,aAAaR,eAAe,CAACQ,MAAM,EAC7Cb,aAAae,YAAYX,MAAM,CAAC,6BAA6B;YAE9D,GAAGa,SAAS;;8BAEb,KAACI;oBAAIC,WAAWlB,MAAM,CAAC,2BAA2B;8BAAGY;;gBACpDhB,aAAae,0BACZ,KAACb;oBAASoB,WAAWlB,OAAOmB,sBAAsB;oBAAEC,aAAW;8BAC5DT;;;;;AAMb,EAAE;AAEFH,uBAAuBa,WAAW,GAAG"}