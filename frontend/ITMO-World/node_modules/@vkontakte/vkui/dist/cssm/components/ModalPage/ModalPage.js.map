{"version":3,"sources":["../../../../src/components/ModalPage/ModalPage.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivityWithJSMediaQueries } from '../../hooks/useAdaptivityWithJSMediaQueries';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useOrientationChange } from '../../hooks/useOrientationChange';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getNavId, type NavIdProps } from '../../lib/getNavId';\nimport { multiRef } from '../../lib/utils';\nimport { warnOnce } from '../../lib/warnOnce';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { ModalDismissButton } from '../ModalDismissButton/ModalDismissButton';\nimport { ModalRootContext, useModalRegistry } from '../ModalRoot/ModalRootContext';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { ModalPageContext } from './ModalPageContext';\nimport styles from './ModalPage.module.css';\n\nconst sizeClassName = {\n  s: styles['ModalPage--size-s'],\n  m: styles['ModalPage--size-m'],\n  l: styles['ModalPage--size-l'],\n};\n\nexport interface ModalPageProps extends HTMLAttributesWithRootRef<HTMLDivElement>, NavIdProps {\n  /**\n   * Шапка модальной страницы, `<ModalPageHeader />`\n   */\n  header?: React.ReactNode;\n  /**\n   * Задаёт контенту максимальную ширину для десктопной версии.\n   */\n  size?: 's' | 'm' | 'l' | number;\n  /**\n   * Задаёт модальному окну фиксированную высоту.\n   * Можно передать числовое значение в пикселях, а можно строкой, в том числе и в процентах \"50%\".\n   * В мобильной версии 'settlingHeight' будет считаться относительно заданного height.\n   */\n  height?: string | number;\n  /**\n   * Будет вызвано при начале открытия модалки.\n   */\n  onOpen?: VoidFunction;\n  /**\n   * Будет вызвано при окончательном открытии модалки.\n   */\n  onOpened?: VoidFunction;\n  /**\n   * Будет вызвано при начале закрытия модалки.\n   */\n  onClose?: VoidFunction;\n  /**\n   * Будет вызвано при окончательном закрытии модалки.\n   */\n  onClosed?: VoidFunction;\n  /**\n   * Процент, на который изначально будет открыта модальная страница. При `settlingHeight={100}` модальная страница раскрывается на всю высоту.\n   */\n  settlingHeight?: number;\n  /**\n   * Если высота контента в модальной странице может поменяться, нужно установить это свойство\n   */\n  dynamicContentHeight?: boolean;\n  getModalContentRef?: React.Ref<HTMLDivElement>;\n  /**\n   * Скрывает кнопку закрытия (актуально для iOS, т.к. можно отрисовать кнопку закрытия внутри модалки)\n   */\n  hideCloseButton?: boolean;\n  modalContentTestId?: string;\n  /**\n   * `data-testid` для кнопки закрытия\n   */\n  modalDismissButtonTestId?: string;\n  /**\n   * Позволяет отключить возможность закрытия модальной страницы (смахивание, клавиша `ESC`, клик по подложке)\n   *\n   * ⚠️ ВНИМАНИЕ: использование этой опции негативно сказывается на пользовательском опыте\n   */\n  preventClose?: boolean;\n}\n\nconst warn = warnOnce('ModalPage');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ModalPage\n */\nexport const ModalPage = ({\n  children,\n  header,\n  size: sizeProp = 's',\n  onOpen,\n  onOpened,\n  onClose,\n  onClosed,\n  settlingHeight, // 75\n  dynamicContentHeight,\n  getModalContentRef,\n  nav,\n  id: idProp,\n  hideCloseButton = false,\n  height,\n  modalContentTestId,\n  modalDismissButtonTestId,\n  getRootRef,\n  preventClose,\n  ...restProps\n}: ModalPageProps): React.ReactNode => {\n  const generatingId = React.useId();\n  const id = idProp || generatingId;\n\n  const { updateModalHeight } = React.useContext(ModalRootContext);\n\n  const platform = usePlatform();\n  const orientation = useOrientationChange();\n  const { sizeX, isDesktop } = useAdaptivityWithJSMediaQueries();\n\n  React.useEffect(() => {\n    if (dynamicContentHeight) {\n      updateModalHeight();\n    }\n  }, [children, dynamicContentHeight, orientation, updateModalHeight]);\n\n  const isCloseButtonShown = !hideCloseButton && isDesktop;\n  const size = isDesktop ? sizeProp : 's';\n\n  const modalContext = React.useContext(ModalRootContext);\n  const { refs } = useModalRegistry(getNavId({ nav, id }, warn), 'page');\n  const rootRef = useExternRef(getRootRef, refs.modalElement);\n\n  const contextValue = React.useMemo(() => ({ labelId: `${id}-label` }), [id]);\n\n  return (\n    <ModalPageContext.Provider value={contextValue}>\n      <RootComponent\n        {...restProps}\n        getRootRef={rootRef}\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-labelledby={contextValue.labelId}\n        id={id}\n        baseClassName={classNames(\n          styles['ModalPage'],\n          platform === 'ios' && styles['ModalPage--ios'],\n          isDesktop && styles['ModalPage--desktop'],\n          sizeX === 'regular' && 'vkuiInternalModalPage--sizeX-regular',\n          typeof size === 'string' && sizeClassName[size],\n        )}\n      >\n        <div\n          className={styles['ModalPage__in-wrap']}\n          style={{\n            maxWidth: typeof size === 'number' ? size : undefined,\n            height,\n          }}\n          ref={refs.innerElement}\n        >\n          <div className={styles['ModalPage__in']}>\n            <div className={styles['ModalPage__header']} ref={refs.headerElement}>\n              {header}\n            </div>\n\n            <div className={styles['ModalPage__content-wrap']}>\n              <div\n                className={styles['ModalPage__content']}\n                ref={multiRef<HTMLDivElement>(refs.contentElement, getModalContentRef)}\n                {...(modalContentTestId && { 'data-testid': modalContentTestId })}\n              >\n                <div className={styles['ModalPage__content-in']}>{children}</div>\n              </div>\n              <div ref={refs.bottomInset} className={styles['ModalPage__bottom-inset']} />\n            </div>\n            {isCloseButtonShown && (\n              <ModalDismissButton\n                data-testid={modalDismissButtonTestId}\n                onClick={onClose || modalContext.onClose}\n              />\n            )}\n          </div>\n        </div>\n      </RootComponent>\n    </ModalPageContext.Provider>\n  );\n};\n"],"names":["React","classNames","useAdaptivityWithJSMediaQueries","useExternRef","useOrientationChange","usePlatform","getNavId","multiRef","warnOnce","ModalDismissButton","ModalRootContext","useModalRegistry","RootComponent","ModalPageContext","styles","sizeClassName","s","m","l","warn","ModalPage","children","header","size","sizeProp","onOpen","onOpened","onClose","onClosed","settlingHeight","dynamicContentHeight","getModalContentRef","nav","id","idProp","hideCloseButton","height","modalContentTestId","modalDismissButtonTestId","getRootRef","preventClose","restProps","generatingId","useId","updateModalHeight","useContext","platform","orientation","sizeX","isDesktop","useEffect","isCloseButtonShown","modalContext","refs","rootRef","modalElement","contextValue","useMemo","labelId","Provider","value","tabIndex","role","aria-modal","aria-labelledby","baseClassName","div","className","style","maxWidth","undefined","ref","innerElement","headerElement","contentElement","bottomInset","data-testid","onClick"],"mappings":"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"}