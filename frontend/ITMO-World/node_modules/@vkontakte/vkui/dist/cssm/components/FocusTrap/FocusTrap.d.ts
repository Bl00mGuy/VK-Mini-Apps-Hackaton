import { type AllHTMLAttributes } from 'react';
import type { HasComponent, HasRootRef } from '../../types';
export interface FocusTrapProps<T extends HTMLElement = HTMLElement> extends Omit<AllHTMLAttributes<T>, 'autoFocus'>, HasRootRef<T>, HasComponent {
    autoFocus?: boolean | 'root';
    restoreFocus?: boolean | (() => boolean);
    mount?: boolean;
    timeout?: number;
    onClose?: () => void;
    /**
     * Форсированное отключение захвата фокуса
     */
    disabled?: boolean;
}
/**
 * @see https://vkcom.github.io/VKUI/#/FocusTrap
 */
export declare const FocusTrap: <T extends HTMLElement = HTMLElement>({ Component, onClose, autoFocus, restoreFocus, disabled, mount, timeout, getRootRef, children, ...restProps }: FocusTrapProps<T>) => React.ReactNode;
//# sourceMappingURL=FocusTrap.d.ts.map