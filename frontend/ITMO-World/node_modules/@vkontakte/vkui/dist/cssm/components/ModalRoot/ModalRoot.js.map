{"version":3,"sources":["../../../../src/components/ModalRoot/ModalRoot.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { clamp } from '../../helpers/math';\nimport { withContext } from '../../hoc/withContext';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { type DOMProps, withDOM } from '../../lib/dom';\nimport { getNavId } from '../../lib/getNavId';\nimport { rubber } from '../../lib/touch';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { ConfigProviderContext } from '../ConfigProvider/ConfigProviderContext';\nimport { FocusTrap } from '../FocusTrap/FocusTrap';\nimport { type CustomTouchEvent, Touch } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport { ModalRootContext, type ModalRootContextInterface } from './ModalRootContext';\nimport { MODAL_PAGE_DEFAULT_PERCENT_HEIGHT } from './constants';\nimport type { ModalRootWithDOMProps, ModalsStateEntry, TranslateRange } from './types';\nimport { type ModalTransitionProps, withModalManager } from './useModalManager';\nimport styles from './ModalRoot.module.css';\n\nconst warn = warnOnce('ModalRoot');\n\nfunction numberInRange(number: number, range: TranslateRange | undefined) {\n  if (!range) {\n    return false;\n  }\n  return number >= range[0] && number <= range[1];\n}\n\nfunction rangeTranslate(number: number) {\n  return clamp(number, 0, 98);\n}\n\ninterface ModalRootState {\n  touchDown?: boolean;\n  dragging?: boolean;\n  modalOpenedLog: string[];\n}\n\nclass ModalRootTouchComponent extends React.Component<\n  ModalRootWithDOMProps & DOMProps & ModalTransitionProps,\n  ModalRootState\n> {\n  constructor(props: ModalRootWithDOMProps & ModalTransitionProps) {\n    super(props);\n    this.state = {\n      touchDown: false,\n      dragging: false,\n      modalOpenedLog: [],\n    };\n\n    this.maskElementRef = React.createRef();\n\n    this.modalRootContext = {\n      updateModalHeight: this.updateModalHeight,\n      registerModal: ({ id, ...data }) => Object.assign(this.props.getModalState(id) ?? {}, data),\n      onClose: () => this.props.onExit(),\n      isInsideModal: true,\n    };\n\n    this.frameIds = {};\n  }\n\n  private readonly maskElementRef: React.RefObject<HTMLDivElement>;\n  private readonly viewportRef = React.createRef<HTMLDivElement>();\n  private maskAnimationFrame: number | undefined = undefined;\n  private readonly modalRootContext: ModalRootContextInterface;\n  private readonly frameIds: {\n    [index: string]: number;\n  };\n  private restoreFocusTo: HTMLElement | undefined | null = undefined;\n\n  get timeout(): number {\n    return this.props.platform === 'ios' ? 400 : 320;\n  }\n\n  get document(): Document {\n    return this.props.document as Document;\n  }\n\n  get window(): Window {\n    return this.props.window as Window;\n  }\n\n  getModals() {\n    return React.Children.toArray(this.props.children) as React.ReactElement[];\n  }\n\n  componentDidMount() {\n    // Отслеживаем изменение размеров viewport\n    this.window?.addEventListener('resize', this.updateModalHeight, false);\n  }\n\n  componentWillUnmount() {\n    this.toggleDocumentScrolling(true);\n    this.window.removeEventListener('resize', this.updateModalHeight, false);\n  }\n\n  componentDidUpdate(prevProps: ModalRootWithDOMProps & ModalTransitionProps) {\n    // transition phase 2: animate exiting modal\n    if (this.props.exitingModal && this.props.exitingModal !== prevProps.exitingModal) {\n      this.closeModal(this.props.exitingModal);\n    }\n\n    // transition phase 3: animate entering modal\n    if (this.props.enteringModal && this.props.enteringModal !== prevProps.enteringModal) {\n      const enteringState = this.props.getModalState(this.props.enteringModal);\n      this.props.onEnter();\n      this.waitTransitionFinish(enteringState, () => {\n        if (enteringState) {\n          if (enteringState.innerElement) {\n            enteringState.innerElement.style.transitionDelay = '';\n          }\n          this.onEntered(enteringState);\n        }\n      });\n\n      if (enteringState?.innerElement) {\n        enteringState.innerElement.style.transitionDelay = this.props.delayEnter\n          ? `${this.timeout}ms`\n          : '';\n        this.animateTranslate(enteringState, enteringState.translateY);\n        this.setMaskOpacity(enteringState, 1);\n      }\n    }\n\n    // focus restoration\n    if (this.props.activeModal && !prevProps.activeModal) {\n      this.restoreFocusTo = this.document.activeElement as HTMLElement;\n    }\n    if (!this.props.activeModal && !this.props.exitingModal && this.restoreFocusTo) {\n      this.restoreFocusTo.focus();\n      this.restoreFocusTo = null;\n    }\n\n    this.toggleDocumentScrolling(!this.props.activeModal && !this.props.exitingModal);\n  }\n\n  /* Отключает скролл документа */\n  toggleDocumentScrolling(enabled: boolean) {\n    if (enabled) {\n      // восстанавливаем значение overscroll behavior\n      // eslint-disable-next-line no-restricted-properties\n      this.document.documentElement.classList.remove('vkui--disable-overscroll-behavior');\n    } else {\n      // отключаем нативный pull-to-refresh при открытом модальном окне\n      // чтобы он не срабатывал при закрытии модалки смахиванием вниз\n      // eslint-disable-next-line no-restricted-properties\n      this.document.documentElement.classList.add('vkui--disable-overscroll-behavior');\n    }\n  }\n\n  checkPageContentHeight() {\n    const modalState = this.props.getModalState(this.props.activeModal);\n\n    if (modalState?.type === 'page' && modalState?.modalElement) {\n      const prevModalState = { ...modalState };\n      initPageModal(modalState);\n      const currentModalState = { ...modalState };\n\n      let needAnimate = false;\n\n      if (prevModalState.expandable === currentModalState.expandable) {\n        if (prevModalState.translateYFrom !== currentModalState.translateYFrom) {\n          needAnimate = true;\n        }\n      } else {\n        needAnimate = true;\n      }\n\n      if (needAnimate) {\n        this.animateTranslate(modalState, modalState.translateY);\n      }\n    }\n  }\n\n  updateModalHeight = () => {\n    const modalState = this.props.getModalState(this.props.activeModal);\n\n    if (modalState && modalState.type === 'page') {\n      if (this.props.enteringModal) {\n        this.waitTransitionFinish(modalState, () => {\n          requestAnimationFrame(() => this.checkPageContentHeight());\n        });\n      } else {\n        requestAnimationFrame(() => this.checkPageContentHeight());\n      }\n    }\n  };\n\n  onEntered({ id, modalElement }: ModalsStateEntry) {\n    if (\n      !this.props.noFocusToDialog &&\n      modalElement &&\n      !modalElement.contains(this.document.activeElement)\n    ) {\n      modalElement.focus();\n    }\n\n    this.props.onEntered(id);\n  }\n\n  closeModal(id: string) {\n    // Сбрасываем состояния, которые могут помешать закрытию модального окна\n    this.setState({ touchDown: false });\n\n    const prevModalState = this.props.getModalState(id);\n\n    if (!prevModalState) {\n      id && warn(`closeActiveModal: модальное окно (страница) ${id} не существует`, 'error');\n      return;\n    }\n    if (!this.state.modalOpenedLog.length) {\n      this.setState((prevState) => ({\n        modalOpenedLog: [...prevState.modalOpenedLog, id],\n      }));\n    }\n    const nextModalState = this.props.getModalState(this.props.activeModal);\n    const nextIsPage = !!nextModalState && nextModalState.type === 'page';\n\n    const prevIsPage = !!prevModalState && prevModalState.type === 'page';\n    this.waitTransitionFinish(prevModalState, () => this.props.onExited(id));\n    const exitTranslate =\n      prevIsPage &&\n      nextIsPage &&\n      (prevModalState.translateY ?? 0) <= (nextModalState?.translateYFrom ?? 0) &&\n      !this.props.isBack\n        ? (nextModalState?.translateYFrom ?? 0) + 10\n        : 100;\n    this.animateTranslate(prevModalState, exitTranslate);\n\n    if (!nextModalState) {\n      // NOTE: was only for clean exit\n      this.setMaskOpacity(prevModalState, 0);\n      this.setState({ modalOpenedLog: [] });\n      prevModalState.translateY = undefined;\n      prevModalState.expandable = undefined;\n    } else if (nextModalState.id && !this.state.modalOpenedLog.includes(nextModalState.id)) {\n      nextModalState.translateY = undefined;\n      this.setState((prevState) => ({\n        modalOpenedLog: [...prevState.modalOpenedLog, nextModalState.id!],\n      }));\n    }\n  }\n\n  onTouchMove = (e: CustomTouchEvent) => {\n    if (this.props.exitingModal) {\n      return;\n    }\n    const modalState = this.props.getModalState(this.props.activeModal);\n    if (!modalState) {\n      return;\n    }\n\n    if (modalState.type === 'page') {\n      return this.onPageTouchMove(e, modalState);\n    }\n\n    if (modalState.type === 'card') {\n      return this.onCardTouchMove(e, modalState);\n    }\n  };\n\n  onPageTouchMove(event: CustomTouchEvent, modalState: ModalsStateEntry) {\n    const { shiftY, originalEvent } = event;\n    const target = originalEvent.target as HTMLElement;\n\n    if (!event.isY) {\n      if (this.viewportRef.current?.contains(target)) {\n        originalEvent.preventDefault();\n      }\n      return;\n    }\n\n    if (!modalState.innerElement?.contains(target)) {\n      return originalEvent.preventDefault();\n    }\n\n    originalEvent.stopPropagation();\n\n    const { expandable, contentScrolled, collapsed, expanded } = modalState;\n\n    if (!this.state.touchDown) {\n      modalState.touchStartContentScrollTop = modalState.contentElement?.scrollTop ?? 0;\n      this.setState({ touchDown: true });\n    }\n\n    if (contentScrolled) {\n      return;\n    }\n\n    if (modalState.touchMovePositive === null) {\n      modalState.touchMovePositive = shiftY > 0;\n    }\n\n    if (\n      !modalState.expandable ||\n      collapsed ||\n      (expanded && modalState.touchMovePositive && modalState.touchStartContentScrollTop === 0) ||\n      modalState.headerElement?.contains(target)\n    ) {\n      originalEvent.preventDefault();\n\n      if ((!expandable && shiftY < 0) || !this.window) {\n        return;\n      }\n\n      !this.state.dragging && this.setState({ dragging: true });\n\n      const shiftYPercent = (shiftY / this.window.innerHeight) * 100;\n      const shiftYCurrent = rubber(shiftYPercent, 72, 0.8, this.props.platform !== 'ios');\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = rangeTranslate((modalState.translateY ?? 0) + shiftYCurrent);\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onCardTouchMove(event: CustomTouchEvent, modalState: ModalsStateEntry) {\n    const { originalEvent, shiftY } = event;\n    const target = originalEvent.target as HTMLElement;\n    if (modalState.innerElement?.contains(target)) {\n      if (!this.state.touchDown) {\n        this.setState({ touchDown: true, dragging: true });\n      }\n\n      const shiftYPercent = (shiftY / modalState.innerElement.offsetHeight) * 100;\n      const shiftYCurrent = rubber(shiftYPercent, 72, 1.2, this.props.platform !== 'ios');\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = Math.max(0, (modalState.translateY ?? 0) + shiftYCurrent);\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onTouchEnd = (e: CustomTouchEvent) => {\n    const modalState = this.props.getModalState(this.props.activeModal);\n\n    if (modalState?.type === 'page') {\n      return this.onPageTouchEnd(e, modalState);\n    }\n\n    if (modalState?.type === 'card') {\n      return this.onCardTouchEnd(e, modalState);\n    }\n  };\n\n  onPageTouchEnd(event: CustomTouchEvent, modalState: ModalsStateEntry) {\n    const { startY, shiftY } = event;\n\n    modalState.contentScrolled = false;\n    modalState.touchMovePositive = null;\n\n    let setStateCallback;\n\n    if (this.state.dragging && this.window) {\n      const shiftYEndPercent = ((startY + shiftY) / this.window.innerHeight) * 100;\n\n      let translateY = modalState.translateYCurrent ?? 0;\n      const expectTranslateY =\n        (translateY / event.duration) *\n        240 *\n        0.6 *\n        ((modalState.touchShiftYPercent ?? 0) < 0 ? -1 : 1);\n      translateY = rangeTranslate(translateY + expectTranslateY);\n\n      if (modalState.settlingHeight !== 100) {\n        if (numberInRange(translateY, modalState.expandedRange)) {\n          translateY = modalState.expandedRange?.[0] ?? 0;\n        } else if (numberInRange(translateY, modalState.collapsedRange)) {\n          translateY = modalState.translateYFrom ?? 0;\n        } else if (numberInRange(translateY, modalState.hiddenRange)) {\n          translateY = modalState.preventClose ? modalState.translateYFrom ?? 0 : 100;\n        } else {\n          translateY = modalState.translateYFrom ?? 0;\n        }\n      } else {\n        if (numberInRange(translateY, [0, 25])) {\n          translateY = 0;\n        } else {\n          translateY = modalState.preventClose ? modalState.translateYFrom ?? 0 : 100;\n        }\n      }\n\n      if (translateY !== 100 && shiftYEndPercent >= 75 && !modalState.preventClose) {\n        translateY = 100;\n      }\n\n      modalState.translateY = translateY;\n      modalState.translateYCurrent = translateY;\n      modalState.collapsed = numberInRange(translateY, modalState.collapsedRange);\n      modalState.expanded = translateY === 0;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        this.props.onExit();\n      }\n\n      setStateCallback = () => {\n        if (!modalState.hidden) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState(\n      {\n        touchDown: false,\n        dragging: false,\n      },\n      setStateCallback,\n    );\n  }\n\n  onCardTouchEnd({ duration }: CustomTouchEvent, modalState: ModalsStateEntry) {\n    let setStateCallback;\n\n    if (this.state.dragging) {\n      let translateY = modalState.translateYCurrent ?? 0;\n\n      const expectTranslateY =\n        (translateY / duration) * 240 * 0.6 * ((modalState.touchShiftYPercent ?? 0) < 0 ? -1 : 1);\n      translateY = Math.max(0, translateY + expectTranslateY);\n\n      if (translateY >= 30) {\n        translateY = 100;\n      } else {\n        translateY = 0;\n      }\n\n      modalState.translateY = translateY;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        this.props.onExit();\n      }\n\n      setStateCallback = () => {\n        if (!modalState.hidden) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState(\n      {\n        touchDown: false,\n        dragging: false,\n      },\n      setStateCallback,\n    );\n  }\n\n  onScroll = (e: React.SyntheticEvent) => {\n    const activeModal = this.props.activeModal;\n\n    const target = e.target as HTMLElement;\n\n    if (!activeModal) {\n      return;\n    }\n    const modalState = this.props.getModalState(activeModal);\n    if (modalState?.type === 'page' && modalState?.contentElement?.contains(target)) {\n      modalState.contentScrolled = true;\n\n      if (modalState.contentScrollStopTimeout) {\n        clearTimeout(modalState.contentScrollStopTimeout);\n      }\n\n      modalState.contentScrollStopTimeout = setTimeout(() => {\n        if (modalState.contentScrolled) {\n          modalState.contentScrolled = false;\n        }\n      }, 250);\n    }\n  };\n\n  waitTransitionFinish(modalState: ModalsStateEntry | undefined, eventHandler: () => void) {\n    const el = modalState ? modalState.innerElement : null;\n    if (el) {\n      el.addEventListener('transitionend', eventHandler, { once: true });\n    } else {\n      setTimeout(eventHandler, this.timeout);\n    }\n  }\n\n  /**\n   * Анимирует сдвиг модалки\n   *\n   * @param {ModalsStateEntry} modalState\n   * @param {number} percent Процент сдвига: 0 – полностью открыта, 100 – полностью закрыта\n   */\n  animateTranslate(modalState: ModalsStateEntry, percent: number | undefined) {\n    const frameId = `animateTranslateFrame${modalState.id}`;\n\n    cancelAnimationFrame(this.frameIds[frameId]);\n\n    this.frameIds[frameId] = requestAnimationFrame(() => {\n      if (!modalState.innerElement) {\n        return;\n      }\n      modalState.innerElement.style.transform = `translate3d(0, ${percent}%, 0)`;\n    });\n  }\n\n  /* Устанавливает прозрачность для полупрозрачной подложки */\n  setMaskOpacity(modalState: ModalsStateEntry, forceOpacity: number | null = null) {\n    if (forceOpacity === null && this.props.history?.[0] !== modalState.id) {\n      return;\n    }\n    if (this.maskAnimationFrame) {\n      cancelAnimationFrame(this.maskAnimationFrame);\n    }\n    this.maskAnimationFrame = requestAnimationFrame(() => {\n      if (this.maskElementRef.current) {\n        const { translateY = 0, translateYCurrent = 0 } = modalState;\n\n        const opacity =\n          forceOpacity === null\n            ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0\n            : forceOpacity;\n        this.maskElementRef.current.style.opacity = clamp(opacity, 0, 100).toString();\n        this.maskElementRef.current.style.transitionDelay =\n          opacity && this.props.delayEnter ? `${this.timeout}ms` : '';\n      }\n    });\n  }\n\n  render() {\n    const { activeModal, exitingModal, enteringModal, modalOverlayTestId } = this.props;\n    const { touchDown, dragging } = this.state;\n\n    if (!activeModal && !exitingModal) {\n      return null;\n    }\n\n    return (\n      <TouchRootContext.Provider value={true}>\n        <ModalRootContext.Provider value={this.modalRootContext}>\n          <Touch\n            className={classNames(\n              styles['ModalRoot'],\n              this.props.configProvider?.hasCustomPanelHeaderAfter &&\n                styles['ModalRoot--hasCustomPanelHeaderAfterSlot'],\n              touchDown &&\n                classNames(styles['ModalRoot--touched'], 'vkuiInternalModalRoot--touched'),\n              !!(enteringModal || exitingModal) &&\n                classNames(styles['ModalRoot--switching'], 'vkuiInternalModalRoot--switching'),\n            )}\n            onMove={this.onTouchMove}\n            onEnd={this.onTouchEnd}\n            onScroll={this.onScroll}\n          >\n            <div\n              data-testid={modalOverlayTestId}\n              className={styles['ModalRoot__mask']}\n              onClick={this.props.onExit}\n              ref={this.maskElementRef}\n            />\n            <div className={styles['ModalRoot__viewport']} ref={this.viewportRef}>\n              {this.getModals().map((Modal) => {\n                const modalId = getNavId(Modal.props, warn);\n                const _modalState = this.props.getModalState(modalId);\n                if ((modalId !== activeModal && modalId !== exitingModal) || !_modalState) {\n                  return null;\n                }\n                const modalState = { ..._modalState };\n\n                const isPage = modalState.type === 'page';\n                const key = `modal-${modalId}`;\n\n                return (\n                  <FocusTrap\n                    key={key}\n                    onClose={this.props.onExit}\n                    timeout={this.timeout}\n                    className={classNames(\n                      styles['ModalRoot__modal'],\n\n                      dragging && 'vkuiInternalModalRoot__modal--dragging',\n\n                      isPage && modalState.expandable && 'vkuiInternalModalRoot__modal--expandable',\n                      isPage && modalState.collapsed && 'vkuiInternalModalRoot__modal--collapsed',\n                    )}\n                    autoFocus={false}\n                    restoreFocus={false}\n                  >\n                    {Modal}\n                  </FocusTrap>\n                );\n              })}\n            </div>\n          </Touch>\n        </ModalRootContext.Provider>\n      </TouchRootContext.Provider>\n    );\n  }\n}\n\nexport const ModalRootTouch: React.FC<ModalRootWithDOMProps> = withContext(\n  withPlatform(\n    withDOM<ModalRootWithDOMProps>(withModalManager(initModal)(ModalRootTouchComponent)),\n  ),\n  ConfigProviderContext,\n  'configProvider',\n);\n\n/**\n * Инициализирует модалку перед анимацией открытия\n */\nfunction initModal(modalState: ModalsStateEntry) {\n  switch (modalState.type) {\n    case 'page':\n      modalState.settlingHeight = modalState.settlingHeight || MODAL_PAGE_DEFAULT_PERCENT_HEIGHT;\n      return initPageModal(modalState);\n    case 'card':\n      return initCardModal(modalState);\n    default:\n      process.env.NODE_ENV === 'development' &&\n        warn(`initActiveModal: modalState.type=\"${modalState.type}\" не поддерживается`, 'error');\n  }\n}\n\nfunction initPageModal(modalState: ModalsStateEntry) {\n  const { contentElement, bottomInset } = modalState;\n  const contentElementHeight = calculateModalContentHeight(\n    contentElement?.firstElementChild as HTMLElement,\n    modalState.expandable,\n  );\n  const bottomInsetHeight = bottomInset?.offsetHeight || 0;\n  const contentHeight = contentElementHeight + bottomInsetHeight;\n  let prevTranslateY = modalState.translateY;\n  let prevExpandable = modalState.expandable;\n\n  modalState.expandable =\n    contentHeight > (contentElement?.clientHeight ?? 0) || modalState.settlingHeight === 100;\n\n  let collapsed = false;\n  let expanded = false;\n  let translateYFrom;\n  let translateY;\n  let expandedRange: TranslateRange;\n  let collapsedRange: TranslateRange | undefined;\n  let hiddenRange: TranslateRange;\n\n  const hasCollapsedState = Boolean(modalState.expandable && modalState.settlingHeight !== 100);\n  if (modalState.expandable) {\n    translateYFrom = 100 - (modalState.settlingHeight ?? 0);\n\n    const shiftHalf = translateYFrom / 2;\n    const visiblePart = 100 - translateYFrom;\n\n    expandedRange = [0, shiftHalf];\n    collapsedRange = hasCollapsedState ? [shiftHalf, translateYFrom + visiblePart / 4] : undefined;\n    hiddenRange = [translateYFrom + visiblePart / 4, 100];\n\n    collapsed = hasCollapsedState && translateYFrom > 0;\n    expanded = translateYFrom <= 0;\n    translateY = translateYFrom;\n  } else {\n    const headerHeight = modalState.headerElement?.offsetHeight ?? 0;\n    const height = contentHeight + headerHeight;\n\n    translateYFrom =\n      100 - (height / (modalState.innerElement?.parentElement?.offsetHeight ?? 0)) * 100;\n    translateY = translateYFrom;\n\n    expandedRange = [translateY, translateY + 25];\n    collapsedRange = undefined;\n    hiddenRange = [translateY + 25, translateY + 100];\n  }\n\n  // Свойство expandable может измениться из-за высоты контента, в таком случае на всю высоту не разворачиваем\n  const shouldExpand = prevExpandable && modalState.expandable;\n  // Если модалка может открываться на весь экран, и новый сдвиг больше предыдущего, то откроем её на весь экран\n  if ((shouldExpand && translateY > (prevTranslateY ?? 100)) || modalState.settlingHeight === 100) {\n    translateY = 0;\n  }\n\n  // Если модалка уже раскрыта обновляем состояния\n  if (translateY === 0) {\n    expanded = true;\n    collapsed = false;\n  }\n\n  modalState.expandedRange = expandedRange;\n  modalState.collapsedRange = collapsedRange;\n  modalState.hiddenRange = hiddenRange;\n  modalState.translateY = translateY;\n  modalState.translateYFrom = translateYFrom;\n  modalState.collapsed = collapsed;\n  modalState.expanded = expanded;\n}\n\nfunction initCardModal(modalState: ModalsStateEntry) {\n  modalState.translateY = 0;\n}\n\nfunction calculateModalContentHeight(\n  element: HTMLElement,\n  isExpandable: ModalsStateEntry['expandable'],\n) {\n  if (!isExpandable) {\n    return element.scrollHeight;\n  }\n\n  /*\n   * В режиме expandable мы назначаем контейнеру контента высоту 100%, что не даёт\n   * получить реальную высоту контента.\n   * Поэтому мы пересчитываем высоту, временно устанавливая height: auto;\n   * */\n  const currentHeightStyle = element.style.height;\n  element.style.height = 'auto';\n\n  const elementHeight = element.scrollHeight;\n  element.style.height = currentHeightStyle;\n\n  return elementHeight;\n}\n"],"names":["React","classNames","clamp","withContext","withPlatform","withDOM","getNavId","rubber","warnOnce","ConfigProviderContext","FocusTrap","Touch","TouchRootContext","ModalRootContext","MODAL_PAGE_DEFAULT_PERCENT_HEIGHT","withModalManager","styles","warn","numberInRange","number","range","rangeTranslate","ModalRootTouchComponent","Component","constructor","props","state","touchDown","dragging","modalOpenedLog","maskElementRef","createRef","modalRootContext","updateModalHeight","registerModal","id","data","Object","assign","getModalState","onClose","onExit","isInsideModal","frameIds","viewportRef","maskAnimationFrame","undefined","restoreFocusTo","timeout","platform","document","window","getModals","Children","toArray","children","componentDidMount","addEventListener","componentWillUnmount","toggleDocumentScrolling","removeEventListener","componentDidUpdate","prevProps","exitingModal","closeModal","enteringModal","enteringState","onEnter","waitTransitionFinish","innerElement","style","transitionDelay","onEntered","delayEnter","animateTranslate","translateY","setMaskOpacity","activeModal","activeElement","focus","enabled","documentElement","classList","remove","add","checkPageContentHeight","modalState","type","modalElement","prevModalState","initPageModal","currentModalState","needAnimate","expandable","translateYFrom","requestAnimationFrame","noFocusToDialog","contains","setState","length","prevState","nextModalState","nextIsPage","prevIsPage","onExited","exitTranslate","isBack","includes","onTouchMove","e","onPageTouchMove","onCardTouchMove","event","shiftY","originalEvent","target","isY","current","preventDefault","stopPropagation","contentScrolled","collapsed","expanded","touchStartContentScrollTop","contentElement","scrollTop","touchMovePositive","headerElement","shiftYPercent","innerHeight","shiftYCurrent","touchShiftYPercent","translateYCurrent","offsetHeight","Math","max","onTouchEnd","onPageTouchEnd","onCardTouchEnd","startY","setStateCallback","shiftYEndPercent","expectTranslateY","duration","settlingHeight","expandedRange","collapsedRange","hiddenRange","preventClose","hidden","onScroll","contentScrollStopTimeout","clearTimeout","setTimeout","eventHandler","el","once","percent","frameId","cancelAnimationFrame","transform","forceOpacity","history","opacity","toString","render","modalOverlayTestId","Provider","value","className","configProvider","hasCustomPanelHeaderAfter","onMove","onEnd","div","data-testid","onClick","ref","map","Modal","modalId","_modalState","isPage","key","autoFocus","restoreFocus","ModalRootTouch","initModal","initCardModal","process","env","NODE_ENV","bottomInset","contentElementHeight","calculateModalContentHeight","firstElementChild","bottomInsetHeight","contentHeight","prevTranslateY","prevExpandable","clientHeight","hasCollapsedState","Boolean","shiftHalf","visiblePart","headerHeight","height","parentElement","shouldExpand","element","isExpandable","scrollHeight","currentHeightStyle","elementHeight"],"mappings":"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"}