import type { ChipOption, ChipOptionValue, NavigateTo } from './types';
/**
 * @private
 */
export declare const isValueLikeChipOptionObject: <O extends ChipOption>(v: O | ChipOptionValue) => v is O;
/**
 * @private
 */
export declare const isInputValueEmpty: (input: HTMLInputElement | null) => boolean;
/**
 * @private
 */
export declare const getChipOptionIndexByValueProp: <O extends ChipOption>(optionProp: O | ChipOptionValue, valueProp: O[]) => number;
/**
 * @private
 */
export declare const getChipOptionIndexByHTMLElement: (el: HTMLElement | null) => number;
/**
 * @private
 */
export declare const getChipOptionValueByHTMLElement: (el: HTMLElement | null) => string | -1;
/**
 * @private
 */
export declare const getNextChipOptionIndexByNavigateToProp: (currentIndex: number, navigateTo: NavigateTo, length: number) => number;
//# sourceMappingURL=helpers.d.ts.map