import * as React from 'react';
import type { HasComponent, HTMLAttributesWithRootRef } from '../../types';
export interface PlaceholderContainerProps extends HTMLAttributesWithRootRef<HTMLDivElement> {
    /**
     * Растягивает плейсхолдер на весь экран, но в таком случае на экране должен быть только плейсхолдер
     */
    stretched?: boolean;
    /**
     * Убирает отступы у компонента
     */
    noPadding?: boolean;
}
declare const PlaceholderContainer: ({ stretched, noPadding, ...restProps }: PlaceholderContainerProps) => React.ReactNode;
export type PlaceholderIconProps = HTMLAttributesWithRootRef<HTMLDivElement>;
declare const PlaceholderIcon: (props: PlaceholderIconProps) => React.ReactNode;
export type PlaceholderHeaderProps = HTMLAttributesWithRootRef<HTMLElement> & HasComponent;
declare const PlaceholderHeader: ({ className, ...restProps }: PlaceholderHeaderProps) => React.ReactNode;
export type PlaceholderTextProps = HTMLAttributesWithRootRef<HTMLElement> & HasComponent;
declare const PlaceholderText: ({ className, ...restProps }: PlaceholderTextProps) => React.ReactNode;
export type PlaceholderActionsProps = HTMLAttributesWithRootRef<HTMLDivElement>;
declare const PlaceholderActions: (props: PlaceholderActionsProps) => React.ReactNode;
export interface PlaceholderProps extends PlaceholderContainerProps {
    /**
     * Иконка
     */
    icon?: React.ReactNode;
    /**
     * Заголовок плейсхолдера
     */
    header?: React.ReactNode;
    /**
     * Кнопка действия
     */
    action?: React.ReactNode;
}
/**
 * @see https://vkcom.github.io/VKUI/#/Placeholder
 */
export declare const Placeholder: React.FC<PlaceholderProps> & {
    Container: typeof PlaceholderContainer;
    Icon: typeof PlaceholderIcon;
    Header: typeof PlaceholderHeader;
    Text: typeof PlaceholderText;
    Actions: typeof PlaceholderActions;
};
export {};
//# sourceMappingURL=Placeholder.d.ts.map