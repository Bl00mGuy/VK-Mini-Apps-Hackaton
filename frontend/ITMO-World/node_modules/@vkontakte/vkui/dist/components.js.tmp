/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ 400:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var __webpack_unused_export__;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
var aa=__webpack_require__(41),ca=__webpack_require__(967);function p(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+"Capture",b)}
function ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}
var ia=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,la=
{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
function qa(a,b,c,d){if(null===b||"undefined"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});
["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});
["checked","multiple","muted","selected"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});["capture","download"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});["cols","rows","size","span"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});["rowSpan","start"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(ra,
sa);z[b]=new v(b,1,!1,a,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});
z.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});
function ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}
var ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for("react.element"),wa=Symbol.for("react.portal"),ya=Symbol.for("react.fragment"),za=Symbol.for("react.strict_mode"),Aa=Symbol.for("react.profiler"),Ba=Symbol.for("react.provider"),Ca=Symbol.for("react.context"),Da=Symbol.for("react.forward_ref"),Ea=Symbol.for("react.suspense"),Fa=Symbol.for("react.suspense_list"),Ga=Symbol.for("react.memo"),Ha=Symbol.for("react.lazy");Symbol.for("react.scope");Symbol.for("react.debug_trace_mode");
var Ia=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden");Symbol.for("react.cache");Symbol.for("react.tracing_marker");var Ja=Symbol.iterator;function Ka(a){if(null===a||"object"!==typeof a)return null;a=Ja&&a[Ja]||a["@@iterator"];return"function"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\n( *(at )?)/);La=b&&b[1]||""}return"\n"+La+a}var Na=!1;
function Oa(a,b){if(!a||Na)return"";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,"props",{set:function(){throw Error();}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&"string"===typeof l.stack){for(var e=l.stack.split("\n"),
f=d.stack.split("\n"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k="\n"+e[g].replace(" at new "," at ");a.displayName&&k.includes("<anonymous>")&&(k=k.replace("<anonymous>",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:"")?Ma(a):""}
function Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma("Lazy");case 13:return Ma("Suspense");case 19:return Ma("SuspenseList");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return""}}
function Qa(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ya:return"Fragment";case wa:return"Portal";case Aa:return"Profiler";case za:return"StrictMode";case Ea:return"Suspense";case Fa:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||"Context")+".Consumer";case Ba:return(a._context.displayName||"Context")+".Provider";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||
b.name||"",a=""!==a?"ForwardRef("+a+")":"ForwardRef");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||"Memo";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}
function Ra(a){var b=a.type;switch(a.tag){case 24:return"Cache";case 9:return(b.displayName||"Context")+".Consumer";case 10:return(b._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return a=b.render,a=a.displayName||a.name||"",b.displayName||(""!==a?"ForwardRef("+a+")":"ForwardRef");case 7:return"Fragment";case 5:return b;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Qa(b);case 8:return b===za?"StrictMode":"Mode";case 22:return"Offscreen";
case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof b)return b.displayName||b.name||null;if("string"===typeof b)return b}return null}function Sa(a){switch(typeof a){case "boolean":case "number":case "string":case "undefined":return a;case "object":return a;default:return""}}
function Ta(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function Ua(a){var b=Ta(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
null;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=Ta(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}
function Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,"checked",b,!1)}
function bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?cb(a,b.type,c):b.hasOwnProperty("defaultValue")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
function db(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}
function cb(a,b,c){if("number"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}var eb=Array.isArray;
function fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
function gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:Sa(c)}}
function ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}
function lb(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?kb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var mb,nb=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if("http://www.w3.org/2000/svg"!==a.namespaceURI||"innerHTML"in a)a.innerHTML=b;else{mb=mb||document.createElement("div");mb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
function ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}
var pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,
zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=["Webkit","ms","Moz","O"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(""+b).trim():b+"px"}
function sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=rb(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if("object"!==typeof b.dangerouslySetInnerHTML||!("__html"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(p(62));}}
function vb(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;
function Bb(a){if(a=Cb(a)){if("function"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}
function Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==
typeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,"passive",{get:function(){Lb=!0}});window.addEventListener("test",Mb,Mb);window.removeEventListener("test",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}
function Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}
function Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===
c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}
var ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&"function"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}
var oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;
function tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;
default:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}
function vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}
function wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}
function Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}
function Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function Sc(a,b){switch(a){case "focusin":case "focusout":Lc=null;break;case "dragenter":case "dragleave":Mc=null;break;case "mouseover":case "mouseout":Nc=null;break;case "pointerover":case "pointerout":Oc.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":Pc.delete(b.pointerId)}}
function Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}
function Uc(a,b,c,d,e){switch(b){case "focusin":return Lc=Tc(Lc,a,b,c,d,e),!0;case "dragenter":return Mc=Tc(Mc,a,b,c,d,e),!0;case "mouseover":return Nc=Tc(Nc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}
function Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}
function Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}
function ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}
function bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;
function ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}
function fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;
function Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}
function jd(a){switch(a){case "cancel":case "click":case "close":case "contextmenu":case "copy":case "cut":case "auxclick":case "dblclick":case "dragend":case "dragstart":case "drop":case "focusin":case "focusout":case "input":case "invalid":case "keydown":case "keypress":case "keyup":case "mousedown":case "mouseup":case "paste":case "pause":case "play":case "pointercancel":case "pointerdown":case "pointerup":case "ratechange":case "reset":case "resize":case "seeked":case "submit":case "touchcancel":case "touchend":case "touchstart":case "volumechange":case "change":case "selectionchange":case "textInput":case "compositionstart":case "compositionend":case "compositionupdate":case "beforeblur":case "afterblur":case "beforeinput":case "blur":case "fullscreenchange":case "focus":case "hashchange":case "popstate":case "select":case "selectstart":return 1;case "drag":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "mousemove":case "mouseout":case "mouseover":case "pointermove":case "pointerout":case "pointerover":case "scroll":case "toggle":case "touchmove":case "wheel":case "mouseenter":case "mouseleave":case "pointerenter":case "pointerleave":return 4;
case "message":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e="value"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}
function od(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}
function rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&
(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}
var sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if("movementX"in
a)return a.movementX;a!==yd&&(yd&&"mousemove"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return"movementY"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:"Escape",
Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",
119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}
var Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=od(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?Nd[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return"keypress"===a.type?od(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===
a.type?od(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},
deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&"CompositionEvent"in window,be=null;ia&&"documentMode"in document&&(be=document.documentMode);var ce=ia&&"TextEvent"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;
function ge(a,b){switch(a){case "keyup":return-1!==$d.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "focusout":return!0;default:return!1}}function he(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case "compositionend":return he(b);case "keypress":if(32!==b.which)return null;fe=!0;return ee;case "textInput":return a=b.data,a===ee&&fe?null:a;default:return null}}
function ke(a,b){if(ie)return"compositionend"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return de&&"ko"!==b.locale?null:b.data;default:return null}}
var le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!le[a.type]:"textarea"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,"onChange");0<b.length&&(c=new td("onChange","change",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}
function ve(a,b){if("change"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye="oninput"in document;if(!ye){var ze=document.createElement("div");ze.setAttribute("oninput","return;");ye="function"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent("onpropertychange",Be),qe=pe=null)}function Be(a){if("value"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}
function Ce(a,b,c){"focusin"===a?(Ae(),pe=b,qe=c,pe.attachEvent("onpropertychange",Be)):"focusout"===a&&Ae()}function De(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return te(qe)}function Ee(a,b){if("click"===a)return te(b)}function Fe(a,b){if("input"===a||"change"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He="function"===typeof Object.is?Object.is:Ge;
function Ie(a,b){if(He(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
function Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}
function Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}
function Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),"selectionStart"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,
d);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});"function"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}
var Pe=ia&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;
function Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,"selectionStart"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,"onSelect"),0<d.length&&(b=new td("onSelect","select",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}
function Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var We={animationend:Ve("Animation","AnimationEnd"),animationiteration:Ve("Animation","AnimationIteration"),animationstart:Ve("Animation","AnimationStart"),transitionend:Ve("Transition","TransitionEnd")},Xe={},Ye={};
ia&&(Ye=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze("animationend"),af=Ze("animationiteration"),bf=Ze("animationstart"),cf=Ze("transitionend"),df=new Map,ef="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,"on"+kf)}ff($e,"onAnimationEnd");ff(af,"onAnimationIteration");ff(bf,"onAnimationStart");ff("dblclick","onDoubleClick");ff("focusin","onFocus");ff("focusout","onBlur");ff(cf,"onTransitionEnd");ha("onMouseEnter",["mouseout","mouseover"]);ha("onMouseLeave",["mouseout","mouseover"]);ha("onPointerEnter",["pointerout","pointerover"]);
ha("onPointerLeave",["pointerout","pointerover"]);fa("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));fa("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));fa("onBeforeInput",["compositionend","keypress","textInput","paste"]);fa("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var lf="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),mf=new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
function nf(a,b,c){var d=a.type||"unknown-event";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}
function se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}
function D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+"__bubble";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf="_reactListening"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){"selectionchange"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf("selectionchange",!1,b))}}
function pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||"touchstart"!==b&&"touchmove"!==b&&"wheel"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}
function hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];
a:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case "keypress":if(0===od(c))break a;case "keydown":case "keyup":k=Rd;break;case "focusin":n="focus";k=Fd;break;case "focusout":n="blur";k=Fd;break;case "beforeblur":case "afterblur":k=Fd;break;case "click":if(2===c.button)break a;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":k=Bd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":k=
Dd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case "scroll":k=vd;break;case "wheel":k=Zd;break;case "copy":case "cut":case "paste":k=Jd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":k=Td}var t=0!==(b&4),J=!t&&"scroll"===a,x=t?null!==h?h+"Capture":null:h;t=[];for(var w=d,u;null!==
w;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h="mouseover"===a||"pointerover"===a;k="mouseout"===a||"pointerout"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==
n&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F="onMouseLeave";x="onMouseEnter";w="mouse";if("pointerout"===a||"pointerover"===a)t=Td,F="onPointerLeave",x="onPointerEnter",w="pointer";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+"leave",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+"enter",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=
vf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if("select"===k||"input"===k&&"file"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&"input"===k.toLowerCase()&&("checkbox"===h.type||"radio"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);"focusout"===a&&(xa=h._wrapperState)&&
xa.controlled&&"number"===h.type&&cb(h,"number",h.value)}xa=d?ue(d):window;switch(a){case "focusin":if(me(xa)||"true"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case "focusout":Se=Re=Qe=null;break;case "mousedown":Te=!0;break;case "contextmenu":case "mouseup":case "dragend":Te=!1;Ue(g,c,e);break;case "selectionchange":if(Pe)break;case "keydown":case "keyup":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case "compositionstart":var ba="onCompositionStart";break b;case "compositionend":ba="onCompositionEnd";
break b;case "compositionupdate":ba="onCompositionUpdate";break b}ba=void 0}else ie?ge(a,c)&&(ba="onCompositionEnd"):"keydown"===a&&229===c.keyCode&&(ba="onCompositionStart");ba&&(de&&"ko"!==c.locale&&(ie||"onCompositionStart"!==ba?"onCompositionEnd"===ba&&ie&&($a=nd()):(kd=e,ld="value"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,"onBeforeInput"),
0<d.length&&(e=new Ld("onBeforeInput","beforeinput",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+"Capture",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}
function wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\r\n?/g,yf=/\u0000|\uFFFD/g;function zf(a){return("string"===typeof a?a:""+a).replace(xf,"\n").replace(yf,"")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}
var Cf=null,Df=null;function Ef(a,b){return"textarea"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}
var Ff="function"===typeof setTimeout?setTimeout:void 0,Gf="function"===typeof clearTimeout?clearTimeout:void 0,Hf="function"===typeof Promise?Promise:void 0,Jf="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}
function Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,"/$"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else"$"!==c&&"$?"!==c&&"$!"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if("$"===b||"$!"===b||"$?"===b)break;if("/$"===b)return null}}return a}
function Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if("$"===c||"$!"===c||"$?"===c){if(0===b)return a;b--}else"/$"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of="__reactFiber$"+Nf,Pf="__reactProps$"+Nf,uf="__reactContainer$"+Nf,of="__reactEvents$"+Nf,Qf="__reactListeners$"+Nf,Rf="__reactHandles$"+Nf;
function Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}
function E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}
function Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||"Unknown",e));return A({},c,d)}
function cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}
function jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg="";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}
function ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;
function Ag(a,b){var c=Bg(5,null,null,0);c.elementType="DELETED";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}
function Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=
null,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}
function Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b="head"!==b&&"body"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if("/$"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else"$"!==c&&"$!"!==c&&"$?"!==c||b++}a=a.nextSibling}yg=
null}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;
function Lg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if("string"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}
function Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,"[object Object]"===a?"object with keys {"+Object.keys(b).join(", ")+"}":a));}function Ng(a){var b=a._init;return b(a._payload)}
function Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&
null===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||"object"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||
b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if("string"===typeof b&&""!==b||"number"===typeof b)return b=Qg(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),
c.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c&&""!==c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,
b,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if("string"===typeof d&&""!==d||"number"===typeof d)return a=a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}
function n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===
x.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if("function"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,
m),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){"object"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if("object"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=
f.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||"object"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==
d;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return"string"===typeof f&&""!==f||"number"===typeof f?(f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):
(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}
function ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}
function hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}
function lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}
function nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}
function ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=
b;c.lastBaseUpdate=b}
function qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,
next:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if("function"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r="function"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;
h=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}
function sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if("function"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}
function yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);
function Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||"$?"===c.data||"$!"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];
function Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}
function Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}
function Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}
function Vh(a,b){return"function"===typeof b?b(a):b}
function Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,
eagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}
function Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}
function Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}
function ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}
function hi(a){var b=Th();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}
function bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}
function li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}
function pi(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}
function ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}
function xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}
function ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}
function zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}
var Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,
4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=
Th();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,
f,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=":"+b+"R"+c;c=Kh++;0<c&&(b+="H"+c.toString(32));b+=":"}else c=Lh++,b=":"+b+"r"+c.toString(32)+":";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},
useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===
N?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}
var Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=
yi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}
function Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;"object"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}
function Hi(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}
function Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||(b=e.state,
"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c="",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e="\nError generating stack: "+f.message+"\n"+f.stack}return{value:a,source:b,stack:e,digest:null}}
function Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi="function"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}
function Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);"function"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}
function Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}
function Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}
function Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}
function $i(a,b,c,d,e){if(null===a){var f=c.type;if("function"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}
function bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}
function dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if("hidden"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==
f?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}
function hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q="function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate;q||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||
(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?("function"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===typeof g.componentDidMount&&(b.flags|=4194308)):
("function"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;"object"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m="function"===typeof y||"function"===typeof g.getSnapshotBeforeUpdate)||
"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?("function"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),"function"===typeof g.UNSAFE_componentWillUpdate&&
g.UNSAFE_componentWillUpdate(d,n,k)),"function"===typeof g.componentDidUpdate&&(b.flags|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===
a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}
function jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}
function lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}
function oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:"$!"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:"hidden",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=
g):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:"hidden",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=
b;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:"visible",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}
function qj(a,b){b=pj({mode:"visible",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}
function rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:"visible",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if("$!"===e.data){d=e.nextSibling&&e.nextSibling.dataset;
if(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;
0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if("$?"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}
function wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}
function xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=
null;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case "together":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}
function ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}
function yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&
b.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;
zj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};
Bj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case "input":e=Ya(a,e);d=Ya(a,d);f=[];break;case "select":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case "textarea":e=gb(a,e);d=gb(a,d);f=[];break;default:"function"!==typeof e.onClick&&"function"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if("style"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&
(c||(c={}),c[g]="")}else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if("style"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]="");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,
c)),c=k;else"dangerouslySetInnerHTML"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):"children"===l?"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(l,""+k):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(ea.hasOwnProperty(l)?(null!=k&&"onScroll"===l&&D("scroll",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push("style",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};
function Dj(a,b){if(!I)switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}
function S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}
function Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);
c=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case "dialog":D("cancel",d);D("close",d);break;case "iframe":case "object":case "embed":D("load",d);break;case "video":case "audio":for(e=0;e<lf.length;e++)D(lf[e],d);break;case "source":D("error",d);break;case "img":case "image":case "link":D("error",
d);D("load",d);break;case "details":D("toggle",d);break;case "input":Za(d,f);D("invalid",d);break;case "select":d._wrapperState={wasMultiple:!!f.multiple};D("invalid",d);break;case "textarea":hb(d,f),D("invalid",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];"children"===g?"string"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=["children",h]):"number"===typeof h&&d.textContent!==""+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,
h,a),e=["children",""+h]):ea.hasOwnProperty(g)&&null!=h&&"onScroll"===g&&D("scroll",d)}switch(c){case "input":Va(d);db(d,f,!0);break;case "textarea":Va(d);jb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;"http://www.w3.org/1999/xhtml"===a&&(a=kb(c));"http://www.w3.org/1999/xhtml"===a?"script"===c?(a=g.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):
"string"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),"select"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case "dialog":D("cancel",a);D("close",a);e=d;break;case "iframe":case "object":case "embed":D("load",a);e=d;break;case "video":case "audio":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case "source":D("error",a);e=d;break;case "img":case "image":case "link":D("error",
a);D("load",a);e=d;break;case "details":D("toggle",a);e=d;break;case "input":Za(a,d);e=Ya(a,d);D("invalid",a);break;case "option":e=d;break;case "select":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D("invalid",a);break;case "textarea":hb(a,d);e=gb(a,d);D("invalid",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];"style"===f?sb(a,k):"dangerouslySetInnerHTML"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):"children"===f?"string"===typeof k?("textarea"!==
c||""!==k)&&ob(a,k):"number"===typeof k&&ob(a,""+k):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(ea.hasOwnProperty(f)?null!=k&&"onScroll"===f&&D("scroll",a):null!=k&&ta(a,f,k,g))}switch(c){case "input":Va(a);db(a,d,!1);break;case "textarea":Va(a);jb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+Sa(d.value));break;case "select":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,
!0);break;default:"function"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case "button":case "input":case "select":case "textarea":d=!!d.autoFocus;break a;case "img":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=
xg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===
a){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),
Aj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,
g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=
a.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&"hidden"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=
b,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}
function Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),
null;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj="function"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if("function"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;
function Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if("selectionStart"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=
q.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;
case 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent="":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}
function Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}"function"===typeof b?b(a):b.current=a}}
function Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}
function Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}
function Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}
function Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}
function Zj(a,b,c){if(lc&&"function"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;
Yj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,"function"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==
c.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}
function ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}
function dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,"")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;
a.updateQueue=null;if(null!==k)try{"input"===h&&"radio"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];"style"===m?sb(e,q):"dangerouslySetInnerHTML"===m?nb(e,q):"children"===m?ob(e,q):ta(e,m,q,l)}switch(h){case "input":bb(e,f);break;case "textarea":ib(e,f);break;case "select":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,
f.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:"",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||
null!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if("function"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=
b.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,"function"===typeof f.setProperty?f.setProperty("display","none","important"):f.display="none"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty("display")?k.display:null,h.style.display=
rb("display",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?"":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,
a),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,""),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}
function ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}
function kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=
b.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case "button":case "input":case "select":case "textarea":k.autoFocus&&c.focus();break;case "img":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;
default:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}
function jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if("function"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}
var lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}
function yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}
function Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}
function Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);
else{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===
d)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}
function Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}
function Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}
function Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}
function Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}
function Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=
0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}
function Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&"object"===typeof k&&"function"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,
m.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;
b&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&("function"===typeof w.getDerivedStateFromError||null!==u&&"function"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}
function tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}
function Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}
function Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;
var g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}
function Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===
l){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==
u)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&"function"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}
function W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if("function"===typeof b.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}
function Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}
function bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;
Vk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;"object"===typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=
null,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,
d,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=
f,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),
gj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;
g=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,
c,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),
b.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}
function $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}
function Zk(a){if("function"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}
function Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};
c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}
function Rg(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)aj(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;
break a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,""));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}
function Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
function al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=
null}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}
function dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}
function el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}
function gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl="function"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}
ml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}
ml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function pl(){}
function ql(a,b,c,d,e){if(e){if("function"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,"",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if("function"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,"",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}
function rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if("function"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};
Fc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};
yb=function(a,b,c){switch(b){case "input":bb(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case "textarea":ib(a,c);break;case "select":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;
var sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"};
var ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||
jl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}__webpack_unused_export__=sl;
__webpack_unused_export__=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};__webpack_unused_export__=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d="",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};
__webpack_unused_export__=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if("function"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(",");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};__webpack_unused_export__=function(a){return Rk(a)};__webpack_unused_export__=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};
__webpack_unused_export__=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f="",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,
e);return new ml(b)};__webpack_unused_export__=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};__webpack_unused_export__=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};__webpack_unused_export__=Qk;
__webpack_unused_export__=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};__webpack_unused_export__="18.3.1-next-f1338f8080-20240426";


/***/ }),

/***/ 144:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (false) {}
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (true) {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  /* unused reexport */ __webpack_require__(400);
} else {}


/***/ }),

/***/ 304:
/***/ ((__unused_webpack_module, exports) => {

/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l=Symbol.for("react.element"),n=Symbol.for("react.portal"),p=Symbol.for("react.fragment"),q=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),t=Symbol.for("react.provider"),u=Symbol.for("react.context"),v=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),z=Symbol.iterator;function A(a){if(null===a||"object"!==typeof a)return null;a=z&&a[z]||a["@@iterator"];return"function"===typeof a?a:null}
var B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};
E.prototype.setState=function(a,b){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,a,b,"setState")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;
H.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};
function M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=""+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}
function N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return"object"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\/+/g;function Q(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(""+a.key):b.toString(36)}
function R(a,b,e,d,c){var k=typeof a;if("undefined"===k||"boolean"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case "string":case "number":h=!0;break;case "object":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=""===d?"."+Q(h,0):d,I(c)?(e="",null!=a&&(e=a.replace(P,"$&/")+"/"),R(c,b,e,"",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?"":(""+c.key).replace(P,"$&/")+"/")+a)),b.push(c)),1;h=0;d=""===d?".":d+":";if(I(a))for(var g=0;g<a.length;g++){k=
a[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),"function"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if("object"===k)throw b=String(a),Error("Objects are not valid as a React child (found: "+("[object Object]"===b?"object with keys {"+Object.keys(a).join(", ")+"}":b)+"). If you meant to render a collection of children, use an array instead.");return h}
function S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,"","",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}
var U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error("act(...) is not supported in production builds of React.");}
exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error("React.Children.only expected to receive a single React element child.");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;
exports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+a+".");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=""+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);
for(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};
exports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};
exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};
exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version="18.3.1";


/***/ }),

/***/ 41:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



if (true) {
  module.exports = __webpack_require__(304);
} else {}


/***/ }),

/***/ 568:
/***/ ((__unused_webpack_module, exports) => {

/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}
function g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D="function"===typeof setTimeout?setTimeout:null,E="function"===typeof clearTimeout?clearTimeout:null,F="undefined"!==typeof setImmediate?setImmediate:null;
"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}
function J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if("function"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;
function M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if("function"===typeof F)S=function(){F(R)};else if("undefined"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}
exports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};
exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};
exports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};
exports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();"object"===typeof c&&null!==c?(c=c.delay,c="number"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};
exports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};


/***/ }),

/***/ 967:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



if (true) {
  module.exports = __webpack_require__(568);
} else {}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};

// UNUSED EXPORTS: Accordion, ActionSheet, ActionSheetDefaultIosCloseItem, ActionSheetItem, AdaptiveIconRenderer, AdaptivityProvider, Alert, AppRoot, Appearance, AppearanceProvider, AspectRatio, Avatar, Badge, Banner, Button, ButtonGroup, Calendar, CalendarRange, Caption, Card, CardGrid, CardScroll, Cell, CellButton, Checkbox, Chip, ChipsInput, ChipsSelect, ConfigProvider, ConfigProviderContext, ContentBadge, ContentCard, Counter, CustomScrollView, CustomSelect, CustomSelectOption, DateInput, DatePicker, DateRangeInput, DisplayTitle, Div, DropZone, EllipsisText, Epic, File, FixedLayout, Flex, Footer, Footnote, FormField, FormItem, FormLayoutGroup, FormStatus, Gallery, Gradient, GridAvatar, Group, Header, Headline, HorizontalCell, HorizontalCellShowMore, HorizontalScroll, IconButton, Image, ImageBase, ImageBaseContext, InfoRow, Input, Link, List, LocaleProvider, Mark, MiniInfoCell, ModalCard, ModalCardBase, ModalDismissButton, ModalPage, ModalPageHeader, ModalRoot, ModalRootContext, NativeSelect, OnboardingTooltip, OnboardingTooltipContainer, Pagination, Panel, PanelHeader, PanelHeaderBack, PanelHeaderButton, PanelHeaderClose, PanelHeaderContent, PanelHeaderContext, PanelHeaderEdit, PanelHeaderSubmit, PanelSpinner, Paragraph, Placeholder, Platform, PlatformProvider, PopoutWrapper, Popover, Popper, Progress, PullToRefresh, Radio, RadioGroup, RichCell, Root, SSRWrapper, ScreenSpinner, ScreenSpinnerContext, ScrollArrow, Search, SegmentedControl, Select, SelectMimicry, SelectionControl, Separator, SimpleCell, SimpleGrid, SizeType, Skeleton, Slider, Snackbar, Spacing, Spinner, SplitCol, SplitLayout, Subhead, SubnavigationBar, SubnavigationButton, Switch, Tabbar, TabbarItem, Tabs, TabsItem, Tappable, Text, Textarea, Title, ToolButton, Tooltip, Touch, UnstyledTextField, UsersStack, View, ViewHeight, ViewWidth, VisuallyHidden, WriteBar, WriteBarIcon, animate, calcInitialsAvatarColor, classNames, filterFnForSelect, getBadgeIconSizeByImageBaseSize, getFallbackIconSizeByImageBaseSize, getOverlayIconSizeByImageBaseSize, getViewHeightByViewportHeight, getViewWidthByViewportWidth, platform, removeObjectKeys, unstable_ViewInfinite, useAdaptivity, useAdaptivityConditionalRender, useAdaptivityWithJSMediaQueries, useAppearance, useConfigProvider, useModalRootContext, useNavDirection, useNavId, useNavTransition, useOrientationChange, usePagination, usePlatform, useScrollLock, useTodayDate, withModalRootContext, withPlatform

;// CONCATENATED MODULE: ./src/styles/constants.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/styles/adaptivity.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/styles/dynamicTokens.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/styles/focusVisible.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/styles/animationFades.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/styles/transformOriginByPlacement.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/styles/gaps.module.css
// extracted by mini-css-extract-plugin

// EXTERNAL MODULE: ../../node_modules/react/index.js
var react = __webpack_require__(41);
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/datetime/date.js


var SECONDS_IN_THE_DAY = 86400;
var MILLISECONDS_IN_THE_DAY = SECONDS_IN_THE_DAY * 1000;
/**
 * Проверяет, что переданная дата - вчерашний день
 *
 * @example
 * ```ts
 * import assert from 'node:assert';
 * import { isDateYesterday } from '@vkontakte/vkjs';
 *
 * assert.strictEqual(isDateYesterday(new Date(), false);
 * ```
 */ function isDateYesterday(date) {
    var yesterdayDate = new Date(date.getTime() + MILLISECONDS_IN_THE_DAY);
    return isDateToday(yesterdayDate);
}
/**
 * Проверяет, что переданная дата - завтрашний день
 *
 * @example
 * ```ts
 * import assert from 'node:assert';
 * import { isDateTomorrow } from '@vkontakte/vkjs';
 *
 * assert.strictEqual(isDateTomorrow(new Date(), false);
 * ```
 */ function isDateTomorrow(date) {
    var tomorrowDate = new Date(date.getTime() - MILLISECONDS_IN_THE_DAY);
    return isDateToday(tomorrowDate);
}
/**
 * Возвращает новую дату — начало переданного дня
 *
 * @example
 * ```ts
 * import assert from 'node:assert';
 * import { getBeginningOfDay } from '@vkontakte/vkjs';
 *
 * assert.deepStrictEqual(
 *   getBeginningOfDay(new Date(2024, 0, 1, 12, 34, 56, 789)),
 *   new Date(2024, 0, 1),
 * );
 * ```
 *
 * @param date Дата
 */ function getBeginningOfDay(date) {
    var year = date.getFullYear();
    var month = date.getMonth();
    var day = date.getDate();
    return new Date(year, month, day, 0, 0, 0, 0);
}
/**
 * Возвращает true, если год високосный
 *
 * @example
 * ```ts
 * import assert from 'node:assert';
 * import { isLeapYear } from '@vkontakte/vkjs';
 *
 * assert.strictEqual(isLeapYear(2024), true);
 * assert.strictEqual(isLeapYear(2025), false);
 * ```
 *
 * @param year Год
 */ function isLeapYear(year) {
    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
}
/**
 * Возвращает кол-во дней в месяце (последнее число месяца)
 *
 * @example
 * ```ts
 * import assert from 'node:assert';
 * import { getLastDayOfMonth } from '@vkontakte/vkjs';
 *
 * assert.strictEqual(getLastDayOfMonth(2024, 2), 29);
 * assert.strictEqual(getLastDayOfMonth(2025, 2), 28);
 * ```
 *
 * @param year Год
 * @param month Месяц
 */ function getLastDayOfMonth(year, month) {
    if (+month === 2) {
        return isLeapYear(year) ? 29 : 28;
    } else if (month > 0 && (month < 8 && month % 2 === 0 || month > 7 && month % 2 === 1)) {
        return 30;
    }
    return 31;
}
/**
 * Ближайший понедельник в прошлом относительно date
 *
 * @example
 * ```ts
 * import assert from 'node:assert';
 * import { getStartOfWeek } from '@vkontakte/vkjs';
 *
 * assert.deepStrictEqual(
 *   getStartOfWeek(new Date(2024, 0, 1), 10),
 *   new Date(2024, 11, 31),
 * );
 * ```
 *
 * @param date Дата
 */ function getStartOfWeek(date) {
    var weekDay = date.getDay();
    if (weekDay === 0) {
        return date_addDays(date, -6);
    }
    return date_addDays(date, -weekDay + 1);
}
/**
 * Добавляет дни к дате и возвращает новый объект
 *
 * @example
 * ```ts
 * import assert from 'node:assert';
 * import { addDays } from '@vkontakte/vkjs';
 *
 * assert.deepStrictEqual(
 *   addDays(new Date(2024, 0, 1), 10),
 *   new Date(2024, 0, 11),
 * );
 * ```
 *
 * @param date Дата
 * @param dayCount Количество дней, которые требуется добавить
 */ function date_addDays(date, dayCount) {
    var modified = new Date(date.getTime());
    modified.setDate(modified.getDate() + dayCount);
    return modified;
}
/**
 * Создаёт дату из Unix Timestamp
 *
 * @example
 * ```ts
 * import assert from 'node:assert';
 * import { createDateFromUnixTimestamp } from '@vkontakte/vkjs';
 *
 * assert.deepStrictEqual(
 *   createDateFromUnixTimestamp(1704056400),
 *   new Date(2024, 0, 1),
 * );
 * ```
 *
 * @param timestamp Дата в формате unix timestamp (секунды)
 */ function createDateFromUnixTimestamp(timestamp) {
    return new Date(timestamp * 1000);
}
/**
 * Возвращает Unix Timestamp из даты
 *
 * @example
 * ```ts
 * import assert from 'node:assert';
 * import { getUnixTimestampFromDate } from '@vkontakte/vkjs';
 *
 * assert.strictEqual(
 *   getUnixTimestampFromDate(new Date(2024, 0, 1)),
 *   1704056400,
 * );
 * ```
 *
 * @param date Дата, которую требуется перевести в Unix Timestamp
 */ function getUnixTimestampFromDate(date) {
    return Math.floor(date.getTime() / 1000);
}
/**
 * Возвращает дату в формате YYYY-MM-DD
 *
 * @example
 * ```ts
 * import assert from 'node:assert';
 * import { convertDateToInputFormat } from '@vkontakte/vkjs';
 *
 * assert.strictEqual(
 *   convertDateToInputFormat(new Date(2024, 0, 1)),
 *   "2024-01-01",
 * );
 * ```
 *
 * @param date Дата, которую требуется отформатировать
 */ function convertDateToInputFormat(date) {
    var day = date.getDate();
    var month = date.getMonth() + 1;
    var year = date.getFullYear();
    return [
        year,
        leadingZero(month),
        leadingZero(day)
    ].join('-');
}

//# sourceMappingURL=date.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/datetime/index.js





//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/other/dom.js
var dom_canUseDOM = /*#__PURE__*/ function() {
    return !!(typeof window !== 'undefined' && window.document && window.document.createElement);
}();
var canUseEventListeners = /*#__PURE__*/ (/* unused pure expression or super */ null && (function() {
    return dom_canUseDOM && !!window.addEventListener;
}()));
function onDOMLoaded(callback) {
    if (document.readyState !== 'loading') {
        callback();
    } else {
        document.addEventListener('DOMContentLoaded', callback);
    }
}

//# sourceMappingURL=dom.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/device/IOSDetections.js

var IPHONE_SAFARI_BOTTOM_BAR = 45;
var IPHONE_X_SAFARI_BOTTOM_BAR = 85;
var IPHONE_KEYBOARD_REJECT_OFFSET = 180;
// 44 iPhone, 55 iPad, iPad Pro 69
var IOS_NO_KEYBOARD_ALLOWED_OFFSET = 70;
function detectIOS(ua) {
    if (!ua) {
        ua = dom_canUseDOM ? navigator.userAgent : '';
    }
    ua = ua.toLowerCase();
    var isIPadOS = checkIPadOS(ua);
    var isIPad = isIPadOS || ua.includes('ipad');
    var isIPhone = !isIPad && ua.search(/iphone|ipod/) !== -1;
    var isIOS = isIPhone || isIPad;
    var iosVersion = isIOS && ua.match(/os ([\d_]+) like mac os x/i);
    var iosMajor = 0;
    var iosMinor = 0;
    if (isIPadOS) {
        iosMajor = 13;
        iosMinor = 0;
    } else if (iosVersion) {
        iosVersion = iosVersion[1].split('_');
        iosMajor = +iosVersion[0];
        iosMinor = +iosVersion[1];
    }
    iosVersion = null;
    var isScrollBasedViewport = iosMajor < 13 && !(iosMajor === 11 && iosMinor < 3);
    var isWKWebView = isIOS && checkWKWebView(ua);
    var isIPhoneX = false;
    if (dom_canUseDOM) {
        isIPhoneX = isIOS && screen.width === 375 && screen.height === 812 && window.devicePixelRatio === 3;
    }
    var isIOSChrome = ua.search(/crios/i) !== -1;
    return {
        isIPad: isIPad,
        isIPhone: isIPhone,
        isIOS: isIOS,
        isIPadOS: isIPadOS,
        iosMajor: iosMajor,
        iosMinor: iosMinor,
        isWKWebView: isWKWebView,
        isScrollBasedViewport: isScrollBasedViewport,
        isIPhoneX: isIPhoneX,
        isIOSChrome: isIOSChrome
    };
}
var detect = /*#__PURE__*/ detectIOS();
var isIPad = /*#__PURE__*/ (/* unused pure expression or super */ null && (function() {
    return detect.isIPad;
}()));
var isIPhone = /*#__PURE__*/ (/* unused pure expression or super */ null && (function() {
    return detect.isIPhone;
}()));
var isIOS = /*#__PURE__*/ function() {
    return detect.isIOS;
}();
var isIPadOS = /*#__PURE__*/ function() {
    return detect.isIPadOS;
}();
var iosMajor = /*#__PURE__*/ (/* unused pure expression or super */ null && (function() {
    return detect.iosMajor;
}()));
var iosMinor = /*#__PURE__*/ (/* unused pure expression or super */ null && (function() {
    return detect.iosMinor;
}()));
var isWKWebView = /*#__PURE__*/ (/* unused pure expression or super */ null && (function() {
    return detect.isWKWebView;
}()));
var isScrollBasedViewport = /*#__PURE__*/ (/* unused pure expression or super */ null && (function() {
    return detect.isScrollBasedViewport;
}()));
var isIPhoneX = /*#__PURE__*/ (/* unused pure expression or super */ null && (function() {
    return detect.isIPhoneX;
}()));
var isIOSChrome = /*#__PURE__*/ (/* unused pure expression or super */ null && (function() {
    return detect.isIOSChrome;
}()));
function isLandscapePhone() {
    return Math.abs(window.orientation) === 90 && !isIPad;
}
// Reference:
// https://stackoverflow.com/questions/28795476/detect-if-page-is-loaded-inside-wkwebview-in-javascript/30495399#30495399
function checkWKWebView(ua) {
    if (!dom_canUseDOM) {
        return false;
    }
    var webkit = window.webkit;
    if (webkit && webkit.messageHandlers) {
        return true;
    }
    var lte9 = /constructor/i.test(String(window.HTMLElement));
    var idb = !!window.indexedDB;
    if (ua.includes('safari') && ua.includes('version') && !navigator.standalone) {} else // Safari (WKWebView/Nitro since 6+)
    if (!idb && lte9 || !(window.statusbar && window.statusbar.visible)) {} else // UIWebView
    if (!lte9 || idb) {
        // WKWebView
        return true;
    }
    return false;
}
/**
 * В Safari на iPadOS поле User Agent содержит почти такую же информацию, что и в Safari на MacOS.
 * Из-за чего мы не можем ориентироваться на User Agent.
 *
 * Вместо этого мы пробуем определять есть ли событие 'ontouchend' в объекте document.
 *
 * см. https://developer.apple.com/forums/thread/119186?answerId=705140022#705140022
 */ function checkIPadOS(ua) {
    if (!dom_canUseDOM) {
        return false;
    }
    var isNotIOS = !/ipPad|iPhone|iPod/i.test(ua);
    var isMacOS = /Mac OS/i.test(ua);
    return isNotIOS && isMacOS && 'ontouchend' in document;
}

//# sourceMappingURL=IOSDetections.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/device/InputUtils.js


var InputUtils_detect = /*#__PURE__*/ function() {
    var obj = {
        hasMouse: false,
        hasTouchEvents: false,
        hasHover: false,
        hasTouch: false
    };
    if (!dom_canUseDOM) {
        return obj;
    }
    if (isIOS && !isIPadOS) {
        obj.hasMouse = false;
        obj.hasHover = false;
        obj.hasTouchEvents = true;
        obj.hasTouch = true;
    } else {
        obj.hasTouchEvents = 'ontouchstart' in document;
        obj.hasTouch = obj.hasTouchEvents || 'maxTouchPoints' in navigator && navigator.maxTouchPoints > 0;
        if (obj.hasTouch) {
            var notMobile = !/android|mobile|tablet/i.test(navigator.userAgent);
            obj.hasMouse = typeof window.matchMedia === 'function' && window.matchMedia('(pointer)').matches ? matchMedia('(pointer: fine)').matches : notMobile;
            obj.hasHover = obj.hasMouse && (typeof window.matchMedia === 'function' && window.matchMedia('(hover)').matches ? matchMedia('(hover: hover)').matches : notMobile);
        } else {
            obj.hasMouse = true;
            obj.hasHover = true;
        }
    }
    return obj;
}();
var hasMouse = /*#__PURE__*/ function() {
    return InputUtils_detect.hasMouse;
}();
var hasHover = /*#__PURE__*/ (/* unused pure expression or super */ null && (function() {
    return InputUtils_detect.hasHover;
}()));
var hasTouchEvents = /*#__PURE__*/ (/* unused pure expression or super */ null && (function() {
    return InputUtils_detect.hasTouchEvents;
}()));
var hasTouch = /*#__PURE__*/ (/* unused pure expression or super */ null && (function() {
    return InputUtils_detect.hasTouch;
}()));

//# sourceMappingURL=InputUtils.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/device/index.js




//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ../../node_modules/@swc/helpers/esm/_class_call_check.js
function _class_call_check(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}


;// CONCATENATED MODULE: ../../node_modules/@swc/helpers/esm/_create_class.js
function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;

        if ("value" in descriptor) descriptor.writable = true;

        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _create_class(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);

    return Constructor;
}


;// CONCATENATED MODULE: ../../node_modules/@swc/helpers/esm/_define_property.js
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
    } else obj[key] = value;

    return obj;
}


;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/other/regexp.js
/**
 * Escapes a string so that it can be put into RegExp as a variable
 *
 * @example
 * new RegExp(`foo-${escapeRegExp('(bar)')}`, 'i')
 */ function escapeRegExp(string) {
    if (string) {
        return string.replace(/([.*+?^${}()|[\]\/\\])/g, '\\$1');
    }
    return '';
}

//# sourceMappingURL=regexp.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/internal/replacer.js




var Replacer = /*#__PURE__*/ function() {
    "use strict";
    function Replacer(map) {
        _class_call_check(this, Replacer);
        _define_property(this, "regexp", void 0);
        _define_property(this, "map", void 0);
        this.map = map;
    }
    _create_class(Replacer, [
        {
            key: "build",
            value: function build() {
                if (this.regexp) {
                    return;
                }
                var groups = Object.keys(this.map).map(escapeRegExp).sort(function(a, b) {
                    return b.length - a.length;
                });
                var pattern = "(?:".concat(groups.join('|'), ")");
                this.regexp = new RegExp(pattern, 'g');
            }
        },
        {
            key: "replace",
            value: function replace(string) {
                var _this = this;
                if (!string) {
                    return '';
                }
                this.build();
                return string.replace(this.regexp, function(substring) {
                    return _this.map[substring];
                });
            }
        }
    ]);
    return Replacer;
}();

//# sourceMappingURL=replacer.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/internal/codepoints.js
var codepoints_numericUnicodeMap = {
    0: 65533,
    128: 8364,
    130: 8218,
    131: 402,
    132: 8222,
    133: 8230,
    134: 8224,
    135: 8225,
    136: 710,
    137: 8240,
    138: 352,
    139: 8249,
    140: 338,
    142: 381,
    145: 8216,
    146: 8217,
    147: 8220,
    148: 8221,
    149: 8226,
    150: 8211,
    151: 8212,
    152: 732,
    153: 8482,
    154: 353,
    155: 8250,
    156: 339,
    158: 382,
    159: 376
};
var highSurrogateFrom = 0xd800;
var highSurrogateTo = 0xdbff;
var codepoints_fromCodePoint = /*#__PURE__*/ (/* unused pure expression or super */ null && (function() {
    return String.fromCodePoint || function(astralCodePoint) {
        return String.fromCharCode(Math.floor((astralCodePoint - 0x10000) / 0x400) + 0xd800, (astralCodePoint - 0x10000) % 0x400 + 0xdc00);
    };
}()));
var codePointAtNative = /*#__PURE__*/ (/* unused pure expression or super */ null && (function() {
    return(// eslint-disable-next-line @typescript-eslint/unbound-method
    String.prototype.codePointAt);
}()));
var codepoints_getCodePointAt = /*#__PURE__*/ (/* unused pure expression or super */ null && (function() {
    return codePointAtNative ? function(input, position) {
        return input.codePointAt(position);
    } : function(input, position) {
        return (input.charCodeAt(position) - 0xd800) * 0x400 + input.charCodeAt(position + 1) - 0xdc00 + 0x10000;
    };
}()));

//# sourceMappingURL=codepoints.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/html/entity.js
/**
 * Эти сущности могут быть с `;` и без `;` на конце
 */ var namedEntitiesWithoutSemicolon = {
    AElig: '\u00C6',
    AMP: '\u0026',
    Aacute: '\u00C1',
    Agrave: '\u00C0',
    Aring: '\u00C5',
    Acirc: '\u00C2',
    Atilde: '\u00C3',
    Auml: '\u00C4',
    COPY: '\u00A9',
    Ccedil: '\u00C7',
    ETH: '\u00D0',
    Eacute: '\u00C9',
    Ecirc: '\u00CA',
    Egrave: '\u00C8',
    Euml: '\u00CB',
    GT: '\u003E',
    Iacute: '\u00CD',
    Icirc: '\u00CE',
    Igrave: '\u00CC',
    Iuml: '\u00CF',
    LT: '\u003C',
    Ntilde: '\u00D1',
    Oacute: '\u00D3',
    Ocirc: '\u00D4',
    Ograve: '\u00D2',
    Oslash: '\u00D8',
    Otilde: '\u00D5',
    Ouml: '\u00D6',
    QUOT: '\u0022',
    REG: '\u00AE',
    THORN: '\u00DE',
    Uacute: '\u00DA',
    Ucirc: '\u00DB',
    Ugrave: '\u00D9',
    Uuml: '\u00DC',
    Yacute: '\u00DD',
    aacute: '\u00E1',
    acirc: '\u00E2',
    acute: '\u00B4',
    aelig: '\u00E6',
    agrave: '\u00E0',
    amp: '\u0026',
    aring: '\u00E5',
    atilde: '\u00E3',
    auml: '\u00E4',
    brvbar: '\u00A6',
    ccedil: '\u00E7',
    cedil: '\u00B8',
    cent: '\u00A2',
    copy: '\u00A9',
    curren: '\u00A4',
    deg: '\u00B0',
    divide: '\u00F7',
    eacute: '\u00E9',
    ecirc: '\u00EA',
    egrave: '\u00E8',
    eth: '\u00F0',
    euml: '\u00EB',
    frac12: '\u00BD',
    frac14: '\u00BC',
    frac34: '\u00BE',
    gt: '\u003E',
    iacute: '\u00ED',
    icirc: '\u00EE',
    iexcl: '\u00A1',
    igrave: '\u00EC',
    iquest: '\u00BF',
    iuml: '\u00EF',
    laquo: '\u00AB',
    lt: '\u003C',
    macr: '\u00AF',
    micro: '\u00B5',
    middot: '\u00B7',
    nbsp: '\u00A0',
    not: '\u00AC',
    ntilde: '\u00F1',
    oacute: '\u00F3',
    ocirc: '\u00F4',
    ograve: '\u00F2',
    ordf: '\u00AA',
    ordm: '\u00BA',
    oslash: '\u00F8',
    otilde: '\u00F5',
    ouml: '\u00F6',
    para: '\u00B6',
    plusmn: '\u00B1',
    pound: '\u00A3',
    quot: '\u0022',
    raquo: '\u00BB',
    reg: '\u00AE',
    sect: '\u00A7',
    shy: '\u00AD',
    sup1: '\u00B9',
    sup2: '\u00B2',
    sup3: '\u00B3',
    szlig: '\u00DF',
    thorn: '\u00FE',
    times: '\u00D7',
    uacute: '\u00FA',
    ucirc: '\u00FB',
    ugrave: '\u00F9',
    uml: '\u00A8',
    uuml: '\u00FC',
    yacute: '\u00FD',
    yen: '\u00A5',
    yuml: '\u00FF'
};
var namedEntities = {
    Abreve: '\u0102',
    Acy: '\u0410',
    Afr: '\uD835\uDD04',
    Alpha: '\u0391',
    Amacr: '\u0100',
    And: '\u2A53',
    Aogon: '\u0104',
    Aopf: '\uD835\uDD38',
    ApplyFunction: '\u2061',
    Ascr: '\uD835\uDC9C',
    Assign: '\u2254',
    Backslash: '\u2216',
    Barv: '\u2AE7',
    Barwed: '\u2306',
    Bcy: '\u0411',
    Because: '\u2235',
    Bernoullis: '\u212C',
    Beta: '\u0392',
    Bfr: '\uD835\uDD05',
    Bopf: '\uD835\uDD39',
    Breve: '\u02D8',
    Bscr: '\u212C',
    Bumpeq: '\u224E',
    CHcy: '\u0427',
    Cacute: '\u0106',
    Cap: '\u22D2',
    CapitalDifferentialD: '\u2145',
    Cayleys: '\u212D',
    Ccaron: '\u010C',
    Ccirc: '\u0108',
    Cconint: '\u2230',
    Cdot: '\u010A',
    Cedilla: '\u00B8',
    CenterDot: '\u00B7',
    Cfr: '\u212D',
    Chi: '\u03A7',
    CircleDot: '\u2299',
    CircleMinus: '\u2296',
    CirclePlus: '\u2295',
    CircleTimes: '\u2297',
    ClockwiseContourIntegral: '\u2232',
    CloseCurlyDoubleQuote: '\u201D',
    CloseCurlyQuote: '\u2019',
    Colon: '\u2237',
    Colone: '\u2A74',
    Congruent: '\u2261',
    Conint: '\u222F',
    ContourIntegral: '\u222E',
    Copf: '\u2102',
    Coproduct: '\u2210',
    CounterClockwiseContourIntegral: '\u2233',
    Cross: '\u2A2F',
    Cscr: '\uD835\uDC9E',
    Cup: '\u22D3',
    CupCap: '\u224D',
    DD: '\u2145',
    DDotrahd: '\u2911',
    DJcy: '\u0402',
    DScy: '\u0405',
    DZcy: '\u040F',
    Dagger: '\u2021',
    Darr: '\u21A1',
    Dashv: '\u2AE4',
    Dcaron: '\u010E',
    Dcy: '\u0414',
    Del: '\u2207',
    Delta: '\u0394',
    Dfr: '\uD835\uDD07',
    DiacriticalAcute: '\u00B4',
    DiacriticalDot: '\u02D9',
    DiacriticalDoubleAcute: '\u02DD',
    DiacriticalGrave: '\u0060',
    DiacriticalTilde: '\u02DC',
    Diamond: '\u22C4',
    DifferentialD: '\u2146',
    Dopf: '\uD835\uDD3B',
    Dot: '\u00A8',
    DotDot: '\u20DC',
    DotEqual: '\u2250',
    DoubleContourIntegral: '\u222F',
    DoubleDot: '\u00A8',
    DoubleDownArrow: '\u21D3',
    DoubleLeftArrow: '\u21D0',
    DoubleLeftRightArrow: '\u21D4',
    DoubleLeftTee: '\u2AE4',
    DoubleLongLeftArrow: '\u27F8',
    DoubleLongLeftRightArrow: '\u27FA',
    DoubleLongRightArrow: '\u27F9',
    DoubleRightArrow: '\u21D2',
    DoubleRightTee: '\u22A8',
    DoubleUpArrow: '\u21D1',
    DoubleUpDownArrow: '\u21D5',
    DoubleVerticalBar: '\u2225',
    DownArrow: '\u2193',
    DownArrowBar: '\u2913',
    DownArrowUpArrow: '\u21F5',
    DownBreve: '\u0311',
    DownLeftRightVector: '\u2950',
    DownLeftTeeVector: '\u295E',
    DownLeftVector: '\u21BD',
    DownLeftVectorBar: '\u2956',
    DownRightTeeVector: '\u295F',
    DownRightVector: '\u21C1',
    DownRightVectorBar: '\u2957',
    DownTee: '\u22A4',
    DownTeeArrow: '\u21A7',
    Downarrow: '\u21D3',
    Dscr: '\uD835\uDC9F',
    Dstrok: '\u0110',
    ENG: '\u014A',
    Ecaron: '\u011A',
    Ecy: '\u042D',
    Edot: '\u0116',
    Efr: '\uD835\uDD08',
    Element: '\u2208',
    Emacr: '\u0112',
    EmptySmallSquare: '\u25FB',
    EmptyVerySmallSquare: '\u25AB',
    Eogon: '\u0118',
    Eopf: '\uD835\uDD3C',
    Epsilon: '\u0395',
    Equal: '\u2A75',
    EqualTilde: '\u2242',
    Equilibrium: '\u21CC',
    Escr: '\u2130',
    Esim: '\u2A73',
    Eta: '\u0397',
    Exists: '\u2203',
    ExponentialE: '\u2147',
    Fcy: '\u0424',
    Ffr: '\uD835\uDD09',
    FilledSmallSquare: '\u25FC',
    FilledVerySmallSquare: '\u25AA',
    Fopf: '\uD835\uDD3D',
    ForAll: '\u2200',
    Fouriertrf: '\u2131',
    Fscr: '\u2131',
    GJcy: '\u0403',
    Gamma: '\u0393',
    Gammad: '\u03DC',
    Gbreve: '\u011E',
    Gcedil: '\u0122',
    Gcirc: '\u011C',
    Gcy: '\u0413',
    Gdot: '\u0120',
    Gfr: '\uD835\uDD0A',
    Gg: '\u22D9',
    Gopf: '\uD835\uDD3E',
    GreaterEqual: '\u2265',
    GreaterEqualLess: '\u22DB',
    GreaterFullEqual: '\u2267',
    GreaterGreater: '\u2AA2',
    GreaterLess: '\u2277',
    GreaterSlantEqual: '\u2A7E',
    GreaterTilde: '\u2273',
    Gscr: '\uD835\uDCA2',
    Gt: '\u226B',
    HARDcy: '\u042A',
    Hacek: '\u02C7',
    Hat: '\u005E',
    Hcirc: '\u0124',
    Hfr: '\u210C',
    HilbertSpace: '\u210B',
    Hopf: '\u210D',
    HorizontalLine: '\u2500',
    Hscr: '\u210B',
    Hstrok: '\u0126',
    HumpDownHump: '\u224E',
    HumpEqual: '\u224F',
    IEcy: '\u0415',
    IJlig: '\u0132',
    IOcy: '\u0401',
    Icy: '\u0418',
    Idot: '\u0130',
    Ifr: '\u2111',
    Im: '\u2111',
    Imacr: '\u012A',
    ImaginaryI: '\u2148',
    Implies: '\u21D2',
    Int: '\u222C',
    Integral: '\u222B',
    Intersection: '\u22C2',
    InvisibleComma: '\u2063',
    InvisibleTimes: '\u2062',
    Iogon: '\u012E',
    Iopf: '\uD835\uDD40',
    Iota: '\u0399',
    Iscr: '\u2110',
    Itilde: '\u0128',
    Iukcy: '\u0406',
    Jcirc: '\u0134',
    Jcy: '\u0419',
    Jfr: '\uD835\uDD0D',
    Jopf: '\uD835\uDD41',
    Jscr: '\uD835\uDCA5',
    Jsercy: '\u0408',
    Jukcy: '\u0404',
    KHcy: '\u0425',
    KJcy: '\u040C',
    Kappa: '\u039A',
    Kcedil: '\u0136',
    Kcy: '\u041A',
    Kfr: '\uD835\uDD0E',
    Kopf: '\uD835\uDD42',
    Kscr: '\uD835\uDCA6',
    LJcy: '\u0409',
    Lacute: '\u0139',
    Lambda: '\u039B',
    Lang: '\u27EA',
    Laplacetrf: '\u2112',
    Larr: '\u219E',
    Lcaron: '\u013D',
    Lcedil: '\u013B',
    Lcy: '\u041B',
    LeftAngleBracket: '\u27E8',
    LeftArrow: '\u2190',
    LeftArrowBar: '\u21E4',
    LeftArrowRightArrow: '\u21C6',
    LeftCeiling: '\u2308',
    LeftDoubleBracket: '\u27E6',
    LeftDownTeeVector: '\u2961',
    LeftDownVector: '\u21C3',
    LeftDownVectorBar: '\u2959',
    LeftFloor: '\u230A',
    LeftRightArrow: '\u2194',
    LeftRightVector: '\u294E',
    LeftTee: '\u22A3',
    LeftTeeArrow: '\u21A4',
    LeftTeeVector: '\u295A',
    LeftTriangle: '\u22B2',
    LeftTriangleBar: '\u29CF',
    LeftTriangleEqual: '\u22B4',
    LeftUpDownVector: '\u2951',
    LeftUpTeeVector: '\u2960',
    LeftUpVector: '\u21BF',
    LeftUpVectorBar: '\u2958',
    LeftVector: '\u21BC',
    LeftVectorBar: '\u2952',
    Leftarrow: '\u21D0',
    Leftrightarrow: '\u21D4',
    LessEqualGreater: '\u22DA',
    LessFullEqual: '\u2266',
    LessGreater: '\u2276',
    LessLess: '\u2AA1',
    LessSlantEqual: '\u2A7D',
    LessTilde: '\u2272',
    Lfr: '\uD835\uDD0F',
    Ll: '\u22D8',
    Lleftarrow: '\u21DA',
    Lmidot: '\u013F',
    LongLeftArrow: '\u27F5',
    LongLeftRightArrow: '\u27F7',
    LongRightArrow: '\u27F6',
    Longleftarrow: '\u27F8',
    Longleftrightarrow: '\u27FA',
    Longrightarrow: '\u27F9',
    Lopf: '\uD835\uDD43',
    LowerLeftArrow: '\u2199',
    LowerRightArrow: '\u2198',
    Lscr: '\u2112',
    Lsh: '\u21B0',
    Lstrok: '\u0141',
    Lt: '\u226A',
    Map: '\u2905',
    Mcy: '\u041C',
    MediumSpace: '\u205F',
    Mellintrf: '\u2133',
    Mfr: '\uD835\uDD10',
    MinusPlus: '\u2213',
    Mopf: '\uD835\uDD44',
    Mscr: '\u2133',
    Mu: '\u039C',
    NJcy: '\u040A',
    Nacute: '\u0143',
    Ncaron: '\u0147',
    Ncedil: '\u0145',
    Ncy: '\u041D',
    NegativeMediumSpace: '\u200B',
    NegativeThickSpace: '\u200B',
    NegativeThinSpace: '\u200B',
    NegativeVeryThinSpace: '\u200B',
    NestedGreaterGreater: '\u226B',
    NestedLessLess: '\u226A',
    NewLine: '\u000A',
    Nfr: '\uD835\uDD11',
    NoBreak: '\u2060',
    NonBreakingSpace: '\u00A0',
    Nopf: '\u2115',
    Not: '\u2AEC',
    NotCongruent: '\u2262',
    NotCupCap: '\u226D',
    NotDoubleVerticalBar: '\u2226',
    NotElement: '\u2209',
    NotEqual: '\u2260',
    NotEqualTilde: '\u2242\u0338',
    NotExists: '\u2204',
    NotGreater: '\u226F',
    NotGreaterEqual: '\u2271',
    NotGreaterFullEqual: '\u2267\u0338',
    NotGreaterGreater: '\u226B\u0338',
    NotGreaterLess: '\u2279',
    NotGreaterSlantEqual: '\u2A7E\u0338',
    NotGreaterTilde: '\u2275',
    NotHumpDownHump: '\u224E\u0338',
    NotHumpEqual: '\u224F\u0338',
    NotLeftTriangle: '\u22EA',
    NotLeftTriangleBar: '\u29CF\u0338',
    NotLeftTriangleEqual: '\u22EC',
    NotLess: '\u226E',
    NotLessEqual: '\u2270',
    NotLessGreater: '\u2278',
    NotLessLess: '\u226A\u0338',
    NotLessSlantEqual: '\u2A7D\u0338',
    NotLessTilde: '\u2274',
    NotNestedGreaterGreater: '\u2AA2\u0338',
    NotNestedLessLess: '\u2AA1\u0338',
    NotPrecedes: '\u2280',
    NotPrecedesEqual: '\u2AAF\u0338',
    NotPrecedesSlantEqual: '\u22E0',
    NotReverseElement: '\u220C',
    NotRightTriangle: '\u22EB',
    NotRightTriangleBar: '\u29D0\u0338',
    NotRightTriangleEqual: '\u22ED',
    NotSquareSubset: '\u228F\u0338',
    NotSquareSubsetEqual: '\u22E2',
    NotSquareSuperset: '\u2290\u0338',
    NotSquareSupersetEqual: '\u22E3',
    NotSubset: '\u2282\u20D2',
    NotSubsetEqual: '\u2288',
    NotSucceeds: '\u2281',
    NotSucceedsEqual: '\u2AB0\u0338',
    NotSucceedsSlantEqual: '\u22E1',
    NotSucceedsTilde: '\u227F\u0338',
    NotSuperset: '\u2283\u20D2',
    NotSupersetEqual: '\u2289',
    NotTilde: '\u2241',
    NotTildeEqual: '\u2244',
    NotTildeFullEqual: '\u2247',
    NotTildeTilde: '\u2249',
    NotVerticalBar: '\u2224',
    Nscr: '\uD835\uDCA9',
    Nu: '\u039D',
    OElig: '\u0152',
    Ocy: '\u041E',
    Odblac: '\u0150',
    Ofr: '\uD835\uDD12',
    Omacr: '\u014C',
    Omega: '\u03A9',
    Omicron: '\u039F',
    Oopf: '\uD835\uDD46',
    OpenCurlyDoubleQuote: '\u201C',
    OpenCurlyQuote: '\u2018',
    Or: '\u2A54',
    Oscr: '\uD835\uDCAA',
    Otimes: '\u2A37',
    OverBar: '\u203E',
    OverBrace: '\u23DE',
    OverBracket: '\u23B4',
    OverParenthesis: '\u23DC',
    PartialD: '\u2202',
    Pcy: '\u041F',
    Pfr: '\uD835\uDD13',
    Phi: '\u03A6',
    Pi: '\u03A0',
    PlusMinus: '\u00B1',
    Poincareplane: '\u210C',
    Popf: '\u2119',
    Pr: '\u2ABB',
    Precedes: '\u227A',
    PrecedesEqual: '\u2AAF',
    PrecedesSlantEqual: '\u227C',
    PrecedesTilde: '\u227E',
    Prime: '\u2033',
    Product: '\u220F',
    Proportion: '\u2237',
    Proportional: '\u221D',
    Pscr: '\uD835\uDCAB',
    Psi: '\u03A8',
    Qfr: '\uD835\uDD14',
    Qopf: '\u211A',
    Qscr: '\uD835\uDCAC',
    RBarr: '\u2910',
    Racute: '\u0154',
    Rang: '\u27EB',
    Rarr: '\u21A0',
    Rarrtl: '\u2916',
    Rcaron: '\u0158',
    Rcedil: '\u0156',
    Rcy: '\u0420',
    Re: '\u211C',
    ReverseElement: '\u220B',
    ReverseEquilibrium: '\u21CB',
    ReverseUpEquilibrium: '\u296F',
    Rfr: '\u211C',
    Rho: '\u03A1',
    RightAngleBracket: '\u27E9',
    RightArrow: '\u2192',
    RightArrowBar: '\u21E5',
    RightArrowLeftArrow: '\u21C4',
    RightCeiling: '\u2309',
    RightDoubleBracket: '\u27E7',
    RightDownTeeVector: '\u295D',
    RightDownVector: '\u21C2',
    RightDownVectorBar: '\u2955',
    RightFloor: '\u230B',
    RightTee: '\u22A2',
    RightTeeArrow: '\u21A6',
    RightTeeVector: '\u295B',
    RightTriangle: '\u22B3',
    RightTriangleBar: '\u29D0',
    RightTriangleEqual: '\u22B5',
    RightUpDownVector: '\u294F',
    RightUpTeeVector: '\u295C',
    RightUpVector: '\u21BE',
    RightUpVectorBar: '\u2954',
    RightVector: '\u21C0',
    RightVectorBar: '\u2953',
    Rightarrow: '\u21D2',
    Ropf: '\u211D',
    RoundImplies: '\u2970',
    Rrightarrow: '\u21DB',
    Rscr: '\u211B',
    Rsh: '\u21B1',
    RuleDelayed: '\u29F4',
    SHCHcy: '\u0429',
    SHcy: '\u0428',
    SOFTcy: '\u042C',
    Sacute: '\u015A',
    Sc: '\u2ABC',
    Scaron: '\u0160',
    Scedil: '\u015E',
    Scirc: '\u015C',
    Scy: '\u0421',
    Sfr: '\uD835\uDD16',
    ShortDownArrow: '\u2193',
    ShortLeftArrow: '\u2190',
    ShortRightArrow: '\u2192',
    ShortUpArrow: '\u2191',
    Sigma: '\u03A3',
    SmallCircle: '\u2218',
    Sopf: '\uD835\uDD4A',
    Sqrt: '\u221A',
    Square: '\u25A1',
    SquareIntersection: '\u2293',
    SquareSubset: '\u228F',
    SquareSubsetEqual: '\u2291',
    SquareSuperset: '\u2290',
    SquareSupersetEqual: '\u2292',
    SquareUnion: '\u2294',
    Sscr: '\uD835\uDCAE',
    Star: '\u22C6',
    Sub: '\u22D0',
    Subset: '\u22D0',
    SubsetEqual: '\u2286',
    Succeeds: '\u227B',
    SucceedsEqual: '\u2AB0',
    SucceedsSlantEqual: '\u227D',
    SucceedsTilde: '\u227F',
    SuchThat: '\u220B',
    Sum: '\u2211',
    Sup: '\u22D1',
    Superset: '\u2283',
    SupersetEqual: '\u2287',
    Supset: '\u22D1',
    TRADE: '\u2122',
    TSHcy: '\u040B',
    TScy: '\u0426',
    Tab: '\u0009',
    Tau: '\u03A4',
    Tcaron: '\u0164',
    Tcedil: '\u0162',
    Tcy: '\u0422',
    Tfr: '\uD835\uDD17',
    Therefore: '\u2234',
    Theta: '\u0398',
    ThickSpace: '\u205F\u200A',
    ThinSpace: '\u2009',
    Tilde: '\u223C',
    TildeEqual: '\u2243',
    TildeFullEqual: '\u2245',
    TildeTilde: '\u2248',
    Topf: '\uD835\uDD4B',
    TripleDot: '\u20DB',
    Tscr: '\uD835\uDCAF',
    Tstrok: '\u0166',
    Uarr: '\u219F',
    Uarrocir: '\u2949',
    Ubrcy: '\u040E',
    Ubreve: '\u016C',
    Ucy: '\u0423',
    Udblac: '\u0170',
    Ufr: '\uD835\uDD18',
    Umacr: '\u016A',
    UnderBar: '\u005F',
    UnderBrace: '\u23DF',
    UnderBracket: '\u23B5',
    UnderParenthesis: '\u23DD',
    Union: '\u22C3',
    UnionPlus: '\u228E',
    Uogon: '\u0172',
    Uopf: '\uD835\uDD4C',
    UpArrow: '\u2191',
    UpArrowBar: '\u2912',
    UpArrowDownArrow: '\u21C5',
    UpDownArrow: '\u2195',
    UpEquilibrium: '\u296E',
    UpTee: '\u22A5',
    UpTeeArrow: '\u21A5',
    Uparrow: '\u21D1',
    Updownarrow: '\u21D5',
    UpperLeftArrow: '\u2196',
    UpperRightArrow: '\u2197',
    Upsi: '\u03D2',
    Upsilon: '\u03A5',
    Uring: '\u016E',
    Uscr: '\uD835\uDCB0',
    Utilde: '\u0168',
    VDash: '\u22AB',
    Vbar: '\u2AEB',
    Vcy: '\u0412',
    Vdash: '\u22A9',
    Vdashl: '\u2AE6',
    Vee: '\u22C1',
    Verbar: '\u2016',
    Vert: '\u2016',
    VerticalBar: '\u2223',
    VerticalLine: '\u007C',
    VerticalSeparator: '\u2758',
    VerticalTilde: '\u2240',
    VeryThinSpace: '\u200A',
    Vfr: '\uD835\uDD19',
    Vopf: '\uD835\uDD4D',
    Vscr: '\uD835\uDCB1',
    Vvdash: '\u22AA',
    Wcirc: '\u0174',
    Wedge: '\u22C0',
    Wfr: '\uD835\uDD1A',
    Wopf: '\uD835\uDD4E',
    Wscr: '\uD835\uDCB2',
    Xfr: '\uD835\uDD1B',
    Xi: '\u039E',
    Xopf: '\uD835\uDD4F',
    Xscr: '\uD835\uDCB3',
    YAcy: '\u042F',
    YIcy: '\u0407',
    YUcy: '\u042E',
    Ycirc: '\u0176',
    Ycy: '\u042B',
    Yfr: '\uD835\uDD1C',
    Yopf: '\uD835\uDD50',
    Yscr: '\uD835\uDCB4',
    Yuml: '\u0178',
    ZHcy: '\u0416',
    Zacute: '\u0179',
    Zcaron: '\u017D',
    Zcy: '\u0417',
    Zdot: '\u017B',
    ZeroWidthSpace: '\u200B',
    Zeta: '\u0396',
    Zfr: '\u2128',
    Zopf: '\u2124',
    Zscr: '\uD835\uDCB5',
    abreve: '\u0103',
    ac: '\u223E',
    acE: '\u223E\u0333',
    acd: '\u223F',
    acy: '\u0430',
    af: '\u2061',
    afr: '\uD835\uDD1E',
    alefsym: '\u2135',
    aleph: '\u2135',
    alpha: '\u03B1',
    amacr: '\u0101',
    amalg: '\u2A3F',
    and: '\u2227',
    andand: '\u2A55',
    andd: '\u2A5C',
    andslope: '\u2A58',
    andv: '\u2A5A',
    ang: '\u2220',
    ange: '\u29A4',
    angle: '\u2220',
    angmsd: '\u2221',
    angmsdaa: '\u29A8',
    angmsdab: '\u29A9',
    angmsdac: '\u29AA',
    angmsdad: '\u29AB',
    angmsdae: '\u29AC',
    angmsdaf: '\u29AD',
    angmsdag: '\u29AE',
    angmsdah: '\u29AF',
    angrt: '\u221F',
    angrtvb: '\u22BE',
    angrtvbd: '\u299D',
    angsph: '\u2222',
    angst: '\u00C5',
    angzarr: '\u237C',
    aogon: '\u0105',
    aopf: '\uD835\uDD52',
    ap: '\u2248',
    apE: '\u2A70',
    apacir: '\u2A6F',
    ape: '\u224A',
    apid: '\u224B',
    apos: '\u0027',
    approx: '\u2248',
    approxeq: '\u224A',
    ascr: '\uD835\uDCB6',
    ast: '\u002A',
    asymp: '\u2248',
    asympeq: '\u224D',
    awconint: '\u2233',
    awint: '\u2A11',
    bNot: '\u2AED',
    backcong: '\u224C',
    backepsilon: '\u03F6',
    backprime: '\u2035',
    backsim: '\u223D',
    backsimeq: '\u22CD',
    barvee: '\u22BD',
    barwed: '\u2305',
    barwedge: '\u2305',
    bbrk: '\u23B5',
    bbrktbrk: '\u23B6',
    bcong: '\u224C',
    bcy: '\u0431',
    bdquo: '\u201E',
    becaus: '\u2235',
    because: '\u2235',
    bemptyv: '\u29B0',
    bepsi: '\u03F6',
    bernou: '\u212C',
    beta: '\u03B2',
    beth: '\u2136',
    between: '\u226C',
    bfr: '\uD835\uDD1F',
    bigcap: '\u22C2',
    bigcirc: '\u25EF',
    bigcup: '\u22C3',
    bigodot: '\u2A00',
    bigoplus: '\u2A01',
    bigotimes: '\u2A02',
    bigsqcup: '\u2A06',
    bigstar: '\u2605',
    bigtriangledown: '\u25BD',
    bigtriangleup: '\u25B3',
    biguplus: '\u2A04',
    bigvee: '\u22C1',
    bigwedge: '\u22C0',
    bkarow: '\u290D',
    blacklozenge: '\u29EB',
    blacksquare: '\u25AA',
    blacktriangle: '\u25B4',
    blacktriangledown: '\u25BE',
    blacktriangleleft: '\u25C2',
    blacktriangleright: '\u25B8',
    blank: '\u2423',
    blk12: '\u2592',
    blk14: '\u2591',
    blk34: '\u2593',
    block: '\u2588',
    bne: '\u003D\u20E5',
    bnequiv: '\u2261\u20E5',
    bnot: '\u2310',
    bopf: '\uD835\uDD53',
    bot: '\u22A5',
    bottom: '\u22A5',
    bowtie: '\u22C8',
    boxDL: '\u2557',
    boxDR: '\u2554',
    boxDl: '\u2556',
    boxDr: '\u2553',
    boxH: '\u2550',
    boxHD: '\u2566',
    boxHU: '\u2569',
    boxHd: '\u2564',
    boxHu: '\u2567',
    boxUL: '\u255D',
    boxUR: '\u255A',
    boxUl: '\u255C',
    boxUr: '\u2559',
    boxV: '\u2551',
    boxVH: '\u256C',
    boxVL: '\u2563',
    boxVR: '\u2560',
    boxVh: '\u256B',
    boxVl: '\u2562',
    boxVr: '\u255F',
    boxbox: '\u29C9',
    boxdL: '\u2555',
    boxdR: '\u2552',
    boxdl: '\u2510',
    boxdr: '\u250C',
    boxh: '\u2500',
    boxhD: '\u2565',
    boxhU: '\u2568',
    boxhd: '\u252C',
    boxhu: '\u2534',
    boxminus: '\u229F',
    boxplus: '\u229E',
    boxtimes: '\u22A0',
    boxuL: '\u255B',
    boxuR: '\u2558',
    boxul: '\u2518',
    boxur: '\u2514',
    boxv: '\u2502',
    boxvH: '\u256A',
    boxvL: '\u2561',
    boxvR: '\u255E',
    boxvh: '\u253C',
    boxvl: '\u2524',
    boxvr: '\u251C',
    bprime: '\u2035',
    breve: '\u02D8',
    bscr: '\uD835\uDCB7',
    bsemi: '\u204F',
    bsim: '\u223D',
    bsime: '\u22CD',
    bsol: '\u005C',
    bsolb: '\u29C5',
    bsolhsub: '\u27C8',
    bull: '\u2022',
    bullet: '\u2022',
    bump: '\u224E',
    bumpE: '\u2AAE',
    bumpe: '\u224F',
    bumpeq: '\u224F',
    cacute: '\u0107',
    cap: '\u2229',
    capand: '\u2A44',
    capbrcup: '\u2A49',
    capcap: '\u2A4B',
    capcup: '\u2A47',
    capdot: '\u2A40',
    caps: '\u2229\uFE00',
    caret: '\u2041',
    caron: '\u02C7',
    ccaps: '\u2A4D',
    ccaron: '\u010D',
    ccirc: '\u0109',
    ccups: '\u2A4C',
    ccupssm: '\u2A50',
    cdot: '\u010B',
    cemptyv: '\u29B2',
    centerdot: '\u00B7',
    cfr: '\uD835\uDD20',
    chcy: '\u0447',
    check: '\u2713',
    checkmark: '\u2713',
    chi: '\u03C7',
    cir: '\u25CB',
    cirE: '\u29C3',
    circ: '\u02C6',
    circeq: '\u2257',
    circlearrowleft: '\u21BA',
    circlearrowright: '\u21BB',
    circledR: '\u00AE',
    circledS: '\u24C8',
    circledast: '\u229B',
    circledcirc: '\u229A',
    circleddash: '\u229D',
    cire: '\u2257',
    cirfnint: '\u2A10',
    cirmid: '\u2AEF',
    cirscir: '\u29C2',
    clubs: '\u2663',
    clubsuit: '\u2663',
    colon: '\u003A',
    colone: '\u2254',
    coloneq: '\u2254',
    comma: '\u002C',
    commat: '\u0040',
    comp: '\u2201',
    compfn: '\u2218',
    complement: '\u2201',
    complexes: '\u2102',
    cong: '\u2245',
    congdot: '\u2A6D',
    conint: '\u222E',
    copf: '\uD835\uDD54',
    coprod: '\u2210',
    copysr: '\u2117',
    crarr: '\u21B5',
    cross: '\u2717',
    cscr: '\uD835\uDCB8',
    csub: '\u2ACF',
    csube: '\u2AD1',
    csup: '\u2AD0',
    csupe: '\u2AD2',
    ctdot: '\u22EF',
    cudarrl: '\u2938',
    cudarrr: '\u2935',
    cuepr: '\u22DE',
    cuesc: '\u22DF',
    cularr: '\u21B6',
    cularrp: '\u293D',
    cup: '\u222A',
    cupbrcap: '\u2A48',
    cupcap: '\u2A46',
    cupcup: '\u2A4A',
    cupdot: '\u228D',
    cupor: '\u2A45',
    cups: '\u222A\uFE00',
    curarr: '\u21B7',
    curarrm: '\u293C',
    curlyeqprec: '\u22DE',
    curlyeqsucc: '\u22DF',
    curlyvee: '\u22CE',
    curlywedge: '\u22CF',
    curvearrowleft: '\u21B6',
    curvearrowright: '\u21B7',
    cuvee: '\u22CE',
    cuwed: '\u22CF',
    cwconint: '\u2232',
    cwint: '\u2231',
    cylcty: '\u232D',
    dArr: '\u21D3',
    dHar: '\u2965',
    dagger: '\u2020',
    daleth: '\u2138',
    darr: '\u2193',
    dash: '\u2010',
    dashv: '\u22A3',
    dbkarow: '\u290F',
    dblac: '\u02DD',
    dcaron: '\u010F',
    dcy: '\u0434',
    dd: '\u2146',
    ddagger: '\u2021',
    ddarr: '\u21CA',
    ddotseq: '\u2A77',
    delta: '\u03B4',
    demptyv: '\u29B1',
    dfisht: '\u297F',
    dfr: '\uD835\uDD21',
    dharl: '\u21C3',
    dharr: '\u21C2',
    diam: '\u22C4',
    diamond: '\u22C4',
    diamondsuit: '\u2666',
    diams: '\u2666',
    die: '\u00A8',
    digamma: '\u03DD',
    disin: '\u22F2',
    div: '\u00F7',
    divideontimes: '\u22C7',
    divonx: '\u22C7',
    djcy: '\u0452',
    dlcorn: '\u231E',
    dlcrop: '\u230D',
    dollar: '\u0024',
    dopf: '\uD835\uDD55',
    dot: '\u02D9',
    doteq: '\u2250',
    doteqdot: '\u2251',
    dotminus: '\u2238',
    dotplus: '\u2214',
    dotsquare: '\u22A1',
    doublebarwedge: '\u2306',
    downarrow: '\u2193',
    downdownarrows: '\u21CA',
    downharpoonleft: '\u21C3',
    downharpoonright: '\u21C2',
    drbkarow: '\u2910',
    drcorn: '\u231F',
    drcrop: '\u230C',
    dscr: '\uD835\uDCB9',
    dscy: '\u0455',
    dsol: '\u29F6',
    dstrok: '\u0111',
    dtdot: '\u22F1',
    dtri: '\u25BF',
    dtrif: '\u25BE',
    duarr: '\u21F5',
    duhar: '\u296F',
    dwangle: '\u29A6',
    dzcy: '\u045F',
    dzigrarr: '\u27FF',
    eDDot: '\u2A77',
    eDot: '\u2251',
    easter: '\u2A6E',
    ecaron: '\u011B',
    ecir: '\u2256',
    ecolon: '\u2255',
    ecy: '\u044D',
    edot: '\u0117',
    ee: '\u2147',
    efDot: '\u2252',
    efr: '\uD835\uDD22',
    eg: '\u2A9A',
    egs: '\u2A96',
    egsdot: '\u2A98',
    el: '\u2A99',
    elinters: '\u23E7',
    ell: '\u2113',
    els: '\u2A95',
    elsdot: '\u2A97',
    emacr: '\u0113',
    empty: '\u2205',
    emptyset: '\u2205',
    emptyv: '\u2205',
    emsp13: '\u2004',
    emsp14: '\u2005',
    emsp: '\u2003',
    eng: '\u014B',
    ensp: '\u2002',
    eogon: '\u0119',
    eopf: '\uD835\uDD56',
    epar: '\u22D5',
    eparsl: '\u29E3',
    eplus: '\u2A71',
    epsi: '\u03B5',
    epsilon: '\u03B5',
    epsiv: '\u03F5',
    eqcirc: '\u2256',
    eqcolon: '\u2255',
    eqsim: '\u2242',
    eqslantgtr: '\u2A96',
    eqslantless: '\u2A95',
    equals: '\u003D',
    equest: '\u225F',
    equiv: '\u2261',
    equivDD: '\u2A78',
    eqvparsl: '\u29E5',
    erDot: '\u2253',
    erarr: '\u2971',
    escr: '\u212F',
    esdot: '\u2250',
    esim: '\u2242',
    eta: '\u03B7',
    euro: '\u20AC',
    excl: '\u0021',
    exist: '\u2203',
    expectation: '\u2130',
    exponentiale: '\u2147',
    fallingdotseq: '\u2252',
    fcy: '\u0444',
    female: '\u2640',
    ffilig: '\uFB03',
    fflig: '\uFB00',
    ffllig: '\uFB04',
    ffr: '\uD835\uDD23',
    filig: '\uFB01',
    fjlig: '\u0066\u006A',
    flat: '\u266D',
    fllig: '\uFB02',
    fltns: '\u25B1',
    fnof: '\u0192',
    fopf: '\uD835\uDD57',
    forall: '\u2200',
    fork: '\u22D4',
    forkv: '\u2AD9',
    fpartint: '\u2A0D',
    frac13: '\u2153',
    frac15: '\u2155',
    frac16: '\u2159',
    frac18: '\u215B',
    frac23: '\u2154',
    frac25: '\u2156',
    frac35: '\u2157',
    frac38: '\u215C',
    frac45: '\u2158',
    frac56: '\u215A',
    frac58: '\u215D',
    frac78: '\u215E',
    frasl: '\u2044',
    frown: '\u2322',
    fscr: '\uD835\uDCBB',
    gE: '\u2267',
    gEl: '\u2A8C',
    gacute: '\u01F5',
    gamma: '\u03B3',
    gammad: '\u03DD',
    gap: '\u2A86',
    gbreve: '\u011F',
    gcirc: '\u011D',
    gcy: '\u0433',
    gdot: '\u0121',
    ge: '\u2265',
    gel: '\u22DB',
    geq: '\u2265',
    geqq: '\u2267',
    geqslant: '\u2A7E',
    ges: '\u2A7E',
    gescc: '\u2AA9',
    gesdot: '\u2A80',
    gesdoto: '\u2A82',
    gesdotol: '\u2A84',
    gesl: '\u22DB\uFE00',
    gesles: '\u2A94',
    gfr: '\uD835\uDD24',
    gg: '\u226B',
    ggg: '\u22D9',
    gimel: '\u2137',
    gjcy: '\u0453',
    gl: '\u2277',
    glE: '\u2A92',
    gla: '\u2AA5',
    glj: '\u2AA4',
    gnE: '\u2269',
    gnap: '\u2A8A',
    gnapprox: '\u2A8A',
    gne: '\u2A88',
    gneq: '\u2A88',
    gneqq: '\u2269',
    gnsim: '\u22E7',
    gopf: '\uD835\uDD58',
    grave: '\u0060',
    gscr: '\u210A',
    gsim: '\u2273',
    gsime: '\u2A8E',
    gsiml: '\u2A90',
    gtcc: '\u2AA7',
    gtcir: '\u2A7A',
    gtdot: '\u22D7',
    gtlPar: '\u2995',
    gtquest: '\u2A7C',
    gtrapprox: '\u2A86',
    gtrarr: '\u2978',
    gtrdot: '\u22D7',
    gtreqless: '\u22DB',
    gtreqqless: '\u2A8C',
    gtrless: '\u2277',
    gtrsim: '\u2273',
    gvertneqq: '\u2269\uFE00',
    gvnE: '\u2269\uFE00',
    hArr: '\u21D4',
    hairsp: '\u200A',
    half: '\u00BD',
    hamilt: '\u210B',
    hardcy: '\u044A',
    harr: '\u2194',
    harrcir: '\u2948',
    harrw: '\u21AD',
    hbar: '\u210F',
    hcirc: '\u0125',
    hearts: '\u2665',
    heartsuit: '\u2665',
    hellip: '\u2026',
    hercon: '\u22B9',
    hfr: '\uD835\uDD25',
    hksearow: '\u2925',
    hkswarow: '\u2926',
    hoarr: '\u21FF',
    homtht: '\u223B',
    hookleftarrow: '\u21A9',
    hookrightarrow: '\u21AA',
    hopf: '\uD835\uDD59',
    horbar: '\u2015',
    hscr: '\uD835\uDCBD',
    hslash: '\u210F',
    hstrok: '\u0127',
    hybull: '\u2043',
    hyphen: '\u2010',
    ic: '\u2063',
    icy: '\u0438',
    iecy: '\u0435',
    iff: '\u21D4',
    ifr: '\uD835\uDD26',
    ii: '\u2148',
    iiiint: '\u2A0C',
    iiint: '\u222D',
    iinfin: '\u29DC',
    iiota: '\u2129',
    ijlig: '\u0133',
    imacr: '\u012B',
    image: '\u2111',
    imagline: '\u2110',
    imagpart: '\u2111',
    imath: '\u0131',
    imof: '\u22B7',
    imped: '\u01B5',
    in: '\u2208',
    incare: '\u2105',
    infin: '\u221E',
    infintie: '\u29DD',
    inodot: '\u0131',
    int: '\u222B',
    intcal: '\u22BA',
    integers: '\u2124',
    intercal: '\u22BA',
    intlarhk: '\u2A17',
    intprod: '\u2A3C',
    iocy: '\u0451',
    iogon: '\u012F',
    iopf: '\uD835\uDD5A',
    iota: '\u03B9',
    iprod: '\u2A3C',
    iscr: '\uD835\uDCBE',
    isin: '\u2208',
    isinE: '\u22F9',
    isindot: '\u22F5',
    isins: '\u22F4',
    isinsv: '\u22F3',
    isinv: '\u2208',
    it: '\u2062',
    itilde: '\u0129',
    iukcy: '\u0456',
    jcirc: '\u0135',
    jcy: '\u0439',
    jfr: '\uD835\uDD27',
    jmath: '\u0237',
    jopf: '\uD835\uDD5B',
    jscr: '\uD835\uDCBF',
    jsercy: '\u0458',
    jukcy: '\u0454',
    kappa: '\u03BA',
    kappav: '\u03F0',
    kcedil: '\u0137',
    kcy: '\u043A',
    kfr: '\uD835\uDD28',
    kgreen: '\u0138',
    khcy: '\u0445',
    kjcy: '\u045C',
    kopf: '\uD835\uDD5C',
    kscr: '\uD835\uDCC0',
    lAarr: '\u21DA',
    lArr: '\u21D0',
    lAtail: '\u291B',
    lBarr: '\u290E',
    lE: '\u2266',
    lEg: '\u2A8B',
    lHar: '\u2962',
    lacute: '\u013A',
    laemptyv: '\u29B4',
    lagran: '\u2112',
    lambda: '\u03BB',
    lang: '\u27E8',
    langd: '\u2991',
    langle: '\u27E8',
    lap: '\u2A85',
    larr: '\u2190',
    larrb: '\u21E4',
    larrbfs: '\u291F',
    larrfs: '\u291D',
    larrhk: '\u21A9',
    larrlp: '\u21AB',
    larrpl: '\u2939',
    larrsim: '\u2973',
    larrtl: '\u21A2',
    lat: '\u2AAB',
    latail: '\u2919',
    late: '\u2AAD',
    lates: '\u2AAD\uFE00',
    lbarr: '\u290C',
    lbbrk: '\u2772',
    lbrace: '\u007B',
    lbrack: '\u005B',
    lbrke: '\u298B',
    lbrksld: '\u298F',
    lbrkslu: '\u298D',
    lcaron: '\u013E',
    lcedil: '\u013C',
    lceil: '\u2308',
    lcub: '\u007B',
    lcy: '\u043B',
    ldca: '\u2936',
    ldquo: '\u201C',
    ldquor: '\u201E',
    ldrdhar: '\u2967',
    ldrushar: '\u294B',
    ldsh: '\u21B2',
    le: '\u2264',
    leftarrow: '\u2190',
    leftarrowtail: '\u21A2',
    leftharpoondown: '\u21BD',
    leftharpoonup: '\u21BC',
    leftleftarrows: '\u21C7',
    leftrightarrow: '\u2194',
    leftrightarrows: '\u21C6',
    leftrightharpoons: '\u21CB',
    leftrightsquigarrow: '\u21AD',
    leftthreetimes: '\u22CB',
    leg: '\u22DA',
    leq: '\u2264',
    leqq: '\u2266',
    leqslant: '\u2A7D',
    les: '\u2A7D',
    lescc: '\u2AA8',
    lesdot: '\u2A7F',
    lesdoto: '\u2A81',
    lesdotor: '\u2A83',
    lesg: '\u22DA\uFE00',
    lesges: '\u2A93',
    lessapprox: '\u2A85',
    lessdot: '\u22D6',
    lesseqgtr: '\u22DA',
    lesseqqgtr: '\u2A8B',
    lessgtr: '\u2276',
    lesssim: '\u2272',
    lfisht: '\u297C',
    lfloor: '\u230A',
    lfr: '\uD835\uDD29',
    lg: '\u2276',
    lgE: '\u2A91',
    lhard: '\u21BD',
    lharu: '\u21BC',
    lharul: '\u296A',
    lhblk: '\u2584',
    ljcy: '\u0459',
    ll: '\u226A',
    llarr: '\u21C7',
    llcorner: '\u231E',
    llhard: '\u296B',
    lltri: '\u25FA',
    lmidot: '\u0140',
    lmoust: '\u23B0',
    lmoustache: '\u23B0',
    lnE: '\u2268',
    lnap: '\u2A89',
    lnapprox: '\u2A89',
    lne: '\u2A87',
    lneq: '\u2A87',
    lneqq: '\u2268',
    lnsim: '\u22E6',
    loang: '\u27EC',
    loarr: '\u21FD',
    lobrk: '\u27E6',
    longleftarrow: '\u27F5',
    longleftrightarrow: '\u27F7',
    longmapsto: '\u27FC',
    longrightarrow: '\u27F6',
    looparrowleft: '\u21AB',
    looparrowright: '\u21AC',
    lopar: '\u2985',
    lopf: '\uD835\uDD5D',
    loplus: '\u2A2D',
    lotimes: '\u2A34',
    lowast: '\u2217',
    lowbar: '\u005F',
    loz: '\u25CA',
    lozenge: '\u25CA',
    lozf: '\u29EB',
    lpar: '\u0028',
    lparlt: '\u2993',
    lrarr: '\u21C6',
    lrcorner: '\u231F',
    lrhar: '\u21CB',
    lrhard: '\u296D',
    lrm: '\u200E',
    lrtri: '\u22BF',
    lsaquo: '\u2039',
    lscr: '\uD835\uDCC1',
    lsh: '\u21B0',
    lsim: '\u2272',
    lsime: '\u2A8D',
    lsimg: '\u2A8F',
    lsqb: '\u005B',
    lsquo: '\u2018',
    lsquor: '\u201A',
    lstrok: '\u0142',
    ltcc: '\u2AA6',
    ltcir: '\u2A79',
    ltdot: '\u22D6',
    lthree: '\u22CB',
    ltimes: '\u22C9',
    ltlarr: '\u2976',
    ltquest: '\u2A7B',
    ltrPar: '\u2996',
    ltri: '\u25C3',
    ltrie: '\u22B4',
    ltrif: '\u25C2',
    lurdshar: '\u294A',
    luruhar: '\u2966',
    lvertneqq: '\u2268\uFE00',
    lvnE: '\u2268\uFE00',
    mDDot: '\u223A',
    male: '\u2642',
    malt: '\u2720',
    maltese: '\u2720',
    map: '\u21A6',
    mapsto: '\u21A6',
    mapstodown: '\u21A7',
    mapstoleft: '\u21A4',
    mapstoup: '\u21A5',
    marker: '\u25AE',
    mcomma: '\u2A29',
    mcy: '\u043C',
    mdash: '\u2014',
    measuredangle: '\u2221',
    mfr: '\uD835\uDD2A',
    mho: '\u2127',
    mid: '\u2223',
    midast: '\u002A',
    midcir: '\u2AF0',
    minus: '\u2212',
    minusb: '\u229F',
    minusd: '\u2238',
    minusdu: '\u2A2A',
    mlcp: '\u2ADB',
    mldr: '\u2026',
    mnplus: '\u2213',
    models: '\u22A7',
    mopf: '\uD835\uDD5E',
    mp: '\u2213',
    mscr: '\uD835\uDCC2',
    mstpos: '\u223E',
    mu: '\u03BC',
    multimap: '\u22B8',
    mumap: '\u22B8',
    nGg: '\u22D9\u0338',
    nGt: '\u226B\u20D2',
    nGtv: '\u226B\u0338',
    nLeftarrow: '\u21CD',
    nLeftrightarrow: '\u21CE',
    nLl: '\u22D8\u0338',
    nLt: '\u226A\u20D2',
    nLtv: '\u226A\u0338',
    nRightarrow: '\u21CF',
    nVDash: '\u22AF',
    nVdash: '\u22AE',
    nabla: '\u2207',
    nacute: '\u0144',
    nang: '\u2220\u20D2',
    nap: '\u2249',
    napE: '\u2A70\u0338',
    napid: '\u224B\u0338',
    napos: '\u0149',
    napprox: '\u2249',
    natur: '\u266E',
    natural: '\u266E',
    naturals: '\u2115',
    nbump: '\u224E\u0338',
    nbumpe: '\u224F\u0338',
    ncap: '\u2A43',
    ncaron: '\u0148',
    ncedil: '\u0146',
    ncong: '\u2247',
    ncongdot: '\u2A6D\u0338',
    ncup: '\u2A42',
    ncy: '\u043D',
    ndash: '\u2013',
    ne: '\u2260',
    neArr: '\u21D7',
    nearhk: '\u2924',
    nearr: '\u2197',
    nearrow: '\u2197',
    nedot: '\u2250\u0338',
    nequiv: '\u2262',
    nesear: '\u2928',
    nesim: '\u2242\u0338',
    nexist: '\u2204',
    nexists: '\u2204',
    nfr: '\uD835\uDD2B',
    ngE: '\u2267\u0338',
    nge: '\u2271',
    ngeq: '\u2271',
    ngeqq: '\u2267\u0338',
    ngeqslant: '\u2A7E\u0338',
    nges: '\u2A7E\u0338',
    ngsim: '\u2275',
    ngt: '\u226F',
    ngtr: '\u226F',
    nhArr: '\u21CE',
    nharr: '\u21AE',
    nhpar: '\u2AF2',
    ni: '\u220B',
    nis: '\u22FC',
    nisd: '\u22FA',
    niv: '\u220B',
    njcy: '\u045A',
    nlArr: '\u21CD',
    nlE: '\u2266\u0338',
    nlarr: '\u219A',
    nldr: '\u2025',
    nle: '\u2270',
    nleftarrow: '\u219A',
    nleftrightarrow: '\u21AE',
    nleq: '\u2270',
    nleqq: '\u2266\u0338',
    nleqslant: '\u2A7D\u0338',
    nles: '\u2A7D\u0338',
    nless: '\u226E',
    nlsim: '\u2274',
    nlt: '\u226E',
    nltri: '\u22EA',
    nltrie: '\u22EC',
    nmid: '\u2224',
    nopf: '\uD835\uDD5F',
    notin: '\u2209',
    notinE: '\u22F9\u0338',
    notindot: '\u22F5\u0338',
    notinva: '\u2209',
    notinvb: '\u22F7',
    notinvc: '\u22F6',
    notni: '\u220C',
    notniva: '\u220C',
    notnivb: '\u22FE',
    notnivc: '\u22FD',
    npar: '\u2226',
    nparallel: '\u2226',
    nparsl: '\u2AFD\u20E5',
    npart: '\u2202\u0338',
    npolint: '\u2A14',
    npr: '\u2280',
    nprcue: '\u22E0',
    npre: '\u2AAF\u0338',
    nprec: '\u2280',
    npreceq: '\u2AAF\u0338',
    nrArr: '\u21CF',
    nrarr: '\u219B',
    nrarrc: '\u2933\u0338',
    nrarrw: '\u219D\u0338',
    nrightarrow: '\u219B',
    nrtri: '\u22EB',
    nrtrie: '\u22ED',
    nsc: '\u2281',
    nsccue: '\u22E1',
    nsce: '\u2AB0\u0338',
    nscr: '\uD835\uDCC3',
    nshortmid: '\u2224',
    nshortparallel: '\u2226',
    nsim: '\u2241',
    nsime: '\u2244',
    nsimeq: '\u2244',
    nsmid: '\u2224',
    nspar: '\u2226',
    nsqsube: '\u22E2',
    nsqsupe: '\u22E3',
    nsub: '\u2284',
    nsubE: '\u2AC5\u0338',
    nsube: '\u2288',
    nsubset: '\u2282\u20D2',
    nsubseteq: '\u2288',
    nsubseteqq: '\u2AC5\u0338',
    nsucc: '\u2281',
    nsucceq: '\u2AB0\u0338',
    nsup: '\u2285',
    nsupE: '\u2AC6\u0338',
    nsupe: '\u2289',
    nsupset: '\u2283\u20D2',
    nsupseteq: '\u2289',
    nsupseteqq: '\u2AC6\u0338',
    ntgl: '\u2279',
    ntlg: '\u2278',
    ntriangleleft: '\u22EA',
    ntrianglelefteq: '\u22EC',
    ntriangleright: '\u22EB',
    ntrianglerighteq: '\u22ED',
    nu: '\u03BD',
    num: '\u0023',
    numero: '\u2116',
    numsp: '\u2007',
    nvDash: '\u22AD',
    nvHarr: '\u2904',
    nvap: '\u224D\u20D2',
    nvdash: '\u22AC',
    nvge: '\u2265\u20D2',
    nvgt: '\u003E\u20D2',
    nvinfin: '\u29DE',
    nvlArr: '\u2902',
    nvle: '\u2264\u20D2',
    nvlt: '\u003C\u20D2',
    nvltrie: '\u22B4\u20D2',
    nvrArr: '\u2903',
    nvrtrie: '\u22B5\u20D2',
    nvsim: '\u223C\u20D2',
    nwArr: '\u21D6',
    nwarhk: '\u2923',
    nwarr: '\u2196',
    nwarrow: '\u2196',
    nwnear: '\u2927',
    oS: '\u24C8',
    oast: '\u229B',
    ocir: '\u229A',
    ocy: '\u043E',
    odash: '\u229D',
    odblac: '\u0151',
    odiv: '\u2A38',
    odot: '\u2299',
    odsold: '\u29BC',
    oelig: '\u0153',
    ofcir: '\u29BF',
    ofr: '\uD835\uDD2C',
    ogon: '\u02DB',
    ogt: '\u29C1',
    ohbar: '\u29B5',
    ohm: '\u03A9',
    oint: '\u222E',
    olarr: '\u21BA',
    olcir: '\u29BE',
    olcross: '\u29BB',
    oline: '\u203E',
    olt: '\u29C0',
    omacr: '\u014D',
    omega: '\u03C9',
    omicron: '\u03BF',
    omid: '\u29B6',
    ominus: '\u2296',
    oopf: '\uD835\uDD60',
    opar: '\u29B7',
    operp: '\u29B9',
    oplus: '\u2295',
    or: '\u2228',
    orarr: '\u21BB',
    ord: '\u2A5D',
    order: '\u2134',
    orderof: '\u2134',
    origof: '\u22B6',
    oror: '\u2A56',
    orslope: '\u2A57',
    orv: '\u2A5B',
    oscr: '\u2134',
    osol: '\u2298',
    otimes: '\u2297',
    otimesas: '\u2A36',
    ovbar: '\u233D',
    par: '\u2225',
    parallel: '\u2225',
    parsim: '\u2AF3',
    parsl: '\u2AFD',
    part: '\u2202',
    pcy: '\u043F',
    percnt: '\u0025',
    period: '\u002E',
    permil: '\u2030',
    perp: '\u22A5',
    pertenk: '\u2031',
    pfr: '\uD835\uDD2D',
    phi: '\u03C6',
    phiv: '\u03D5',
    phmmat: '\u2133',
    phone: '\u260E',
    pi: '\u03C0',
    pitchfork: '\u22D4',
    piv: '\u03D6',
    planck: '\u210F',
    planckh: '\u210E',
    plankv: '\u210F',
    plus: '\u002B',
    plusacir: '\u2A23',
    plusb: '\u229E',
    pluscir: '\u2A22',
    plusdo: '\u2214',
    plusdu: '\u2A25',
    pluse: '\u2A72',
    plussim: '\u2A26',
    plustwo: '\u2A27',
    pm: '\u00B1',
    pointint: '\u2A15',
    popf: '\uD835\uDD61',
    pr: '\u227A',
    prE: '\u2AB3',
    prap: '\u2AB7',
    prcue: '\u227C',
    pre: '\u2AAF',
    prec: '\u227A',
    precapprox: '\u2AB7',
    preccurlyeq: '\u227C',
    preceq: '\u2AAF',
    precnapprox: '\u2AB9',
    precneqq: '\u2AB5',
    precnsim: '\u22E8',
    precsim: '\u227E',
    prime: '\u2032',
    primes: '\u2119',
    prnE: '\u2AB5',
    prnap: '\u2AB9',
    prnsim: '\u22E8',
    prod: '\u220F',
    profalar: '\u232E',
    profline: '\u2312',
    profsurf: '\u2313',
    prop: '\u221D',
    propto: '\u221D',
    prsim: '\u227E',
    prurel: '\u22B0',
    pscr: '\uD835\uDCC5',
    psi: '\u03C8',
    puncsp: '\u2008',
    qfr: '\uD835\uDD2E',
    qint: '\u2A0C',
    qopf: '\uD835\uDD62',
    qprime: '\u2057',
    qscr: '\uD835\uDCC6',
    quaternions: '\u210D',
    quatint: '\u2A16',
    quest: '\u003F',
    questeq: '\u225F',
    rAarr: '\u21DB',
    rArr: '\u21D2',
    rAtail: '\u291C',
    rBarr: '\u290F',
    rHar: '\u2964',
    race: '\u223D\u0331',
    racute: '\u0155',
    radic: '\u221A',
    raemptyv: '\u29B3',
    rang: '\u27E9',
    rangd: '\u2992',
    range: '\u29A5',
    rangle: '\u27E9',
    rarr: '\u2192',
    rarrap: '\u2975',
    rarrb: '\u21E5',
    rarrbfs: '\u2920',
    rarrc: '\u2933',
    rarrfs: '\u291E',
    rarrhk: '\u21AA',
    rarrlp: '\u21AC',
    rarrpl: '\u2945',
    rarrsim: '\u2974',
    rarrtl: '\u21A3',
    rarrw: '\u219D',
    ratail: '\u291A',
    ratio: '\u2236',
    rationals: '\u211A',
    rbarr: '\u290D',
    rbbrk: '\u2773',
    rbrace: '\u007D',
    rbrack: '\u005D',
    rbrke: '\u298C',
    rbrksld: '\u298E',
    rbrkslu: '\u2990',
    rcaron: '\u0159',
    rcedil: '\u0157',
    rceil: '\u2309',
    rcub: '\u007D',
    rcy: '\u0440',
    rdca: '\u2937',
    rdldhar: '\u2969',
    rdquo: '\u201D',
    rdquor: '\u201D',
    rdsh: '\u21B3',
    real: '\u211C',
    realine: '\u211B',
    realpart: '\u211C',
    reals: '\u211D',
    rect: '\u25AD',
    rfisht: '\u297D',
    rfloor: '\u230B',
    rfr: '\uD835\uDD2F',
    rhard: '\u21C1',
    rharu: '\u21C0',
    rharul: '\u296C',
    rho: '\u03C1',
    rhov: '\u03F1',
    rightarrow: '\u2192',
    rightarrowtail: '\u21A3',
    rightharpoondown: '\u21C1',
    rightharpoonup: '\u21C0',
    rightleftarrows: '\u21C4',
    rightleftharpoons: '\u21CC',
    rightrightarrows: '\u21C9',
    rightsquigarrow: '\u219D',
    rightthreetimes: '\u22CC',
    ring: '\u02DA',
    risingdotseq: '\u2253',
    rlarr: '\u21C4',
    rlhar: '\u21CC',
    rlm: '\u200F',
    rmoust: '\u23B1',
    rmoustache: '\u23B1',
    rnmid: '\u2AEE',
    roang: '\u27ED',
    roarr: '\u21FE',
    robrk: '\u27E7',
    ropar: '\u2986',
    ropf: '\uD835\uDD63',
    roplus: '\u2A2E',
    rotimes: '\u2A35',
    rpar: '\u0029',
    rpargt: '\u2994',
    rppolint: '\u2A12',
    rrarr: '\u21C9',
    rsaquo: '\u203A',
    rscr: '\uD835\uDCC7',
    rsh: '\u21B1',
    rsqb: '\u005D',
    rsquo: '\u2019',
    rsquor: '\u2019',
    rthree: '\u22CC',
    rtimes: '\u22CA',
    rtri: '\u25B9',
    rtrie: '\u22B5',
    rtrif: '\u25B8',
    rtriltri: '\u29CE',
    ruluhar: '\u2968',
    rx: '\u211E',
    sacute: '\u015B',
    sbquo: '\u201A',
    sc: '\u227B',
    scE: '\u2AB4',
    scap: '\u2AB8',
    scaron: '\u0161',
    sccue: '\u227D',
    sce: '\u2AB0',
    scedil: '\u015F',
    scirc: '\u015D',
    scnE: '\u2AB6',
    scnap: '\u2ABA',
    scnsim: '\u22E9',
    scpolint: '\u2A13',
    scsim: '\u227F',
    scy: '\u0441',
    sdot: '\u22C5',
    sdotb: '\u22A1',
    sdote: '\u2A66',
    seArr: '\u21D8',
    searhk: '\u2925',
    searr: '\u2198',
    searrow: '\u2198',
    semi: '\u003B',
    seswar: '\u2929',
    setminus: '\u2216',
    setmn: '\u2216',
    sext: '\u2736',
    sfr: '\uD835\uDD30',
    sfrown: '\u2322',
    sharp: '\u266F',
    shchcy: '\u0449',
    shcy: '\u0448',
    shortmid: '\u2223',
    shortparallel: '\u2225',
    sigma: '\u03C3',
    sigmaf: '\u03C2',
    sigmav: '\u03C2',
    sim: '\u223C',
    simdot: '\u2A6A',
    sime: '\u2243',
    simeq: '\u2243',
    simg: '\u2A9E',
    simgE: '\u2AA0',
    siml: '\u2A9D',
    simlE: '\u2A9F',
    simne: '\u2246',
    simplus: '\u2A24',
    simrarr: '\u2972',
    slarr: '\u2190',
    smallsetminus: '\u2216',
    smashp: '\u2A33',
    smeparsl: '\u29E4',
    smid: '\u2223',
    smile: '\u2323',
    smt: '\u2AAA',
    smte: '\u2AAC',
    smtes: '\u2AAC\uFE00',
    softcy: '\u044C',
    sol: '\u002F',
    solb: '\u29C4',
    solbar: '\u233F',
    sopf: '\uD835\uDD64',
    spades: '\u2660',
    spadesuit: '\u2660',
    spar: '\u2225',
    sqcap: '\u2293',
    sqcaps: '\u2293\uFE00',
    sqcup: '\u2294',
    sqcups: '\u2294\uFE00',
    sqsub: '\u228F',
    sqsube: '\u2291',
    sqsubset: '\u228F',
    sqsubseteq: '\u2291',
    sqsup: '\u2290',
    sqsupe: '\u2292',
    sqsupset: '\u2290',
    sqsupseteq: '\u2292',
    squ: '\u25A1',
    square: '\u25A1',
    squarf: '\u25AA',
    squf: '\u25AA',
    srarr: '\u2192',
    sscr: '\uD835\uDCC8',
    ssetmn: '\u2216',
    ssmile: '\u2323',
    sstarf: '\u22C6',
    star: '\u2606',
    starf: '\u2605',
    straightepsilon: '\u03F5',
    straightphi: '\u03D5',
    strns: '\u00AF',
    sub: '\u2282',
    subE: '\u2AC5',
    subdot: '\u2ABD',
    sube: '\u2286',
    subedot: '\u2AC3',
    submult: '\u2AC1',
    subnE: '\u2ACB',
    subne: '\u228A',
    subplus: '\u2ABF',
    subrarr: '\u2979',
    subset: '\u2282',
    subseteq: '\u2286',
    subseteqq: '\u2AC5',
    subsetneq: '\u228A',
    subsetneqq: '\u2ACB',
    subsim: '\u2AC7',
    subsub: '\u2AD5',
    subsup: '\u2AD3',
    succ: '\u227B',
    succapprox: '\u2AB8',
    succcurlyeq: '\u227D',
    succeq: '\u2AB0',
    succnapprox: '\u2ABA',
    succneqq: '\u2AB6',
    succnsim: '\u22E9',
    succsim: '\u227F',
    sum: '\u2211',
    sung: '\u266A',
    sup: '\u2283',
    supE: '\u2AC6',
    supdot: '\u2ABE',
    supdsub: '\u2AD8',
    supe: '\u2287',
    supedot: '\u2AC4',
    suphsol: '\u27C9',
    suphsub: '\u2AD7',
    suplarr: '\u297B',
    supmult: '\u2AC2',
    supnE: '\u2ACC',
    supne: '\u228B',
    supplus: '\u2AC0',
    supset: '\u2283',
    supseteq: '\u2287',
    supseteqq: '\u2AC6',
    supsetneq: '\u228B',
    supsetneqq: '\u2ACC',
    supsim: '\u2AC8',
    supsub: '\u2AD4',
    supsup: '\u2AD6',
    swArr: '\u21D9',
    swarhk: '\u2926',
    swarr: '\u2199',
    swarrow: '\u2199',
    swnwar: '\u292A',
    target: '\u2316',
    tau: '\u03C4',
    tbrk: '\u23B4',
    tcaron: '\u0165',
    tcedil: '\u0163',
    tcy: '\u0442',
    tdot: '\u20DB',
    telrec: '\u2315',
    tfr: '\uD835\uDD31',
    there4: '\u2234',
    therefore: '\u2234',
    theta: '\u03B8',
    thetasym: '\u03D1',
    thetav: '\u03D1',
    thickapprox: '\u2248',
    thicksim: '\u223C',
    thinsp: '\u2009',
    thkap: '\u2248',
    thksim: '\u223C',
    tilde: '\u02DC',
    timesb: '\u22A0',
    timesbar: '\u2A31',
    timesd: '\u2A30',
    tint: '\u222D',
    toea: '\u2928',
    top: '\u22A4',
    topbot: '\u2336',
    topcir: '\u2AF1',
    topf: '\uD835\uDD65',
    topfork: '\u2ADA',
    tosa: '\u2929',
    tprime: '\u2034',
    trade: '\u2122',
    triangle: '\u25B5',
    triangledown: '\u25BF',
    triangleleft: '\u25C3',
    trianglelefteq: '\u22B4',
    triangleq: '\u225C',
    triangleright: '\u25B9',
    trianglerighteq: '\u22B5',
    tridot: '\u25EC',
    trie: '\u225C',
    triminus: '\u2A3A',
    triplus: '\u2A39',
    trisb: '\u29CD',
    tritime: '\u2A3B',
    trpezium: '\u23E2',
    tscr: '\uD835\uDCC9',
    tscy: '\u0446',
    tshcy: '\u045B',
    tstrok: '\u0167',
    twixt: '\u226C',
    twoheadleftarrow: '\u219E',
    twoheadrightarrow: '\u21A0',
    uArr: '\u21D1',
    uHar: '\u2963',
    uarr: '\u2191',
    ubrcy: '\u045E',
    ubreve: '\u016D',
    ucy: '\u0443',
    udarr: '\u21C5',
    udblac: '\u0171',
    udhar: '\u296E',
    ufisht: '\u297E',
    ufr: '\uD835\uDD32',
    uharl: '\u21BF',
    uharr: '\u21BE',
    uhblk: '\u2580',
    ulcorn: '\u231C',
    ulcorner: '\u231C',
    ulcrop: '\u230F',
    ultri: '\u25F8',
    umacr: '\u016B',
    uogon: '\u0173',
    uopf: '\uD835\uDD66',
    uparrow: '\u2191',
    updownarrow: '\u2195',
    upharpoonleft: '\u21BF',
    upharpoonright: '\u21BE',
    uplus: '\u228E',
    upsi: '\u03C5',
    upsih: '\u03D2',
    upsilon: '\u03C5',
    upuparrows: '\u21C8',
    urcorn: '\u231D',
    urcorner: '\u231D',
    urcrop: '\u230E',
    uring: '\u016F',
    urtri: '\u25F9',
    uscr: '\uD835\uDCCA',
    utdot: '\u22F0',
    utilde: '\u0169',
    utri: '\u25B5',
    utrif: '\u25B4',
    uuarr: '\u21C8',
    uwangle: '\u29A7',
    vArr: '\u21D5',
    vBar: '\u2AE8',
    vBarv: '\u2AE9',
    vDash: '\u22A8',
    vangrt: '\u299C',
    varepsilon: '\u03F5',
    varkappa: '\u03F0',
    varnothing: '\u2205',
    varphi: '\u03D5',
    varpi: '\u03D6',
    varpropto: '\u221D',
    varr: '\u2195',
    varrho: '\u03F1',
    varsigma: '\u03C2',
    varsubsetneq: '\u228A\uFE00',
    varsubsetneqq: '\u2ACB\uFE00',
    varsupsetneq: '\u228B\uFE00',
    varsupsetneqq: '\u2ACC\uFE00',
    vartheta: '\u03D1',
    vartriangleleft: '\u22B2',
    vartriangleright: '\u22B3',
    vcy: '\u0432',
    vdash: '\u22A2',
    vee: '\u2228',
    veebar: '\u22BB',
    veeeq: '\u225A',
    vellip: '\u22EE',
    verbar: '\u007C',
    vert: '\u007C',
    vfr: '\uD835\uDD33',
    vltri: '\u22B2',
    vnsub: '\u2282\u20D2',
    vnsup: '\u2283\u20D2',
    vopf: '\uD835\uDD67',
    vprop: '\u221D',
    vrtri: '\u22B3',
    vscr: '\uD835\uDCCB',
    vsubnE: '\u2ACB\uFE00',
    vsubne: '\u228A\uFE00',
    vsupnE: '\u2ACC\uFE00',
    vsupne: '\u228B\uFE00',
    vzigzag: '\u299A',
    wcirc: '\u0175',
    wedbar: '\u2A5F',
    wedge: '\u2227',
    wedgeq: '\u2259',
    weierp: '\u2118',
    wfr: '\uD835\uDD34',
    wopf: '\uD835\uDD68',
    wp: '\u2118',
    wr: '\u2240',
    wreath: '\u2240',
    wscr: '\uD835\uDCCC',
    xcap: '\u22C2',
    xcirc: '\u25EF',
    xcup: '\u22C3',
    xdtri: '\u25BD',
    xfr: '\uD835\uDD35',
    xhArr: '\u27FA',
    xharr: '\u27F7',
    xi: '\u03BE',
    xlArr: '\u27F8',
    xlarr: '\u27F5',
    xmap: '\u27FC',
    xnis: '\u22FB',
    xodot: '\u2A00',
    xopf: '\uD835\uDD69',
    xoplus: '\u2A01',
    xotime: '\u2A02',
    xrArr: '\u27F9',
    xrarr: '\u27F6',
    xscr: '\uD835\uDCCD',
    xsqcup: '\u2A06',
    xuplus: '\u2A04',
    xutri: '\u25B3',
    xvee: '\u22C1',
    xwedge: '\u22C0',
    yacy: '\u044F',
    ycirc: '\u0177',
    ycy: '\u044B',
    yfr: '\uD835\uDD36',
    yicy: '\u0457',
    yopf: '\uD835\uDD6A',
    yscr: '\uD835\uDCCE',
    yucy: '\u044E',
    zacute: '\u017A',
    zcaron: '\u017E',
    zcy: '\u0437',
    zdot: '\u017C',
    zeetrf: '\u2128',
    zeta: '\u03B6',
    zfr: '\uD835\uDD37',
    zhcy: '\u0436',
    zigrarr: '\u21DD',
    zopf: '\uD835\uDD6B',
    zscr: '\uD835\uDCCF',
    zwj: '\u200D',
    zwnj: '\u200C'
};
/**
 * entity is a map from HTML entity names to their values.
 *
 * @see https://html.spec.whatwg.org/multipage/named-characters.html
 */ var entity_fullNamedEntities = {};
var isBuild = false;
function entity_buildFullNamedEntities() {
    if (isBuild) {
        return;
    }
    Object.keys(namedEntitiesWithoutSemicolon).forEach(function(entity) {
        entity_fullNamedEntities[entity + ';'] = namedEntitiesWithoutSemicolon[entity];
        entity_fullNamedEntities[entity] = namedEntitiesWithoutSemicolon[entity];
    });
    Object.keys(namedEntities).forEach(function(entity) {
        entity_fullNamedEntities[entity + ';'] = namedEntities[entity];
    });
    isBuild = true;
}

//# sourceMappingURL=entity.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/html/escape.js
/* eslint-disable @typescript-eslint/quotes */ 



var escapeReplacer = /*#__PURE__*/ new Replacer({
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    "'": '&#39;',
    '"': '&quot;'
});
var unescapeReplacer = /*#__PURE__*/ new Replacer({
    '&amp;': '&',
    '&#38;': '&',
    '&lt;': '<',
    '&#60;': '<',
    '&gt;': '>',
    '&#62;': '>',
    '&apos;': "'",
    '&#39;': "'",
    '&quot;': '"',
    '&#34;': '"'
});
var escape_namedEntities = {
    'amp;': '&',
    'lt;': '<',
    'gt;': '>',
    'quot;': '"',
    'apos;': "'"
};
/**
 * Safely escape HTML entities such as `&`, `<`, `>`, `"`, and `'`
 * @param {string} input
 */ function escape_escape(input) {
    return escapeReplacer.replace(input);
}
/**
 * Unescape HTML entities such as `&`, `<`, `>`, `"`, and `'`
 * @param {string} input
 */ function escape_unescape(input) {
    return unescapeReplacer.replace(input);
}
var outOfBoundsChar = /*#__PURE__*/ (/* unused pure expression or super */ null && (String.fromCharCode(65533)));
var ENCODE_REGEX = /(?:[<>'"&\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g;
function encodeHTMLEntities(input) {
    if (input == null) {
        return '';
    }
    return input.replace(ENCODE_REGEX, function(entity) {
        var code = entity.length > 1 ? getCodePointAt(entity, 0) : entity.charCodeAt(0);
        return '&#' + String(code) + ';';
    });
}
var DECODE_REGEX = /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g;
function decodeString(input, entities) {
    if (typeof input !== 'string' || !input) {
        return '';
    }
    return input.replace(DECODE_REGEX, function(entity) {
        if (entity[1] === '#') {
            // We need to have at least "&#.".
            if (entity.length <= 3) {
                return entity;
            }
            var secondChar = entity.charAt(2);
            var code = secondChar === 'x' || secondChar === 'X' ? parseInt(entity.substr(3).toLowerCase(), 16) : parseInt(entity.substr(2));
            if (code >= 0x10ffff) {
                return outOfBoundsChar;
            }
            if (code > 65535) {
                return fromCodePoint(code);
            }
            return String.fromCharCode(numericUnicodeMap[code] || code);
        }
        return entities[entity.slice(1)] || entity;
    });
}
function decodeHTMLEntitiesDeep(input) {
    if (typeof input === 'string') {
        return decodeHTMLEntities(input);
    }
    if ((typeof input === "undefined" ? "undefined" : _type_of(input)) === 'object') {
        var correctType = Object.prototype.toString.apply(input);
        if (correctType === '[object Array]') {
            return input.map(function(item) {
                return decodeHTMLEntitiesDeep(item);
            });
        }
        if (correctType === '[object Object]') {
            var response = {};
            Object.keys(input).forEach(function(item) {
                response[decodeHTMLEntities(item)] = decodeHTMLEntitiesDeep(input[item]);
            });
            return response;
        }
    }
    return input;
}
/**
 * `decodeHTMLEntities` декодирует зарезервированные HTML-сущности.
 *
 * Если нужна возможность декодировать все сущности, используйте
 * {@link decodeHTMLFullEntities}
 *
 * @param input Текст который необходимо декодировать
 * @param entities Кастомный словарь сущностей `{'lt;': '<'}`
 */ function decodeHTMLEntities(input) {
    var entities = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : escape_namedEntities;
    return decodeString(input, entities);
}
/**
 * `decodeHTMLFullEntities` декодирует все HTML-сущности.
 *
 * Если вам нужно декодировать не все сущности, используйте
 * {@link decodeHTMLEntities} и кастомный словарь.
 *
 * @param input Текст который необходимо декодировать
 */ function decodeHTMLFullEntities(input) {
    buildFullNamedEntities();
    return decodeString(input, fullNamedEntities);
}

//# sourceMappingURL=escape.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/html/index.js


//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/node_modules/clsx/dist/clsx.mjs
function r(e){var t,f,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=" "),n+=f)}else for(f in e)e[f]&&(n&&(n+=" "),n+=f);return n}function clsx(){for(var e,t,f=0,n="",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=" "),n+=t);return n}/* harmony default export */ const dist_clsx = ((/* unused pure expression or super */ null && (clsx)));
;// CONCATENATED MODULE: ../../node_modules/@swc/helpers/esm/_type_of.js
function _type_of_type_of(obj) {
    "@swc/helpers - typeof";

    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}


;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/typecheck/type_checkers.js

function isObjectLike(object) {
    return (typeof object === "undefined" ? "undefined" : _type_of_type_of(object)) === 'object' && object !== null;
}
function isArray(object) {
    return Array.isArray(object);
}
function isObject(object) {
    return Object.prototype.toString.call(object) === '[object Object]';
}
function isUndefined(object) {
    return typeof object === 'undefined';
}
function isFunction(object) {
    return typeof object === 'function';
}
function isFormData(object) {
    return object && Object.prototype.toString.call(object) === '[object FormData]';
}
function isString(object) {
    return typeof object === 'string';
}
function isNumber(object) {
    return typeof object === 'number';
}
function isPromiseLike(object) {
    return (isObject(object) || isFunction(object)) && isFunction(object.then);
}

//# sourceMappingURL=type_checkers.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/other/equal.js

function equal_isEqual(value, other) {
    if (value === other) {
        return true;
    }
    if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
    }
    if (isObjectLike(value) && isObjectLike(other)) {
        if (Object.keys(value).length !== Object.keys(other).length) {
            return false;
        }
        for(var prop in value){
            if (value.hasOwnProperty(prop) && other.hasOwnProperty(prop)) {
                if (!equal_isEqual(value[prop], other[prop])) {
                    return false;
                }
            } else {
                return false;
            }
        }
        return true;
    }
    return false;
}

//# sourceMappingURL=equal.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/other/functions.js
/**
 * Функция, которая ничего не делает
 */ var functions_noop = function() {};
// Совсем ничего не делает
/**
 * Создает функцию, которая вызовет `fn` только один раз. Последующие вызовы
 * будут проигнорированы.
 *
 * @example
 * ```ts
 * import {once} from '@vkontakte/vkjs';
 *
 * let counter = 0;
 * const onceFn = once(() => counter++);
 *
 * onceFn();
 * onceFn();
 * onceFn();
 *
 * console.log(counter); // 1
 * ```
 *
 * @param fn Функция, которую необходимо вызвать только один раз
 */ function once(fn) {
    // TODO: once должна кэшировать данные, но она это не делает
    var called = false;
    return function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
            args[_key] = arguments[_key];
        }
        if (called) {
            return;
        }
        called = true;
        return fn.apply(this, args);
    };
}

//# sourceMappingURL=functions.js.map
;// CONCATENATED MODULE: ../../node_modules/@swc/helpers/esm/_object_spread.js


function _object_spread_object_spread(target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);

        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(
                Object.getOwnPropertySymbols(source).filter(function(sym) {
                    return Object.getOwnPropertyDescriptor(source, sym).enumerable;
                })
            );
        }

        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }

    return target;
}


;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/other/querystring.js


function querystring_parse(input) {
    if (typeof input !== 'string') {
        return {};
    }
    var query = input.trim().replace(/^[?#&]/, '');
    if (!query) {
        return {};
    }
    var str = query.substring(query.indexOf('?') + 1);
    return str.split('&').reduce(function(acc, item) {
        var param = item.split('=');
        if (param[1]) {
            acc[decodeURIComponent(param[0])] = decodeURIComponent(param[1].replace(/\+/g, ' '));
        }
        return acc;
    }, {});
}
/**
   * URL encode the keys and values
   *
   * @default true
   */ /**
   * Skip keys with `null` as the value.
   * Keys with `undefined` as the value are always ignored.
   *
   * @default true
   */ function stringify(data) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if ((typeof data === "undefined" ? "undefined" : _type_of_type_of(data)) !== 'object' || data === null) {
        return '';
    }
    options = _object_spread_object_spread({
        encode: true
    }, options);
    var encode = function(value) {
        return options.encode ? encodeURIComponent(value) : String(value);
    };
    return Object.keys(data).reduce(function(acc, key) {
        var value = data[key];
        if (value === undefined) {
            return acc;
        }
        if (value === null) {
            if (!options.skipNull) {
                acc.push([
                    encode(key),
                    ''
                ].join('='));
            }
            return acc;
        }
        if (Array.isArray(value)) {
            value.map(function(arrayItem) {
                acc.push("".concat(encode(key), "[]=").concat(encode(arrayItem)));
            }).join();
            return acc;
        }
        acc.push([
            encode(key),
            encode(value)
        ].join('='));
        return acc;
    }, []).join('&');
}
var querystring = {
    parse: querystring_parse,
    stringify: stringify
};

//# sourceMappingURL=querystring.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/other/react_utils.js
function react_utils_hasReactNode(value) {
    return value !== undefined && value !== false && value !== null && value !== '';
}
function react_utils_isPrimitiveReactNode(node) {
    return typeof node === 'string' || typeof node === 'number';
}

//# sourceMappingURL=react_utils.js.map
;// CONCATENATED MODULE: ../../node_modules/@swc/helpers/esm/_instanceof.js
function _instanceof(left, right) {
    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
        return !!right[Symbol.hasInstance](left);
    } else return left instanceof right;
}


;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/other/storage.js




var CustomStorage = /*#__PURE__*/ function() {
    "use strict";
    function CustomStorage() {
        var _this = this;
        _class_call_check(this, CustomStorage);
        _define_property(this, "data", {});
        _define_property(this, "getItem", function(key) {
            return _this.data.hasOwnProperty(key) ? _this.data[key] : null;
        });
        _define_property(this, "keys", function() {
            return Object.keys(_this.data);
        });
    }
    _create_class(CustomStorage, [
        {
            key: "setItem",
            value: function setItem(key, val) {
                this.data[key] = String(val);
            }
        },
        {
            key: "removeItem",
            value: function removeItem(id) {
                delete this.data[id];
            }
        },
        {
            key: "clear",
            value: function clear() {
                this.data = {};
            }
        },
        {
            key: "length",
            get: function get() {
                return Object.keys(this.data).length;
            }
        },
        {
            key: "key",
            value: function key(index) {
                return Object.keys(this.data)[index];
            }
        }
    ]);
    return CustomStorage;
}();
var dummyKey = 'vk-ls-dummy';
var dummyContent = 'test';
var ls;
function getLocalStorage() {
    if (ls) {
        return ls;
    }
    try {
        // Проверяем, нет ли в FF или Safari cross domain security restrictions
        window.localStorage.setItem(dummyKey, dummyContent);
        if (dummyContent !== window.localStorage.getItem(dummyKey)) {
            throw new Error('localStorage is broken');
        }
        window.localStorage.removeItem(dummyKey);
        ls = window.localStorage;
    } catch (e) {
        ls = new CustomStorage();
    }
    return ls;
}
/**
 * Обертка над localStorage для кода, который может использоваться на других сайтах
 * Firefox блокирует доступ к localStorage для скриптов с других доменов
 */ var localStorage = {
    setItem: function(key, val) {
        return getLocalStorage().setItem(key, val);
    },
    getItem: function(key) {
        return getLocalStorage().getItem(key);
    },
    removeItem: function(key) {
        return getLocalStorage().removeItem(key);
    },
    clear: function() {
        return getLocalStorage().clear();
    },
    length: function() {
        return getLocalStorage().length;
    },
    key: function(index) {
        return getLocalStorage().key(index);
    },
    keys: function keys() {
        var storage = getLocalStorage();
        if (_instanceof(storage, CustomStorage)) {
            return storage.keys();
        } else {
            return Object.keys(storage);
        }
    },
    getPrefixedKeys: function(prefix) {
        return localStorage.keys().filter(function(key) {
            return key.startsWith(prefix);
        });
    }
};
var sessionStorageCache;
function getSessionStorage() {
    if (sessionStorageCache) {
        return sessionStorageCache;
    }
    try {
        // Проверяем, нет ли в FF или Safari cross domain security restrictions
        window.sessionStorage.setItem(dummyKey, dummyContent);
        if (dummyContent !== window.sessionStorage.getItem(dummyKey)) {
            throw new Error('sessionStorage is broken');
        }
        window.sessionStorage.removeItem(dummyKey);
        sessionStorageCache = window.sessionStorage;
    } catch (e) {
        sessionStorageCache = new CustomStorage();
    }
    return sessionStorageCache;
}
var sessionStorage = {
    setItem: function(key, val) {
        return getSessionStorage().setItem(key, val);
    },
    getItem: function(key) {
        return getSessionStorage().getItem(key);
    },
    removeItem: function(key) {
        return getSessionStorage().removeItem(key);
    },
    clear: function() {
        return getSessionStorage().clear();
    },
    length: function() {
        return getSessionStorage().length;
    },
    key: function(index) {
        return getSessionStorage().key(index);
    },
    keys: function keys() {
        var storage = getSessionStorage();
        if (_instanceof(storage, CustomStorage)) {
            return storage.keys();
        } else {
            return Object.keys(storage);
        }
    },
    getPrefixedKeys: function(prefix) {
        return sessionStorage.keys().filter(function(key) {
            return key.startsWith(prefix);
        });
    }
};

//# sourceMappingURL=storage.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/other/index.js
/**
 * classNames
 */ 
/**
 * clipboard
 */ 
/**
 * common
 */ 
/**
 * detections
 */ 



/**
 * OffsetRect
 */ 

/**
 * objects
 */ 
/**
 * querystring
 */ 
/**
 * random
 */ 





//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/text/transliteration.js




/**
 * Словарь транслитерации ВКонтакте из русского в английский.
 */ var transliterationDictVKRusToEng = {
    'А': 'A',
    'Б': 'B',
    'В': 'V',
    'Г': 'G',
    '\xa5': 'G',
    'Д': 'D',
    'Е': 'E',
    'Є': 'Ye',
    'Ё': 'Yo',
    'Ж': 'Zh',
    'З': 'Z',
    'И': 'I',
    'Ї': 'Yi',
    '\xb2': 'I',
    'Й': 'J',
    'К': 'K',
    'Л': 'L',
    'М': 'M',
    'Н': 'N',
    'О': 'O',
    'П': 'P',
    'Р': 'R',
    'С': 'S',
    'Т': 'T',
    'У': 'U',
    'Ў': 'W',
    'Ф': 'F',
    'Х': 'Kh',
    'Ц': 'Ts',
    'Ч': 'Ch',
    'Ш': 'Sh',
    'Щ': 'Sch',
    'Ы': 'Y',
    'Ый': 'Y',
    'Э': 'E',
    'Ю': 'Yu',
    'Я': 'Ya',
    'а': 'a',
    'б': 'b',
    'в': 'v',
    'г': 'g',
    '\xb4': 'g',
    'д': 'd',
    'е': 'e',
    'є': 'ye',
    'ё': 'yo',
    'ж': 'zh',
    'з': 'z',
    'ия': 'ia',
    'ий': 'y',
    'и': 'i',
    'й': 'y',
    'ї': 'yi',
    '\xb3': 'i',
    'кс': 'x',
    'к': 'k',
    'л': 'l',
    'м': 'm',
    'н': 'n',
    'о': 'o',
    'п': 'p',
    'р': 'r',
    'с': 's',
    'т': 't',
    'у': 'u',
    'ў': 'w',
    'ф': 'f',
    'х': 'kh',
    'ц': 'ts',
    'ч': 'ch',
    'ш': 'sh',
    'щ': 'sch',
    'ъ': '',
    'ый': 'y',
    'ы': 'y',
    'ь': '',
    'ье': 'ye',
    'ьо': 'io',
    'э': 'e',
    'ю': 'yu',
    'я': 'ya'
};
/**
 * Словарь транслитерации ВКонтакте из английского в русский.
 */ var transliterationDictVKEngToRus = {
    'a': 'а',
    'b': 'б',
    'v': 'в',
    'g': 'г',
    'd': 'д',
    'e': 'е',
    'z': 'з',
    'i': 'и',
    'j': 'й',
    'k': 'к',
    'l': 'л',
    'm': 'м',
    'n': 'н',
    'o': 'о',
    'p': 'п',
    'r': 'р',
    's': 'с',
    't': 'т',
    'u': 'у',
    'f': 'ф',
    'h': 'х',
    'c': 'ц',
    'y': 'ы',
    'A': 'А',
    'B': 'Б',
    'V': 'В',
    'G': 'Г',
    'D': 'Д',
    'E': 'Е',
    'Z': 'З',
    'I': 'И',
    'J': 'Й',
    'K': 'К',
    'L': 'Л',
    'M': 'М',
    'N': 'Н',
    'O': 'О',
    'P': 'П',
    'R': 'Р',
    'S': 'С',
    'T': 'Т',
    'U': 'У',
    'F': 'Ф',
    'H': 'Х',
    'C': 'Ц',
    'Y': 'Ы',
    'w': 'в',
    'q': 'к',
    'x': 'кс',
    'W': 'В',
    'Q': 'К',
    'X': 'КС',
    'yo': 'ё',
    'zh': 'ж',
    'kh': 'х',
    'ts': 'ц',
    'ch': 'ч',
    'sch': 'щ',
    'shch': 'щ',
    'sh': 'ш',
    'eh': 'э',
    'yu': 'ю',
    'ya': 'я',
    'YO': 'Ё',
    'ZH': 'Ж',
    'KH': 'Х',
    'TS': 'Ц',
    'CH': 'Ч',
    'SCH': 'Щ',
    'SHCH': 'Щ',
    'SH': 'Ш',
    'EH': 'Э',
    'YU': 'Ю',
    'YA': 'Я',
    "'": 'ь'
};
/**
 * Словарь транслитерации ГОСТ 7.79-2000 (ISO 9-95) по по системе Б
 * (с использованием буквосочетаний) для русского языка.
 */ var transliterationDictGostLetterCombinationsRu = {
    'А': 'A',
    'Б': 'B',
    'В': 'V',
    'Г': 'G',
    'Д': 'D',
    'Е': 'E',
    'Ё': 'Yo',
    'Ж': 'Zh',
    'З': 'Z',
    'И': 'I',
    'Й': 'J',
    'К': 'K',
    'Л': 'L',
    'М': 'M',
    'Н': 'N',
    'О': 'O',
    'П': 'P',
    'Р': 'R',
    'С': 'S',
    'Т': 'T',
    'У': 'U',
    'Ф': 'F',
    'Х': 'X',
    'Ц': 'Cz',
    'Ч': 'Ch',
    'Ш': 'Sh',
    'Щ': 'Shh',
    'Ъ': '``',
    'Ы': 'Y`',
    'Ь': '`',
    'Э': 'E`',
    'Ю': 'Yu',
    'Я': 'Ya',
    'а': 'a',
    'б': 'b',
    'в': 'v',
    'г': 'g',
    'д': 'd',
    'е': 'e',
    'ё': 'yo',
    'ж': 'zh',
    'з': 'z',
    'и': 'i',
    'й': 'j',
    'к': 'k',
    'л': 'l',
    'м': 'm',
    'н': 'n',
    'о': 'o',
    'п': 'p',
    'р': 'r',
    'с': 's',
    'т': 't',
    'у': 'u',
    'ф': 'f',
    'х': 'x',
    'ц': 'cz',
    'ч': 'ch',
    'ш': 'sh',
    'щ': 'shh',
    'ъ': '``',
    'ы': 'y`',
    'ь': '`',
    'э': 'e`',
    'ю': 'yu',
    'я': 'ya',
    '’': "'",
    // апостроф
    'Ѣ': 'ye',
    // ять
    'Ѳ': 'fh',
    //	фита
    'Ѵ': 'yh'
};
// ижица
/**
 * Транслитератор, для передачи знаков одной письменности знаками другой.
 */ var Transliterator = /*#__PURE__*/ function() {
    "use strict";
    function Transliterator(dict) {
        _class_call_check(this, Transliterator);
        _define_property(this, "replacer", void 0);
        this.replacer = new Replacer(dict);
    }
    _create_class(Transliterator, [
        {
            /**
   * Производит транслитерацию текста
   */ key: "transliteration",
            value: function transliteration(text) {
                return this.replacer.replace(text);
            }
        }
    ]);
    return Transliterator;
}();
/**
 * Транслитератор ВКонтакте из русского в английский
 */ var transliteratorVKRusToEng = /*#__PURE__*/ new Transliterator(transliterationDictVKRusToEng);
/**
 * Транслитератор ВКонтакте из английского в русский
 */ var transliteratorVKEngToRus = /*#__PURE__*/ new Transliterator(transliterationDictVKEngToRus);
/**
 * Транслитератор ГОСТ 7.79-2000 (ISO 9-95) по системе Б
 * (с использованием буквосочетаний) для русского языка.
 */ var transliteratorGostLetterCombinationsRu = /*#__PURE__*/ new Transliterator(transliterationDictGostLetterCombinationsRu);

//# sourceMappingURL=transliteration.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/text/index.js



//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/typecheck/index.js


//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkjs/lib/es6/index.js










//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ./src/components/AdaptivityProvider/AdaptivityContext.tsx

var AdaptivityContext_AdaptivityContext = /*#__PURE__*/ react.createContext({});

;// CONCATENATED MODULE: ./src/hooks/useAdaptivity.ts


/**
 * Возвращает сырые данные из AdaptivityProvider.
 */ var useAdaptivity_useAdaptivity = function() {
    return react.useContext(AdaptivityContext_AdaptivityContext);
};

;// CONCATENATED MODULE: ./src/lib/children.ts
// copied from react-children-utilities
// @see https://github.com/fernandopasik/react-children-utilities/tree/main
function children_instanceof(left, right) {
    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
        return !!right[Symbol.hasInstance](left);
    } else {
        return left instanceof right;
    }
}

var childToString = function(child) {
    if (typeof child === 'undefined' || child === null || typeof child === 'boolean') {
        return '';
    }
    if (JSON.stringify(child) === '{}') {
        return '';
    }
    return child.toString();
};
var children_getTextFromChildren = function(children) {
    if (!children_instanceof(children, Array) && !(0,react.isValidElement)(children)) {
        return childToString(children);
    }
    return react.Children.toArray(children).reduce(function(text, child) {
        var newText = '';
        var isValidElementResult = (0,react.isValidElement)(child);
        var hasChildren = isValidElementResult && 'children' in child.props;
        if (isValidElementResult && hasChildren) {
            newText = children_getTextFromChildren(child.props.children);
        } else if (isValidElementResult && !hasChildren) {
            newText = '';
        } else {
            newText = childToString(child);
        }
        return text.concat(newText);
    }, '');
};

;// CONCATENATED MODULE: ./src/lib/accessibility.ts

var FOCUSABLE_ELEMENTS_LIST = [
    'a[href]',
    'area[href]',
    'input:not([disabled]):not([hidden]):not([type="hidden"]):not([aria-hidden])',
    'select:not([disabled]):not([hidden]):not([aria-hidden])',
    'textarea:not([disabled])',
    'button:not([disabled])',
    'iframe',
    'audio',
    'video',
    '[contenteditable]',
    '[tabindex]:not([tabindex="-1"])'
];
var accessibility_Keys = {
    ENTER: 'Enter',
    SPACE: 'Space',
    TAB: 'Tab',
    ESCAPE: 'Escape',
    HOME: 'Home',
    END: 'End',
    DELETE: 'Delete',
    BACKSPACE: 'Backspace',
    ARROW_LEFT: 'ArrowLeft',
    ARROW_RIGHT: 'ArrowRight',
    ARROW_UP: 'ArrowUp',
    ARROW_DOWN: 'ArrowDown',
    PAGE_UP: 'PageUp',
    PAGE_DOWN: 'PageDown'
};
var EVENT_KEY_TO_COMMON_KEY_MAP = new Map([
    [
        'Enter',
        accessibility_Keys.ENTER
    ],
    [
        'Space',
        accessibility_Keys.SPACE
    ],
    [
        'Spacebar',
        accessibility_Keys.SPACE
    ],
    [
        ' ',
        accessibility_Keys.SPACE
    ],
    [
        'Tab',
        accessibility_Keys.TAB
    ],
    [
        'Escape',
        accessibility_Keys.ESCAPE
    ],
    [
        'Home',
        accessibility_Keys.HOME
    ],
    [
        'End',
        accessibility_Keys.END
    ],
    [
        'ArrowLeft',
        accessibility_Keys.ARROW_LEFT
    ],
    [
        'ArrowRight',
        accessibility_Keys.ARROW_RIGHT
    ],
    [
        'ArrowUp',
        accessibility_Keys.ARROW_UP
    ],
    [
        'ArrowDown',
        accessibility_Keys.ARROW_DOWN
    ],
    [
        'PageUp',
        accessibility_Keys.PAGE_UP
    ],
    [
        'PageDown',
        accessibility_Keys.PAGE_DOWN
    ]
]);
function accessibility_pressedKey(event) {
    var foundKey = EVENT_KEY_TO_COMMON_KEY_MAP.get(event.key);
    return foundKey ? foundKey : null;
}
var FOCUS_ALLOW_LIST_KEYS = new Set([
    accessibility_Keys.TAB,
    accessibility_Keys.ARROW_LEFT,
    accessibility_Keys.ARROW_RIGHT,
    accessibility_Keys.ARROW_UP,
    accessibility_Keys.ARROW_DOWN,
    accessibility_Keys.BACKSPACE,
    accessibility_Keys.DELETE
]);
function accessibility_isKeyboardFocusingStarted(event) {
    return FOCUS_ALLOW_LIST_KEYS.has(event.key);
}
function shouldTriggerClickOnEnterOrSpace(e) {
    var el = e.target;
    var tagName = el.tagName;
    var role = el.getAttribute('role');
    var isValidKeyboardEventTarget = el.isContentEditable !== true && tagName !== 'INPUT' && tagName !== 'TEXTAREA' && (role === 'button' || role === 'link' || role === 'menuitem');
    var isNativeAnchorEl = tagName === 'A' && el.hasAttribute('href');
    var keyPressed = accessibility_pressedKey(e);
    return isValidKeyboardEventTarget && // trigger buttons on Space
    (keyPressed === accessibility_Keys.SPACE && role === 'button' || // trigger non-native links and buttons on Enter
    keyPressed === accessibility_Keys.ENTER && !isNativeAnchorEl);
}
/**
 * @see https://doka.guide/a11y/aria-expanded/
 */ var accessibility_injectAriaExpandedPropByRole = function(props, state, role) {
    switch(role){
        case 'dialog':
        case 'menu':
        case 'application':
        case 'tab':
        case 'menuitem':
        case 'treeitem':
        case 'gridcell':
            props['aria-expanded'] = state;
            return props;
        default:
            return props;
    }
};
function hasAccessibleName(param) {
    var ariaLabel = param['aria-label'], ariaLabelledBy = param['aria-labelledby'], title = param.title, children = param.children;
    if (ariaLabel || ariaLabelledBy || title) {
        return true;
    }
    var accessibleLabel = getTextFromChildren(children);
    if (accessibleLabel.trim() !== '') {
        return true;
    }
    return false;
}
/**
 * @private
 */ var accessibility_getHorizontalFocusGoTo = function(keys) {
    switch(keys){
        case accessibility_Keys.ARROW_UP:
        case accessibility_Keys.ARROW_LEFT:
            return 'prev';
        case accessibility_Keys.ARROW_DOWN:
        case accessibility_Keys.ARROW_RIGHT:
            return 'next';
    }
};

;// CONCATENATED MODULE: ../../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs
/**
 * Custom positioning reference element.
 * @see https://floating-ui.com/docs/virtual-elements
 */

const sides = (/* unused pure expression or super */ null && (['top', 'right', 'bottom', 'left']));
const alignments = (/* unused pure expression or super */ null && (['start', 'end']));
const placements = /*#__PURE__*/(/* unused pure expression or super */ null && (sides.reduce((acc, side) => acc.concat(side, side + "-" + alignments[0], side + "-" + alignments[1]), [])));
const min = Math.min;
const max = Math.max;
const round = Math.round;
const floor = Math.floor;
const createCoords = v => ({
  x: v,
  y: v
});
const oppositeSideMap = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
const oppositeAlignmentMap = {
  start: 'end',
  end: 'start'
};
function floating_ui_utils_clamp(start, value, end) {
  return max(start, min(value, end));
}
function evaluate(value, param) {
  return typeof value === 'function' ? value(param) : value;
}
function getSide(placement) {
  return placement.split('-')[0];
}
function getAlignment(placement) {
  return placement.split('-')[1];
}
function getOppositeAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}
function getAxisLength(axis) {
  return axis === 'y' ? 'height' : 'width';
}
function getSideAxis(placement) {
  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';
}
function getAlignmentAxis(placement) {
  return getOppositeAxis(getSideAxis(placement));
}
function getAlignmentSides(placement, rects, rtl) {
  if (rtl === void 0) {
    rtl = false;
  }
  const alignment = getAlignment(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const length = getAxisLength(alignmentAxis);
  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';
  if (rects.reference[length] > rects.floating[length]) {
    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
  }
  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];
}
function getExpandedPlacements(placement) {
  const oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);
}
function getSideList(side, isStart, rtl) {
  const lr = ['left', 'right'];
  const rl = ['right', 'left'];
  const tb = ['top', 'bottom'];
  const bt = ['bottom', 'top'];
  switch (side) {
    case 'top':
    case 'bottom':
      if (rtl) return isStart ? rl : lr;
      return isStart ? lr : rl;
    case 'left':
    case 'right':
      return isStart ? tb : bt;
    default:
      return [];
  }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
  const alignment = getAlignment(placement);
  let list = getSideList(getSide(placement), direction === 'start', rtl);
  if (alignment) {
    list = list.map(side => side + "-" + alignment);
    if (flipAlignment) {
      list = list.concat(list.map(getOppositeAlignmentPlacement));
    }
  }
  return list;
}
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);
}
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getPaddingObject(padding) {
  return typeof padding !== 'number' ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  const {
    x,
    y,
    width,
    height
  } = rect;
  return {
    width,
    height,
    top: y,
    left: x,
    right: x + width,
    bottom: y + height,
    x,
    y
  };
}



;// CONCATENATED MODULE: ../../node_modules/@vkontakte/vkui-floating-ui/utils/dom/floating-ui.utils.dom.esm.js

function getNodeName(node) {
    if (isNode(node)) {
        return (node.nodeName || '').toLowerCase();
    }
    // Mocked nodes in testing environments may not be instances of Node. By
    // returning `#document` an infinite loop won't occur.
    // https://github.com/floating-ui/floating-ui/issues/2317
    return '#document';
}
function floating_ui_utils_dom_esm_getWindow(node) {
    var _node$ownerDocument;
    return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getDocumentElement(node) {
    var _ref;
    return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
}
function isNode(value) {
    return _instanceof(value, Node) || _instanceof(value, floating_ui_utils_dom_esm_getWindow(value).Node);
}
function floating_ui_utils_dom_esm_isElement(value) {
    return _instanceof(value, Element) || _instanceof(value, floating_ui_utils_dom_esm_getWindow(value).Element);
}
function floating_ui_utils_dom_esm_isHTMLElement(value) {
    return _instanceof(value, HTMLElement) || _instanceof(value, floating_ui_utils_dom_esm_getWindow(value).HTMLElement);
}
function isShadowRoot(value) {
    // Browsers without `ShadowRoot` support.
    if (typeof ShadowRoot === 'undefined') {
        return false;
    }
    return _instanceof(value, ShadowRoot) || _instanceof(value, floating_ui_utils_dom_esm_getWindow(value).ShadowRoot);
}
function isOverflowElement(element) {
    var _getComputedStyle = floating_ui_utils_dom_esm_getComputedStyle(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY, display = _getComputedStyle.display;
    return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && ![
        'inline',
        'contents'
    ].includes(display);
}
function isTableElement(element) {
    return [
        'table',
        'td',
        'th'
    ].includes(getNodeName(element));
}
function isContainingBlock(element) {
    var webkit = isWebKit();
    var css = floating_ui_utils_dom_esm_getComputedStyle(element);
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block
    return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || [
        'transform',
        'perspective',
        'filter'
    ].some(function(value) {
        return (css.willChange || '').includes(value);
    }) || [
        'paint',
        'layout',
        'strict',
        'content'
    ].some(function(value) {
        return (css.contain || '').includes(value);
    });
}
function getContainingBlock(element) {
    var currentNode = getParentNode(element);
    while(floating_ui_utils_dom_esm_isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)){
        if (isContainingBlock(currentNode)) {
            return currentNode;
        }
        currentNode = getParentNode(currentNode);
    }
    return null;
}
function isWebKit() {
    if (typeof CSS === 'undefined' || !CSS.supports) return false;
    return CSS.supports('-webkit-backdrop-filter', 'none');
}
function isLastTraversableNode(node) {
    return [
        'html',
        'body',
        '#document'
    ].includes(getNodeName(node));
}
function floating_ui_utils_dom_esm_getComputedStyle(element) {
    return floating_ui_utils_dom_esm_getWindow(element).getComputedStyle(element);
}
function getNodeScroll(element) {
    if (floating_ui_utils_dom_esm_isElement(element)) {
        return {
            scrollLeft: element.scrollLeft,
            scrollTop: element.scrollTop
        };
    }
    return {
        scrollLeft: element.pageXOffset,
        scrollTop: element.pageYOffset
    };
}
function getParentNode(node) {
    if (getNodeName(node) === 'html') {
        return node;
    }
    var result = // Step into the shadow DOM of the parent of a slotted node.
    node.assignedSlot || // DOM Element detected.
    node.parentNode || // ShadowRoot detected.
    isShadowRoot(node) && node.host || // Fallback.
    getDocumentElement(node);
    return isShadowRoot(result) ? result.host : result;
}
function getNearestOverflowAncestor(node) {
    var parentNode = getParentNode(node);
    if (isLastTraversableNode(parentNode)) {
        return node.ownerDocument ? node.ownerDocument.body : node.body;
    }
    if (floating_ui_utils_dom_esm_isHTMLElement(parentNode) && isOverflowElement(parentNode)) {
        return parentNode;
    }
    return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list, traverseIframes) {
    var _node$ownerDocument2;
    if (list === void 0) {
        list = [];
    }
    if (traverseIframes === void 0) {
        traverseIframes = true;
    }
    var scrollableAncestor = getNearestOverflowAncestor(node);
    var isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
    var win = floating_ui_utils_dom_esm_getWindow(scrollableAncestor);
    if (isBody) {
        return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);
    }
    return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
}


;// CONCATENATED MODULE: ./src/lib/dom.tsx
function dom_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function dom_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            dom_define_property(target, key, source[key]);
        });
    }
    return target;
}






/* eslint-disable no-restricted-globals */ var dom_getDOM = function() {
    return {
        window: dom_canUseDOM ? window : undefined,
        document: dom_canUseDOM ? document : undefined
    };
};
/* eslint-enable no-restricted-globals */ var dom_DOMContext = /*#__PURE__*/ react.createContext(dom_getDOM());
var dom_useDOM = function() {
    return react.useContext(dom_DOMContext);
};
/**
 * В случае, если используется DOMContext, при проверке 'node instanceOf Window' – Window может быть
 * другим объектом.
 */ var isWindow = function(node) {
    return node !== null && node !== undefined && 'navigator' in node;
};
var isBody = function(node) {
    return node !== null && node !== undefined && 'tagName' in node && node.tagName === 'BODY';
};
var isDocumentElement = function(node) {
    return node !== null && node !== undefined && 'tagName' in node && node.tagName === 'HTML';
};
function withDOM(Component) {
    var WithDOM = function(props) {
        var dom = dom_useDOM();
        return /*#__PURE__*/ react.createElement(Component, dom_object_spread({}, props, dom));
    };
    return WithDOM;
}
function dom_blurActiveElement(document1) {
    if (document1 && document1.activeElement) {
        document1.activeElement.blur();
    }
}
var TRANSFORM_DEFAULT_VALUES = [
    'none',
    'initial',
    'inherit',
    'unset'
];
var WILL_CHANGE_DEFAULT_VALUES = [
    'auto',
    'initial',
    'inherit',
    'unset'
];
function getTransformedParentCoords(element) {
    var parentNode = element.parentNode;
    while(parentNode !== null){
        if (floating_ui_utils_dom_esm_isHTMLElement(parentNode)) {
            var _getComputedStyle = getComputedStyle(parentNode), transform = _getComputedStyle.transform, willChange = _getComputedStyle.willChange;
            if (!TRANSFORM_DEFAULT_VALUES.includes(transform) || !WILL_CHANGE_DEFAULT_VALUES.includes(willChange)) {
                var _parentNode_getBoundingClientRect = parentNode.getBoundingClientRect(), x = _parentNode_getBoundingClientRect.x, y = _parentNode_getBoundingClientRect.y;
                return {
                    x: x,
                    y: y
                };
            }
        }
        parentNode = parentNode.parentNode;
    }
    return {
        x: 0,
        y: 0
    };
}
var getBoundingClientRect = function(node) {
    var isFixedStrategy = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
    var element = isWindow(node) ? node.document.documentElement : node;
    var clientRect = element.getBoundingClientRect();
    if (isDocumentElement(element)) {
        /**
     * Если на странице не используется `html, body { height: 100% }` (или `height: 100vh`), то
     * `height`, полученный из `document.documentElement.getBoundingClientRect()`, будет возвращать
     * `scrollHeight`, а не `clientHeight`. Поэтому перебиваем `height` на `clientHeight`.
     */ clientRect.height = element.clientHeight;
    }
    var offsetX = 0;
    var offsetY = 0;
    if (isFixedStrategy) {
        var _getTransformedParentCoords = getTransformedParentCoords(element), x = _getTransformedParentCoords.x, y = _getTransformedParentCoords.y;
        offsetX = x;
        offsetY = y;
    }
    return rectToClientRect({
        x: clientRect.left - offsetX,
        y: clientRect.top - offsetY,
        width: clientRect.width,
        height: clientRect.height
    });
};
var getRelativeBoundingClientRect = function(parent, child) {
    var parentRect = getBoundingClientRect(parent);
    var childRect = getBoundingClientRect(child);
    return rectToClientRect({
        x: childRect.left - parentRect.left,
        y: childRect.top - parentRect.top,
        width: childRect.width,
        height: childRect.height
    });
};
/**
 * Адаптер над getNearestOverflowAncestor из @floating-ui/utils/dom.
 *
 * document.body подменяем на window, т.к. на document.body нельзя применить скролл.
 */ var dom_getNearestOverflowAncestor = function(childEl) {
    var foundAncestor = getNearestOverflowAncestor(childEl);
    return isBody(foundAncestor) ? floating_ui_utils_dom_esm_getWindow(foundAncestor) : floating_ui_utils_dom_esm_isHTMLElement(childEl) ? foundAncestor : null;
};
var getScrollHeight = function(node) {
    return isWindow(node) ? node.document.documentElement.scrollHeight : node.scrollHeight;
};
var getScrollRect = function(node) {
    var window1 = floating_ui_utils_dom_esm_isElement(node) ? floating_ui_utils_dom_esm_getWindow(node) : node;
    var scrollElRect = getBoundingClientRect(node);
    var edgeTop = window1.scrollY + scrollElRect.top;
    var edgeBottom = edgeTop + scrollElRect.height;
    var y = [
        edgeTop,
        edgeBottom
    ];
    return {
        relative: scrollElRect,
        edges: {
            y: y
        }
    };
};
var dom_getDocumentBody = function(node) {
    return getWindow(node).document.body;
};
var dom_getActiveElementByAnotherElement = function(el) {
    return el ? el.ownerDocument.activeElement : null;
};
var dom_contains = function(parent, child) {
    return parent && child ? parent.contains(child) : false;
};
var getFirstTouchEventData = function(event) {
    var dataRaw = function resolveData() {
        switch(event.type){
            case 'touchend':
                return event.changedTouches[0];
            case 'touchstart':
            case 'touchmove':
            case 'touchcancel':
                return event.touches[0];
            case 'mousedown':
            case 'mousemove':
            case 'mouseup':
            case 'mouseleave':
                return event;
            default:
                return {
                    screenX: 0,
                    screenY: 0,
                    clientX: 0,
                    clientY: 0,
                    pageX: 0,
                    pageY: 0
                };
        }
    }();
    /* istanbul ignore if */ if (false) {}
    return {
        screenX: dataRaw.screenX || 0,
        screenY: dataRaw.screenY || 0,
        clientX: dataRaw.clientX || 0,
        clientY: dataRaw.clientY || 0,
        pageX: dataRaw.pageX || 0,
        pageY: dataRaw.pageY || 0
    };
};
/**
 * ⚠️ В частности, необходимо для iOS 15. Начиная с этой версии в Safari добавили
 * pull-to-refresh. CSS св-во `overflow-behavior` появился только с iOS 16.
 *
 * Во вторую очередь, полезна блокированием скролла, чтобы пользователь дождался обновления
 * данных.
 */ var dom_initializeBrowserGesturePreventionEffect = function(window1) {
    var options = {
        passive: false
    };
    var handleWindowTouchMove = function(event) {
        event.preventDefault();
        event.stopPropagation();
    };
    window1.document.documentElement.classList.add('vkui--disable-overscroll-behavior'); // eslint-disable-line no-restricted-properties
    window1.addEventListener('touchmove', handleWindowTouchMove, options);
    return function dispose() {
        window1.document.documentElement.classList.remove('vkui--disable-overscroll-behavior'); // eslint-disable-line no-restricted-properties
        window1.removeEventListener('touchmove', handleWindowTouchMove, options);
    };
};

;// CONCATENATED MODULE: ./src/lib/useIsomorphicLayoutEffect.ts


var useIsomorphicLayoutEffect_useIsomorphicLayoutEffect = dom_canUseDOM ? react.useLayoutEffect : react.useEffect;

;// CONCATENATED MODULE: ./src/hooks/useKeyboardInputTracker.ts




var ENABLE_KEYBOARD_INPUT_EVENT_NAME = 'enableKeyboardInput';
var DISABLE_KEYBOARD_INPUT_EVENT_NAME = 'disableKeyboardInput';
var EVENT_OPTIONS = {
    passive: true,
    capture: true
};
/**
 * Чтобы оптимизировать рендер, сохраняем в ref.
 *
 * В контекст можно передать через getter, подробнее в примере ниже.
 *
 * ```tsx
 * const keyboardInputTrackerRef = useKeyboardInputTracker();
 * <SomeContext.Provider value={{
 *  get keyboardInput() {
 *    return keyboardInputTrackerRef.current;
 *  }
 * }}>
 *  {children}
 * </SomeContext.Provider>
 * ```
 *
 * @private
 */ function useKeyboardInputTracker_useKeyboardInputTracker() {
    var document = useDOM().document;
    var keyboardFocusingStartedRef = React.useRef(false);
    useIsomorphicLayoutEffect(function() {
        /* istanbul ignore if: невозможный кейс, т.к. в SSR эффекты не вызываются. Проверка на будущее, если вдруг эффект будет вызываться. */ if (!document) {
            return;
        }
        var handleKeydown = function(event) {
            if (isKeyboardFocusingStarted(event)) {
                keyboardFocusingStartedRef.current = true;
            }
        };
        var handleCustomEnableKeyboardEvent = function() {
            keyboardFocusingStartedRef.current = true;
        };
        var handleCustomDisableKeyboardEvent = function() {
            keyboardFocusingStartedRef.current = false;
        };
        document.addEventListener('keydown', handleKeydown, EVENT_OPTIONS);
        document.addEventListener(ENABLE_KEYBOARD_INPUT_EVENT_NAME, handleCustomEnableKeyboardEvent, EVENT_OPTIONS); // prettier-ignore
        document.addEventListener(DISABLE_KEYBOARD_INPUT_EVENT_NAME, handleCustomDisableKeyboardEvent, EVENT_OPTIONS); // prettier-ignore
        document.addEventListener('mousedown', handleCustomDisableKeyboardEvent, EVENT_OPTIONS);
        document.addEventListener('touchstart', handleCustomDisableKeyboardEvent, EVENT_OPTIONS);
        return function() {
            document.removeEventListener('keydown', handleKeydown, EVENT_OPTIONS);
            document.removeEventListener(ENABLE_KEYBOARD_INPUT_EVENT_NAME, handleCustomEnableKeyboardEvent, EVENT_OPTIONS); // prettier-ignore
            document.removeEventListener(DISABLE_KEYBOARD_INPUT_EVENT_NAME, handleCustomDisableKeyboardEvent, EVENT_OPTIONS); // prettier-ignore
            document.removeEventListener('mousedown', handleCustomDisableKeyboardEvent, EVENT_OPTIONS);
            document.removeEventListener('touchstart', handleCustomDisableKeyboardEvent, EVENT_OPTIONS);
        };
    }, [
        document
    ]);
    return keyboardFocusingStartedRef;
}

;// CONCATENATED MODULE: ./src/hooks/useObjectMemo.ts


function useObjectMemo_useObjectMemo(object) {
    var cache = react.useRef(object);
    if (!equal_isEqual(cache.current, object)) {
        cache.current = object;
    }
    return cache.current;
}

;// CONCATENATED MODULE: ./src/lib/tokens/constants.ts
var constants_DEFAULT_TOKENS_CLASS_NAMES = {
    android: {
        light: 'vkui--vkBase--light',
        dark: 'vkui--vkBase--dark'
    },
    ios: {
        light: 'vkui--vkIOS--light',
        dark: 'vkui--vkIOS--dark'
    },
    vkcom: {
        light: 'vkui--vkCom--light',
        dark: 'vkui--vkCom--dark'
    }
};

;// CONCATENATED MODULE: ./src/lib/browser.ts

var memoized = {};
function browser_computeBrowserInfo() {
    var userAgent = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : '';
    if (memoized[userAgent]) {
        return memoized[userAgent];
    }
    var browserInfo = {
        userAgent: userAgent,
        system: '',
        systemVersion: null
    };
    var _detectIOS = detectIOS(userAgent), isIOS = _detectIOS.isIOS, iosMajor = _detectIOS.iosMajor, iosMinor = _detectIOS.iosMinor;
    if (isIOS) {
        browserInfo.system = 'ios';
        browserInfo.systemVersion = {
            major: iosMajor,
            minor: iosMinor
        };
    }
    memoized[userAgent] = browserInfo;
    return browserInfo;
}
/**
 * Эмуляция функции `window.matchMedia` для SSR.
 *
 * ⚠️ Желательно избегать использование этой эмуляции в SSR.
 */ function mediaQueryNull(query) {
    return {
        matches: false,
        media: query,
        onchange: functions_noop,
        addListener: functions_noop,
        removeListener: functions_noop,
        addEventListener: functions_noop,
        removeEventListener: functions_noop,
        dispatchEvent: function dispatchEvent() {
            return false;
        }
    };
}

;// CONCATENATED MODULE: ./src/lib/platform.ts

var platform_Platform = {
    ANDROID: 'android',
    IOS: 'ios',
    VKCOM: 'vkcom'
};
function platform(browserInfo) {
    if (!browserInfo) {
        browserInfo = browser_computeBrowserInfo();
    }
    return browserInfo.system === 'ios' ? 'ios' : 'android';
}

;// CONCATENATED MODULE: ./src/components/ConfigProvider/ConfigProviderContext.tsx



var ConfigProviderContext_ConfigProviderContext = /*#__PURE__*/ react.createContext({
    hasCustomPanelHeaderAfter: false,
    customPanelHeaderAfterMinWidth: 90,
    isWebView: false,
    transitionMotionEnabled: true,
    platform: platform(),
    appearance: undefined,
    tokensClassNames: constants_DEFAULT_TOKENS_CLASS_NAMES,
    locale: 'ru'
});
var ConfigProviderContext_useConfigProvider = function() {
    return react.useContext(ConfigProviderContext_ConfigProviderContext);
};

;// CONCATENATED MODULE: ./src/lib/appearance/index.ts
var appearance_DEFAULT_APPEARANCE = 'light';
var appearance_Appearance = {
    DARK: 'dark',
    LIGHT: 'light'
};

;// CONCATENATED MODULE: ./src/lib/tokens/useTokenClassName.ts





var isTokensClassNamesForPlatforms = function(tokensClassNames) {
    return Platform.ANDROID in tokensClassNames || Platform.IOS in tokensClassNames || Platform.VKCOM in tokensClassNames;
};
var getTokenClassNameByAppearance = function(appearance, tokensClassNames) {
    return tokensClassNames ? tokensClassNames[appearance] : undefined;
};
var getAppearanceTokenClassNameByPlatform = function(platform, tokensClassNames) {
    return tokensClassNames ? tokensClassNames[platform] : undefined;
};
/**
 * @private
 */ var useTokenClassName_useTokensClassName = function() {
    var _React_useContext = React.useContext(ConfigProviderContext), platform = _React_useContext.platform, _React_useContext_appearance = _React_useContext.appearance, appearance = _React_useContext_appearance === void 0 ? DEFAULT_APPEARANCE : _React_useContext_appearance, tokensClassNames = _React_useContext.tokensClassNames;
    var appearanceSchemeClassName = isTokensClassNamesForPlatforms(tokensClassNames) ? getAppearanceTokenClassNameByPlatform(platform, tokensClassNames) : tokensClassNames;
    var tokensClassName = getTokenClassNameByAppearance(appearance, appearanceSchemeClassName);
    return tokensClassName ? tokensClassName : DEFAULT_TOKENS_CLASS_NAMES[platform][appearance];
};

;// CONCATENATED MODULE: ./src/lib/tokens/TokensClassProvider.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/lib/tokens/TokensClassProvider.tsx




var InjectTokenClassNameToChild = function(param) {
    var children = param.children;
    var tokensClassName = useTokensClassName();
    return /*#__PURE__*/ React.cloneElement(children, {
        className: classNames(tokensClassName, "vkuiTokensClassProvider--default-color", children.props.className)
    });
};
var TokensClassProvider_TokensClassProvider = function(param) {
    var children = param.children;
    return React.Children.map(children, function(child) {
        if (/*#__PURE__*/ React.isValidElement(child)) {
            return /*#__PURE__*/ React.createElement(InjectTokenClassNameToChild, null, child);
        }
        return child;
    });
};

;// CONCATENATED MODULE: ./src/lib/tokens/index.ts




;// CONCATENATED MODULE: ./src/components/AppRoot/AppRootContext.ts

/**
 * Вынесен в константу, чтобы можно было в тестах создавать свой контекст и сливать перед этим значения по-умолчанию
 *
 * > Note: не смог убрать из покрытия через 'istanbul ignore next'.
 */ var DEFAULT_APP_ROOT_CONTEXT_VALUE = {
    appRoot: react.createRef(),
    mode: 'full',
    portalRoot: react.createRef(),
    embedded: false,
    keyboardInput: false,
    disablePortal: false
};
var AppRootContext_AppRootContext = react.createContext(DEFAULT_APP_ROOT_CONTEXT_VALUE);

;// CONCATENATED MODULE: ./src/helpers/math.ts
var math_clamp = function(value, min, max) {
    return Math.max(min, Math.min(value, max));
};
function precisionRound(number) {
    var precision = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
    var factor = Math.pow(10, precision);
    return Math.round(number * factor) / factor;
}
/**
 * Решение скопировано без изменений у MUI:
 * https://github.com/mui/material-ui/blob/v5.13.7/packages/mui-base/src/useSlider/useSlider.ts#L89-L105
 */ function getDecimalPrecision(num) {
    // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.
    // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.
    if (Math.abs(num) < 1) {
        var parts = num.toExponential().split('e-');
        var matissaDecimalPart = parts[0].split('.')[1];
        return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);
    }
    var decimalPart = num.toString().split('.')[1];
    return decimalPart ? decimalPart.length : 0;
}
function roundValueToStep(value, step, min) {
    var nearest = Math.round((value - min) / step) * step + min;
    return Number(nearest.toFixed(getDecimalPrecision(step)));
}
function decimatedClamp(val, min, max, step) {
    if (step == null || step <= 0) {
        return math_clamp(val, min, max);
    }
    var roundedValue = roundValueToStep(val, step, min);
    return math_clamp(roundedValue, min, max);
}
function math_rescale(value, from, to) {
    var options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    var scaled = (value - from[0]) / (from[1] - from[0]) * (to[1] - to[0]) + to[0];
    return decimatedClamp(scaled, to[0], to[1], options.step);
}

;// CONCATENATED MODULE: ./src/components/AppRoot/ScrollContext.tsx
function _array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function _iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function _non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _sliced_to_array(arr, i) {
    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();
}
function _unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
}





var clearDisableScrollStyle = function(node) {
    Object.assign(node.style, {
        position: '',
        top: '',
        left: '',
        right: '',
        overflowY: '',
        overflowX: ''
    });
};
var getPageYOffsetWithoutKeyboardHeight = function(window) {
    // Note: здесь расчёт на то, что `clientHeight` равен `window.innerHeight`.
    //  Это достигается тем, что тегу `html` задали`height: 100%` и у него нет отступов сверху и снизу. Если есть отступы,
    //  то надо задать `box-sizing: border-box`, чтобы они не учитывались.
    var diffOfClientHeightAndViewportHeight = window.document.documentElement.clientHeight - window.innerHeight;
    return window.pageYOffset - diffOfClientHeightAndViewportHeight;
};
var ScrollContext_ScrollContext = /*#__PURE__*/ react.createContext({
    getScroll: function() {
        return {
            x: 0,
            y: 0
        };
    },
    scrollTo: functions_noop,
    isScrollLock: false,
    enableScrollLock: functions_noop,
    disableScrollLock: functions_noop
});
var ScrollContext_useScroll = function() {
    return react.useContext(ScrollContext_ScrollContext);
};
var ScrollContext_GlobalScrollController = function(param) {
    var children = param.children;
    var _useDOM = useDOM(), window = _useDOM.window, document = _useDOM.document;
    var _React_useState = _sliced_to_array(React.useState(false), 2), isScrollLock = _React_useState[0], setScrollLock = _React_useState[1];
    var beforeScrollLockFnSetRef = React.useRef(new Set());
    var getScroll = React.useCallback(function() {
        var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
            compensateKeyboardHeight: true
        };
        return {
            x: window.pageXOffset,
            y: options.compensateKeyboardHeight ? getPageYOffsetWithoutKeyboardHeight(window) : window.pageYOffset
        };
    }, [
        window
    ]);
    var scrollTo = React.useCallback(function() {
        var x = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
        // Some iOS versions do not normalize scroll — do it manually.
        window.scrollTo(x ? clamp(x, 0, document.body.scrollWidth - window.innerWidth) : 0, y ? clamp(y, 0, document.body.scrollHeight - window.innerHeight) : 0);
    }, [
        document,
        window
    ]);
    var enableScrollLock = React.useCallback(function() {
        beforeScrollLockFnSetRef.current.forEach(function(fn) {
            fn();
        });
        var scrollY = window.pageYOffset;
        var scrollX = window.pageXOffset;
        var overflowY = window.innerWidth > document.documentElement.clientWidth ? 'scroll' : '';
        var overflowX = window.innerHeight > document.documentElement.clientHeight ? 'scroll' : '';
        Object.assign(document.body.style, {
            position: 'fixed',
            top: "-".concat(scrollY, "px"),
            left: "-".concat(scrollX, "px"),
            right: '0',
            overflowY: overflowY,
            overflowX: overflowX
        });
        setScrollLock(true);
    }, [
        document,
        window
    ]);
    var disableScrollLock = React.useCallback(function() {
        var scrollY = document.body.style.top;
        var scrollX = document.body.style.left;
        clearDisableScrollStyle(document.body);
        window.scrollTo(-parseInt(scrollX || '0'), -parseInt(scrollY || '0'));
        setScrollLock(false);
    }, [
        document,
        window
    ]);
    var scrollController = React.useMemo(function() {
        return {
            getScroll: getScroll,
            scrollTo: scrollTo,
            isScrollLock: isScrollLock,
            disableScrollLock: disableScrollLock,
            enableScrollLock: enableScrollLock,
            beforeScrollLockFnSetRef: beforeScrollLockFnSetRef
        };
    }, [
        getScroll,
        scrollTo,
        isScrollLock,
        disableScrollLock,
        enableScrollLock
    ]);
    return /*#__PURE__*/ React.createElement(ScrollContext_ScrollContext.Provider, {
        value: scrollController
    }, children);
};
var ScrollContext_ElementScrollController = function(param) {
    var elRef = param.elRef, children = param.children;
    var _React_useState = _sliced_to_array(React.useState(false), 2), isScrollLock = _React_useState[0], setScrollLock = _React_useState[1];
    var beforeScrollLockFnSetRef = React.useRef(new Set());
    var getScroll = React.useCallback(function() {
        var _elRef_current, _elRef_current1;
        var _elRef_current_scrollLeft, _elRef_current_scrollTop;
        return {
            x: (_elRef_current_scrollLeft = (_elRef_current = elRef.current) === null || _elRef_current === void 0 ? void 0 : _elRef_current.scrollLeft) !== null && _elRef_current_scrollLeft !== void 0 ? _elRef_current_scrollLeft : 0,
            y: (_elRef_current_scrollTop = (_elRef_current1 = elRef.current) === null || _elRef_current1 === void 0 ? void 0 : _elRef_current1.scrollTop) !== null && _elRef_current_scrollTop !== void 0 ? _elRef_current_scrollTop : 0
        };
    }, [
        elRef
    ]);
    var scrollTo = React.useCallback(function() {
        var x = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
        var el = elRef.current;
        // Some iOS versions do not normalize scroll — do it manually.
        el === null || el === void 0 ? void 0 : el.scrollTo(x ? clamp(x, 0, el.scrollWidth - el.clientWidth) : 0, y ? clamp(y, 0, el.scrollHeight - el.clientHeight) : 0);
    }, [
        elRef
    ]);
    var enableScrollLock = React.useCallback(function() {
        var el = elRef.current;
        if (!el) {
            return;
        }
        beforeScrollLockFnSetRef.current.forEach(function(fn) {
            fn();
        });
        var scrollY = el.scrollTop;
        var scrollX = el.scrollLeft;
        var overflowY = el.scrollWidth > el.clientWidth ? 'scroll' : '';
        var overflowX = el.scrollHeight > el.clientHeight ? 'scroll' : '';
        Object.assign(el.style, {
            position: 'absolute',
            top: "-".concat(scrollY, "px"),
            left: "-".concat(scrollX, "px"),
            right: '0',
            overflowY: overflowY,
            overflowX: overflowX
        });
        setScrollLock(true);
    }, [
        elRef
    ]);
    var disableScrollLock = React.useCallback(function() {
        var el = elRef.current;
        if (!el) {
            return;
        }
        var scrollY = el.style.top;
        var scrollX = el.style.left;
        clearDisableScrollStyle(el);
        el.scrollTo(-parseInt(scrollX || '0'), -parseInt(scrollY || '0'));
        setScrollLock(false);
    }, [
        elRef
    ]);
    var scrollController = React.useMemo(function() {
        return {
            getScroll: getScroll,
            scrollTo: scrollTo,
            isScrollLock: isScrollLock,
            disableScrollLock: disableScrollLock,
            enableScrollLock: enableScrollLock,
            beforeScrollLockFnSetRef: beforeScrollLockFnSetRef
        };
    }, [
        getScroll,
        scrollTo,
        isScrollLock,
        disableScrollLock,
        enableScrollLock
    ]);
    return /*#__PURE__*/ React.createElement(ScrollContext_ScrollContext.Provider, {
        value: scrollController
    }, children);
};
var ScrollContext_useScrollLock = function() {
    var enabled = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
    var _useScroll = ScrollContext_useScroll(), enableScrollLock = _useScroll.enableScrollLock, disableScrollLock = _useScroll.disableScrollLock, isScrollLock = _useScroll.isScrollLock;
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function() {
        if (enabled && !isScrollLock) {
            enableScrollLock();
            return disableScrollLock;
        }
        return functions_noop;
    }, [
        enableScrollLock,
        disableScrollLock,
        enabled
    ]);
};

;// CONCATENATED MODULE: ./src/lib/isRefObject.ts
function isRefObject_type_of(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}
var isRefObject_isRefObject = function(refObject) {
    return (typeof refObject === "undefined" ? "undefined" : isRefObject_type_of(refObject)) === 'object' && refObject !== null && refObject.hasOwnProperty('current');
};

;// CONCATENATED MODULE: ./src/components/AppRoot/AppRoot.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/AppRoot/helpers.ts


function helpers_getClassNamesByMode(param) {
    var mode = param.mode, layout = param.layout, tokensClassName = param.tokensClassName, sizeX = param.sizeX, sizeY = param.sizeY;
    var baseClassNames = [
        'vkui__root'
    ];
    var stylesClassNames = [
        tokensClassName
    ];
    if (mode === 'full' || mode === 'embedded') {
        if (layout) {
            var vkuiLayoutClassNames = {
                card: 'vkui--layout-card',
                plain: 'vkui--layout-plain'
            };
            stylesClassNames.push(vkuiLayoutClassNames[layout]);
        }
        if (sizeX !== 'compact') {
            var vkuiSizeXClassNames = {
                none: 'vkui--sizeX-none',
                regular: 'vkui--sizeX-regular'
            };
            stylesClassNames.push(vkuiSizeXClassNames[sizeX]);
        }
        if (sizeY !== 'regular') {
            var vkuiSizeYClassNames = {
                none: 'vkui--sizeY-none',
                compact: 'vkui--sizeY-compact'
            };
            stylesClassNames.push(vkuiSizeYClassNames[sizeY]);
        }
        if (mode === 'embedded') {
            baseClassNames.push('vkui__root--embedded');
        }
    }
    return [
        baseClassNames,
        stylesClassNames
    ];
}
var helpers_getParentElement = function(el) {
    return el ? el.parentElement : null;
};
var helpers_extractPortalRootByProp = function(portalRootProp) {
    return isRefObject(portalRootProp) ? portalRootProp.current : portalRootProp;
};
var CUSTOM_PROPERTY_INSET_PREFIX = "--vkui_internal--safe_area_inset_";
var helpers_setSafeAreaInsets = function(safeAreaInsets, rootContainer, portalContainer) {
    if (!safeAreaInsets) {
        return function() {
            return void 0;
        };
    }
    for(var key in safeAreaInsets){
        if (safeAreaInsets.hasOwnProperty(key) && typeof safeAreaInsets[key] === 'number') {
            var propertyKey = "".concat(CUSTOM_PROPERTY_INSET_PREFIX).concat(key);
            var propertyValue = safeAreaInsets[key];
            rootContainer.style.setProperty(propertyKey, "".concat(propertyValue, "px"));
            if (portalContainer) {
                portalContainer.style.setProperty(propertyKey, "".concat(propertyValue, "px"));
            }
        }
    }
    return function unset() {
        for(var key in safeAreaInsets){
            if (safeAreaInsets.hasOwnProperty(key)) {
                var propertyKey = "".concat(CUSTOM_PROPERTY_INSET_PREFIX).concat(key);
                rootContainer.style.removeProperty(propertyKey);
                if (portalContainer) {
                    portalContainer.style.removeProperty(propertyKey);
                }
            }
        }
    };
};
function helpers_getUserSelectModeClassName(param) {
    var userSelectMode = param.userSelectMode, isWebView = param.isWebView, hasPointer = param.hasPointer;
    switch(userSelectMode){
        case 'enabled-with-pointer':
            {
                if (hasPointer) {
                    return null;
                }
                var enableByHasPointerMediaQuery = hasPointer === undefined;
                if (enableByHasPointerMediaQuery) {
                    return "vkuiAppRoot--pointer-none";
                }
                return "vkuiAppRoot--user-select-none";
            }
        case 'disabled':
            return "vkuiAppRoot--user-select-none";
        case 'enabled':
            return null;
        default:
            return isWebView ? "vkuiAppRoot--user-select-none" : null;
    }
}

;// CONCATENATED MODULE: ./src/components/AppRoot/AppRoot.tsx
function AppRoot_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function AppRoot_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function _array_without_holes(arr) {
    if (Array.isArray(arr)) return AppRoot_array_like_to_array(arr);
}
function AppRoot_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function AppRoot_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function AppRoot_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function AppRoot_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            AppRoot_define_property(target, key, source[key]);
        });
    }
    return target;
}
function AppRoot_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function AppRoot_sliced_to_array(arr, i) {
    return AppRoot_array_with_holes(arr) || AppRoot_iterable_to_array_limit(arr, i) || AppRoot_unsupported_iterable_to_array(arr, i) || AppRoot_non_iterable_rest();
}
function _to_consumable_array(arr) {
    return _array_without_holes(arr) || _iterable_to_array(arr) || AppRoot_unsupported_iterable_to_array(arr) || _non_iterable_spread();
}
function AppRoot_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return AppRoot_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return AppRoot_array_like_to_array(o, minLen);
}













/**
 * @see https://vkcom.github.io/VKUI/#/AppRoot
 */ var AppRoot = function(_param) {
    var children = _param.children, _param_mode = _param.mode, mode = _param_mode === void 0 ? 'full' : _param_mode, _param_scroll = _param.scroll, scroll = _param_scroll === void 0 ? 'global' : _param_scroll, tmp = _param.portalRoot, portalRootProp = tmp === void 0 ? null : tmp, _param_disablePortal = _param.disablePortal, disablePortal = _param_disablePortal === void 0 ? false : _param_disablePortal, disableParentTransformForPositionFixedElements = _param.disableParentTransformForPositionFixedElements, className = _param.className, safeAreaInsetsProp = _param.safeAreaInsets, layout = _param.layout, userSelectMode = _param.userSelectMode, props = AppRoot_object_without_properties(_param, [
        "children",
        "mode",
        "scroll",
        "portalRoot",
        "disablePortal",
        "disableParentTransformForPositionFixedElements",
        "className",
        "safeAreaInsets",
        "layout",
        "userSelectMode"
    ]);
    var _useAdaptivity = useAdaptivity(), hasPointer = _useAdaptivity.hasPointer, _useAdaptivity_sizeX = _useAdaptivity.sizeX, sizeX = _useAdaptivity_sizeX === void 0 ? 'none' : _useAdaptivity_sizeX, _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var tokensClassName = useTokensClassName();
    var safeAreaInsets = useObjectMemo(safeAreaInsetsProp);
    var isKeyboardInputActiveRef = useKeyboardInputTracker();
    var appRootRef = React.useRef(null);
    var portalRootRef = React.useRef(null);
    useIsomorphicLayoutEffect(function setupPortalRoot() {
        var portalByProp = portalRootProp ? extractPortalRootByProp(portalRootProp) : null;
        if (portalByProp) {
            portalRootRef.current = portalByProp;
            return function cleanup() {
                portalRootRef.current = null;
            };
        }
        var documentBody = getDocumentBody(appRootRef.current);
        var portal = documentBody.ownerDocument.createElement('div');
        documentBody.appendChild(portal);
        portalRootRef.current = portal;
        return function cleanup() {
            documentBody.removeChild(portal);
            portalRootRef.current = null;
        };
    }, [
        portalRootProp
    ]);
    useIsomorphicLayoutEffect(function setupContainers() {
        if (!appRootRef.current || !portalRootRef.current) {
            return;
        }
        var parentElement = getParentElement(appRootRef.current);
        var documentBody = getDocumentBody(appRootRef.current);
        var documentElement = documentBody.ownerDocument.documentElement;
        var _getClassNamesByMode = AppRoot_sliced_to_array(getClassNamesByMode({
            mode: mode,
            layout: layout,
            tokensClassName: tokensClassName,
            sizeX: sizeX,
            sizeY: sizeY
        }), 2), baseClassNames = _getClassNamesByMode[0], stylesClassNames = _getClassNamesByMode[1];
        /* eslint-disable no-restricted-properties */ switch(mode){
            case 'full':
                {
                    var _documentElement_classList;
                    if (parentElement) {
                        var _parentElement_classList;
                        (_parentElement_classList = parentElement.classList).add.apply(_parentElement_classList, _to_consumable_array(baseClassNames));
                    }
                    (_documentElement_classList = documentElement.classList).add.apply(_documentElement_classList, _to_consumable_array(stylesClassNames).concat([
                        'vkui'
                    ]));
                    var unsetSafeAreaInsets = setSafeAreaInsets(safeAreaInsets, documentElement);
                    return function cleanup() {
                        var _documentElement_classList;
                        if (parentElement) {
                            var _parentElement_classList;
                            (_parentElement_classList = parentElement.classList).remove.apply(_parentElement_classList, _to_consumable_array(baseClassNames));
                        }
                        (_documentElement_classList = documentElement.classList).remove.apply(_documentElement_classList, _to_consumable_array(stylesClassNames).concat([
                            'vkui'
                        ]));
                        unsetSafeAreaInsets();
                    };
                }
            case 'embedded':
                {
                    if (parentElement) {
                        var _parentElement_classList1;
                        (_parentElement_classList1 = parentElement.classList).add.apply(_parentElement_classList1, _to_consumable_array(baseClassNames).concat(_to_consumable_array(stylesClassNames)));
                        if (!disableParentTransformForPositionFixedElements) {
                            parentElement.style.setProperty('transform', 'translate3d(0, 0, 0)');
                        }
                        var unsetSafeAreaInsets1 = setSafeAreaInsets(safeAreaInsets, parentElement, portalRootRef.current); // prettier-ignore
                        return function cleanup() {
                            var _parentElement_classList;
                            (_parentElement_classList = parentElement.classList).remove.apply(_parentElement_classList, _to_consumable_array(baseClassNames).concat(_to_consumable_array(stylesClassNames)));
                            if (!disableParentTransformForPositionFixedElements) {
                                parentElement.style.removeProperty('transform');
                            }
                            unsetSafeAreaInsets1();
                        };
                    }
                    /* istanbul ignore next: node.parentElement может быть null, но такой кейс в теории невозможен */ return;
                }
            /* istanbul ignore next: не покрывается за счёт теста на <AppRoot mode="partial" /> */ case 'partial':
                {
                    return;
                }
        }
    /* eslint-enable no-restricted-properties */ }, [
        mode,
        layout,
        disableParentTransformForPositionFixedElements,
        tokensClassName,
        sizeX,
        sizeY,
        safeAreaInsets
    ]);
    var ScrollController = React.useMemo(function() {
        return scroll === 'contain' ? ElementScrollController : GlobalScrollController;
    }, [
        scroll
    ]);
    var contextValue = React.useMemo(function() {
        return {
            appRoot: appRootRef,
            portalRoot: portalRootRef,
            embedded: mode === 'embedded',
            mode: mode,
            disablePortal: disablePortal,
            layout: layout,
            get keyboardInput () {
                return isKeyboardInputActiveRef.current;
            }
        };
    }, [
        disablePortal,
        isKeyboardInputActiveRef,
        layout,
        mode
    ]);
    var content = /*#__PURE__*/ React.createElement(AppRootContext.Provider, {
        value: contextValue
    }, /*#__PURE__*/ React.createElement(ScrollController, {
        elRef: appRootRef
    }, children));
    var isWebView = useConfigProvider().isWebView;
    var userSelectModeClassName = getUserSelectModeClassName({
        userSelectMode: userSelectMode,
        isWebView: isWebView,
        hasPointer: hasPointer
    });
    return mode === 'partial' ? content : /*#__PURE__*/ React.createElement("div", AppRoot_object_spread({
        ref: appRootRef,
        className: classNames("vkuiAppRoot", userSelectModeClassName, className)
    }, props), content);
};

;// CONCATENATED MODULE: ./src/components/RootComponent/RootComponent.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/RootComponent/RootComponent.tsx
function RootComponent_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function RootComponent_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            RootComponent_define_property(target, key, source[key]);
        });
    }
    return target;
}
function RootComponent_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = RootComponent_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function RootComponent_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



/**
 * Базовый корневой компонент.
 */ var RootComponent_RootComponent = function(_param) {
    var _param_Component = _param.Component, Component = _param_Component === void 0 ? 'div' : _param_Component, baseClassName = _param.baseClassName, className = _param.className, getRootRef = _param.getRootRef, restProps = RootComponent_object_without_properties(_param, [
        "Component",
        "baseClassName",
        "className",
        "getRootRef"
    ]);
    return /*#__PURE__*/ react.createElement(Component, RootComponent_object_spread({
        ref: getRootRef,
        className: clsx(className, baseClassName, "vkuiRootComponent", restProps.hidden === true && "vkuiRootComponent--hidden")
    }, restProps));
};

;// CONCATENATED MODULE: ./src/components/Typography/Typography.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Typography/Typography.tsx
function Typography_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Typography_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Typography_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Typography_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Typography_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Typography_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var stylesWeight = {
    '1': "vkuiTypography--weight-1",
    '2': "vkuiTypography--weight-2",
    '3': "vkuiTypography--weight-3"
};
var Typography_Typography = function(_param) {
    var weight = _param.weight, _param_useAccentWeight = _param.// TODO [>=7]: сделать по умолчанию false (нужен будет кодмод)
    useAccentWeight, useAccentWeight = _param_useAccentWeight === void 0 ? true : _param_useAccentWeight, _param_Component = _param.Component, Component = _param_Component === void 0 ? 'span' : _param_Component, normalize = _param.normalize, inline = _param.inline, restProps = Typography_object_without_properties(_param, [
        "weight",
        "useAccentWeight",
        "Component",
        "normalize",
        "inline"
    ]);
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, Typography_object_spread({
        Component: Component,
        baseClassName: clsx("vkuiTypography", normalize && "vkuiTypography--normalize", inline && "vkuiTypography--inline", weight && stylesWeight[weight], weight && useAccentWeight && "vkuiTypography--accent")
    }, restProps));
};

;// CONCATENATED MODULE: ./src/components/Typography/DisplayTitle/DisplayTitle.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Typography/DisplayTitle/DisplayTitle.tsx
function DisplayTitle_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function DisplayTitle_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            DisplayTitle_define_property(target, key, source[key]);
        });
    }
    return target;
}
function DisplayTitle_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = DisplayTitle_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function DisplayTitle_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var stylesLevel = {
    '1': "vkuiDisplayTitle--level-1",
    '2': "vkuiDisplayTitle--level-2",
    '3': "vkuiDisplayTitle--level-3",
    '4': "vkuiDisplayTitle--level-4"
};
var sizeYClassNames = {
    none: "vkuiDisplayTitle--sizeY-none",
    compact: "vkuiDisplayTitle--sizeY-compact"
};
/**
 * Используется для крупных заголовков.
 *
 * @see https://vkcom.github.io/VKUI/#/DisplayTitle
 */ var DisplayTitle = function(_param) {
    var className = _param.className, _param_level = _param.level, level = _param_level === void 0 ? '1' : _param_level, _param_Component = _param.Component, Component = _param_Component === void 0 ? 'span' : _param_Component, _param_normalize = _param.normalize, normalize = _param_normalize === void 0 ? true : _param_normalize, _param_inline = _param.inline, inline = _param_inline === void 0 ? false : _param_inline, restProps = DisplayTitle_object_without_properties(_param, [
        "className",
        "level",
        "Component",
        "normalize",
        "inline"
    ]);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    return /*#__PURE__*/ React.createElement(Typography, DisplayTitle_object_spread({
        Component: Component,
        normalize: normalize,
        inline: inline,
        className: classNames(className, sizeY !== 'regular' && sizeYClassNames[sizeY], stylesLevel[level])
    }, restProps));
};

;// CONCATENATED MODULE: ./src/components/Typography/Title/Title.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Typography/Title/Title.tsx
function Title_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Title_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Title_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Title_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Title_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Title_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var Title_stylesLevel = {
    '1': "vkuiTitle--level-1",
    '2': "vkuiTitle--level-2",
    '3': "vkuiTitle--level-3"
};
var Title_sizeYClassNames = {
    none: "vkuiTitle--sizeY-none",
    compact: "vkuiTitle--sizeY-compact"
};
/**
 * Используется для заголовков.
 *
 * @see https://vkcom.github.io/VKUI/#/Title
 */ var Title_Title = function(_param) {
    var className = _param.className, _param_level = _param.level, level = _param_level === void 0 ? '1' : _param_level, _param_Component = _param.Component, Component = _param_Component === void 0 ? 'span' : _param_Component, _param_normalize = _param.normalize, normalize = _param_normalize === void 0 ? true : _param_normalize, _param_inline = _param.inline, inline = _param_inline === void 0 ? false : _param_inline, restProps = Title_object_without_properties(_param, [
        "className",
        "level",
        "Component",
        "normalize",
        "inline"
    ]);
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    return /*#__PURE__*/ React.createElement(Typography_Typography, Title_object_spread({
        Component: Component,
        normalize: normalize,
        inline: inline,
        className: clsx(className, sizeY !== 'regular' && Title_sizeYClassNames[sizeY], Title_stylesLevel[level])
    }, restProps));
};

;// CONCATENATED MODULE: ./src/components/Typography/Headline/Headline.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Typography/Headline/Headline.tsx
function Headline_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Headline_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Headline_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Headline_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Headline_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Headline_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var Headline_stylesLevel = {
    '1': "vkuiHeadline--level-1",
    '2': "vkuiHeadline--level-2"
};
var Headline_sizeYClassNames = {
    none: "vkuiHeadline--sizeY-none",
    compact: "vkuiHeadline--sizeY-compact"
};
/**
 * Используется для подзаголовков.
 *
 * @see https://vkcom.github.io/VKUI/#/Headline
 */ var Headline_Headline = function(_param) {
    var className = _param.className, _param_level = _param.level, level = _param_level === void 0 ? '1' : _param_level, _param_Component = _param.Component, Component = _param_Component === void 0 ? 'span' : _param_Component, _param_normalize = _param.normalize, normalize = _param_normalize === void 0 ? true : _param_normalize, _param_inline = _param.inline, inline = _param_inline === void 0 ? false : _param_inline, restProps = Headline_object_without_properties(_param, [
        "className",
        "level",
        "Component",
        "normalize",
        "inline"
    ]);
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    return /*#__PURE__*/ React.createElement(Typography_Typography, Headline_object_spread({
        Component: Component,
        normalize: normalize,
        inline: inline,
        className: clsx(className, sizeY !== 'regular' && Headline_sizeYClassNames[sizeY], Headline_stylesLevel[level])
    }, restProps));
};

;// CONCATENATED MODULE: ./src/components/Typography/Text/Text.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Typography/Text/Text.tsx
function Text_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Text_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Text_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Text_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Text_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Text_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var Text_sizeYClassNames = {
    none: "vkuiText--sizeY-none",
    compact: "vkuiText--sizeY-compact"
};
/**
 * Основной наборный текст.
 *
 * @see https://vkcom.github.io/VKUI/#/Text
 */ var Text_Text = function(_param) {
    var className = _param.className, _param_Component = _param.Component, Component = _param_Component === void 0 ? 'span' : _param_Component, _param_normalize = _param.normalize, normalize = _param_normalize === void 0 ? true : _param_normalize, _param_inline = _param.inline, inline = _param_inline === void 0 ? false : _param_inline, restProps = Text_object_without_properties(_param, [
        "className",
        "Component",
        "normalize",
        "inline"
    ]);
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    return /*#__PURE__*/ React.createElement(Typography_Typography, Text_object_spread({
        Component: Component,
        normalize: normalize,
        inline: inline,
        className: clsx(className, "vkuiText", sizeY !== 'regular' && Text_sizeYClassNames[sizeY])
    }, restProps));
};

;// CONCATENATED MODULE: ./src/components/Typography/Paragraph/Paragraph.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Typography/Paragraph/Paragraph.tsx
function Paragraph_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Paragraph_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Paragraph_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Paragraph_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Paragraph_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Paragraph_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var Paragraph_sizeYClassNames = {
    none: "vkuiParagraph--sizeY-none",
    compact: "vkuiParagraph--sizeY-compact"
};
/**
 * Используется для основного текста.
 *
 * @see https://vkcom.github.io/VKUI/#/Paragraph
 */ var Paragraph_Paragraph = function(_param) {
    var className = _param.className, _param_Component = _param.Component, Component = _param_Component === void 0 ? 'span' : _param_Component, _param_normalize = _param.normalize, normalize = _param_normalize === void 0 ? false : _param_normalize, _param_inline = _param.inline, inline = _param_inline === void 0 ? false : _param_inline, restProps = Paragraph_object_without_properties(_param, [
        "className",
        "Component",
        "normalize",
        "inline"
    ]);
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    return /*#__PURE__*/ React.createElement(Typography_Typography, Paragraph_object_spread({
        Component: Component,
        normalize: normalize,
        inline: inline,
        className: clsx(className, "vkuiParagraph", sizeY !== 'regular' && Paragraph_sizeYClassNames[sizeY])
    }, restProps));
};

;// CONCATENATED MODULE: ./src/components/Typography/Subhead/Subhead.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Typography/Subhead/Subhead.tsx
function Subhead_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Subhead_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Subhead_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Subhead_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Subhead_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Subhead_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var Subhead_sizeYClassNames = {
    none: "vkuiSubhead--sizeY-none",
    compact: "vkuiSubhead--sizeY-compact"
};
/**
 * Используется для подзаголовков 2 уровня.
 *
 * @see https://vkcom.github.io/VKUI/#/Subhead
 */ var Subhead_Subhead = function(_param) {
    var className = _param.className, _param_Component = _param.Component, Component = _param_Component === void 0 ? 'span' : _param_Component, _param_normalize = _param.normalize, normalize = _param_normalize === void 0 ? true : _param_normalize, _param_inline = _param.inline, inline = _param_inline === void 0 ? false : _param_inline, restProps = Subhead_object_without_properties(_param, [
        "className",
        "Component",
        "normalize",
        "inline"
    ]);
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    return /*#__PURE__*/ React.createElement(Typography_Typography, Subhead_object_spread({
        Component: Component,
        normalize: normalize,
        inline: inline,
        className: clsx(className, "vkuiSubhead", sizeY !== 'regular' && Subhead_sizeYClassNames[sizeY])
    }, restProps));
};

;// CONCATENATED MODULE: ./src/components/Typography/Footnote/Footnote.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Typography/Footnote/Footnote.tsx
function Footnote_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Footnote_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Footnote_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Footnote_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Footnote_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Footnote_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var Footnote_sizeYClassNames = {
    none: "vkuiFootnote--sizeY-none",
    compact: "vkuiFootnote--sizeY-compact"
};
/**
 * Используется для основных подписей.
 *
 * @see https://vkcom.github.io/VKUI/#/Footnote
 */ var Footnote_Footnote = function(_param) {
    var className = _param.className, caps = _param.caps, _param_Component = _param.Component, Component = _param_Component === void 0 ? 'span' : _param_Component, _param_normalize = _param.normalize, normalize = _param_normalize === void 0 ? true : _param_normalize, _param_inline = _param.inline, inline = _param_inline === void 0 ? false : _param_inline, restProps = Footnote_object_without_properties(_param, [
        "className",
        "caps",
        "Component",
        "normalize",
        "inline"
    ]);
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    return /*#__PURE__*/ React.createElement(Typography_Typography, Footnote_object_spread({
        Component: Component,
        normalize: normalize,
        inline: inline,
        className: clsx(className, sizeY !== 'regular' && Footnote_sizeYClassNames[sizeY], "vkuiFootnote", caps && "vkuiFootnote--caps")
    }, restProps));
};

;// CONCATENATED MODULE: ./src/components/Typography/Caption/Caption.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Typography/Caption/Caption.tsx
function Caption_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Caption_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Caption_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Caption_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Caption_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Caption_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var Caption_stylesLevel = {
    '1': "vkuiCaption--level-1",
    '2': "vkuiCaption--level-2",
    '3': "vkuiCaption--level-3"
};
var Caption_sizeYClassNames = {
    none: "vkuiCaption--sizeY-none",
    compact: "vkuiCaption--sizeY-compact"
};
/**
 * Используется для мелких подписей.
 *
 * @see https://vkcom.github.io/VKUI/#/Caption
 */ var Caption_Caption = function(_param) {
    var className = _param.className, _param_level = _param.level, level = _param_level === void 0 ? '1' : _param_level, caps = _param.caps, _param_Component = _param.Component, Component = _param_Component === void 0 ? 'span' : _param_Component, _param_normalize = _param.normalize, normalize = _param_normalize === void 0 ? true : _param_normalize, _param_inline = _param.inline, inline = _param_inline === void 0 ? false : _param_inline, restProps = Caption_object_without_properties(_param, [
        "className",
        "level",
        "caps",
        "Component",
        "normalize",
        "inline"
    ]);
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    return /*#__PURE__*/ React.createElement(Typography_Typography, Caption_object_spread({
        Component: Component,
        normalize: normalize,
        inline: inline,
        className: clsx(className, sizeY !== 'regular' && Caption_sizeYClassNames[sizeY], caps && "vkuiCaption--caps", Caption_stylesLevel[level])
    }, restProps));
};

;// CONCATENATED MODULE: ./src/components/Typography/EllipsisText/EllipsisText.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Typography/EllipsisText/EllipsisText.tsx
function EllipsisText_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function EllipsisText_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            EllipsisText_define_property(target, key, source[key]);
        });
    }
    return target;
}
function EllipsisText_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = EllipsisText_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function EllipsisText_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




/** Компонент ограничивает текстовый контент убирая его в многоточие.
 *
 * @since 6.1.0
 * @see https://vkcom.github.io/VKUI/#/EllipsisText
 */ var EllipsisText = function(_param) {
    var className = _param.className, getRootRef = _param.getRootRef, children = _param.children, maxWidth = _param.maxWidth, _param_maxLines = _param.maxLines, maxLines = _param_maxLines === void 0 ? 1 : _param_maxLines, restProps = EllipsisText_object_without_properties(_param, [
        "className",
        "getRootRef",
        "children",
        "maxWidth",
        "maxLines"
    ]);
    var contentRef = useRef(null);
    useIsomorphicLayoutEffect(function() {
        if (contentRef && contentRef.current) {
            contentRef.current.style.setProperty('-webkit-line-clamp', maxLines > 1 ? "".concat(maxLines) : '');
        }
    }, [
        contentRef,
        maxLines
    ]);
    return /*#__PURE__*/ React.createElement("span", EllipsisText_object_spread({
        ref: getRootRef,
        className: classNames("vkuiEllipsisText", className)
    }, restProps), /*#__PURE__*/ React.createElement("span", {
        style: {
            maxWidth: maxWidth
        },
        ref: contentRef,
        className: classNames("vkuiEllipsisText__content", maxLines > 1 && "vkuiEllipsisText__content--multiline")
    }, children));
};


;// CONCATENATED MODULE: ./src/components/UnstyledTextField/UnstyledTextField.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/UnstyledTextField/UnstyledTextField.tsx
function UnstyledTextField_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function UnstyledTextField_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            UnstyledTextField_define_property(target, key, source[key]);
        });
    }
    return target;
}
function UnstyledTextField_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = UnstyledTextField_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function UnstyledTextField_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




/**
 * Компонент сбрасывает [User-agent stylesheets](https://www.geeksforgeeks.org/what-is-a-user-agent-stylesheet/)
 * полей ввода.
 *
 * Используется в <a href="?path=/story/forms-input--playground" data-prod-href="https://vkcom.github.io/VKUI/playground/?path=/story/forms-input--playground">Input</a> и <a href="?path=/story/forms-textarea--playground" data-prod-href="https://vkcom.github.io/VKUI/playground/?path=/story/forms-textarea--playground">Textarea</a>.
 *
 * @since 6.1.0
 */ var UnstyledTextField_UnstyledTextField = function(_param) {
    var as = _param.as, _param_noPadding = _param.noPadding, noPadding = _param_noPadding === void 0 ? false : _param_noPadding, className = _param.className, restProps = UnstyledTextField_object_without_properties(_param, [
        "as",
        "noPadding",
        "className"
    ]);
    return /*#__PURE__*/ React.createElement(Text, UnstyledTextField_object_spread({
        Component: as,
        normalize: false,
        className: classNames("vkuiUnstyledTextField", noPadding && "vkuiUnstyledTextField--noPadding", className)
    }, restProps));
};

;// CONCATENATED MODULE: ./src/lib/adaptivity/constants.ts
function constants_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
/**
 * Public API.
 * Брейкпоинты на ширину.
 *
 * > Note: Используется порядковый номер вместо значений в пикселях... ¯\_(ツ)_/¯
 */ var constants_ViewWidth = {
    SMALL_MOBILE: 1,
    MOBILE: 2,
    SMALL_TABLET: 3,
    TABLET: 4,
    DESKTOP: 5
};
/**
 * Public API.
 * Брейкпоинт на высоту.
 *
 * > Note: Используется порядковый номер вместо значений в пикселях... ¯\_(ツ)_/¯
 */ var constants_ViewHeight = {
    EXTRA_SMALL: 1,
    SMALL: 2,
    MEDIUM: 3
};
/**
 * Public API.
 * Классы размеров. Заимствованы из гайдлайнов Apple.
 *
 * Ссылки
 * - {@link https://www.figma.com/file/2sQl2eaxsp7RDRdMOeneEC/%F0%9F%92%A0-VKUI-Common-Library-%5BBeta%5D?node-id=3220%3A0 | Figma VKUI – Адаптивность}
 * - {@link https://developer.apple.com/design/human-interface-guidelines/foundations/layout/ | Layout - Foundations - Human Interface Guidelines - Design}
 */ var SizeType = {
    COMPACT: 'compact',
    REGULAR: 'regular'
};
var _obj;
var constants_VIEW_WIDTH_TO_CSS_BREAKPOINT_MAP = (_obj = {}, constants_define_property(_obj, constants_ViewWidth.SMALL_MOBILE, 'smallMobileMinus'), constants_define_property(_obj, constants_ViewWidth.MOBILE, 'mobile'), constants_define_property(_obj, constants_ViewWidth.SMALL_TABLET, 'smallTablet'), constants_define_property(_obj, constants_ViewWidth.TABLET, 'tablet'), constants_define_property(_obj, constants_ViewWidth.DESKTOP, 'desktopPlus'), _obj);

;// CONCATENATED MODULE: ./src/lib/adaptivity/breakpoints.ts
var breakpoints_BREAKPOINTS = {
    DESKTOP: 1280,
    TABLET: 1024,
    SMALL_TABLET: 768,
    MOBILE: 320,
    MOBILE_LANDSCAPE_HEIGHT: 415,
    MEDIUM_HEIGHT: 720
};
/**
 * Луч [a;+∞)
 */ function widthPlus(a) {
    return "(min-width: ".concat(a, "px)");
}
/**
 * Открытый луч (-∞;b)
 */ function widthMinus(b) {
    // NOTE: `not` плохо поддерживается, поэтому используем max-width и вычитаем
    // от числа 0.1
    return "(max-width: ".concat(b - 0.1, "px)");
}
/**
 * Полуинтервал [a;b)
 */ function widthHalfInterval(a, b) {
    return "".concat(widthPlus(a), " and ").concat(widthMinus(b));
}
/**
 * Луч [a;+∞)
 */ function heightPlus(a) {
    return "(min-height: ".concat(a, "px)");
}
/**
 * Открытый луч (-∞;b)
 */ function heightMinus(b) {
    // NOTE: `not` плохо поддерживается, поэтому используем max-width и вычитаем
    // от числа 0.1
    return "(max-height: ".concat(b - 0.1, "px)");
}
/**
 * Полуинтервал [a;b)
 */ function heightHalfInterval(a, b) {
    return "".concat(heightPlus(a), " and ").concat(heightMinus(b));
}
var MEDIA_QUERIES = {
    DESKTOP_PLUS: widthPlus(breakpoints_BREAKPOINTS.DESKTOP),
    TABLET: widthHalfInterval(breakpoints_BREAKPOINTS.TABLET, breakpoints_BREAKPOINTS.DESKTOP),
    SMALL_TABLET_PLUS: widthPlus(breakpoints_BREAKPOINTS.SMALL_TABLET),
    SMALL_TABLET: widthHalfInterval(breakpoints_BREAKPOINTS.SMALL_TABLET, breakpoints_BREAKPOINTS.TABLET),
    MOBILE: widthHalfInterval(breakpoints_BREAKPOINTS.MOBILE, breakpoints_BREAKPOINTS.SMALL_TABLET),
    MEDIUM_HEIGHT: heightPlus(breakpoints_BREAKPOINTS.MEDIUM_HEIGHT),
    MOBILE_LANDSCAPE_HEIGHT: heightPlus(breakpoints_BREAKPOINTS.MOBILE_LANDSCAPE_HEIGHT)
};

;// CONCATENATED MODULE: ./src/lib/adaptivity/functions.ts


/**
 * @public
 */ function getViewWidthByViewportWidth(viewportWidth) {
    if (viewportWidth >= BREAKPOINTS.DESKTOP) {
        return ViewWidth.DESKTOP;
    }
    if (viewportWidth >= BREAKPOINTS.TABLET) {
        return ViewWidth.TABLET;
    }
    if (viewportWidth >= BREAKPOINTS.SMALL_TABLET) {
        return ViewWidth.SMALL_TABLET;
    }
    if (viewportWidth >= BREAKPOINTS.MOBILE) {
        return ViewWidth.MOBILE;
    }
    return ViewWidth.SMALL_MOBILE;
}
function functions_getViewWidthByMediaQueries(mediaQueries) {
    /* eslint-disable no-restricted-properties */ if (mediaQueries.desktopPlus.matches) {
        return ViewWidth.DESKTOP;
    }
    if (mediaQueries.tablet.matches) {
        return ViewWidth.TABLET;
    }
    if (mediaQueries.smallTablet.matches) {
        return ViewWidth.SMALL_TABLET;
    }
    if (mediaQueries.mobile.matches) {
        return ViewWidth.MOBILE;
    }
    /* eslint-enable no-restricted-properties */ return ViewWidth.SMALL_MOBILE;
}
/**
 * @public
 */ function getViewHeightByViewportHeight(viewportHeight) {
    if (viewportHeight >= BREAKPOINTS.MEDIUM_HEIGHT) {
        return ViewHeight.MEDIUM;
    }
    if (viewportHeight >= BREAKPOINTS.MOBILE_LANDSCAPE_HEIGHT) {
        return ViewHeight.SMALL;
    }
    return ViewHeight.EXTRA_SMALL;
}
function functions_getViewHeightByMediaQueries(mediaQueries) {
    /* eslint-disable no-restricted-properties */ if (mediaQueries.mediumHeight.matches) {
        return ViewHeight.MEDIUM;
    }
    if (mediaQueries.mobileLandscapeHeight.matches) {
        return ViewHeight.SMALL;
    }
    /* eslint-enable no-restricted-properties */ return ViewHeight.EXTRA_SMALL;
}
function functions_getSizeX(viewWidth) {
    return viewWidth <= ViewWidth.MOBILE ? 'compact' : 'regular';
}
function functions_isCompactByViewWidth(viewWidth, hasPointer) {
    return viewWidth !== undefined && viewWidth >= ViewWidth.SMALL_TABLET && hasPointer;
}
function functions_isCompactByViewHeight(viewHeight) {
    return viewHeight !== undefined && viewHeight <= ViewHeight.EXTRA_SMALL;
}
function functions_getSizeY(viewWidth, viewHeight, hasPointer) {
    if (functions_isCompactByViewWidth(viewWidth, hasPointer) || functions_isCompactByViewHeight(viewHeight)) {
        return 'compact';
    }
    return 'regular';
}
function functions_tryToCheckIsDesktop(viewWidth, viewHeight, hasPointer, platform) {
    // см. https://github.com/VKCOM/VKUI/pull/2473
    var IS_VKCOM_CRUTCH = platform === 'vkcom';
    if ((viewWidth === undefined || hasPointer === undefined) && (viewWidth === undefined || viewHeight === undefined) || hasPointer === undefined && viewHeight === undefined) {
        return IS_VKCOM_CRUTCH ? true : null;
    }
    var widthIsLikeDesktop = viewWidth >= constants_ViewWidth.SMALL_TABLET;
    var otherParametersIsLikeDesktop = hasPointer || (viewHeight !== undefined ? viewHeight >= constants_ViewHeight.MEDIUM : false);
    return widthIsLikeDesktop && otherParametersIsLikeDesktop || IS_VKCOM_CRUTCH;
}
/**
 * Конвертирует `viewWidth` в CSS брейкпоинты (см. тесты для наглядности).
 *
 * > Note: используется восклицательный знак (!), чтобы принудить TS поверить, что св-во точно не может быть
 * > `undefined`. Это всё из-за применения `Partial<...>` для объекта.
 */ function functions_viewWidthToClassName(breakpointClassNames) {
    var viewWidth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'none';
    if (viewWidth === 'none') {
        return breakpointClassNames.hasOwnProperty('none') ? breakpointClassNames['none'] : null;
    }
    var breakpoints = [];
    var breakpointName = VIEW_WIDTH_TO_CSS_BREAKPOINT_MAP[viewWidth];
    if (breakpointClassNames.hasOwnProperty(breakpointName)) {
        breakpoints.push(breakpointClassNames[breakpointName]);
    }
    if (viewWidth >= ViewWidth.MOBILE) {
        if (breakpointClassNames.hasOwnProperty('mobilePlus')) {
            breakpoints.push(breakpointClassNames['mobilePlus']);
        }
    }
    if (viewWidth >= ViewWidth.SMALL_TABLET) {
        if (breakpointClassNames.hasOwnProperty('smallTabletPlus')) {
            breakpoints.push(breakpointClassNames['smallTabletPlus']);
        }
    } else {
        if (breakpointClassNames.hasOwnProperty('smallTabletMinus')) {
            breakpoints.push(breakpointClassNames['smallTabletMinus']);
        }
    }
    if (viewWidth >= ViewWidth.TABLET) {
        if (breakpointClassNames.hasOwnProperty('tabletPlus')) {
            breakpoints.push(breakpointClassNames['tabletPlus']);
        }
    } else {
        if (breakpointClassNames.hasOwnProperty('tabletMinus')) {
            breakpoints.push(breakpointClassNames['tabletMinus']);
        }
    }
    return breakpoints.length > 0 ? breakpoints.join(' ') : null;
}

;// CONCATENATED MODULE: ./src/lib/adaptivity/index.ts




;// CONCATENATED MODULE: ./src/lib/callMultiple.ts
function callMultiple_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function callMultiple_array_without_holes(arr) {
    if (Array.isArray(arr)) return callMultiple_array_like_to_array(arr);
}
function callMultiple_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function callMultiple_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function callMultiple_to_consumable_array(arr) {
    return callMultiple_array_without_holes(arr) || callMultiple_iterable_to_array(arr) || callMultiple_unsupported_iterable_to_array(arr) || callMultiple_non_iterable_spread();
}
function callMultiple_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return callMultiple_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return callMultiple_array_like_to_array(o, minLen);
}
var callMultiple_callMultiple = function() {
    for(var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++){
        fns[_key] = arguments[_key];
    }
    return function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
            args[_key] = arguments[_key];
        }
        return fns.filter(function(f) {
            return typeof f === 'function';
        }).forEach(function(f) {
            return f.apply(void 0, callMultiple_to_consumable_array(args));
        });
    };
};

;// CONCATENATED MODULE: ./src/lib/mergeCalls.ts
function mergeCalls_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function mergeCalls_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function mergeCalls_array_without_holes(arr) {
    if (Array.isArray(arr)) return mergeCalls_array_like_to_array(arr);
}
function mergeCalls_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function mergeCalls_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function mergeCalls_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function mergeCalls_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function mergeCalls_sliced_to_array(arr, i) {
    return mergeCalls_array_with_holes(arr) || mergeCalls_iterable_to_array_limit(arr, i) || mergeCalls_unsupported_iterable_to_array(arr, i) || mergeCalls_non_iterable_rest();
}
function mergeCalls_to_consumable_array(arr) {
    return mergeCalls_array_without_holes(arr) || mergeCalls_iterable_to_array(arr) || mergeCalls_unsupported_iterable_to_array(arr) || mergeCalls_non_iterable_spread();
}
function mergeCalls_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return mergeCalls_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return mergeCalls_array_like_to_array(o, minLen);
}

/**
 * Собирает события в callMultiple
 *
 * # Пример
 *
 * ```js
 * const handlers = mergeCalls(focusEvents, { onFocus, onBlur })
 * ```
 */ function mergeCalls() {
    for(var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++){
        props[_key] = arguments[_key];
    }
    var objectToArrays = props.reduce(function(record, obj) {
        Object.entries(obj).forEach(function(param) {
            var _param = mergeCalls_sliced_to_array(param, 2), key = _param[0], value = _param[1];
            if (!record.hasOwnProperty(key)) {
                record[key] = [];
            }
            record[key].push(value);
        });
        return record;
    }, {});
    return Object.entries(objectToArrays).reduce(function(record, param) {
        var _param = mergeCalls_sliced_to_array(param, 2), key = _param[0], array = _param[1];
        record[key] = callMultiple_callMultiple.apply(void 0, mergeCalls_to_consumable_array(array));
        return record;
    }, {});
}

;// CONCATENATED MODULE: ./src/hooks/useFocusVisible.ts
function useFocusVisible_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useFocusVisible_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useFocusVisible_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useFocusVisible_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useFocusVisible_sliced_to_array(arr, i) {
    return useFocusVisible_array_with_holes(arr) || useFocusVisible_iterable_to_array_limit(arr, i) || useFocusVisible_unsupported_iterable_to_array(arr, i) || useFocusVisible_non_iterable_rest();
}
function useFocusVisible_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useFocusVisible_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useFocusVisible_array_like_to_array(o, minLen);
}


function useFocusVisible_useFocusVisible() {
    var withKeyboardInputCheck = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
    var _useState = useFocusVisible_sliced_to_array((0,react.useState)(false), 2), isFocused = _useState[0], setIsFocused = _useState[1];
    var keyboardInput = (0,react.useContext)(AppRootContext_AppRootContext).keyboardInput;
    var onFocus = (0,react.useCallback)(function(event) {
        event.stopPropagation();
        setIsFocused(true);
    }, [
        setIsFocused
    ]);
    var onBlur = (0,react.useCallback)(function(event) {
        event.stopPropagation();
        setIsFocused(false);
    }, [
        setIsFocused
    ]);
    var focusVisible = withKeyboardInputCheck ? keyboardInput && isFocused : isFocused;
    return {
        focusVisible: focusVisible,
        onFocus: onFocus,
        onBlur: onBlur
    };
}

;// CONCATENATED MODULE: ./src/hooks/useFocusVisibleClassName.ts


var focusVisiblePresetModeClassNames = {
    inside: "vkui-focus-visible--mode-inside",
    outside: "vkui-focus-visible--mode-outside"
};
var isPresetMode = function(mode) {
    return mode === 'inside' || mode === 'outside';
};
/**
 * Используется для проброса классов состояния :focus-visible в компонент.
 *
 * Рулит исключительно классами. Чтобы определить, есть ли фокусное состояние,
 * используйте хуки `useFocusVisible()` и `useFocusWithin()`.
 */ function useFocusVisibleClassName_useFocusVisibleClassName(param) {
    var _param_focusVisible = param.focusVisible, focusVisible = _param_focusVisible === void 0 ? false : _param_focusVisible, _param_mode = param.mode, mode = _param_mode === void 0 ? 'inside' : _param_mode;
    var modeClassName = isPresetMode(mode) ? focusVisiblePresetModeClassNames[mode] : mode;
    var focusVisibleClassNames = clsx("vkui-focus-visible", focusVisible && "vkui-focus-visible--focused", focusVisible && modeClassName);
    return focusVisibleClassNames;
}

;// CONCATENATED MODULE: ./src/lib/utils.ts



function utils_setRef(element1, ref) {
    if (ref) {
        if (typeof ref === 'function') {
            ref(element1);
        } else {
            ref.current = element1;
        }
    }
}
function utils_multiRef() {
    for(var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++){
        refs[_key] = arguments[_key];
    }
    var current = null;
    return {
        get current () {
            return current;
        },
        set current (element){
            current = element;
            refs.forEach(function(ref) {
                return ref && utils_setRef(element, ref);
            });
        }
    };
}
var utils_stopPropagation = function(event) {
    return event.stopPropagation();
};
function addClassNameToElement(element1, className) {
    var elementClassName = element1.getAttribute('class') || '';
    var updatedClassName = "".concat(elementClassName).concat(elementClassName ? ' ' : '').concat(className);
    element1.setAttribute('class', updatedClassName);
}
function removeClassNameFromElement(element1, classNameToRemove) {
    var classNamesArray = (element1.getAttribute('class') || '').split(/\s+/);
    var elementIndexToRemove = classNamesArray.findIndex(function(className) {
        return className === classNameToRemove;
    });
    if (elementIndexToRemove === -1) {
        return;
    }
    classNamesArray.splice(elementIndexToRemove, 1);
    element1.setAttribute('class', classNamesArray.join(' '));
}
var utils_excludeKeysWithUndefined = function(obj) {
    var filteredObj = {};
    for(var key in obj){
        if (obj.hasOwnProperty(key) && obj[key] !== undefined) {
            filteredObj[key] = obj[key];
        }
    }
    return filteredObj;
};
var utils_isDOMTypeElement = function(element1) {
    return typeof element1.type === 'string';
};
function utils_isValidNotReactFragmentElement(children) {
    return React.isValidElement(children) && // @ts-expect-error: TS2339 $$typeof всегда symbol, в отличии от type, благодаря этому пропускаем лишние проверки на тип.
    children.$$typeof !== Symbol.for('react.fragment');
}
function utils_isForwardRefElement(children) {
    if (!React.isValidElement(children)) {
        return false;
    }
    // @ts-expect-error: TS2339 $$typeof всегда symbol, в отличии от type, благодаря этому пропускаем лишние проверки на тип.
    // черпаем вдохновение из react-is https://github.com/facebook/react/blob/d48dbb824985166ecb7b2959db03090a8593dce0/packages/react-is/src/ReactIs.js#L119-L121
    var typeOfOfType = children.type && children.type.$$typeof;
    return typeOfOfType === Symbol.for('react.forward_ref');
}
/**
 * При использовании пропа fetchPriority генерируется warning "Invalid DOM property" (версия React 18.*)
 * Ворнинга нет в React версии 19.*, поэтому пока поддерживаем 2 версии наименования
 */ function utils_getFetchPriorityProp(value) {
    if (react.version.startsWith('19')) {
        return {
            fetchPriority: value
        };
    }
    return {
        fetchpriority: value
    };
}
/*
 * [a11y]
 * Обрабатывает событие onkeydown
 * для кастомных доступных элементов:
 * - role="link" (активация по Enter)
 * - role="button" (активация по Space и Enter)
 */ function clickByKeyboardHandler(event) {
    var _event_target_click, _event_target;
    if (!floating_ui_utils_dom_esm_isHTMLElement(event.target) || !shouldTriggerClickOnEnterOrSpace(event)) {
        return;
    }
    event.preventDefault();
    (_event_target_click = (_event_target = event.target).click) === null || _event_target_click === void 0 ? void 0 : _event_target_click.call(_event_target);
}

;// CONCATENATED MODULE: ./src/components/Clickable/useStateWithDelay.tsx
function useStateWithDelay_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useStateWithDelay_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useStateWithDelay_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useStateWithDelay_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useStateWithDelay_sliced_to_array(arr, i) {
    return useStateWithDelay_array_with_holes(arr) || useStateWithDelay_iterable_to_array_limit(arr, i) || useStateWithDelay_unsupported_iterable_to_array(arr, i) || useStateWithDelay_non_iterable_rest();
}
function useStateWithDelay_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useStateWithDelay_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useStateWithDelay_array_like_to_array(o, minLen);
}


/**
 * Возвращает значение с состоянием и функции на обновление состояния
 * без и с задержкой.
 *
 * # Пример
 *
 * ```ts
 * const [count, setCount] = useStateWithDelay(initialState);
 *
 * const click = () => {
 *   setCount(count + 1, 500)
 * }
 * ```
 *
 * Есть возможность передать функцию-коллбэк, которая будет
 * вызвана сразу после вызова setState с новым значением стейта
 * в качестве аргумента.
 *
 * ```ts
 * const onCountChange = React.useCallback((count) => {
 *   // обработчик нового значения count
 *   // будет вызван через 500мс
 * }, []);
 *
 *
 * const [count, setCount] = useStateWithDelay(initialState, 0, onCountChange);
 *
 * const click = () => {
 *   setCount(count + 1, 500)
 * }
 * ```
 */ function useStateWithDelay(initialState) {
    var defaultDelay = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, onStateChange = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : functions_noop;
    var _React_useState = useStateWithDelay_sliced_to_array(react.useState(initialState), 2), value = _React_useState[0], setValue = _React_useState[1];
    var timeout = react.useRef();
    var handleSetValue = react.useCallback(function(nextValue) {
        if (isFunction(nextValue)) {
            setValue(function(prevValue) {
                var value = nextValue(prevValue);
                onStateChange(value);
                return value;
            });
        } else {
            setValue(nextValue);
            onStateChange(nextValue);
        }
    }, [
        onStateChange
    ]);
    var setValueWithDelay = react.useCallback(function(newValue) {
        var delay = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDelay;
        clearTimeout(timeout.current);
        if (delay === 0) {
            handleSetValue(newValue);
            return;
        }
        timeout.current = setTimeout(function() {
            return handleSetValue(newValue);
        }, delay);
    }, [
        defaultDelay,
        handleSetValue
    ]);
    return [
        value,
        setValueWithDelay
    ];
}

;// CONCATENATED MODULE: ./src/components/Clickable/useState.tsx
function useState_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useState_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useState_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function useState_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useState_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useState_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            useState_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function useState_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = useState_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function useState_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function useState_sliced_to_array(arr, i) {
    return useState_array_with_holes(arr) || useState_iterable_to_array_limit(arr, i) || useState_unsupported_iterable_to_array(arr, i) || useState_non_iterable_rest();
}
function useState_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useState_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useState_array_like_to_array(o, minLen);
}




var DEFAULT_ACTIVE_EFFECT_DELAY = 600;
var ACTIVE_DELAY = 70;
/**
 * Управляет наведением на компонент, игнорирует тач события
 */ function useHover(param) {
    var hovered = param.hovered, _param_hasHover = param.hasHover, hasHover = _param_hasHover === void 0 ? true : _param_hasHover, lockState = param.lockState, setParentStateLock = param.setParentStateLock;
    var _React_useState = useState_sliced_to_array(react.useState(false), 2), hoveredStateLocal = _React_useState[0], setHoveredStateLocal = _React_useState[1];
    var prevIsHoveredRef = react.useRef(undefined);
    var handleHover = react.useCallback(function(isHover) {
        setHoveredStateLocal(isHover);
        var isHovered = calculateStateValue({
            hasState: hasHover,
            isLocked: lockState,
            stateValueControlled: Boolean(hovered),
            stateValueLocal: isHover
        });
        // проверка сделана чтобы реже вызывать обновление состояния
        // контекста родителя
        if (isHovered !== prevIsHoveredRef.current) {
            prevIsHoveredRef.current = isHovered;
            setParentStateLock(isHovered);
        }
    }, [
        setParentStateLock,
        hasHover,
        hovered,
        lockState
    ]);
    var onPointerEnter = function(e) {
        if (e.pointerType === 'touch') {
            return;
        }
        handleHover(true);
    };
    var onPointerLeave = function() {
        handleHover(false);
    };
    var isHovered = calculateStateValue({
        hasState: hasHover,
        isLocked: lockState,
        stateValueControlled: Boolean(hovered),
        stateValueLocal: hoveredStateLocal
    });
    return {
        isHovered: isHovered,
        onPointerEnter: hasHover ? onPointerEnter : functions_noop,
        onPointerLeave: hasHover ? onPointerLeave : functions_noop
    };
}
/**
 * Управляет активацией компонента
 */ function useActive(param) {
    var activated = param.activated, activeEffectDelay = param.activeEffectDelay, _param_hasActive = param.hasActive, hasActive = _param_hasActive === void 0 ? true : _param_hasActive, lockStateRef = param.lockStateRef, setParentStateLock = param.setParentStateLock;
    // передаём setParentStateLock, чтобы функция вызывалась вместе с установкой стейта,
    // если установка отложена c помощью delay, то и вызов будет отложен
    var _useStateWithDelay = useState_sliced_to_array(useStateWithDelay(false, 0, setParentStateLock), 2), activatedState = _useStateWithDelay[0], setActivated = _useStateWithDelay[1];
    // Список нажатий которые не требуется отменять
    var pointersUp = react.useMemo(function() {
        return new Set();
    }, []);
    var onPointerDown = function() {
        if (lockStateRef.current) {
            return;
        }
        setActivated(true, ACTIVE_DELAY);
        // намеренно выставляем lock, так как setActivated вызов отложен
        // а у отложенного setActivated setParentStateLock тоже вызовится отложенно
        // родитель сейчас тоже обработает это же событие PointerDown
        // если мы не залочим activatedState у родителя сейчас, то родитель выставит active состояние
        setParentStateLock(true);
    };
    var onPointerCancel = function(e) {
        if (pointersUp.has(e.pointerId)) {
            pointersUp.delete(e.pointerId);
            return;
        }
        setActivated(false);
    };
    var onPointerUp = function(e) {
        pointersUp.add(e.pointerId);
        if (lockStateRef.current) {
            return;
        }
        setActivated(true);
        setActivated(false, activeEffectDelay);
    };
    var isActivated = calculateStateValue({
        hasState: hasActive,
        isLocked: lockStateRef.current,
        stateValueControlled: Boolean(activated),
        stateValueLocal: activatedState
    });
    return {
        isActivated: isActivated,
        onPointerLeave: hasActive ? onPointerCancel : functions_noop,
        onPointerDown: hasActive ? onPointerDown : functions_noop,
        onPointerCancel: hasActive ? onPointerCancel : functions_noop,
        onPointerUp: hasActive ? onPointerUp : functions_noop
    };
}
var ClickableLockStateContext = /*#__PURE__*/ react.createContext({
    lockHoverStateBubbling: undefined,
    lockActiveStateBubbling: undefined
});
/**
 * Блокирует стейт на всплытие
 */ function useLockState(setParentStateLockBubbling) {
    var _React_useState = useState_sliced_to_array(react.useState(false), 2), lockState = _React_useState[0], setLockState = _React_useState[1];
    var setStateLockBubblingImmediate = react.useCallback(function(isLock) {
        setLockState(isLock);
        setParentStateLockBubbling(isLock);
    }, [
        setParentStateLockBubbling
    ]);
    return [
        lockState,
        setParentStateLockBubbling,
        setStateLockBubblingImmediate
    ];
}
function useLockRef(setParentStateLockBubbling) {
    var lockStateRef = react.useRef(false);
    var setStateLockBubblingImmediate = react.useCallback(function(isLock) {
        lockStateRef.current = isLock;
        setParentStateLockBubbling(isLock);
    }, [
        setParentStateLockBubbling
    ]);
    return [
        lockStateRef,
        setParentStateLockBubbling,
        setStateLockBubblingImmediate
    ];
}
/**
 * Управляет состоянием компонента
 */ function useState(_param) {
    var hovered = _param.hovered, hasHover = _param.hasHover, hasActive = _param.hasActive, unlockParentHover = _param.unlockParentHover, restProps = useState_object_without_properties(_param, [
        "hovered",
        "hasHover",
        "hasActive",
        "unlockParentHover"
    ]);
    var _React_useContext = react.useContext(ClickableLockStateContext), _React_useContext_lockHoverStateBubbling = _React_useContext.lockHoverStateBubbling, lockHoverStateBubbling = _React_useContext_lockHoverStateBubbling === void 0 ? functions_noop : _React_useContext_lockHoverStateBubbling, _React_useContext_lockActiveStateBubbling = _React_useContext.lockActiveStateBubbling, lockActiveStateBubbling = _React_useContext_lockActiveStateBubbling === void 0 ? functions_noop : _React_useContext_lockActiveStateBubbling;
    var _useLockState = useState_sliced_to_array(useLockState(unlockParentHover ? functions_noop : lockHoverStateBubbling), 3), lockHoverState = _useLockState[0], setParentStateLockHoverBubbling = _useLockState[1], setLockHoverBubblingImmediate = _useLockState[2];
    var _useLockRef = useState_sliced_to_array(useLockRef(lockActiveStateBubbling), 3), lockActiveStateRef = _useLockRef[0], setParentStateLockActiveBubbling = _useLockRef[1], setLockActiveBubblingImmediate = _useLockRef[2];
    var _useHover = useHover({
        hasHover: hasHover,
        hovered: hovered,
        lockState: lockHoverState,
        setParentStateLock: setParentStateLockHoverBubbling
    }), isHovered = _useHover.isHovered, hoverEvent = useState_object_without_properties(_useHover, [
        "isHovered"
    ]);
    var _useActive = useActive(_object_spread_props(useState_object_spread({}, restProps), {
        lockStateRef: lockActiveStateRef,
        setParentStateLock: setParentStateLockActiveBubbling
    })), isActivated = _useActive.isActivated, activeEvent = useState_object_without_properties(_useActive, [
        "isActivated"
    ]);
    var stateClassName = clsx(isHovered && restProps.hoverClassName, isActivated && restProps.activeClassName);
    var handlers = mergeCalls(hoverEvent, activeEvent);
    return useState_object_spread({
        stateClassName: stateClassName,
        setLockHoverBubblingImmediate: setLockHoverBubblingImmediate,
        setLockActiveBubblingImmediate: setLockActiveBubblingImmediate
    }, handlers);
}
// Общая функция для определения конечного состояния active/hovered
function calculateStateValue(param) {
    var hasState = param.hasState, isLocked = param.isLocked, stateValueControlled = param.stateValueControlled, stateValueLocal = param.stateValueLocal;
    return hasState && !isLocked && (stateValueControlled || stateValueLocal);
}

;// CONCATENATED MODULE: ./src/components/Clickable/Clickable.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Clickable/Clickable.tsx
function Clickable_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Clickable_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Clickable_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Clickable_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Clickable_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Clickable_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}









/**
 * Некликабельный компонент. Отключаем возможность нажимать на компонент.
 */ var NonClickable = function(_param) {
    var href = _param.href, onClick = _param.onClick, onClickCapture = _param.onClickCapture, activeClassName = _param.activeClassName, hoverClassName = _param.hoverClassName, hasActive = _param.hasActive, hasHover = _param.hasHover, hovered = _param.hovered, unlockParentHover = _param.unlockParentHover, activated = _param.activated, activeEffectDelay = _param.activeEffectDelay, restProps = Clickable_object_without_properties(_param, [
        "href",
        "onClick",
        "onClickCapture",
        "activeClassName",
        "hoverClassName",
        "hasActive",
        "hasHover",
        "hovered",
        "unlockParentHover",
        "activated",
        "activeEffectDelay"
    ]);
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, restProps);
};
/**
 * Кликабельный компонент. Добавляем кучу обвесов
 */ var RealClickable = function(_param) {
    var baseClassName = _param.baseClassName, children = _param.children, _param_focusVisibleMode = _param.focusVisibleMode, focusVisibleMode = _param_focusVisibleMode === void 0 ? 'inside' : _param_focusVisibleMode, activeClassName = _param.activeClassName, hoverClassName = _param.hoverClassName, _param_activeEffectDelay = _param.activeEffectDelay, activeEffectDelay = _param_activeEffectDelay === void 0 ? DEFAULT_ACTIVE_EFFECT_DELAY : _param_activeEffectDelay, _param_hasHover = _param.hasHover, hasHover = _param_hasHover === void 0 ? true : _param_hasHover, _param_hasActive = _param.hasActive, hasActive = _param_hasActive === void 0 ? true : _param_hasActive, hovered = _param.hovered, activated = _param.activated, hasHoverWithChildren = _param.hasHoverWithChildren, unlockParentHover = _param.unlockParentHover, onPointerEnter = _param.onPointerEnter, onPointerLeave = _param.onPointerLeave, onPointerDown = _param.onPointerDown, onPointerCancel = _param.onPointerCancel, onPointerUp = _param.onPointerUp, onBlur = _param.onBlur, onFocus = _param.onFocus, onKeyDown = _param.onKeyDown, restProps = Clickable_object_without_properties(_param, [
        "baseClassName",
        "children",
        "focusVisibleMode",
        "activeClassName",
        "hoverClassName",
        "activeEffectDelay",
        "hasHover",
        "hasActive",
        "hovered",
        "activated",
        "hasHoverWithChildren",
        "unlockParentHover",
        "onPointerEnter",
        "onPointerLeave",
        "onPointerDown",
        "onPointerCancel",
        "onPointerUp",
        "onBlur",
        "onFocus",
        "onKeyDown"
    ]);
    var _useFocusVisible = useFocusVisible_useFocusVisible(), focusVisible = _useFocusVisible.focusVisible, focusEvents = Clickable_object_without_properties(_useFocusVisible, [
        "focusVisible"
    ]);
    var focusVisibleClassNames = useFocusVisibleClassName_useFocusVisibleClassName({
        focusVisible: focusVisible,
        mode: focusVisibleMode
    });
    var _useState = useState({
        activeClassName: activeClassName,
        hoverClassName: hoverClassName,
        activeEffectDelay: activeEffectDelay,
        hasHover: hasHover,
        hasActive: hasActive,
        hovered: hovered,
        activated: activated,
        unlockParentHover: unlockParentHover
    }), stateClassName = _useState.stateClassName, setLockHoverBubblingImmediate = _useState.setLockHoverBubblingImmediate, setLockActiveBubblingImmediate = _useState.setLockActiveBubblingImmediate, stateEvents = Clickable_object_without_properties(_useState, [
        "stateClassName",
        "setLockHoverBubblingImmediate",
        "setLockActiveBubblingImmediate"
    ]);
    var handlers = mergeCalls(focusEvents, stateEvents, {
        onKeyDown: clickByKeyboardHandler
    }, {
        onPointerEnter: onPointerEnter,
        onPointerLeave: onPointerLeave,
        onPointerDown: onPointerDown,
        onPointerCancel: onPointerCancel,
        onPointerUp: onPointerUp,
        onBlur: onBlur,
        onFocus: onFocus,
        onKeyDown: onKeyDown
    });
    var lockStateContextValue = react.useMemo(function() {
        return {
            lockHoverStateBubbling: hasHoverWithChildren ? functions_noop : setLockHoverBubblingImmediate,
            lockActiveStateBubbling: setLockActiveBubblingImmediate
        };
    }, [
        setLockHoverBubblingImmediate,
        setLockActiveBubblingImmediate,
        hasHoverWithChildren
    ]);
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, Clickable_object_spread({
        baseClassName: clsx(baseClassName, "vkuiClickable__realClickable", focusVisibleClassNames, stateClassName)
    }, handlers, restProps), /*#__PURE__*/ react.createElement(ClickableLockStateContext.Provider, {
        value: lockStateContextValue
    }, children));
};
/**
 * Проверяем, является ли компонент кликабельным
 */ function checkClickable(props) {
    return (props.href !== undefined || props.onClick !== undefined || props.onClickCapture !== undefined || props.Component === 'a' || props.Component === 'button' || props.Component === 'label' || props.Component === 'input') && !props.disabled;
}
/**
 * Определяет правильный компонент и его свойства
 *
 * - если передан Component, используем его
 * - при передаче `href` превратится в `a`,
 * - при передаче `onClick` превратится в `div` c `role="button"` и `tabIndex="0"`.
 * - иначе используется `div`.
 */ function component(param) {
    var Component = param.Component, onClick = param.onClick, onClickCapture = param.onClickCapture, href = param.href, disabled = param.disabled;
    if (Component !== undefined) {
        return {
            Component: Component
        };
    } else if (href !== undefined) {
        return {
            'Component': 'a',
            'aria-disabled': disabled
        };
    } else if (onClick !== undefined || onClickCapture !== undefined) {
        return {
            'Component': 'div',
            'role': 'button',
            'tabIndex': disabled ? undefined : 0,
            'aria-disabled': disabled
        };
    }
    return {};
}
var getUserAgentResetClassName = function(Component) {
    if (Component === 'a') {
        return "vkuiClickable__resetLinkStyle";
    }
    if (Component === 'button') {
        return "vkuiClickable__resetButtonStyle";
    }
    return;
};
/**
 * Базовый кликабельный корневой компонент.
 *
 * - при передаче `href` превратится в `a`,
 * - при передаче `onClick` превратится в `div` c `role="button"` и `tabIndex="0"`.
 * - иначе используется `div`.
 *
 * Отвечает за:
 *
 * - стейты наведения и нажатия
 * - a11y компонентов
 */ var Clickable_Clickable = function(_param) {
    var _param_focusVisibleMode = _param.focusVisibleMode, focusVisibleMode = _param_focusVisibleMode === void 0 ? 'inside' : _param_focusVisibleMode, baseClassNameProp = _param.baseClassName, restProps = Clickable_object_without_properties(_param, [
        "focusVisibleMode",
        "baseClassName"
    ]);
    var commonProps = component(restProps);
    var isClickable = checkClickable(restProps);
    var baseClassName = clsx(baseClassNameProp, getUserAgentResetClassName(commonProps.Component), "vkuiClickable__host");
    if (isClickable) {
        return /*#__PURE__*/ react.createElement(RealClickable, Clickable_object_spread({
            baseClassName: baseClassName,
            focusVisibleMode: focusVisibleMode
        }, commonProps, restProps));
    }
    return /*#__PURE__*/ react.createElement(NonClickable, Clickable_object_spread({
        baseClassName: baseClassName
    }, commonProps, restProps));
};

;// CONCATENATED MODULE: ./src/hooks/usePlatform.ts

function usePlatform_usePlatform() {
    var platform = ConfigProviderContext_useConfigProvider().platform;
    return platform;
}

;// CONCATENATED MODULE: ./src/lib/offset.ts
function getOffsetRect(elem) {
    var box = elem === null || elem === void 0 ? void 0 : elem.getBoundingClientRect();
    return {
        top: box === null || box === void 0 ? void 0 : box.top,
        left: box === null || box === void 0 ? void 0 : box.left,
        width: elem === null || elem === void 0 ? void 0 : elem.offsetWidth,
        height: elem === null || elem === void 0 ? void 0 : elem.offsetHeight
    };
}

;// CONCATENATED MODULE: ./src/components/Tappable/Tappable.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Tappable/Ripple.tsx
function Ripple_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Ripple_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Ripple_array_without_holes(arr) {
    if (Array.isArray(arr)) return Ripple_array_like_to_array(arr);
}
function Ripple_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function Ripple_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Ripple_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Ripple_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Ripple_sliced_to_array(arr, i) {
    return Ripple_array_with_holes(arr) || Ripple_iterable_to_array_limit(arr, i) || Ripple_unsupported_iterable_to_array(arr, i) || Ripple_non_iterable_rest();
}
function Ripple_to_consumable_array(arr) {
    return Ripple_array_without_holes(arr) || Ripple_iterable_to_array(arr) || Ripple_unsupported_iterable_to_array(arr) || Ripple_non_iterable_spread();
}
function Ripple_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Ripple_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Ripple_array_like_to_array(o, minLen);
}





/**
 * Возможно нужен Ripple эффект. Данный хук нужен для отказа
 * от двойного ререндера.
 */ var useMaybeNeedRipple = function(activeMode, hasPointer) {
    var platform = usePlatform_usePlatform();
    return platform === 'android' && !hasPointer && activeMode === 'background';
};
var DELAY = 70;
var WAVE_LIVE = 225;
/**
 * Хук для создания Ripple эффектов
 */ var useRipple = function(needRipple, hasPointerContext) {
    var addClick = function addClick(x, y, pointerId) {
        var dateNow = Date.now();
        var filteredClicks = clicks.filter(function(click) {
            return click.id + WAVE_LIVE > dateNow;
        });
        setClicks(Ripple_to_consumable_array(filteredClicks).concat([
            {
                x: x,
                y: y,
                id: dateNow,
                pointerId: pointerId
            }
        ]));
        pointerDelayTimers.delete(pointerId);
    };
    var _React_useState = Ripple_sliced_to_array(react.useState([]), 2), clicks = _React_useState[0], setClicks = _React_useState[1];
    /**
   * Коллекция нажатий и таймеров задержки появления волны
   */ var pointerDelayTimers = react.useMemo(function() {
        return new Map();
    }, []);
    react.useEffect(function setClearClicksTimeout() {
        var clicksTimeoutId = clicks.length > 0 ? setTimeout(function() {
            return setClicks([]);
        }, WAVE_LIVE) : null;
        return function cancelClearClicksTimeout() {
            if (clicksTimeoutId) {
                clearTimeout(clicksTimeoutId);
            }
        };
    }, [
        clicks
    ]);
    /**
   * Добавляем волну с задержкой. Задержка необходима при отмене волны.
   */ var onPointerDown = function(e) {
        var _getOffsetRect = getOffsetRect(e.currentTarget), top = _getOffsetRect.top, left = _getOffsetRect.left;
        var x = e.clientX - (left !== null && left !== void 0 ? left : 0);
        var y = e.clientY - (top !== null && top !== void 0 ? top : 0);
        pointerDelayTimers.set(e.pointerId, setTimeout(function() {
            return addClick(x, y, e.pointerId);
        }, DELAY));
    };
    var onPointerCancel = function(e) {
        var timer = pointerDelayTimers.get(e.pointerId);
        clearTimeout(timer);
        pointerDelayTimers.delete(e.pointerId);
    };
    // WARNING: не использовать для рендеринга
    var reallyNeedRipple = (!hasMouse || hasPointerContext === false) && needRipple;
    return {
        clicks: clicks,
        onPointerDown: reallyNeedRipple ? onPointerDown : functions_noop,
        onPointerCancel: reallyNeedRipple ? onPointerCancel : functions_noop
    };
};
var Ripple = function(param) {
    var _param_needRipple = param.needRipple, needRipple = _param_needRipple === void 0 ? true : _param_needRipple, clicks = param.clicks;
    return /*#__PURE__*/ react.createElement("span", {
        "aria-hidden": true,
        className: clsx("vkuiTappable__stateLayer", needRipple && "vkuiTappable__ripple")
    }, clicks.map(function(wave) {
        return /*#__PURE__*/ react.createElement("span", {
            key: wave.id,
            className: "vkuiTappable__wave",
            style: {
                top: wave.y,
                left: wave.x
            }
        });
    }));
};

;// CONCATENATED MODULE: ./src/components/Tappable/state.tsx

/**
 * Состояние по умолчанию
 */ var DEFAULT_STATE_MODE = 'background';
var stylesHovered = {
    background: "vkuiTappable--hovered-background",
    opacity: "vkuiTappable--hovered-opacity",
    none: ''
};
/**
 * Определяем класс наведения
 */ function hoverClass() {
    var hoverMode = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : DEFAULT_STATE_MODE;
    var presetClass = stylesHovered[hoverMode];
    return presetClass !== undefined ? presetClass : hoverMode;
}
var stylesActivated = {
    background: "vkuiTappable--activated-background",
    opacity: "vkuiTappable--activated-opacity",
    none: ''
};
/**
 * Определяем класс наведения
 */ function activeClass() {
    var activeMode = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : DEFAULT_STATE_MODE;
    var presetClass = stylesActivated[activeMode];
    return presetClass !== undefined ? presetClass : activeMode;
}

;// CONCATENATED MODULE: ./src/components/Tappable/Tappable.tsx
function Tappable_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Tappable_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Tappable_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Tappable_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Tappable_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Tappable_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}








var sizeXClassNames = {
    none: "vkuiTappable--sizeX-none",
    compact: "vkuiTappable--sizeX-compact"
};
function hasPointerClassName(hasPointer) {
    switch(hasPointer){
        case undefined:
            return "vkuiTappable--hasPointer-none";
        case false:
            return "vkuiTappable--hasPointer-false";
    }
    return undefined;
}
var Tappable_Tappable = function(_param) {
    var baseClassName = _param.baseClassName, _param_borderRadiusMode = _param.borderRadiusMode, borderRadiusMode = _param_borderRadiusMode === void 0 ? 'auto' : _param_borderRadiusMode, children = _param.children, _param_hoverMode = _param.hoverMode, hoverMode = _param_hoverMode === void 0 ? DEFAULT_STATE_MODE : _param_hoverMode, _param_activeMode = _param.activeMode, activeMode = _param_activeMode === void 0 ? DEFAULT_STATE_MODE : _param_activeMode, onPointerDown = _param.onPointerDown, onPointerCancel = _param.onPointerCancel, restProps = Tappable_object_without_properties(_param, [
        "baseClassName",
        "borderRadiusMode",
        "children",
        "hoverMode",
        "activeMode",
        "onPointerDown",
        "onPointerCancel"
    ]);
    var isClickable = checkClickable(restProps);
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeX = _useAdaptivity.sizeX, sizeX = _useAdaptivity_sizeX === void 0 ? 'none' : _useAdaptivity_sizeX, hasPointer = _useAdaptivity.hasPointer;
    var needRipple = useMaybeNeedRipple(activeMode, hasPointer);
    var _useRipple = useRipple(needRipple, hasPointer), clicks = _useRipple.clicks, rippleEvents = Tappable_object_without_properties(_useRipple, [
        "clicks"
    ]);
    var handlers = mergeCalls(rippleEvents, {
        onPointerDown: onPointerDown,
        onPointerCancel: onPointerCancel
    });
    var typeProps = restProps.Component === 'button' ? {
        type: 'button'
    } : {};
    return /*#__PURE__*/ React.createElement(Clickable_Clickable, Tappable_object_spread({
        baseClassName: clsx(baseClassName, "vkuiTappable", sizeX !== SizeType.REGULAR && sizeXClassNames[sizeX], borderRadiusMode === 'inherit' && "vkuiTappable--borderRadiusInherit", hasPointerClassName(hasPointer)),
        hoverClassName: hoverClass(hoverMode),
        activeClassName: activeClass(activeMode)
    }, typeProps, handlers, restProps), children, isClickable && (hoverMode === 'background' || activeMode === 'background') && /*#__PURE__*/ React.createElement(Ripple, {
        needRipple: needRipple,
        clicks: clicks
    }));
};

;// CONCATENATED MODULE: ./src/hooks/useEventListener.ts
function _check_private_redeclaration(obj, privateCollection) {
    if (privateCollection.has(obj)) {
        throw new TypeError("Cannot initialize the same private elements twice on an object");
    }
}
function _class_apply_descriptor_get(receiver, descriptor) {
    if (descriptor.get) {
        return descriptor.get.call(receiver);
    }
    return descriptor.value;
}
function _class_apply_descriptor_set(receiver, descriptor, value) {
    if (descriptor.set) {
        descriptor.set.call(receiver, value);
    } else {
        if (!descriptor.writable) {
            throw new TypeError("attempted to set read only private field");
        }
        descriptor.value = value;
    }
}
function useEventListener_class_call_check(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _class_extract_field_descriptor(receiver, privateMap, action) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to " + action + " private field on non-instance");
    }
    return privateMap.get(receiver);
}
function _class_private_field_get(receiver, privateMap) {
    var descriptor = _class_extract_field_descriptor(receiver, privateMap, "get");
    return _class_apply_descriptor_get(receiver, descriptor);
}
function _class_private_field_init(obj, privateMap, value) {
    _check_private_redeclaration(obj, privateMap);
    privateMap.set(obj, value);
}
function _class_private_field_set(receiver, privateMap, value) {
    var descriptor = _class_extract_field_descriptor(receiver, privateMap, "set");
    _class_apply_descriptor_set(receiver, descriptor, value);
    return value;
}
function useEventListener_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}



var _target = /*#__PURE__*/ new WeakMap(), _listener = /*#__PURE__*/ new WeakMap();
var EventListener = function EventListener(type, callback, options) {
    "use strict";
    var _this = this;
    useEventListener_class_call_check(this, EventListener);
    useEventListener_define_property(this, "callback", functions_noop);
    useEventListener_define_property(this, "options", undefined);
    useEventListener_define_property(this, "eventType", void 0);
    _class_private_field_init(this, _target, {
        writable: true,
        value: null
    });
    _class_private_field_init(this, _listener, {
        writable: true,
        value: function(ev) {
            _this.callback(ev);
        }
    });
    useEventListener_define_property(this, "add", function(el) {
        if (!dom_canUseDOM) {
            return;
        }
        _this.remove();
        if (!el) {
            return;
        }
        el.addEventListener(_this.eventType, _class_private_field_get(_this, _listener), _this.options);
        _class_private_field_set(_this, _target, el);
    });
    useEventListener_define_property(this, "remove", function() {
        if (!dom_canUseDOM || !_class_private_field_get(_this, _target)) {
            return;
        }
        _class_private_field_get(_this, _target).removeEventListener(_this.eventType, _class_private_field_get(_this, _listener), _this.options);
        _class_private_field_set(_this, _target, null);
    });
    this.options = options;
    this.eventType = type;
    if (callback) {
        this.callback = callback;
    }
};
function useEventListener_useEventListener(event, _cb, _options) {
    var ref = react.useRef(null);
    if (ref.current === null) {
        ref.current = new EventListener(event, _cb, _options);
    } else {
        ref.current.eventType = event;
        ref.current.options = _options;
        if (_cb) {
            ref.current.callback = _cb;
        }
    }
    react.useEffect(function() {
        var _ref_current;
        var detach = (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.remove.bind(ref.current);
        return detach;
    }, []);
    return ref.current;
}

;// CONCATENATED MODULE: ./src/hooks/useGlobalEventListener.ts


function useGlobalEventListener_useGlobalEventListener(element, event, cb, options) {
    var listener = useEventListener_useEventListener(event, cb, options);
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function() {
        if (cb && element) {
            listener.add(element);
        } else {
            listener.remove();
        }
    }, [
        Boolean(cb),
        Boolean(element)
    ]);
}

;// CONCATENATED MODULE: ./src/lib/floating/customResizeObserver.ts
function customResizeObserver_class_call_check(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function customResizeObserver_defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function customResizeObserver_create_class(Constructor, protoProps, staticProps) {
    if (protoProps) customResizeObserver_defineProperties(Constructor.prototype, protoProps);
    if (staticProps) customResizeObserver_defineProperties(Constructor, staticProps);
    return Constructor;
}
function customResizeObserver_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
var defaultIframeStyles = {
    position: 'absolute',
    left: '0',
    top: '0',
    zIndex: '-1',
    width: '100%',
    height: '100%',
    pointerEvents: 'none',
    opacity: '0',
    border: '0'
};
/*
 * Специальный CustomResizeObserver как fallback для ResizeObserver
 * Используется для вызова update() функции (перерисовка плавающего окна) floating-ui
 * при изменении размера reference или floating элементов.
 *
 * По умолчанию пытаемся нарисовать скрытый, абсолютно позиционированный относительно
 * наблюдаемого элемента iframe.
 * В случае же, если наблюдаемый элемент имеет position: static, то правильно спозиционировать
 * iframe у нас не получится, поэтому в такой ситуации мы используем MutationObserver.
 *
 * Использовать только MutationObserver мы не можем, потому что с помощью него нельзя отследить
 * изменение размера вызванное переполнением текста.
 *
 * Применяется только если нету поддержики или полифила ResizeObserver.
 * */ var customResizeObserver_CustomResizeObserver = /*#__PURE__*/ (/* unused pure expression or super */ null && (function() {
    "use strict";
    function CustomResizeObserver(updateFunction) {
        customResizeObserver_class_call_check(this, CustomResizeObserver);
        customResizeObserver_define_property(this, "updateFunction", void 0);
        customResizeObserver_define_property(this, "records", void 0);
        customResizeObserver_define_property(this, "mutationObserverFallback", void 0);
        this.updateFunction = updateFunction;
        this.records = [];
        this.mutationObserverFallback = null;
        this.updateFunction = updateFunction;
    }
    customResizeObserver_create_class(CustomResizeObserver, [
        {
            key: "observe",
            value: function observe(element) {
                if (isPositioned(element)) {
                    return this.observeUsingIframe(element);
                }
                return this.observeUsingMutationObserver(element);
            }
        },
        {
            key: "appendToTheDOM",
            value: function appendToTheDOM() {
                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;
                try {
                    for(var _iterator = this.records[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){
                        var record = _step.value;
                        record.target.appendChild(record.iframe);
                    }
                } catch (err) {
                    _didIteratorError = true;
                    _iteratorError = err;
                } finally{
                    try {
                        if (!_iteratorNormalCompletion && _iterator.return != null) {
                            _iterator.return();
                        }
                    } finally{
                        if (_didIteratorError) {
                            throw _iteratorError;
                        }
                    }
                }
                var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;
                try {
                    for(var _iterator1 = this.records[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){
                        var record1 = _step1.value;
                        if (record1.iframe.contentWindow) {
                            record1.iframe.contentWindow.addEventListener('resize', this.updateFunction);
                        }
                    }
                } catch (err) {
                    _didIteratorError1 = true;
                    _iteratorError1 = err;
                } finally{
                    try {
                        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                            _iterator1.return();
                        }
                    } finally{
                        if (_didIteratorError1) {
                            throw _iteratorError1;
                        }
                    }
                }
            }
        },
        {
            key: "observeUsingIframe",
            value: function observeUsingIframe(element) {
                var iframe = element.ownerDocument.createElement('iframe');
                iframe.src = 'javascript:void(0)';
                iframe.ariaHidden = 'true';
                iframe.tabIndex = -1;
                Object.assign(iframe.style, defaultIframeStyles);
                this.records.push({
                    target: element,
                    iframe: iframe
                });
            }
        },
        {
            key: "observeUsingMutationObserver",
            value: function observeUsingMutationObserver(element) {
                if (!this.mutationObserverFallback) {
                    this.mutationObserverFallback = new MutationObserver(this.updateFunction);
                }
                this.mutationObserverFallback.observe(element, {
                    childList: true,
                    subtree: true
                });
            }
        },
        {
            key: "disconnect",
            value: function disconnect() {
                var _this = this;
                this.records.map(function(param) {
                    var target = param.target, iframe = param.iframe;
                    if (iframe.contentWindow) {
                        iframe.contentWindow.removeEventListener('resize', _this.updateFunction);
                    }
                    target.removeChild(iframe);
                });
                this.records = [];
                if (this.mutationObserverFallback) {
                    this.mutationObserverFallback.disconnect();
                }
                this.mutationObserverFallback = null;
            }
        }
    ]);
    return CustomResizeObserver;
}()));
function isPositioned(element) {
    return getComputedStyle(element).position !== 'static';
}

;// CONCATENATED MODULE: ./src/hooks/useStableCallback.ts
function useStableCallback_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useStableCallback_array_without_holes(arr) {
    if (Array.isArray(arr)) return useStableCallback_array_like_to_array(arr);
}
function useStableCallback_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function useStableCallback_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useStableCallback_to_consumable_array(arr) {
    return useStableCallback_array_without_holes(arr) || useStableCallback_iterable_to_array(arr) || useStableCallback_unsupported_iterable_to_array(arr) || useStableCallback_non_iterable_spread();
}
function useStableCallback_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useStableCallback_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useStableCallback_array_like_to_array(o, minLen);
}


function useStableCallback_useStableCallback(fn) {
    var _this = this;
    var ref = react.useRef(fn);
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function() {
        ref.current = fn;
    });
    return react.useRef(function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
            args[_key] = arguments[_key];
        }
        return (0, ref.current).apply(_this, useStableCallback_to_consumable_array(args));
    }).current;
}

;// CONCATENATED MODULE: ./src/hooks/useResizeObserver.ts



/**
 * Хук вызывает переданный коллбэк при изменении размеров элемента.
 */ function useResizeObserver_useResizeObserver(ref, callback) {
    var stableCallback = useStableCallback(callback);
    useEffect(function addResizeObserverHandler() {
        /* istanbul ignore if: невозможный кейс (в SSR вызова этой функции не будет) */ if (!ref || !ref.current) {
            return;
        }
        var element = ref.current;
        var observer = new CustomResizeObserver(function() {
            return stableCallback(element);
        });
        observer.observe(element);
        observer.appendToTheDOM();
        return function() {
            return observer.disconnect();
        };
    }, [
        ref,
        stableCallback
    ]);
}

;// CONCATENATED MODULE: ./src/components/OnboardingTooltip/OnboardingTooltipContainer.tsx
function OnboardingTooltipContainer_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function OnboardingTooltipContainer_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            OnboardingTooltipContainer_define_property(target, key, source[key]);
        });
    }
    return target;
}
function OnboardingTooltipContainer_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function OnboardingTooltipContainer_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        OnboardingTooltipContainer_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function OnboardingTooltipContainer_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = OnboardingTooltipContainer_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function OnboardingTooltipContainer_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}

var OnboardingTooltipContainer_onboardingTooltipContainerAttr = 'data-onboarding-tooltip-container';
var OnboardingTooltipContainer_OnboardingTooltipContainer = /*#__PURE__*/ react.forwardRef(function(_param, ref) {
    var _param_fixed = _param.fixed, fixed = _param_fixed === void 0 ? false : _param_fixed, _param_Component = _param.Component, Component = _param_Component === void 0 ? 'div' : _param_Component, props = OnboardingTooltipContainer_object_without_properties(_param, [
        "fixed",
        "Component"
    ]);
    var dataProps = OnboardingTooltipContainer_define_property({}, OnboardingTooltipContainer_onboardingTooltipContainerAttr, fixed ? 'fixed' : 'true');
    return /*#__PURE__*/ react.createElement(Component, OnboardingTooltipContainer_object_spread_props(OnboardingTooltipContainer_object_spread({}, dataProps, props), {
        ref: ref
    }));
});
OnboardingTooltipContainer_OnboardingTooltipContainer.displayName = 'OnboardingTooltipContainer';

;// CONCATENATED MODULE: ./src/components/SplitCol/SplitColContext.tsx

var SplitColContext_SplitColContext = /*#__PURE__*/ react.createContext({
    colRef: null,
    animate: true
});
var SplitColContext_useSplitCol = function() {
    return React.useContext(SplitColContext_SplitColContext);
};

;// CONCATENATED MODULE: ./src/components/FixedLayout/FixedLayout.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/FixedLayout/FixedLayout.tsx
function FixedLayout_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function FixedLayout_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function FixedLayout_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function FixedLayout_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function FixedLayout_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function FixedLayout_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            FixedLayout_define_property(target, key, source[key]);
        });
    }
    return target;
}
function FixedLayout_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function FixedLayout_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        FixedLayout_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function FixedLayout_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = FixedLayout_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function FixedLayout_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function FixedLayout_sliced_to_array(arr, i) {
    return FixedLayout_array_with_holes(arr) || FixedLayout_iterable_to_array_limit(arr, i) || FixedLayout_unsupported_iterable_to_array(arr, i) || FixedLayout_non_iterable_rest();
}
function FixedLayout_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return FixedLayout_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return FixedLayout_array_like_to_array(o, minLen);
}











var stylesVertical = {
    top: "vkuiFixedLayout--vertical-top",
    bottom: clsx("vkuiFixedLayout--vertical-bottom", 'vkuiInternalFixedLayout--vertical-bottom')
};
/**
 * @see https://vkcom.github.io/VKUI/#/FixedLayout
 */ var FixedLayout_FixedLayout = function(_param) {
    var children = _param.children, style = _param.style, vertical = _param.vertical, getRootRef = _param.getRootRef, filled = _param.filled, className = _param.className, useParentWidth = _param.useParentWidth, restProps = FixedLayout_object_without_properties(_param, [
        "children",
        "style",
        "vertical",
        "getRootRef",
        "filled",
        "className",
        "useParentWidth"
    ]);
    var platform = usePlatform();
    var ref = React.useRef(null);
    var _React_useState = FixedLayout_sliced_to_array(React.useState(undefined), 2), width = _React_useState[0], setWidth = _React_useState[1];
    var window = useDOM().window;
    var colRef = React.useContext(SplitColContext).colRef;
    var parentRef = React.useRef(null);
    var handleRootRef = useCallback(function(node) {
        if (!node) {
            return;
        }
        setRef(node, getRootRef);
        setRef(node, ref);
        setRef(node.parentElement, parentRef);
    }, [
        getRootRef
    ]);
    var doResize = function() {
        if (useParentWidth && parentRef.current) {
            var parentWidth = parentRef.current.getBoundingClientRect().width;
            setWidth(parentWidth ? "".concat(parentWidth, "px") : undefined);
        } else if (colRef === null || colRef === void 0 ? void 0 : colRef.current) {
            var computedStyle = getComputedStyle(colRef.current);
            setWidth("".concat(colRef.current.clientWidth - parseFloat(computedStyle.paddingLeft || '0') - parseFloat(computedStyle.paddingRight || '0'), "px"));
        } else {
            setWidth(undefined);
        }
    };
    React.useEffect(doResize, [
        colRef,
        platform,
        ref,
        useParentWidth
    ]);
    useGlobalEventListener(window, 'resize', doResize);
    useResizeObserver(useParentWidth ? parentRef : colRef, doResize);
    return /*#__PURE__*/ React.createElement(OnboardingTooltipContainer, FixedLayout_object_spread_props(FixedLayout_object_spread({}, restProps), {
        fixed: true,
        ref: handleRootRef,
        className: classNames("vkuiFixedLayout", platform === 'ios' && 'vkuiInternalFixedLayout--ios', filled && "vkuiFixedLayout--filled", vertical && stylesVertical[vertical], className),
        style: FixedLayout_object_spread_props(FixedLayout_object_spread({}, style), {
            width: width
        })
    }), children);
};

;// CONCATENATED MODULE: ./src/hooks/useExternRef.ts
function useExternRef_check_private_redeclaration(obj, privateCollection) {
    if (privateCollection.has(obj)) {
        throw new TypeError("Cannot initialize the same private elements twice on an object");
    }
}
function useExternRef_class_apply_descriptor_get(receiver, descriptor) {
    if (descriptor.get) {
        return descriptor.get.call(receiver);
    }
    return descriptor.value;
}
function useExternRef_class_apply_descriptor_set(receiver, descriptor, value) {
    if (descriptor.set) {
        descriptor.set.call(receiver, value);
    } else {
        if (!descriptor.writable) {
            throw new TypeError("attempted to set read only private field");
        }
        descriptor.value = value;
    }
}
function useExternRef_class_call_check(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function useExternRef_class_extract_field_descriptor(receiver, privateMap, action) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to " + action + " private field on non-instance");
    }
    return privateMap.get(receiver);
}
function useExternRef_class_private_field_get(receiver, privateMap) {
    var descriptor = useExternRef_class_extract_field_descriptor(receiver, privateMap, "get");
    return useExternRef_class_apply_descriptor_get(receiver, descriptor);
}
function useExternRef_class_private_field_init(obj, privateMap, value) {
    useExternRef_check_private_redeclaration(obj, privateMap);
    privateMap.set(obj, value);
}
function useExternRef_class_private_field_set(receiver, privateMap, value) {
    var descriptor = useExternRef_class_extract_field_descriptor(receiver, privateMap, "set");
    useExternRef_class_apply_descriptor_set(receiver, descriptor, value);
    return value;
}
function useExternRef_defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function useExternRef_create_class(Constructor, protoProps, staticProps) {
    if (protoProps) useExternRef_defineProperties(Constructor.prototype, protoProps);
    if (staticProps) useExternRef_defineProperties(Constructor, staticProps);
    return Constructor;
}


var _element = /*#__PURE__*/ new WeakMap(), _externRefs = /*#__PURE__*/ new WeakMap();
var ExternalRef = /*#__PURE__*/ function() {
    "use strict";
    function ExternalRef() {
        var _this = this;
        var externRefs = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        useExternRef_class_call_check(this, ExternalRef);
        useExternRef_class_private_field_init(this, _element, {
            writable: true,
            value: null
        });
        useExternRef_class_private_field_init(this, _externRefs, {
            writable: true,
            value: new Set()
        });
        externRefs.forEach(function(ref) {
            if (ref) {
                useExternRef_class_private_field_get(_this, _externRefs).add(ref);
            }
        });
    }
    useExternRef_create_class(ExternalRef, [
        {
            key: "updateExternRefs",
            value: function updateExternRefs(refs) {
                var _this = this;
                refs.forEach(function(ref) {
                    if (!ref || useExternRef_class_private_field_get(_this, _externRefs).has(ref)) {
                        return;
                    }
                    utils_setRef(useExternRef_class_private_field_get(_this, _element), ref);
                    useExternRef_class_private_field_get(_this, _externRefs).add(ref);
                });
            }
        },
        {
            key: "current",
            get: function get() {
                return useExternRef_class_private_field_get(this, _element);
            },
            set: function set(el) {
                useExternRef_class_private_field_set(this, _element, el);
                useExternRef_class_private_field_get(this, _externRefs).forEach(function(ref) {
                    return utils_setRef(el, ref);
                });
            }
        },
        {
            /**
   * React проверяет наличие свойства current у объектов через hasOwnProperty
   *
   * https://github.com/facebook/react/blob/c3cdbec0a78d39b5ff7329384cb41c4573a38212/packages/react-reconciler/src/ReactFiberCommitWork.js#L1612
   */ key: "hasOwnProperty",
            value: function hasOwnProperty(v) {
                return v === 'current';
            }
        }
    ]);
    return ExternalRef;
}();
function useExternRef_useExternRef() {
    for(var _len = arguments.length, externRefs = new Array(_len), _key = 0; _key < _len; _key++){
        externRefs[_key] = arguments[_key];
    }
    var ref = react.useRef(null);
    if (ref.current === null) {
        ref.current = new ExternalRef(externRefs);
    } else {
        ref.current.updateExternRefs(externRefs);
    }
    return ref.current;
}

;// CONCATENATED MODULE: ./src/lib/comparing.ts
/**
 * Определяет, является ли значение не `undefined`
 *
 * ## Пример
 *
 * ```ts
 * import { strict as assert } from 'node:assert';
 *
 * assert.equal(isNotUndefined("Some string"), true);
 * assert.equal(isNotUndefined(undefined), false);
 * ```
 */ function comparing_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function comparing_array_without_holes(arr) {
    if (Array.isArray(arr)) return comparing_array_like_to_array(arr);
}
function comparing_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function comparing_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function comparing_to_consumable_array(arr) {
    return comparing_array_without_holes(arr) || comparing_iterable_to_array(arr) || comparing_unsupported_iterable_to_array(arr) || comparing_non_iterable_spread();
}
function comparing_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return comparing_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return comparing_array_like_to_array(o, minLen);
}
function isNotUndefined(value) {
    return value !== undefined;
}
/**
 * Фильтрует `undefined` значения и возвращает результат выполнение `fn`. Если
 * значений не существует, вернется значение по умолчанию `defaultValue`.
 */ function fnArgsOr(fn, args, defaultValue) {
    var definedArgs = args.filter(isNotUndefined);
    if (definedArgs.length) {
        return fn.apply(void 0, comparing_to_consumable_array(definedArgs));
    }
    return defaultValue;
}
/**
 * Функция для определения минимального числа. Если чисел не существует,
 * вернется значение по умолчанию `defaultValue`.
 *
 * ## Пример
 *
 * ```js
 * import { strict as assert } from 'node:assert';
 *
 * const defaultValue = 24;
 * assert.equal(minOr([48, 10, 12], defaultValue), 10);
 * assert.equal(minOr([undefined], defaultValue), 24);
 * ```
 */ function minOr(args, defaultValue) {
    return fnArgsOr(Math.min, args, defaultValue);
}

;// CONCATENATED MODULE: ./src/components/ImageBase/context.ts

var context_ImageBaseContext = react.createContext({
    size: 0
});

;// CONCATENATED MODULE: ./src/lib/warnOnce.ts
function warnOnce(zone) {
    var didWarn = new Set();
    return function(message) {
        var type = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'warn';
        if (!didWarn.has(message)) {
            didWarn.add(message);
            var formattedMessage = "%c[VKUI/".concat(zone, "] ").concat(message);
            var styles = type === 'log' ? 'color: steelblue; font-style: italic' : undefined;
            // eslint-disable-next-line no-console
            console[type](formattedMessage, styles);
        }
    };
}
function getA11yRuleUrl(ruleName) {
    // see jest-axe's axe-core dependency
    var AXE_CORE_MINOR_VERSION = '4.5';
    return "https://dequeuniversity.com/rules/axe/".concat(AXE_CORE_MINOR_VERSION, "/").concat(ruleName);
}
var COMMON_WARNINGS = {
    a11y: {
        'button-name': "a11y: Кнопка должна содержать текст, доступный для скринридеров. Чтобы исправить эту ошибку, передайте компоненту текст или свойство aria-label.\n".concat(getA11yRuleUrl('button-name')),
        'link-name': "a11y: Ссылка должна содержать текст, доступный для скринридеров. Чтобы исправить эту ошибку, передайте компоненту текст или свойство aria-label.\n".concat(getA11yRuleUrl('link-name')),
        'image-alt': "a11y: Изображение должно содержать альтернативный текст, который его описывает. Чтобы исправить эту ошибку, передайте компоненту свойство alt.\n".concat(getA11yRuleUrl('image-alt'))
    }
};

;// CONCATENATED MODULE: ./src/components/ImageBase/helpers.ts
/**
 * Возвращает размер иконки основанный на дизайн-системы.
 *
 * @param imageSize наименьшая сторона изображения
 */ function helpers_getFallbackIconSizeByImageBaseSize(imageSize) {
    if (imageSize <= 20) {
        return 12;
    } else if (imageSize > 20 && imageSize <= 28) {
        return 16;
    } else if (imageSize > 28 && imageSize <= 32) {
        return 20;
    } else if (imageSize > 32 && imageSize <= 44) {
        return 24;
    } else if (imageSize > 44 && imageSize <= 64) {
        return 28;
    }
    return helpers_getFallbackIconSizeByImageBaseSize.MAX_SIZE;
}
helpers_getFallbackIconSizeByImageBaseSize.MAX_SIZE = 36;
/**
 * Возвращает размер иконки основанный на дизайн-системы.
 *
 * @param imageSize наименьшая сторона изображения
 */ function helpers_getBadgeIconSizeByImageBaseSize(imageSize) {
    if (imageSize <= 36) {
        return 12;
    } else if (imageSize > 36 && imageSize <= 48) {
        return 16;
    } else if (imageSize > 48 && imageSize <= 64) {
        return 20;
    }
    return helpers_getBadgeIconSizeByImageBaseSize.MAX_SIZE;
}
helpers_getBadgeIconSizeByImageBaseSize.MAX_SIZE = 24;
/**
 * Возвращает размер иконки основанный на дизайн-системы.
 *
 * @param imageSize наименьшая сторона изображения
 */ function helpers_getOverlayIconSizeByImageBaseSize(imageSize) {
    if (imageSize <= 20) {
        return 12;
    } else if (imageSize > 20 && imageSize <= 24) {
        return 16;
    } else if (imageSize > 24 && imageSize <= 28) {
        return 18;
    } else if (imageSize > 28 && imageSize <= 40) {
        return 20;
    } else if (imageSize > 40 && imageSize <= 48) {
        return 24;
    } else if (imageSize > 48 && imageSize <= 88) {
        return 28;
    }
    return helpers_getOverlayIconSizeByImageBaseSize.MAX_SIZE;
}
helpers_getOverlayIconSizeByImageBaseSize.MAX_SIZE = 32;

;// CONCATENATED MODULE: ./src/components/ImageBase/types.ts
var imageBaseSizes = [
    16,
    20,
    24,
    28,
    32,
    36,
    40,
    44,
    48,
    56,
    64,
    72,
    80,
    88,
    96
];

;// CONCATENATED MODULE: ./src/components/ImageBase/validators.ts



/**
 * Пример,
 *
 * Icon28User -> 28
 * Icon12Circle1 -> 12
 * Icon12Circle2 -> 12
 * Icon20TextHeading1Outline -> 20
 */ function parseIconSizeByDisplayName(displayName) {
    if (typeof displayName !== 'string') {
        return null;
    }
    var match = /Icon(\d+)/.exec(displayName);
    return match ? Number(match[1]) : null;
}
function parseIconSizeByWidthProp(width) {
    if (typeof width !== 'string' && typeof width !== 'number') {
        return null;
    }
    var size = Number(width);
    return size > 0 ? size : null;
}
function getElementDisplayName(element) {
    var _element_type_displayName;
    return (_element_type_displayName = element.type.displayName) !== null && _element_type_displayName !== void 0 ? _element_type_displayName : null;
}
function getElementWidthProp(element) {
    var _element_props_width;
    return (_element_props_width = element.props.width) !== null && _element_props_width !== void 0 ? _element_props_width : null;
}
function getIconSizeByElement(element) {
    var sizeByDisplayName = parseIconSizeByDisplayName(getElementDisplayName(element));
    var sizeByWidth = parseIconSizeByWidthProp(getElementWidthProp(element));
    return sizeByWidth ? sizeByWidth : sizeByDisplayName;
}
function validateIconComponentSizeByImageSize(imageSize, iconProp, selectorFn, logger) {
    var iconSize = getIconSizeByElement(iconProp.value);
    if (iconSize === null) {
        return;
    }
    var result = selectorFn(imageSize);
    if (result === iconSize || result === selectorFn.MAX_SIZE && iconSize >= result) {
        return;
    }
    var iconName = getElementDisplayName(iconProp.value);
    var propMessage = iconName ? "".concat(iconProp.name, "={<").concat(iconName, " />}") : iconProp.name;
    logger("Размер `".concat(propMessage, "` не соответствует дизайн-системе. Для `size={").concat(imageSize, "}` размер иконки для `").concat(iconProp.name, "` должен соответствовать <Icon").concat(result, "<name> />. Если такого размера нет, то используйте <").concat(iconName, " width={").concat(result, "} height={").concat(result, "} />"), 'log');
}
var warnImageBase = warnOnce('ImageBase');
function validateFallbackIcon(imageSize, iconProp) {
    return validateIconComponentSizeByImageSize(imageSize, iconProp, getFallbackIconSizeByImageBaseSize, warnImageBase);
}
var mapOfExpectedSize = new Set(imageBaseSizes);
var arrayOfSizes = Array.from(mapOfExpectedSize).map(function(str) {
    return Number(str);
});
var maxSize = arrayOfSizes.reduce(function(maxSize, size) {
    return size > maxSize ? size : maxSize;
}, 0);
function validateSize(imageSize) {
    if (imageSize > maxSize || mapOfExpectedSize.has(imageSize)) {
        return;
    }
    warnImageBase("`size={".concat(imageSize, "}` не соответствует дизайн-системе. Пожалуйста, используйте один из следующих вариантов: ").concat(arrayOfSizes.join(' | ')), 'log');
}
var warnImageBaseBadge = warnOnce('ImageBase.Badge');
function validators_validateBadgeIcon(imageSize, iconProp) {
    if (imageSize < 24 && iconProp) {
        return warnImageBaseBadge('Не используйте бейдж при `size < 24`.', 'log');
    }
    validateIconComponentSizeByImageSize(imageSize, iconProp, getBadgeIconSizeByImageBaseSize, warnImageBaseBadge);
}
var warnImageBaseOverlay = warnOnce('ImageBase.Overlay');
function validateOverlayIcon(imageSize, iconProp) {
    validateIconComponentSizeByImageSize(imageSize, iconProp, getOverlayIconSizeByImageBaseSize, warnImageBaseOverlay);
}

;// CONCATENATED MODULE: ./src/components/ImageBase/ImageBaseBadge/ImageBaseBadge.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ImageBase/ImageBaseBadge/ImageBaseBadge.tsx
function ImageBaseBadge_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ImageBaseBadge_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ImageBaseBadge_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ImageBaseBadge_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ImageBaseBadge_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ImageBaseBadge_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ImageBaseBadge_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ImageBaseBadge_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ImageBaseBadge_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






function DevelopmentCheck(param) {
    var children = param.children;
    var size = React.useContext(ImageBaseContext).size;
    if (children) {
        validateBadgeIcon(size, {
            name: 'children',
            value: children
        });
    }
    return null;
}
var backgroundStyles = {
    stroke: "vkuiImageBaseBadge--background-stroke",
    shadow: "vkuiImageBaseBadge--background-shadow"
};
/**
 * Бейдж в правом нижнем углу компонента.
 *
 * > Не используйте при `size < 24`
 */ var ImageBaseBadge = function(_param) {
    var _param_background = _param.background, background = _param_background === void 0 ? 'shadow' : _param_background, restProps = ImageBaseBadge_object_without_properties(_param, [
        "background"
    ]);
    return /*#__PURE__*/ react.createElement(react.Fragment, null, /*#__PURE__*/ react.createElement(RootComponent_RootComponent, ImageBaseBadge_object_spread_props(ImageBaseBadge_object_spread({}, restProps), {
        baseClassName: clsx("vkuiImageBaseBadge", backgroundStyles[background])
    })),  false && /*#__PURE__*/ 0);
};
ImageBaseBadge.displayName = 'ImageBaseBadge';

;// CONCATENATED MODULE: ./src/hooks/useIsClient.ts
function useIsClient_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useIsClient_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useIsClient_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useIsClient_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useIsClient_sliced_to_array(arr, i) {
    return useIsClient_array_with_holes(arr) || useIsClient_iterable_to_array_limit(arr, i) || useIsClient_unsupported_iterable_to_array(arr, i) || useIsClient_non_iterable_rest();
}
function useIsClient_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useIsClient_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useIsClient_array_like_to_array(o, minLen);
}


/**
 * Хук для two-pass рендеринга.
 *
 * ВНИМАНИЕ: Этот подход сделает ваши компоненты медленнее, потому что они
 * должны рендериться дважды, поэтому используйте хук с осторожностью.
 *
 * @see {@link https://react.dev/reference/react-dom/hydrate#handling-different-client-and-server-content React Docs}
 */ function useIsClient_useIsClient() {
    var initial = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
    var _React_useState = useIsClient_sliced_to_array(react.useState(initial), 2), isClient = _React_useState[0], setIsClient = _React_useState[1];
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function() {
        setIsClient(true);
    }, []);
    return isClient;
}

;// CONCATENATED MODULE: ./src/hooks/useAdaptivityHasPointer.ts




function useAdaptivityHasPointer_useAdaptivityHasPointer() {
    var deferDetect = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
    var _React_useContext = react.useContext(AdaptivityContext_AdaptivityContext), hasPointerContext = _React_useContext.hasPointer;
    var needTwoPassRendering = deferDetect || hasPointerContext === undefined;
    var isClient = useIsClient_useIsClient(!needTwoPassRendering);
    if (!isClient || hasPointerContext !== undefined) {
        return hasPointerContext;
    }
    return hasMouse;
}

;// CONCATENATED MODULE: ./src/hooks/useAppearance.ts


function useAppearance_useAppearance() {
    var appearance = ConfigProviderContext_useConfigProvider().appearance;
    return appearance !== null && appearance !== void 0 ? appearance : appearance_DEFAULT_APPEARANCE;
}

;// CONCATENATED MODULE: ./src/hooks/useFocusWithin.ts
function useFocusWithin_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useFocusWithin_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useFocusWithin_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useFocusWithin_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useFocusWithin_sliced_to_array(arr, i) {
    return useFocusWithin_array_with_holes(arr) || useFocusWithin_iterable_to_array_limit(arr, i) || useFocusWithin_unsupported_iterable_to_array(arr, i) || useFocusWithin_non_iterable_rest();
}
function useFocusWithin_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useFocusWithin_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useFocusWithin_array_like_to_array(o, minLen);
}



var isFocusWithin = function(ref, document) {
    return ref.contains(document.activeElement);
};
function useFocusWithin_useFocusWithin(ref) {
    var document = dom_useDOM().document;
    var _React_useState = useFocusWithin_sliced_to_array(react.useState(function() {
        return ref.current && document ? isFocusWithin(ref.current, document) : false;
    }), 2), focusWithin = _React_useState[0], setFocusWithin = _React_useState[1];
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function handleAutoFocus() {
        /* istanbul ignore if: невозможный кейс, т.к. в SSR эффекты не вызываются. Проверка на будущее, если вдруг эффект будет вызываться. */ if (!document) {
            return;
        }
        var handleFocusOrBlurEvents = function() {
            if (ref.current) {
                setFocusWithin(isFocusWithin(ref.current, document));
            }
        };
        // Вызываем в начале, чтобы проверить autoFocus
        void handleFocusOrBlurEvents();
        document.addEventListener('focus', handleFocusOrBlurEvents, {
            capture: true
        });
        document.addEventListener('blur', handleFocusOrBlurEvents, {
            capture: true
        });
        return function() {
            document.removeEventListener('focus', handleFocusOrBlurEvents, {
                capture: true
            });
            document.removeEventListener('blur', handleFocusOrBlurEvents, {
                capture: true
            });
        };
    }, []);
    return focusWithin;
}

;// CONCATENATED MODULE: ./src/components/ImageBase/ImageBaseOverlay/hooks.ts
function hooks_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function hooks_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function hooks_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function hooks_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function hooks_sliced_to_array(arr, i) {
    return hooks_array_with_holes(arr) || hooks_iterable_to_array_limit(arr, i) || hooks_unsupported_iterable_to_array(arr, i) || hooks_non_iterable_rest();
}
function hooks_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return hooks_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return hooks_array_like_to_array(o, minLen);
}



function useNonInteractiveOverlayProps(rootRef) {
    var focusWithin = useFocusWithin_useFocusWithin(rootRef);
    var _React_useState = hooks_sliced_to_array(react.useState(false), 2), nonInteractiveFocusShown = _React_useState[0], setNonInteractiveFocusShown = _React_useState[1];
    function onClick(event) {
        if (event.detail > 0) {
            // Если мы попали на вложенный в оверлей элемент через focus,
            // то при клике мышкой мы должны начать реагировать на hover-состояние,
            // даже если фокус всё ещё остался на вложенном элементе (был по нему клик)
            setNonInteractiveFocusShown(false);
        }
    }
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function() {
        setNonInteractiveFocusShown(focusWithin);
    }, [
        focusWithin
    ]);
    return {
        shown: nonInteractiveFocusShown && focusWithin,
        onClick: onClick
    };
}

;// CONCATENATED MODULE: ./src/components/ImageBase/ImageBaseOverlay/ImageBaseOverlay.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ImageBase/ImageBaseOverlay/ImageBaseOverlay.tsx
function ImageBaseOverlay_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ImageBaseOverlay_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ImageBaseOverlay_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ImageBaseOverlay_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ImageBaseOverlay_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ImageBaseOverlay_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ImageBaseOverlay_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ImageBaseOverlay_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ImageBaseOverlay_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}












function ImageBaseOverlay_DevelopmentCheck(param) {
    var children = param.children;
    var size = React.useContext(ImageBaseContext).size;
    if (false) {}
    return null;
}
var ImageBaseOverlayInteractive = function(_param) {
    var children = _param.children, className = _param.className, getRootRef = _param.getRootRef, disableInteractive = _param.disableInteractive, overlayShown = _param.overlayShown, restProps = ImageBaseOverlay_object_without_properties(_param, [
        "children",
        "className",
        "getRootRef",
        "disableInteractive",
        "overlayShown"
    ]);
    var _useFocusVisible = useFocusVisible_useFocusVisible(), focusVisible = _useFocusVisible.focusVisible, focusEvents = ImageBaseOverlay_object_without_properties(_useFocusVisible, [
        "focusVisible"
    ]);
    var focusVisibleClassNames = useFocusVisibleClassName_useFocusVisibleClassName({
        focusVisible: focusVisible,
        mode: 'inside'
    });
    return /*#__PURE__*/ react.createElement(react.Fragment, null, /*#__PURE__*/ react.createElement("div", ImageBaseOverlay_object_spread(ImageBaseOverlay_object_spread_props(ImageBaseOverlay_object_spread({}, restProps), {
        tabIndex: 0,
        role: "button",
        className: clsx("vkuiImageBaseOverlay--clickable", (focusVisible || overlayShown) && "vkuiImageBaseOverlay--visible", focusVisibleClassNames, className),
        ref: getRootRef,
        onKeyDown: clickByKeyboardHandler
    }), focusEvents), children),  false && /*#__PURE__*/ 0);
};
var ImageBaseOverlayNonInteractive = function(_param) {
    var className = _param.className, getRootRef = _param.getRootRef, disableInteractive = _param.disableInteractive, overlayShownProps = _param.overlayShown, restProps = ImageBaseOverlay_object_without_properties(_param, [
        "className",
        "getRootRef",
        "disableInteractive",
        "overlayShown"
    ]);
    var rootRef = useExternRef_useExternRef(getRootRef);
    var _useNonInteractiveOverlayProps = useNonInteractiveOverlayProps(rootRef), overlayShown = _useNonInteractiveOverlayProps.shown, onOverlayClick = _useNonInteractiveOverlayProps.onClick;
    return /*#__PURE__*/ react.createElement("div", ImageBaseOverlay_object_spread_props(ImageBaseOverlay_object_spread({}, restProps), {
        ref: rootRef,
        className: clsx((overlayShown || overlayShownProps) && "vkuiImageBaseOverlay--visible", className),
        onClick: onOverlayClick
    }));
};
/**
 * Оверлей над картинкой.
 */ var ImageBaseOverlay = function(_param) {
    var className = _param.className, themeProp = _param.theme, visibilityProp = _param.visibility, restProps = ImageBaseOverlay_object_without_properties(_param, [
        "className",
        "theme",
        "visibility"
    ]);
    var appearance = useAppearance_useAppearance();
    var hasPointer = useAdaptivityHasPointer_useAdaptivityHasPointer();
    var theme = themeProp !== null && themeProp !== void 0 ? themeProp : appearance;
    var visibility = visibilityProp !== null && visibilityProp !== void 0 ? visibilityProp : hasPointer ? 'on-hover' : 'always';
    var commonClassNames = clsx("vkuiImageBaseOverlay", theme === 'light' && "vkuiImageBaseOverlay--theme-light", theme === 'dark' && "vkuiImageBaseOverlay--theme-dark", className);
    var commonProps = {
        className: commonClassNames,
        overlayShown: visibility === 'always'
    };
    // Не делаем деструктуризацию пропа, потому что Typescript не вывозит
    if (restProps.disableInteractive) {
        return /*#__PURE__*/ react.createElement(ImageBaseOverlayNonInteractive, ImageBaseOverlay_object_spread({}, restProps, commonProps));
    }
    return /*#__PURE__*/ react.createElement(ImageBaseOverlayInteractive, ImageBaseOverlay_object_spread({}, restProps, commonProps));
};
ImageBaseOverlay.displayName = 'ImageBaseOverlay';

;// CONCATENATED MODULE: ./src/components/ImageBase/ImageBase.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ImageBase/ImageBase.tsx
function ImageBase_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function ImageBase_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function ImageBase_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ImageBase_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function ImageBase_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function ImageBase_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ImageBase_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ImageBase_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ImageBase_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ImageBase_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function ImageBase_sliced_to_array(arr, i) {
    return ImageBase_array_with_holes(arr) || ImageBase_iterable_to_array_limit(arr, i) || ImageBase_unsupported_iterable_to_array(arr, i) || ImageBase_non_iterable_rest();
}
function ImageBase_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return ImageBase_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ImageBase_array_like_to_array(o, minLen);
}













/**
 * Размер по умолчанию.
 */ var defaultSize = 24;
var getObjectFitClassName = function(objectFit) {
    switch(objectFit){
        case 'contain':
            return "vkuiImageBase__img--objectFit-contain";
        case 'cover':
            return "vkuiImageBase__img--objectFit-cover";
        case 'none':
            return "vkuiImageBase__img--objectFit-none";
        case 'scale-down':
            return "vkuiImageBase__img--objectFit-scaleDown";
    }
    return undefined;
};
var parsePx = function(value) {
    if (value.endsWith('px')) {
        return parseInt(value);
    }
    return undefined;
};
var sizeToNumber = function(size) {
    if (typeof size === 'string') {
        return parsePx(size);
    }
    return size;
};
/**
 * @see https://vkcom.github.io/VKUI/#/ImageBase
 */ var ImageBase = function(_param) {
    var alt = _param.alt, crossOrigin = _param.crossOrigin, decoding = _param.decoding, loading = _param.loading, referrerPolicy = _param.referrerPolicy, sizes = _param.sizes, src = _param.src, srcSet = _param.srcSet, useMap = _param.useMap, fetchPriority = _param.fetchPriority, getRef = _param.getRef, sizeProp = _param.size, widthImg = _param.width, heightImg = _param.height, widthSize = _param.widthSize, heightSize = _param.heightSize, style = _param.style, _param_noBorder = _param.noBorder, noBorder = _param_noBorder === void 0 ? false : _param_noBorder, fallbackIconProp = _param.fallbackIcon, children = _param.children, onLoad = _param.onLoad, onError = _param.onError, withTransparentBackground = _param.withTransparentBackground, _param_objectFit = _param.objectFit, objectFit = _param_objectFit === void 0 ? 'cover' : _param_objectFit, _param_keepAspectRatio = _param.keepAspectRatio, keepAspectRatio = _param_keepAspectRatio === void 0 ? false : _param_keepAspectRatio, restProps = ImageBase_object_without_properties(_param, [
        "alt",
        "crossOrigin",
        "decoding",
        "loading",
        "referrerPolicy",
        "sizes",
        "src",
        "srcSet",
        "useMap",
        "fetchPriority",
        "getRef",
        "size",
        "width",
        "height",
        "widthSize",
        "heightSize",
        "style",
        "noBorder",
        "fallbackIcon",
        "children",
        "onLoad",
        "onError",
        "withTransparentBackground",
        "objectFit",
        "keepAspectRatio"
    ]);
    var size = sizeProp !== null && sizeProp !== void 0 ? sizeProp : minOr([
        sizeToNumber(widthSize),
        sizeToNumber(heightSize)
    ], defaultSize);
    var width = widthSize !== null && widthSize !== void 0 ? widthSize : keepAspectRatio ? undefined : size;
    var height = heightSize !== null && heightSize !== void 0 ? heightSize : keepAspectRatio ? undefined : size;
    var _React_useState = ImageBase_sliced_to_array(react.useState(false), 2), loaded = _React_useState[0], setLoaded = _React_useState[1];
    var _React_useState1 = ImageBase_sliced_to_array(react.useState(false), 2), failed = _React_useState1[0], setFailed = _React_useState1[1];
    var hasSrc = src || srcSet;
    var needShowFallbackIcon = (failed || !hasSrc) && /*#__PURE__*/ react.isValidElement(fallbackIconProp);
    var fallbackIcon = needShowFallbackIcon ? fallbackIconProp : null;
    if (false) {}
    var handleImageLoad = function(event) {
        if (loaded) {
            return;
        }
        setLoaded(true);
        setFailed(false);
        onLoad === null || onLoad === void 0 ? void 0 : onLoad(event);
    };
    var handleImageError = function(event) {
        setLoaded(false);
        setFailed(true);
        onError === null || onError === void 0 ? void 0 : onError(event);
    };
    var imgRef = useExternRef_useExternRef(getRef);
    var isOnLoadStatusCheckedRef = react.useRef(false);
    react.useEffect(function dispatchLoadEventForAlreadyLoadedResourceIfReactInitializedLater() {
        if (isOnLoadStatusCheckedRef.current) {
            return;
        }
        isOnLoadStatusCheckedRef.current = true;
        if (imgRef.current && imgRef.current.complete && !loaded) {
            var event = new Event('load');
            imgRef.current.dispatchEvent(event);
        }
    }, [
        imgRef,
        loaded
    ]);
    return /*#__PURE__*/ react.createElement(context_ImageBaseContext.Provider, {
        value: {
            size: size
        }
    }, /*#__PURE__*/ react.createElement(Clickable_Clickable, ImageBase_object_spread({
        style: ImageBase_object_spread({
            width: width,
            height: height
        }, style),
        baseClassName: clsx("vkuiImageBase", loaded && "vkuiImageBase--loaded", withTransparentBackground && "vkuiImageBase--transparent-background")
    }, restProps), hasSrc && /*#__PURE__*/ react.createElement("img", ImageBase_object_spread({
        ref: imgRef,
        alt: alt,
        className: clsx("vkuiImageBase__img", getObjectFitClassName(objectFit), keepAspectRatio && "vkuiImageBase__img--keepRatio"),
        crossOrigin: crossOrigin,
        decoding: decoding,
        loading: loading,
        referrerPolicy: referrerPolicy,
        style: keepAspectRatio ? {
            width: widthImg || width,
            height: heightImg || height
        } : undefined,
        sizes: sizes,
        src: src,
        srcSet: srcSet,
        useMap: useMap,
        width: widthImg,
        height: heightImg,
        onLoad: handleImageLoad,
        onError: handleImageError
    }, utils_getFetchPriorityProp(fetchPriority))), fallbackIcon && /*#__PURE__*/ react.createElement("div", {
        className: "vkuiImageBase__fallback"
    }, fallbackIcon), children && /*#__PURE__*/ react.createElement("div", {
        className: "vkuiImageBase__children"
    }, children), !noBorder && /*#__PURE__*/ react.createElement("div", {
        "aria-hidden": true,
        className: "vkuiImageBase__border"
    })));
};
ImageBase.displayName = 'ImageBase';
ImageBase.Badge = ImageBaseBadge;
ImageBase.Badge.displayName = 'ImageBase.Badge';
ImageBase.Overlay = ImageBaseOverlay;
ImageBase.Overlay.displayName = 'ImageBase.Overlay';

;// CONCATENATED MODULE: ../../node_modules/@swc/helpers/esm/_object_spread_props.js
function _object_spread_props_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }

    return keys;
}
function _object_spread_props_object_spread_props(target, source) {
    source = source != null ? source : {};

    if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    else {
        _object_spread_props_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }

    return target;
}


;// CONCATENATED MODULE: ../../node_modules/@swc/helpers/esm/_object_without_properties_loose.js
function _object_without_properties_loose_object_without_properties_loose(source, excluded) {
    if (source == null) return {};

    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }

    return target;
}


;// CONCATENATED MODULE: ../../node_modules/@swc/helpers/esm/_object_without_properties.js


function _object_without_properties_object_without_properties(source, excluded) {
    if (source == null) return {};

    var target = _object_without_properties_loose_object_without_properties_loose(source, excluded);
    var key, i;

    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }

    return target;
}


;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons-sprite/dist/utils/parse.js
function parse_parse(content) {
    var hasImportNode = !!document.importNode;
    var el = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;
    /**
   * Fix for browser which are throwing WrongDocumentError
   * if you insert an element which is not part of the document
   * @see http://stackoverflow.com/a/7986519/4624403
   */ if (hasImportNode) {
        return document.importNode(el, true);
    }
    return el;
}

//# sourceMappingURL=parse.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons-sprite/dist/browser-symbol.js




var BrowserSymbol = /*#__PURE__*/ function() {
    "use strict";
    function BrowserSymbol(param) {
        var content = param.content;
        _class_call_check(this, BrowserSymbol);
        _define_property(this, "isMounted", false);
        _define_property(this, "node", void 0);
        this.node = parse_parse(content);
    }
    _create_class(BrowserSymbol, [
        {
            key: "id",
            get: function get() {
                return this.node.id;
            }
        },
        {
            key: "mount",
            value: function mount(target) {
                if (this.isMounted) {
                    return this.node;
                }
                this.isMounted = true;
                target.appendChild(this.node);
                return this.node;
            }
        },
        {
            key: "unmount",
            value: function unmount() {
                if (this.node && this.node.parentNode) {
                    this.node.parentNode.removeChild(this.node);
                    this.isMounted = false;
                }
            }
        }
    ], [
        {
            key: "createFromExistingNode",
            value: function createFromExistingNode(node) {
                var symbol = new BrowserSymbol({
                    content: ''
                });
                symbol.node = node;
                return symbol;
            }
        }
    ]);
    return BrowserSymbol;
}();

//# sourceMappingURL=browser-symbol.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons-sprite/dist/browser-sprite.js




var namespaceURI = 'http://www.w3.org/2000/svg';
var BrowserSprite = /*#__PURE__*/ function() {
    "use strict";
    function BrowserSprite() {
        var config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        _class_call_check(this, BrowserSprite);
        _define_property(this, "symbols", new Map());
        _define_property(this, "config", {
            attrs: {
                'xmlns': namespaceURI,
                'xmlns:xlink': 'http://www.w3.org/1999/xlink',
                'style': 'position:absolute;width:0;height:0',
                'aria-hidden': 'true'
            }
        });
        _define_property(this, "node", null);
        Object.assign(this.config.attrs, config.attrs);
    }
    _create_class(BrowserSprite, [
        {
            key: "push",
            value: function push(symbol) {
                var symbols = this.symbols;
                var existing = symbols.has(symbol.id);
                symbols.set(symbol.id, symbol);
                return !existing;
            }
        },
        {
            key: "add",
            value: function add(symbol) {
                var isNewSymbol = this.push(symbol);
                if (!!this.node && isNewSymbol) {
                    symbol.mount(this.node);
                }
                return isNewSymbol;
            }
        },
        {
            key: "attach",
            value: function attach(target) {
                var _this = this;
                if (!!this.node) {
                    return;
                }
                this.node = target;
                // Already added symbols needs to be mounted
                this.symbols.forEach(function(symbol) {
                    symbol.mount(target);
                });
                // Create symbols from existing DOM nodes, add and mount them
                target.querySelectorAll('symbol').forEach(function(symbolNode) {
                    var symbol = BrowserSymbol.createFromExistingNode(symbolNode);
                    _this.add(symbol);
                });
            }
        },
        {
            key: "mount",
            value: function mount(target) {
                var prepend = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
                if (!!this.node) {
                    return this.node;
                }
                this.node = this.render();
                if (prepend && target.childNodes[0]) {
                    target.insertBefore(this.node, target.firstChild);
                } else {
                    target.appendChild(this.node);
                }
                return this.node;
            }
        },
        {
            key: "render",
            value: function render() {
                var el = document.createElementNS(namespaceURI, 'svg');
                Object.entries(this.config.attrs).forEach(function(entry) {
                    return el.setAttribute(entry[0], entry[1]);
                });
                this.symbols.forEach(function(symbol) {
                    return el.appendChild(symbol.node);
                });
                return el;
            }
        },
        {
            key: "unmount",
            value: function unmount() {
                this.node && this.node.parentNode && this.node.parentNode.removeChild(this.node);
            }
        }
    ]);
    return BrowserSprite;
}();

//# sourceMappingURL=browser-sprite.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons-sprite/dist/sprite.js


var sprite_canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
var browserSprite;
if (sprite_canUseDOM) {
    var spriteId = '__SVG_SPRITE_NODE__';
    browserSprite = new BrowserSprite({
        attrs: {
            id: spriteId
        }
    });
    var mount = function() {
        var spriteNode = document.getElementById(spriteId);
        if (spriteNode) {
            browserSprite.attach(spriteNode);
        } else {
            browserSprite.mount(document.body);
        }
        document.removeEventListener('DOMContentLoaded', mount);
    };
    if (document.querySelector('body')) {
        mount();
    } else {
        document.addEventListener('DOMContentLoaded', mount);
    }
} else {
    browserSprite = null;
}
function addSpriteSymbol(symbol) {
    if (browserSprite) {
        browserSprite.add(symbol);
    }
}
var sprite_useIsomorphicLayoutEffect = sprite_canUseDOM ? react.useLayoutEffect : react.useEffect;

//# sourceMappingURL=sprite.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons-sprite/dist/warnOnce.js
function warnOnce_warnOnce(componentName) {
    var didWarn = {};
    return function(message) {
        var type = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'warn';
        if (!didWarn[message]) {
            console[type]("[@vkontakte/icons][".concat(componentName, "] ").concat(message));
            didWarn[message] = true;
        }
    };
}

//# sourceMappingURL=warnOnce.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons-sprite/dist/SvgIcon.js







var SvgIcon = function(_param) {
    var _param_width = _param.width, width = _param_width === void 0 ? 0 : _param_width, _param_height = _param.height, height = _param_height === void 0 ? 0 : _param_height, viewBox = _param.viewBox, id = _param.id, _param_className = _param.className, className = _param_className === void 0 ? '' : _param_className, fill = _param.fill, getRootRef = _param.getRootRef, tmp = _param.style, propsStyle = tmp === void 0 ? {} : tmp, title = _param.title, children = _param.children, restProps = _object_without_properties_object_without_properties(_param, [
        "width",
        "height",
        "viewBox",
        "id",
        "className",
        "fill",
        "getRootRef",
        "style",
        "title",
        "children"
    ]);
    var child = react.Children.toArray(children)[0];
    var hasIconChildren = /*#__PURE__*/ react.isValidElement(child) && typeof child.type === 'function' && 'mountIcon' in child.type;
    var size = Math.max(width, height);
    var style = _object_spread_object_spread({
        width: width,
        height: height
    }, propsStyle);
    return /*#__PURE__*/ react.createElement("svg", _object_spread_props_object_spread_props(_object_spread_object_spread({
        "aria-hidden": "true",
        display: "block"
    }, restProps), {
        className: [
            'vkuiIcon',
            "vkuiIcon--".concat(size),
            "vkuiIcon--w-".concat(width),
            "vkuiIcon--h-".concat(height),
            "vkuiIcon--".concat(id),
            className
        ].join(' ').trim(),
        viewBox: viewBox,
        width: width,
        height: height,
        style: style,
        ref: getRootRef
    }), title && /*#__PURE__*/ react.createElement("title", null, title), hasIconChildren && children, /*#__PURE__*/ react.createElement("use", {
        xlinkHref: "#".concat(id),
        style: {
            fill: 'currentColor',
            color: fill
        }
    }, !hasIconChildren && children));
};
function makeIcon(componentName, id, viewBox, content, width, height, deprecated, replacement) {
    var isMounted = false;
    function mountIcon() {
        if (!isMounted) {
            addSpriteSymbol(new BrowserSymbol({
                content: content
            }));
            isMounted = true;
        }
    }
    var warn = warnOnce_warnOnce(componentName);
    var Icon = function(props) {
        sprite_useIsomorphicLayoutEffect(mountIcon, []);
        if (deprecated) {
            var replacementNotice = replacement ? ". Замените на ".concat(replacement) : '';
            warn('Иконка устарела' + replacementNotice);
        }
        return /*#__PURE__*/ react.createElement(SvgIcon, _object_spread_props_object_spread_props(_object_spread_object_spread({}, props), {
            viewBox: viewBox,
            id: id,
            width: props.width !== undefined && !isNaN(props.width) ? +props.width : width,
            height: props.height !== undefined && !isNaN(props.height) ? +props.height : height
        }));
    };
    Icon.mountIcon = mountIcon;
    Icon.displayName = componentName;
    return Icon;
}

//# sourceMappingURL=SvgIcon.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons-sprite/dist/raster/components/IconAppearanceProvider/IconAppearanceProvider.js

var IconAppearanceProvider_appearanceTypes = (/* unused pure expression or super */ null && ([
    'light',
    'dark'
]));
var IconAppearanceContext = react.createContext('light');
var IconAppearanceProvider_IconAppearanceProvider = IconAppearanceContext.Provider;
var IconAppearanceProvider_useIconAppearance = function() {
    return React.useContext(IconAppearanceContext);
};

//# sourceMappingURL=IconAppearanceProvider.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons-sprite/dist/raster/components/RasterIcon/RasterIcon.js





// https://developer.android.com/training/multiscreen/screendensities#TaskProvideAltBmp
var dppxModifiersMap = {
    mdpi: 1,
    hdpi: 1.5,
    // Должно быть 2, но так как мы пропускаем при генерации hdpi, понижаем это значение.
    // Считаем избыточным генерацию hdpi, xhdpi в использовании для hdpi не сильно шакалится.
    xhdpi: 1.5,
    xxhdpi: 3,
    xxxhdpi: 4
};
var densityBucketTypes = Object.keys(dppxModifiersMap);
var RasterIcon = /*#__PURE__*/ (/* unused pure expression or super */ null && (React.memo(function RasterIcon(_param) {
    var getRootRef = _param.getRootRef, id = _param.id, size = _param.size, className = _param.className, restProps = _object_without_properties(_param, [
        "getRootRef",
        "id",
        "size",
        "className"
    ]);
    var appearance = useIconAppearance();
    var srcSet = densityBucketTypes.reduce(function(set, densityBucket) {
        var densityAppearanceKey = getDensityBucketAppearanceKey(appearance, densityBucket);
        var src = restProps[densityAppearanceKey];
        delete restProps[densityAppearanceKey];
        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;
        try {
            for(var _iterator = appearanceTypes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){
                var appearance1 = _step.value;
                var densityAppearanceKey1 = getDensityBucketAppearanceKey(appearance1, densityBucket);
                if (!src) {
                    src = restProps[densityAppearanceKey1];
                }
                delete restProps[densityAppearanceKey1];
            }
        } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
        } finally{
            try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                }
            } finally{
                if (_didIteratorError) {
                    throw _iteratorError;
                }
            }
        }
        if (src) {
            set.push("".concat(src, " ").concat(dppxModifiersMap[densityBucket], "x"));
        }
        return set;
    }, []).join(', ');
    return /*#__PURE__*/ React.createElement("img", _object_spread({
        ref: getRootRef,
        "aria-hidden": "true",
        alt: "",
        className: [
            'vkuiIcon',
            "vkuiIcon--".concat(size),
            "vkuiIcon--w-".concat(size),
            "vkuiIcon--h-".concat(size),
            "vkuiIcon--".concat(id),
            'vkuiRasterIcon',
            className
        ].join(' ').trim(),
        width: size,
        height: size,
        srcSet: srcSet,
        loading: "lazy",
        draggable: false
    }, restProps));
})));
function makeRasterIcon(componentName, id, size, densityBucketAppearanceSet) {
    var Icon = function(props) {
        return /*#__PURE__*/ React.createElement(RasterIcon, _object_spread({
            id: id,
            size: size
        }, densityBucketAppearanceSet, props));
    };
    Icon.size = size;
    Icon.isRasterIcon = true;
    Icon.displayName = componentName;
    return Icon;
}

//# sourceMappingURL=RasterIcon.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons-sprite/dist/IconSettings.js

/**
 * @deprecated В v3 будет удалено
 */ var IconSettingsProvider = function(param) {
    var children = param.children;
    return children;
};

//# sourceMappingURL=IconSettings.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons-sprite/dist/index.js







//# sourceMappingURL=index.js.map
;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/16/spinner_16.js
'use client';

var Icon16Spinner = makeIcon('Icon16Spinner', 'spinner_16', '0 0 16 16', '<symbol xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 16" id="spinner_16"><path fill-rule="evenodd" d="M8 3.25a4.75 4.75 0 0 0-4.149 7.065.75.75 0 1 1-1.31.732A6.25 6.25 0 1 1 8 14.25a.75.75 0 0 1 .001-1.5 4.75 4.75 0 1 0 0-9.5Z" clip-rule="evenodd" /></symbol>', 16, 16, false, undefined);

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/24/spinner_24.js
'use client';

var Icon24Spinner = makeIcon('Icon24Spinner', 'spinner_24', '0 0 24 24', '<symbol xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" id="spinner_24"><path fill="currentColor" fill-rule="evenodd" d="M16.394 5.077A8.2 8.2 0 0 0 4.58 15.49a.9.9 0 0 1-1.628.767A10 10 0 1 1 12 22a.9.9 0 0 1 0-1.8 8.2 8.2 0 0 0 4.394-15.123" clip-rule="evenodd" /></symbol>', 24, 24, false, undefined);

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/32/spinner_32.js
'use client';

var Icon32Spinner = makeIcon('Icon32Spinner', 'spinner_32', '0 0 32 32', '<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" id="spinner_32"><path fill="currentColor" d="M16 32a1.5 1.5 0 0 1 0-3c7.18 0 13-5.82 13-13S23.18 3 16 3 3 8.82 3 16c0 1.557.273 3.074.8 4.502A1.5 1.5 0 1 1 .986 21.54 16 16 0 0 1 0 16C0 7.163 7.163 0 16 0s16 7.163 16 16-7.163 16-16 16" /></symbol>', 32, 32, false, undefined);

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/44/spinner_44.js
'use client';

var Icon44Spinner = makeIcon('Icon44Spinner', 'spinner_44', '0 0 44 44', '<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 44 44" id="spinner_44"><path fill="currentColor" d="M22 44a1.5 1.5 0 0 1 0-3c10.493 0 19-8.507 19-19S32.493 3 22 3 3 11.507 3 22c0 2.208.376 4.363 1.103 6.397a1.5 1.5 0 1 1-2.825 1.01A22 22 0 0 1 0 22C0 9.85 9.85 0 22 0s22 9.85 22 22-9.85 22-22 22" /></symbol>', 44, 44, false, undefined);

;// CONCATENATED MODULE: ./src/hooks/usePrevious.ts

function usePrevious_usePrevious(value) {
    var ref = react.useRef();
    react.useEffect(function() {
        ref.current = value;
    });
    return ref.current;
}

;// CONCATENATED MODULE: ./src/lib/animation/useCSSKeyframesAnimationController.ts
function useCSSKeyframesAnimationController_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useCSSKeyframesAnimationController_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useCSSKeyframesAnimationController_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useCSSKeyframesAnimationController_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useCSSKeyframesAnimationController_sliced_to_array(arr, i) {
    return useCSSKeyframesAnimationController_array_with_holes(arr) || useCSSKeyframesAnimationController_iterable_to_array_limit(arr, i) || useCSSKeyframesAnimationController_unsupported_iterable_to_array(arr, i) || useCSSKeyframesAnimationController_non_iterable_rest();
}
function useCSSKeyframesAnimationController_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useCSSKeyframesAnimationController_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useCSSKeyframesAnimationController_array_like_to_array(o, minLen);
}





var useCSSKeyframesAnimationController_useCSSKeyframesAnimationController = function(stateProp) {
    var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, onEnterProp = _ref.onEnter, onEntering = _ref.onEntering, onEntered = _ref.onEntered, onExitProp = _ref.onExit, onExiting = _ref.onExiting, onExited = _ref.onExited, disableInitAnimation = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
    var _useState = useCSSKeyframesAnimationController_sliced_to_array((0,react.useState)(function() {
        return disableInitAnimation ? stateProp === 'enter' ? 'entered' : 'exited' : stateProp;
    }), 2), state = _useState[0], setState = _useState[1];
    var prevState = usePrevious_usePrevious(stateProp);
    var onAnimationStart = function() {
        if (state === 'enter') {
            setState('entering');
            if (onEntering) {
                onEntering();
            }
        } else if (state === 'exit') {
            setState('exiting');
            if (onExiting) {
                onExiting();
            }
        }
    };
    var onAnimationEnd = function() {
        if (state === 'entering') {
            setState('entered');
            if (onEntered) {
                onEntered();
            }
        } else if (state === 'exiting') {
            setState('exited');
            if (onExited) {
                onExited();
            }
        }
    };
    var onEnter = useStableCallback_useStableCallback(onEnterProp || functions_noop);
    var onExit = useStableCallback_useStableCallback(onExitProp || functions_noop);
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function updateState() {
        if (prevState === stateProp) {
            return;
        }
        switch(stateProp){
            case 'enter':
                if (state === 'entering' || state === 'entered') {
                    break;
                }
                setState('enter');
                onEnter();
                break;
            case 'exit':
                if (state === 'exiting' || state === 'exited') {
                    break;
                }
                setState('exit');
                onExit();
                break;
        }
    }, [
        state,
        prevState,
        stateProp,
        onEnter,
        onExit
    ]);
    return [
        state,
        {
            onAnimationStart: onAnimationStart,
            onAnimationEnd: onAnimationEnd
        }
    ];
};

;// CONCATENATED MODULE: ./src/lib/matchMedia.ts
function matchMedia_matchMediaListAddListener(mediaQueryList, listener) {
    mediaQueryList.addEventListener ? mediaQueryList.addEventListener('change', listener) : mediaQueryList.addListener(listener);
}
function matchMedia_matchMediaListRemoveListener(mediaQueryList, listener) {
    mediaQueryList.removeEventListener ? mediaQueryList.removeEventListener('change', listener) : mediaQueryList.removeListener(listener);
}

;// CONCATENATED MODULE: ./src/lib/animation/useReducedMotion.ts
/* eslint-disable no-restricted-properties */ 



var REDUCE_MOTION_MEDIA_QUERY = 'screen and (prefers-reduced-motion: reduce)';
var useReducedMotion = function() {
    var window = dom_useDOM().window;
    var initial = react.useMemo(function() {
        return window ? window.matchMedia(REDUCE_MOTION_MEDIA_QUERY).matches : /* istanbul ignore next: на текущий момент, покрытие данного кейса неинтересно  */ false;
    }, [
        window
    ]);
    var reducedMotion = react.useRef(initial);
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function() {
        /* istanbul ignore if: невозможный кейс (в SSR вызова этой функции не будет) */ if (!window) {
            return;
        }
        var match = window.matchMedia(REDUCE_MOTION_MEDIA_QUERY);
        reducedMotion.current = match.matches;
        /* istanbul ignore next: на текущий момент, покрытие данного кейса неинтересно  */ var handleMediaQueryChange = function(event) {
            /* istanbul ignore next */ reducedMotion.current = event.matches;
        };
        matchMedia_matchMediaListAddListener(match, handleMediaQueryChange);
        return function() {
            return matchMedia_matchMediaListRemoveListener(match, handleMediaQueryChange);
        };
    }, [
        window
    ]);
    return reducedMotion.current;
};

;// CONCATENATED MODULE: ./src/lib/animation/rubberbandIfOutOfBounds.ts
/**
 * @author @aholachek
 *
 * @link https://twitter.com/chpwn/status/285540192096497664
 * @link https://medium.com/@nathangitter/building-fluid-interfaces-ios-swift-9732bb934bf5
 */ 
function rubberband(distance, dimension, constant) {
    if (dimension === 0 || Math.abs(dimension) === Infinity) {
        return Math.pow(distance, constant * 5);
    }
    return distance * dimension * constant / (dimension + constant * distance);
}
function rubberbandIfOutOfBounds(position, min, max) {
    var constant = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0.15;
    if (constant === 0) {
        return math_clamp(position, min, max);
    }
    if (position < min) {
        return -rubberband(min - position, max - min, constant) + min;
    }
    if (position > max) {
        return +rubberband(position - max, max - min, constant) + max;
    }
    return position;
}

;// CONCATENATED MODULE: ./src/lib/animation/fades.ts
 // eslint-disable-line import/order
var fades_animationFadeClassNames = {
    in: "vkui-anim-fade-in",
    out: "vkui-anim-fade-out"
};

;// CONCATENATED MODULE: ./src/lib/animation/transformOrigin.ts
 // eslint-disable-line import/order
var transformOrigin_transformOriginClassNames = {
    'top': "vkui-anim-transform-origin-top",
    'top-start': "vkui-anim-transform-origin-top-start",
    'top-end': "vkui-anim-transform-origin-top-end",
    'right': "vkui-anim-transform-origin-right",
    'right-start': "vkui-anim-transform-origin-right-start",
    'right-end': "vkui-anim-transform-origin-right-end",
    'bottom': "vkui-anim-transform-origin-bottom",
    'bottom-start': "vkui-anim-transform-origin-bottom-start",
    'bottom-end': "vkui-anim-transform-origin-bottom-end",
    'left': "vkui-anim-transform-origin-left",
    'left-start': "vkui-anim-transform-origin-left-start",
    'left-end': "vkui-anim-transform-origin-left-end"
};

;// CONCATENATED MODULE: ./src/lib/animation/index.ts






;// CONCATENATED MODULE: ./src/components/VisuallyHidden/VisuallyHidden.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/VisuallyHidden/VisuallyHidden.tsx
function VisuallyHidden_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function VisuallyHidden_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            VisuallyHidden_define_property(target, key, source[key]);
        });
    }
    return target;
}
function VisuallyHidden_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function VisuallyHidden_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        VisuallyHidden_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function VisuallyHidden_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = VisuallyHidden_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function VisuallyHidden_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



/**
 * Компонент-обертка. Позволяет скрыть контент визуально, но оставить его
 * доступным для ассистивных технологий. По умолчанию — `span`.
 *
 * @since 5.4.0
 * @see https://vkcom.github.io/VKUI/#/VisuallyHidden
 */ var VisuallyHidden_VisuallyHidden = function(_param) {
    var _param_Component = _param.Component, Component = _param_Component === void 0 ? 'span' : _param_Component, baseClassName = _param.baseClassName, restProps = VisuallyHidden_object_without_properties(_param, [
        "Component",
        "baseClassName"
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent_RootComponent, VisuallyHidden_object_spread_props(VisuallyHidden_object_spread({
        Component: Component
    }, restProps), {
        baseClassName: clsx(baseClassName, "vkuiVisuallyHidden", Component === 'input' && "vkuiVisuallyHidden--focusable-input")
    }));
};

;// CONCATENATED MODULE: ./src/components/Spinner/Spinner.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Spinner/Spinner.tsx
function Spinner_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Spinner_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Spinner_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Spinner_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Spinner_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Spinner_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Spinner_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Spinner_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Spinner_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Spinner_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Spinner_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Spinner_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Spinner_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Spinner_sliced_to_array(arr, i) {
    return Spinner_array_with_holes(arr) || Spinner_iterable_to_array_limit(arr, i) || Spinner_unsupported_iterable_to_array(arr, i) || Spinner_non_iterable_rest();
}
function Spinner_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Spinner_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Spinner_array_like_to_array(o, minLen);
}







/**
 * @see https://vkcom.github.io/VKUI/#/Spinner
 */ var Spinner_Spinner = /*#__PURE__*/ react.memo(function(_param) {
    var _param_size = _param.size, size = _param_size === void 0 ? 'regular' : _param_size, _param_children = _param.children, children = _param_children === void 0 ? 'Загружается...' : _param_children, _param_disableAnimation = _param.disableAnimation, disableAnimation = _param_disableAnimation === void 0 ? false : _param_disableAnimation, _param_noColor = _param.noColor, noColor = _param_noColor === void 0 ? false : _param_noColor, restProps = Spinner_object_without_properties(_param, [
        "size",
        "children",
        "disableAnimation",
        "noColor"
    ]);
    var isReducedMotion = useReducedMotion();
    var SpinnerIcon = {
        small: Icon16Spinner,
        regular: Icon24Spinner,
        medium: Icon32Spinner,
        large: Icon44Spinner
    }[size];
    var svgAnimateElement = null;
    var _React_useState = Spinner_sliced_to_array(react.useState(disableAnimation ? true : false), 2), isReadyForSetSVGAnimateElement = _React_useState[0], setIsReadyForSetSVGAnimateElement = _React_useState[1];
    react.useEffect(function waitReactHydrationBeforeSetSVGAnimateElement() {
        setIsReadyForSetSVGAnimateElement(true);
    }, []);
    if (isReadyForSetSVGAnimateElement && !disableAnimation) {
        if (isReducedMotion) {
            svgAnimateElement = /*#__PURE__*/ react.createElement("animate", {
                attributeName: "opacity",
                keyTimes: "0; 0.5; 1",
                values: "1; 0.1; 1",
                begin: "0s",
                dur: "2s",
                repeatCount: "indefinite"
            });
        } else {
            var center = {
                small: 8,
                regular: 12,
                medium: 16,
                large: 22
            }[size];
            svgAnimateElement = /*#__PURE__*/ react.createElement("animateTransform", {
                attributeType: "XML",
                attributeName: "transform",
                type: "rotate",
                from: "0 ".concat(center, " ").concat(center),
                to: "360 ".concat(center, " ").concat(center),
                dur: "0.7s",
                repeatCount: "indefinite"
            });
        }
    }
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, Spinner_object_spread_props(Spinner_object_spread({
        Component: "span",
        role: "status"
    }, restProps), {
        baseClassName: clsx("vkuiSpinner", noColor && "vkuiSpinner--no-color")
    }), /*#__PURE__*/ react.createElement(SpinnerIcon, null, svgAnimateElement), react_utils_hasReactNode(children) && /*#__PURE__*/ react.createElement(VisuallyHidden_VisuallyHidden, null, children));
});
Spinner_Spinner.displayName = 'Spinner';

;// CONCATENATED MODULE: ./src/components/Button/Button.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Button/Button.tsx
function Button_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Button_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Button_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Button_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Button_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Button_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Button_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Button_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Button_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}








var stylesSize = {
    s: "vkuiButton--size-s",
    m: "vkuiButton--size-m",
    l: "vkuiButton--size-l"
};
var stylesMode = {
    primary: "vkuiButton--mode-primary",
    secondary: "vkuiButton--mode-secondary",
    tertiary: "vkuiButton--mode-tertiary",
    outline: "vkuiButton--mode-outline",
    link: "vkuiButton--mode-link"
};
var stylesAppearance = {
    'accent': "vkuiButton--appearance-accent",
    'positive': "vkuiButton--appearance-positive",
    'negative': "vkuiButton--appearance-negative",
    'neutral': "vkuiButton--appearance-neutral",
    'overlay': "vkuiButton--appearance-overlay",
    'accent-invariable': "vkuiButton--appearance-accent-invariable"
};
var stylesAlign = {
    left: "vkuiButton--align-left",
    center: "vkuiButton--align-center",
    right: "vkuiButton--align-right"
};
var Button_sizeYClassNames = {
    none: "vkuiButton--sizeY-none",
    regular: "vkuiButton--sizeY-regular"
};
/**
 * @see https://vkcom.github.io/VKUI/#/Button
 */ var Button_Button = function(_param) {
    var _param_size = _param.size, size = _param_size === void 0 ? 's' : _param_size, _param_mode = _param.mode, mode = _param_mode === void 0 ? 'primary' : _param_mode, _param_appearance = _param.appearance, appearance = _param_appearance === void 0 ? 'accent' : _param_appearance, _param_stretched = _param.stretched, stretched = _param_stretched === void 0 ? false : _param_stretched, _param_align = _param.align, align = _param_align === void 0 ? 'center' : _param_align, children = _param.children, before = _param.before, after = _param.after, getRootRef = _param.getRootRef, loading = _param.loading, onClick = _param.onClick, className = _param.className, disableSpinnerAnimation = _param.disableSpinnerAnimation, rounded = _param.rounded, restProps = Button_object_without_properties(_param, [
        "size",
        "mode",
        "appearance",
        "stretched",
        "align",
        "children",
        "before",
        "after",
        "getRootRef",
        "loading",
        "onClick",
        "className",
        "disableSpinnerAnimation",
        "rounded"
    ]);
    var hasIcons = Boolean(before || after);
    var hasIconOnly = !children && Boolean(after) !== Boolean(before);
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var platform = usePlatform_usePlatform();
    return /*#__PURE__*/ react.createElement(Tappable_Tappable, Button_object_spread_props(Button_object_spread({
        hoverMode: "vkuiButton--hover",
        activeMode: "vkuiButton--active",
        Component: restProps.href ? 'a' : 'button',
        focusVisibleMode: "outside"
    }, restProps), {
        onClick: loading ? undefined : onClick,
        className: clsx(className, "vkuiButton", stylesSize[size], stylesMode[mode], stylesAppearance[appearance], stylesAlign[align], sizeY !== 'compact' && Button_sizeYClassNames[sizeY], platform === 'ios' && "vkuiButton--ios", stretched && "vkuiButton--stretched", hasIcons && "vkuiButton--with-icon", hasIconOnly && !stretched && "vkuiButton--singleIcon", loading && "vkuiButton--loading", rounded && "vkuiButton--rounded"),
        getRootRef: getRootRef
    }), loading && /*#__PURE__*/ react.createElement(Spinner_Spinner, {
        size: "small",
        className: "vkuiButton__spinner",
        disableAnimation: disableSpinnerAnimation
    }), /*#__PURE__*/ react.createElement("span", {
        className: "vkuiButton__in"
    }, react_utils_hasReactNode(before) && /*#__PURE__*/ react.createElement("span", {
        className: "vkuiButton__before",
        role: "presentation",
        "data-testid":  false ? 0 : undefined
    }, before), react_utils_hasReactNode(children) && /*#__PURE__*/ react.createElement("span", {
        className: "vkuiButton__content",
        "data-testid":  false ? 0 : undefined
    }, children), react_utils_hasReactNode(after) && /*#__PURE__*/ react.createElement("span", {
        className: "vkuiButton__after",
        role: "presentation",
        "data-testid":  false ? 0 : undefined
    }, after)));
};

;// CONCATENATED MODULE: ./src/components/IconButton/IconButton.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/IconButton/IconButton.tsx
function IconButton_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function IconButton_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            IconButton_define_property(target, key, source[key]);
        });
    }
    return target;
}
function IconButton_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function IconButton_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        IconButton_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function IconButton_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = IconButton_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function IconButton_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}








var IconButton_sizeYClassNames = {
    none: "vkuiIconButton--sizeY-none",
    compact: "vkuiIconButton--sizeY-compact"
};
var warn = warnOnce('IconButton');
/**
 * @see https://vkcom.github.io/VKUI/#/IconButton
 */ var IconButton_IconButton = function(_param) {
    var label = _param.label, children = _param.children, className = _param.className, restProps = IconButton_object_without_properties(_param, [
        "label",
        "children",
        "className"
    ]);
    var platform = usePlatform_usePlatform();
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    if (false) { var isAccessible; }
    return /*#__PURE__*/ React.createElement(Tappable_Tappable, IconButton_object_spread_props(IconButton_object_spread({
        activeEffectDelay: 200,
        activeMode: "background",
        Component: restProps.href ? 'a' : 'button'
    }, restProps), {
        className: clsx("vkuiIconButton", sizeY !== 'regular' && IconButton_sizeYClassNames[sizeY], platform === 'ios' && "vkuiIconButton--ios", className)
    }), label && /*#__PURE__*/ React.createElement(VisuallyHidden_VisuallyHidden, null, label), children);
};

;// CONCATENATED MODULE: ./src/hooks/useAdaptivityConditionalRender/constants.ts

var sizeXCompactClassNames = {
    mq: {
        className: "vkui-sizeX--compact-mq"
    },
    compact: {
        className: "vkui-sizeX--compact-forced"
    }
};
var sizeXRegularClassNames = {
    mq: {
        className: "vkui-sizeX--regular-mq"
    },
    regular: {
        className: "vkui-sizeX--regular-forced"
    }
};
var sizeYCompactClassNames = {
    mq: {
        className: "vkui-sizeY--compact-mq"
    },
    compact: {
        className: "vkui-sizeY--compact-forced"
    }
};
var sizeYRegularClassNames = {
    mq: {
        className: "vkui-sizeY--regular-mq"
    },
    regular: {
        className: "vkui-sizeY--regular-forced"
    }
};
var viewWidthClassNames = {
    tabletMinus: {
        mq: {
            className: "vkui-viewWidth--tabletMinus-mq"
        },
        forced: {
            className: "vkui-viewWidth--tabletMinus-forced"
        }
    },
    tabletPlus: {
        mq: {
            className: "vkui-viewWidth--tabletPlus-mq"
        },
        forced: {
            className: "vkui-viewWidth--tabletPlus-forced"
        }
    }
};
var deviceTypeClassNames = {
    mobile: {
        mq: {
            className: "vkui-deviceType--mobile-mq"
        },
        forced: {
            className: "vkui-deviceType--mobile-forced"
        }
    },
    desktop: {
        mq: {
            className: "vkui-deviceType--desktop-mq"
        },
        forced: {
            className: "vkui-deviceType--desktop-forced"
        }
    }
};

;// CONCATENATED MODULE: ./src/hooks/useAdaptivityConditionalRender/helpers.ts

var getAdaptiveSizeType = function(type, compactClassNames, regularClassNames) {
    return {
        compact: type === undefined ? compactClassNames.mq : type === 'compact' ? compactClassNames[type] : false,
        regular: type === undefined ? regularClassNames.mq : type === 'regular' ? regularClassNames[type] : false
    };
};
var getAdaptiveViewWidth = function(viewWidth, viewWidthClassNames) {
    return {
        tabletMinus: viewWidth === undefined ? viewWidthClassNames.tabletMinus.mq : viewWidth < constants_ViewWidth.TABLET ? viewWidthClassNames.tabletMinus.forced : false,
        tabletPlus: viewWidth === undefined ? viewWidthClassNames.tabletPlus.mq : viewWidth >= constants_ViewWidth.TABLET ? viewWidthClassNames.tabletPlus.forced : false
    };
};
var getAdaptiveDeviceType = function(viewWidth, viewHeight, hasPointer, platform, deviceTypeClassNames) {
    var isDesktop = functions_tryToCheckIsDesktop(viewWidth, viewHeight, hasPointer, platform);
    if (isDesktop === null) {
        return {
            mobile: deviceTypeClassNames.mobile.mq,
            desktop: deviceTypeClassNames.desktop.mq
        };
    }
    if (isDesktop) {
        return {
            mobile: false,
            desktop: deviceTypeClassNames.desktop.forced
        };
    }
    return {
        mobile: deviceTypeClassNames.mobile.forced,
        desktop: false
    };
};

;// CONCATENATED MODULE: ./src/hooks/useAdaptivityConditionalRender/useAdaptivityConditionalRender.tsx





var useAdaptivityConditionalRender_useAdaptivityConditionalRender = function() {
    var _React_useContext = react.useContext(AdaptivityContext_AdaptivityContext), sizeXContext = _React_useContext.sizeX, sizeYContext = _React_useContext.sizeY, viewWidthContext = _React_useContext.viewWidth, viewHeightContext = _React_useContext.viewHeight, hasPointerContext = _React_useContext.hasPointer;
    var platform = usePlatform_usePlatform();
    return react.useMemo(function() {
        var sizeX = getAdaptiveSizeType(sizeXContext, sizeXCompactClassNames, sizeXRegularClassNames);
        var sizeY = getAdaptiveSizeType(sizeYContext, sizeYCompactClassNames, sizeYRegularClassNames);
        var viewWidth = getAdaptiveViewWidth(viewWidthContext, viewWidthClassNames);
        var deviceType = getAdaptiveDeviceType(viewWidthContext, viewHeightContext, hasPointerContext, platform, deviceTypeClassNames);
        return {
            sizeX: sizeX,
            sizeY: sizeY,
            viewWidth: viewWidth,
            deviceType: deviceType
        };
    }, [
        sizeXContext,
        sizeYContext,
        viewWidthContext,
        viewHeightContext,
        hasPointerContext,
        platform
    ]);
};

;// CONCATENATED MODULE: ./src/hooks/useAdaptivityConditionalRender/index.ts


;// CONCATENATED MODULE: ./src/components/AdaptiveIconRenderer/AdaptiveIconRenderer.tsx


/**
 * @since 5.4.0
 * @see https://vkcom.github.io/VKUI/#/AdaptiveIconRenderer
 */ var AdaptiveIconRenderer_AdaptiveIconRenderer = function(param) {
    var IconCompact = param.IconCompact, IconRegular = param.IconRegular;
    var sizeY = useAdaptivityConditionalRender_useAdaptivityConditionalRender().sizeY;
    return /*#__PURE__*/ react.createElement(react.Fragment, null, sizeY.compact && /*#__PURE__*/ react.createElement(IconCompact, {
        className: sizeY.compact.className
    }), sizeY.regular && /*#__PURE__*/ react.createElement(IconRegular, {
        className: sizeY.regular.className
    }));
};

;// CONCATENATED MODULE: ./src/components/ToolButton/ToolButton.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ToolButton/ToolButton.tsx
function ToolButton_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ToolButton_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ToolButton_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ToolButton_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ToolButton_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ToolButton_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





var ToolButton_stylesMode = {
    primary: "vkuiToolButton--mode-primary",
    secondary: "vkuiToolButton--mode-secondary",
    tertiary: "vkuiToolButton--mode-tertiary",
    outline: "vkuiToolButton--mode-outline"
};
var ToolButton_stylesAppearance = {
    accent: "vkuiToolButton--appearance-accent",
    neutral: "vkuiToolButton--appearance-neutral"
};
var stylesDirection = {
    row: "vkuiToolButton--direction-row",
    column: "vkuiToolButton--direction-column"
};
var ToolButton_sizeYClassNames = {
    none: "vkuiToolButton--sizeY-none",
    regular: "vkuiToolButton--sizeY-regular"
};
/**
 * Кнопки, которые используются для вызова инструмента, вставки аттачей или
 * для форматирования. Их можно использовать как кнопки для разового действия
 * или для включения/выключения режима.
 *
 * @see https://vkcom.github.io/VKUI/#/ToolButton
 */ var ToolButton = function(_param) {
    var _param_mode = _param.mode, mode = _param_mode === void 0 ? 'primary' : _param_mode, _param_appearance = _param.appearance, appearance = _param_appearance === void 0 ? 'accent' : _param_appearance, _param_direction = _param.direction, direction = _param_direction === void 0 ? 'row' : _param_direction, className = _param.className, children = _param.children, IconCompact = _param.IconCompact, IconRegular = _param.IconRegular, rounded = _param.rounded, restProps = ToolButton_object_without_properties(_param, [
        "mode",
        "appearance",
        "direction",
        "className",
        "children",
        "IconCompact",
        "IconRegular",
        "rounded"
    ]);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var hasChildren = hasReactNode(children);
    return /*#__PURE__*/ React.createElement(Tappable, ToolButton_object_spread({
        hoverMode: "vkuiToolButton--hover",
        activeMode: "vkuiToolButton--active",
        Component: restProps.href ? 'a' : 'button',
        focusVisibleMode: "outside",
        className: classNames(className, "vkuiToolButton", rounded && getRoundedClassName(direction, hasChildren), hasChildren && direction === 'row' && "vkuiToolButton--withFakeEndIcon", ToolButton_stylesMode[mode], ToolButton_stylesAppearance[appearance], stylesDirection[direction], sizeY !== 'compact' && ToolButton_sizeYClassNames[sizeY])
    }, restProps), /*#__PURE__*/ React.createElement(AdaptiveIconRenderer, {
        IconCompact: IconCompact,
        IconRegular: IconRegular
    }), hasChildren && /*#__PURE__*/ React.createElement("span", {
        className: "vkuiToolButton__text"
    }, children));
};
function getRoundedClassName(direction, hasChildren) {
    switch(direction){
        case 'row':
            return "vkuiToolButton--rounded";
        case 'column':
            return hasChildren ? undefined : "vkuiToolButton--rounded";
    }
}

;// CONCATENATED MODULE: ./src/lib/getNavId.ts
function getNavId_getNavId(props, warn) {
    var id = props.nav || props.id;
    if (false) {}
    return id;
}

;// CONCATENATED MODULE: ./src/components/NavTransitionContext/NavTransitionContext.tsx


var TransitionContext = /*#__PURE__*/ react.createContext({
    entering: false
});
var NavTransitionContext_useNavTransition = function() {
    return react.useContext(TransitionContext);
};
var NavTransitionContext_NavTransitionProvider = function(param) {
    var children = param.children, entering = param.entering;
    var parentContext = NavTransitionContext_useNavTransition();
    var contextValue = useObjectMemo_useObjectMemo({
        entering: parentContext.entering || entering
    });
    return /*#__PURE__*/ react.createElement(TransitionContext.Provider, {
        value: contextValue
    }, children);
};

;// CONCATENATED MODULE: ./src/components/NavTransitionDirectionContext/NavTransitionDirectionContext.tsx
function NavTransitionDirectionContext_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function NavTransitionDirectionContext_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function NavTransitionDirectionContext_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function NavTransitionDirectionContext_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function NavTransitionDirectionContext_sliced_to_array(arr, i) {
    return NavTransitionDirectionContext_array_with_holes(arr) || NavTransitionDirectionContext_iterable_to_array_limit(arr, i) || NavTransitionDirectionContext_unsupported_iterable_to_array(arr, i) || NavTransitionDirectionContext_non_iterable_rest();
}
function NavTransitionDirectionContext_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return NavTransitionDirectionContext_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return NavTransitionDirectionContext_array_like_to_array(o, minLen);
}

var TransitionDirectionContext = /*#__PURE__*/ react.createContext(undefined);
var NavTransitionDirectionContext_NavTransitionDirectionProvider = function(param) {
    var children = param.children, isBackProp = param.isBack;
    var parentIsBack = react.useContext(TransitionDirectionContext);
    // if local isBack is undefined then transition happend on the parent side (probably Root)
    var isBack = isBackProp !== undefined ? isBackProp : parentIsBack;
    // 'direction' should always represent the direction state of the panel on mount
    // save the on mount value of the panel to the state
    // to make sure we don't trigger new re-render for the panel
    // due to change in the prop passed to provider
    var _React_useState = NavTransitionDirectionContext_sliced_to_array(react.useState(isBack), 1), isBackOnMount = _React_useState[0];
    return /*#__PURE__*/ react.createElement(TransitionDirectionContext.Provider, {
        value: isBackOnMount
    }, children);
};
var useNavDirection = function() {
    var isBack = React.useContext(TransitionDirectionContext);
    var transitionDirection = isBack === undefined ? undefined : isBack ? 'backwards' : 'forwards';
    return transitionDirection;
};

;// CONCATENATED MODULE: ./src/components/Root/Root.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Root/Root.tsx
function Root_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Root_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Root_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Root_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Root_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Root_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Root_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Root_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Root_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Root_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Root_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Root_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Root_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Root_sliced_to_array(arr, i) {
    return Root_array_with_holes(arr) || Root_iterable_to_array_limit(arr, i) || Root_unsupported_iterable_to_array(arr, i) || Root_non_iterable_rest();
}
function Root_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Root_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Root_array_like_to_array(o, minLen);
}














var Root_warn = warnOnce('Root');
/**
 * @see https://vkcom.github.io/VKUI/#/Root
 */ var Root = function(_param) {
    var children = _param.children, _activeView = _param.activeView, onTransition = _param.onTransition, nav = _param.nav, restProps = Root_object_without_properties(_param, [
        "children",
        "activeView",
        "onTransition",
        "nav"
    ]);
    var scroll = React.useContext(ScrollContext);
    var platform = usePlatform();
    var document = useDOM().document;
    var scrolls = React.useRef({}).current;
    var viewNodes = React.useRef({}).current;
    var _useConfigProvider = useConfigProvider(), _useConfigProvider_transitionMotionEnabled = _useConfigProvider.transitionMotionEnabled, transitionMotionEnabled = _useConfigProvider_transitionMotionEnabled === void 0 ? true : _useConfigProvider_transitionMotionEnabled;
    var animate = React.useContext(SplitColContext).animate;
    var disableAnimation = !transitionMotionEnabled || !animate;
    var views = React.Children.toArray(children);
    var _React_useState = Root_sliced_to_array(React.useState({
        activeView: _activeView,
        transition: false
    }), 2), _React_useState_ = _React_useState[0], prevView = _React_useState_.prevView, activeView = _React_useState_.activeView, transition = _React_useState_.transition, isBack = _React_useState_.isBack, _setState = _React_useState[1];
    var transitionTo = function(panel) {
        if (panel !== activeView) {
            var viewIds = views.map(function(view) {
                return getNavId(view.props, Root_warn);
            });
            var isBack = viewIds.indexOf(panel) < viewIds.indexOf(activeView);
            scrolls[activeView] = scroll.getScroll().y;
            _setState({
                activeView: panel,
                prevView: activeView,
                transition: !disableAnimation,
                isBack: isBack
            });
        }
    };
    var finishTransition = React.useCallback(function() {
        return _setState({
            activeView: activeView,
            prevView: prevView,
            isBack: isBack,
            transition: false
        });
    }, [
        activeView,
        isBack,
        prevView
    ]);
    useIsomorphicLayoutEffect(function() {
        document.activeElement.blur();
    }, [
        activeView
    ]);
    // Нужен переход
    useIsomorphicLayoutEffect(function() {
        return transitionTo(_activeView);
    }, [
        _activeView
    ]);
    useIsomorphicLayoutEffect(function() {
        if (!transition && prevView) {
            // Закончился переход
            scroll.scrollTo(0, isBack ? scrolls[activeView] : 0);
            onTransition && onTransition({
                isBack: Boolean(isBack),
                from: prevView,
                to: activeView
            });
        }
    }, [
        transition,
        prevView
    ]);
    React.useEffect(function onAnimationEndFallback() {
        if (transition && disableAnimation) {
            finishTransition();
        }
    }, [
        transition,
        disableAnimation,
        finishTransition
    ]);
    var onAnimationEnd = function() {
        finishTransition();
    };
    return /*#__PURE__*/ React.createElement(RootComponent, Root_object_spread_props(Root_object_spread({}, restProps), {
        baseClassName: classNames("vkuiRoot", platform === 'ios' && "vkuiRoot--ios", transition && "vkuiRoot--transition")
    }), views.map(function(view) {
        var viewId = getNavId(view.props, Root_warn);
        if (viewId !== activeView && !(transition && viewId === prevView)) {
            return null;
        }
        var isTransitionTarget = transition && viewId === (isBack ? prevView : activeView);
        var compensateScroll = transition && (viewId === prevView || isBack && viewId === activeView);
        var _scrolls_viewId;
        return /*#__PURE__*/ React.createElement("div", {
            key: viewId,
            ref: function(e) {
                return viewId && (viewNodes[viewId] = e);
            },
            onAnimationEnd: isTransitionTarget ? onAnimationEnd : undefined,
            className: classNames("vkuiRoot__view", transition && viewId === prevView && isBack && "vkuiRoot__view--hide-back", transition && viewId === prevView && !isBack && "vkuiRoot__view--hide-forward", transition && viewId === activeView && isBack && "vkuiRoot__view--show-back", transition && viewId === activeView && !isBack && "vkuiRoot__view--show-forward")
        }, /*#__PURE__*/ React.createElement(NavTransitionDirectionProvider, {
            isBack: isBack
        }, /*#__PURE__*/ React.createElement(NavTransitionProvider, {
            entering: transition && viewId === activeView
        }, /*#__PURE__*/ React.createElement("div", {
            className: "vkuiRoot__scrollCompensation",
            style: {
                marginTop: compensateScroll ? viewId && -((_scrolls_viewId = scrolls[viewId]) !== null && _scrolls_viewId !== void 0 ? _scrolls_viewId : 0) : undefined
            }
        }, view))));
    }));
};

;// CONCATENATED MODULE: ./src/components/NavIdContext/NavIdContext.tsx

var NavIdContext_NavViewIdContext = /*#__PURE__*/ react.createContext(undefined);
var NavIdContext_NavPanelIdContext = /*#__PURE__*/ (/* unused pure expression or super */ null && (React.createContext(undefined)));

;// CONCATENATED MODULE: ./src/lib/touch/functions.ts

/*
 * Получает координату по оси абсцисс из touch- или mouse-события
 */ var coordX = function(event) {
    if ('clientX' in event) {
        return event.clientX;
    }
    return event.changedTouches && event.changedTouches[0].clientX;
};
/*
 * Получает координату по оси ординат из touch- или mouse-события
 */ var coordY = function(event) {
    if ('clientY' in event) {
        return event.clientY;
    }
    return event.changedTouches && event.changedTouches[0].clientY;
};
// eslint-disable-next-line no-restricted-globals
var functions_touchEnabled = function() {
    return dom_canUseDOM && 'ontouchstart' in window;
};
/*
 * Возвращает массив поддерживаемых событий
 * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.
 * Если нет, используем события мыши
 */ function getSupportedEvents() {
    if (functions_touchEnabled()) {
        return [
            'touchstart',
            'touchmove',
            'touchend',
            'touchcancel'
        ];
    }
    return [
        'mousedown',
        'mousemove',
        'mouseup',
        'mouseleave'
    ];
}
/*
 * Рассчитывает "сопротивление" для iOS тач-событий
 */ function rubber(offset, dimension, resistanceRate, isAndroid) {
    if (isAndroid || offset < 0) {
        return offset;
    }
    var offsettedResistance = offset * resistanceRate;
    return offsettedResistance * dimension / (offsettedResistance + dimension);
}


;// CONCATENATED MODULE: ./src/lib/touch/UIPanGestureRecognizer.ts
function UIPanGestureRecognizer_class_call_check(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function UIPanGestureRecognizer_defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function UIPanGestureRecognizer_create_class(Constructor, protoProps, staticProps) {
    if (protoProps) UIPanGestureRecognizer_defineProperties(Constructor.prototype, protoProps);
    if (staticProps) UIPanGestureRecognizer_defineProperties(Constructor, staticProps);
    return Constructor;
}
function UIPanGestureRecognizer_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}

var DEFAULT_INITIAL_TIME = 0;
var MILLISECONDS = 1000;
/**
 * JS имплементация класса из UIKIt iOS.
 *
 * https://developer.apple.com/documentation/uikit/uipangesturerecognizer
 */ var UIPanGestureRecognizer = /*#__PURE__*/ function() {
    "use strict";
    function UIPanGestureRecognizer() {
        UIPanGestureRecognizer_class_call_check(this, UIPanGestureRecognizer);
        UIPanGestureRecognizer_define_property(this, "initialTime", DEFAULT_INITIAL_TIME);
        UIPanGestureRecognizer_define_property(this, "x1", 0);
        UIPanGestureRecognizer_define_property(this, "y1", 0);
        UIPanGestureRecognizer_define_property(this, "x2", 0);
        UIPanGestureRecognizer_define_property(this, "y2", 0);
    }
    UIPanGestureRecognizer_create_class(UIPanGestureRecognizer, [
        {
            key: "setInitialTimeOnce",
            value: function setInitialTimeOnce() {
                if (this.initialTime === DEFAULT_INITIAL_TIME) {
                    this.initialTime = Date.now();
                }
            }
        },
        {
            key: "setStartCoords",
            value: function setStartCoords(event) {
                var _getFirstTouchEventData = getFirstTouchEventData(event), clientX = _getFirstTouchEventData.clientX, clientY = _getFirstTouchEventData.clientY;
                this.x1 = clientX;
                this.y1 = clientY;
            }
        },
        {
            key: "setEndCoords",
            value: function setEndCoords(event) {
                var _getFirstTouchEventData = getFirstTouchEventData(event), clientX = _getFirstTouchEventData.clientX, clientY = _getFirstTouchEventData.clientY;
                this.x2 = clientX;
                this.y2 = clientY;
            }
        },
        {
            key: "delta",
            value: function delta() {
                return {
                    x: this.x2 - this.x1,
                    y: this.y2 - this.y1
                };
            }
        },
        {
            key: "distance",
            value: function distance() {
                var _this_delta = this.delta(), x = _this_delta.x, y = _this_delta.y;
                return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));
            }
        },
        {
            key: "velocity",
            value: function velocity() {
                var deltaTime = (Date.now() - this.initialTime) / MILLISECONDS;
                if (deltaTime <= 0) {
                    return {
                        x: 0,
                        y: 0
                    };
                }
                var _this_delta = this.delta(), x = _this_delta.x, y = _this_delta.y;
                return {
                    x: x / deltaTime,
                    y: y / deltaTime
                };
            }
        },
        {
            key: "angle",
            value: function angle() {
                var deltaX = this.x2 - this.x1;
                var deltaY = this.y2 - this.y1;
                var radians = Math.atan2(deltaY, deltaX);
                var degrees = radians * 180 / Math.PI;
                return degrees < 0 ? 360 + degrees : degrees;
            }
        },
        {
            key: "reset",
            value: function reset() {
                this.initialTime = DEFAULT_INITIAL_TIME;
                this.x1 = this.y1 = 0;
                this.x2 = this.y2 = 0;
            }
        }
    ]);
    return UIPanGestureRecognizer;
}();

;// CONCATENATED MODULE: ./src/lib/touch/index.ts



;// CONCATENATED MODULE: ./src/components/Touch/Touch.tsx
function Touch_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Touch_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Touch_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Touch_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Touch_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Touch_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Touch_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Touch_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Touch_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Touch_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Touch_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Touch_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Touch_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Touch_sliced_to_array(arr, i) {
    return Touch_array_with_holes(arr) || Touch_iterable_to_array_limit(arr, i) || Touch_unsupported_iterable_to_array(arr, i) || Touch_non_iterable_rest();
}
function Touch_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Touch_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Touch_array_like_to_array(o, minLen);
}




/**
 * @see https://vkcom.github.io/VKUI/#/Touch
 */ var Touch_Touch = function(_param) {
    var onStart = _param.onStart, onStartX = _param.onStartX, onStartY = _param.onStartY, onMove = _param.onMove, onMoveX = _param.onMoveX, onMoveY = _param.onMoveY, onEnter = _param.onEnter, onLeave = _param.onLeave, onEnd = _param.onEnd, onEndX = _param.onEndX, onEndY = _param.onEndY, onClickCapture = _param.onClickCapture, usePointerHover = _param.usePointerHover, _param_slideThreshold = _param.slideThreshold, slideThreshold = _param_slideThreshold === void 0 ? 5 : _param_slideThreshold, _param_useCapture = _param.useCapture, useCapture = _param_useCapture === void 0 ? false : _param_useCapture, _param_Component = _param.Component, Component = _param_Component === void 0 ? 'div' : _param_Component, getRootRef = _param.getRootRef, _param_noSlideClick = _param.noSlideClick, noSlideClick = _param_noSlideClick === void 0 ? false : _param_noSlideClick, _param_stopPropagation = _param.stopPropagation, stopPropagation = _param_stopPropagation === void 0 ? false : _param_stopPropagation, restProps = Touch_object_without_properties(_param, [
        "onStart",
        "onStartX",
        "onStartY",
        "onMove",
        "onMoveX",
        "onMoveY",
        "onEnter",
        "onLeave",
        "onEnd",
        "onEndX",
        "onEndY",
        "onClickCapture",
        "usePointerHover",
        "slideThreshold",
        "useCapture",
        "Component",
        "getRootRef",
        "noSlideClick",
        "stopPropagation"
    ]);
    var _React_useState = Touch_sliced_to_array(react.useState(functions_touchEnabled), 1), isTouchEnabled = _React_useState[0];
    var gestureRef = react.useRef(null);
    var didSlide = react.useRef(false);
    var disposeTargetNativeGestureEvents = react.useRef(null);
    var cleanupTargetNativeGestureEvents = function() {
        gestureRef.current = null;
        if (disposeTargetNativeGestureEvents.current) {
            disposeTargetNativeGestureEvents.current();
            disposeTargetNativeGestureEvents.current = null;
        }
    };
    react.useEffect(function() {
        return cleanupTargetNativeGestureEvents;
    }, []);
    /**
   * Note: используем `useStableCallback()`, чтобы не терялась область видимости `onEnd`/`onEndX`/`onEndY`.
   */ var handleNativePointerUp = useStableCallback_useStableCallback(function(event) {
        var gesture = gestureRef.current;
        /* istanbul ignore if: нужно для Typescript */ if (!gesture) {
            return;
        }
        if (gesture.isPressed) {
            dispatchUserHandlers(event, gesture, [
                onEnd,
                onEndX,
                onEndY
            ], stopPropagation);
        }
        if (isTouchEnabled) {
            // https://github.com/VKCOM/VKUI/issues/4414
            // если тач-устройство и был зафиксирован touchmove,
            // то событие клика не вызывается
            if (gesture.isSlide) {
                didSlide.current = false;
            }
            // Если это был тач-евент, симулируем отмену hover
            if (onLeave) {
                onLeave(event);
            }
        } else {
            didSlide.current = Boolean(gesture.isSlide);
        }
        cleanupTargetNativeGestureEvents();
    });
    /**
   * Note: используем `useStableCallback()`, чтобы не терялась область видимости `onMove`/`onMoveX`/`onMoveY`.
   */ var handleNativePointerMove = useStableCallback_useStableCallback(function(event) {
        var gesture = gestureRef.current;
        /* istanbul ignore if: нужно для Typescript */ if (!gesture) {
            return;
        }
        var clientX = coordX(event);
        var clientY = coordY(event);
        // смещения
        var shiftX = clientX - gesture.startX;
        var shiftY = clientY - gesture.startY;
        // абсолютные значения смещений
        var shiftXAbs = Math.abs(shiftX);
        var shiftYAbs = Math.abs(shiftY);
        // Если определяем мультитач, то прерываем жест
        if ('touches' in event && event.touches.length > 1) {
            return handleNativePointerUp(event);
        }
        // если мы ещё не определились
        if (!gesture.isX && !gesture.isY) {
            var willBeX = shiftXAbs >= slideThreshold && shiftXAbs > shiftYAbs;
            var willBeY = shiftYAbs >= slideThreshold && shiftYAbs > shiftXAbs;
            var willBeSlidedX = willBeX && (!!onMoveX || !!onMove);
            var willBeSlidedY = willBeY && (!!onMoveY || !!onMove);
            gesture.isY = willBeY;
            gesture.isX = willBeX;
            gesture.isSlideX = willBeSlidedX;
            gesture.isSlideY = willBeSlidedY;
            gesture.isSlide = willBeSlidedX || willBeSlidedY;
        }
        if (gesture.isSlide) {
            gesture.clientX = clientX;
            gesture.clientY = clientY;
            gesture.shiftX = shiftX;
            gesture.shiftY = shiftY;
            gesture.shiftXAbs = shiftXAbs;
            gesture.shiftYAbs = shiftYAbs;
            dispatchUserHandlers(event, gesture, [
                onMove,
                onMoveX,
                onMoveY
            ], stopPropagation);
        }
    });
    var handlePointerDown = function(event) {
        var nativeEvent = event.nativeEvent;
        gestureRef.current = initGesture(coordX(nativeEvent), coordY(nativeEvent));
        var shouldCallDirectionHandlerOnlyIsSlide = false;
        dispatchUserHandlers(event, gestureRef.current, [
            onStart,
            onStartX,
            onStartY
        ], stopPropagation, shouldCallDirectionHandlerOnlyIsSlide);
        var eventOptions = {
            capture: useCapture,
            passive: false
        };
        // FIXME: заменить touch/mouse-события ниже на pointer-события после того, как бразуеры из
        // .browserslistrc начнут поддерживать его (см. https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events#browser_compatibility).
        if (isTouchEnabled) {
            if (floating_ui_utils_dom_esm_isHTMLElement(event.target)) {
                // Тач-события не всплывают, поэтому навешиваем события на целевой элемент
                // см. #235, #1968, https://stackoverflow.com/a/45760014
                var target = event.target;
                target.addEventListener('touchmove', handleNativePointerMove, eventOptions);
                target.addEventListener('touchend', handleNativePointerUp, eventOptions);
                target.addEventListener('touchcancel', handleNativePointerUp, eventOptions);
                disposeTargetNativeGestureEvents.current = function() {
                    target.removeEventListener('touchmove', handleNativePointerMove, eventOptions);
                    target.removeEventListener('touchend', handleNativePointerUp, eventOptions);
                    target.removeEventListener('touchcancel', handleNativePointerUp, eventOptions);
                };
            }
        } else {
            // Используем события на Document, т.к. mouse-события на целевом элементе могут теряться при
            // выходе за границы этого элемента.
            var doc = floating_ui_utils_dom_esm_getWindow(event.currentTarget).document;
            doc.addEventListener('mousemove', handleNativePointerMove, eventOptions);
            doc.addEventListener('mouseup', handleNativePointerUp, eventOptions);
            doc.addEventListener('mouseleave', handleNativePointerUp, eventOptions);
            disposeTargetNativeGestureEvents.current = function() {
                doc.removeEventListener('mousemove', handleNativePointerMove, eventOptions);
                doc.removeEventListener('mouseup', handleNativePointerUp, eventOptions);
                doc.removeEventListener('mouseleave', handleNativePointerUp, eventOptions);
            };
        }
    };
    var handlePointerEnter = onEnter ? function(event) {
        return onEnter(event.nativeEvent);
    } : undefined;
    var handlePointerLeave = onLeave ? function(event) {
        return onLeave(event.nativeEvent);
    } : undefined;
    /**
   * Отменяет нативное браузерное поведение для вложенных ссылок и изображений
   */ var handleDragStart = function(event) {
        var target = event.target;
        if (target.tagName === 'A' || target.tagName === 'IMG') {
            event.preventDefault();
        }
    };
    /**
   * Отменяет переход по вложенной ссылке, если был зафиксирован свайп
   */ var handleClickCapture = function(event) {
        if (!didSlide.current) {
            return onClickCapture && onClickCapture(event);
        }
        if (noSlideClick) {
            event.stopPropagation();
            // https://github.com/VKCOM/VKUI/issues/1977
            // https://github.com/VKCOM/VKUI/issues/3892
            event.preventDefault();
        } else {
            onClickCapture && onClickCapture(event);
        }
        didSlide.current = false;
    };
    return /*#__PURE__*/ react.createElement(Component, Touch_object_spread_props(Touch_object_spread({}, restProps), {
        ref: getRootRef,
        onDragStart: handleDragStart,
        onClickCapture: handleClickCapture,
        // onEnter
        onPointerEnter: usePointerHover ? handlePointerEnter : undefined,
        onMouseEnter: !usePointerHover ? handlePointerEnter : undefined,
        // onLeave
        onPointerLeave: usePointerHover ? handlePointerLeave : undefined,
        onMouseLeave: !usePointerHover ? handlePointerLeave : undefined,
        // handlePointerDown
        onTouchStartCapture: isTouchEnabled && useCapture ? handlePointerDown : undefined,
        onTouchStart: isTouchEnabled && !useCapture ? handlePointerDown : undefined,
        onMouseDownCapture: !isTouchEnabled && useCapture ? handlePointerDown : undefined,
        onMouseDown: !isTouchEnabled && !useCapture ? handlePointerDown : undefined
    }));
};
function initGesture(startX, startY) {
    return {
        startX: startX,
        startY: startY,
        startT: new Date(),
        duration: 0,
        isPressed: true,
        isY: false,
        isX: false,
        isSlideX: false,
        isSlideY: false,
        isSlide: false,
        clientX: 0,
        clientY: 0,
        shiftX: 0,
        shiftY: 0,
        shiftXAbs: 0,
        shiftYAbs: 0
    };
}
function dispatchUserHandlers(event, gesture, param, stopPropagation) {
    var _param = Touch_sliced_to_array(param, 3), handler = _param[0], handlerX = _param[1], handlerY = _param[2], shouldCallDirectionHandlerOnlyIsSlide = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : true;
    if (stopPropagation) {
        event.stopPropagation();
    }
    var data = Touch_object_spread_props(Touch_object_spread({}, gesture), {
        originalEvent: event,
        duration: Date.now() - gesture.startT.getTime()
    });
    if (handler) {
        handler(data);
    }
    if (handlerX) {
        if (shouldCallDirectionHandlerOnlyIsSlide) {
            if (gesture.isSlideX) {
                handlerX(data);
            }
        } else {
            handlerX(data);
        }
    }
    if (handlerY) {
        if (shouldCallDirectionHandlerOnlyIsSlide) {
            if (gesture.isSlideY) {
                handlerY(data);
            }
        } else {
            handlerY(data);
        }
    }
}

;// CONCATENATED MODULE: ./src/components/View/useLayoutEffectCall.tsx
function useLayoutEffectCall_check_private_redeclaration(obj, privateCollection) {
    if (privateCollection.has(obj)) {
        throw new TypeError("Cannot initialize the same private elements twice on an object");
    }
}
function useLayoutEffectCall_class_apply_descriptor_get(receiver, descriptor) {
    if (descriptor.get) {
        return descriptor.get.call(receiver);
    }
    return descriptor.value;
}
function useLayoutEffectCall_class_apply_descriptor_set(receiver, descriptor, value) {
    if (descriptor.set) {
        descriptor.set.call(receiver, value);
    } else {
        if (!descriptor.writable) {
            throw new TypeError("attempted to set read only private field");
        }
        descriptor.value = value;
    }
}
function useLayoutEffectCall_class_call_check(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function useLayoutEffectCall_class_extract_field_descriptor(receiver, privateMap, action) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to " + action + " private field on non-instance");
    }
    return privateMap.get(receiver);
}
function useLayoutEffectCall_class_private_field_get(receiver, privateMap) {
    var descriptor = useLayoutEffectCall_class_extract_field_descriptor(receiver, privateMap, "get");
    return useLayoutEffectCall_class_apply_descriptor_get(receiver, descriptor);
}
function useLayoutEffectCall_class_private_field_init(obj, privateMap, value) {
    useLayoutEffectCall_check_private_redeclaration(obj, privateMap);
    privateMap.set(obj, value);
}
function useLayoutEffectCall_class_private_field_set(receiver, privateMap, value) {
    var descriptor = useLayoutEffectCall_class_extract_field_descriptor(receiver, privateMap, "set");
    useLayoutEffectCall_class_apply_descriptor_set(receiver, descriptor, value);
    return value;
}
function useLayoutEffectCall_defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function useLayoutEffectCall_create_class(Constructor, protoProps, staticProps) {
    if (protoProps) useLayoutEffectCall_defineProperties(Constructor.prototype, protoProps);
    if (staticProps) useLayoutEffectCall_defineProperties(Constructor, staticProps);
    return Constructor;
}
function useLayoutEffectCall_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}


var _fns = /*#__PURE__*/ new WeakMap();
var LayoutEffectCall = /*#__PURE__*/ (/* unused pure expression or super */ null && (function() {
    "use strict";
    function LayoutEffectCall() {
        var _this = this;
        useLayoutEffectCall_class_call_check(this, LayoutEffectCall);
        useLayoutEffectCall_class_private_field_init(this, _fns, {
            writable: true,
            value: []
        });
        /**
   * Вызовет функцию после изменения DOM, но до того как пользователь увидит
   * изменения
   */ useLayoutEffectCall_define_property(this, "add", function(fn) {
            useLayoutEffectCall_class_private_field_get(_this, _fns).push(fn);
        });
    }
    useLayoutEffectCall_create_class(LayoutEffectCall, [
        {
            /**
   * Выполняет переданные функции
   */ key: "run",
            value: function run() {
                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;
                try {
                    for(var _iterator = useLayoutEffectCall_class_private_field_get(this, _fns)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){
                        var fn = _step.value;
                        fn();
                    }
                } catch (err) {
                    _didIteratorError = true;
                    _iteratorError = err;
                } finally{
                    try {
                        if (!_iteratorNormalCompletion && _iterator.return != null) {
                            _iterator.return();
                        }
                    } finally{
                        if (_didIteratorError) {
                            throw _iteratorError;
                        }
                    }
                }
                useLayoutEffectCall_class_private_field_set(this, _fns, []);
            }
        }
    ]);
    return LayoutEffectCall;
}()));
/**
 * Возвращает функцию которая вызывает callback после изменения DOM, но до того
 * как пользователь увидит изменения
 */ function useLayoutEffectCall_useLayoutEffectCall() {
    var ref = React.useRef(null);
    if (!ref.current) {
        ref.current = new LayoutEffectCall();
    }
    useIsomorphicLayoutEffect(function() {
        ref.current.run();
    });
    return ref.current.add;
}

;// CONCATENATED MODULE: ./src/lib/floating/functions.ts
function functions_checkIsNotAutoPlacement(placement) {
    return !placement.startsWith('auto');
}
function functions_getAutoPlacementAlign(placement) {
    var align = placement.replace(/auto-|auto/, '');
    return align === 'start' || align === 'end' ? align : null;
}
/**
 * Note: не используем `translate3d`, чтобы в лишний раз не выносить в отдельный слой и не занимать память в GPU.
 *
 * см. https://floating-ui.com/docs/react#positioning
 */ function functions_convertFloatingDataToReactCSSProperties(strategy, x, y) {
    var initialWidth = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 'max-content', middlewareData = arguments.length > 4 ? arguments[4] : void 0;
    var styles = {
        position: strategy,
        top: y,
        right: 'auto',
        bottom: 'auto',
        left: x
    };
    if (initialWidth !== null) {
        styles.width = initialWidth;
    }
    if (middlewareData) {
        var hide = middlewareData.hide;
        if (hide && hide.referenceHidden) {
            styles['visibility'] = 'hidden';
        }
    }
    return styles;
}
var functions_getArrowCoordsByMiddlewareData = function(middlewareData) {
    var coords = {
        x: 0,
        y: 0
    };
    if (middlewareData.arrow) {
        var _middlewareData_arrow = middlewareData.arrow, _middlewareData_arrow_x = _middlewareData_arrow.x, x = _middlewareData_arrow_x === void 0 ? 0 : _middlewareData_arrow_x, _middlewareData_arrow_y = _middlewareData_arrow.y, y = _middlewareData_arrow_y === void 0 ? 0 : _middlewareData_arrow_y;
        coords.x = x;
        coords.y = y;
    }
    return coords;
};

;// CONCATENATED MODULE: ../../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs
function floating_ui_utils_dom_getNodeName(node) {
  if (floating_ui_utils_dom_isNode(node)) {
    return (node.nodeName || '').toLowerCase();
  }
  // Mocked nodes in testing environments may not be instances of Node. By
  // returning `#document` an infinite loop won't occur.
  // https://github.com/floating-ui/floating-ui/issues/2317
  return '#document';
}
function floating_ui_utils_dom_getWindow(node) {
  var _node$ownerDocument;
  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function floating_ui_utils_dom_getDocumentElement(node) {
  var _ref;
  return (_ref = (floating_ui_utils_dom_isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
}
function floating_ui_utils_dom_isNode(value) {
  return value instanceof Node || value instanceof floating_ui_utils_dom_getWindow(value).Node;
}
function floating_ui_utils_dom_isElement(value) {
  return value instanceof Element || value instanceof floating_ui_utils_dom_getWindow(value).Element;
}
function floating_ui_utils_dom_isHTMLElement(value) {
  return value instanceof HTMLElement || value instanceof floating_ui_utils_dom_getWindow(value).HTMLElement;
}
function floating_ui_utils_dom_isShadowRoot(value) {
  // Browsers without `ShadowRoot` support.
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }
  return value instanceof ShadowRoot || value instanceof floating_ui_utils_dom_getWindow(value).ShadowRoot;
}
function floating_ui_utils_dom_isOverflowElement(element) {
  const {
    overflow,
    overflowX,
    overflowY,
    display
  } = floating_ui_utils_dom_getComputedStyle(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);
}
function floating_ui_utils_dom_isTableElement(element) {
  return ['table', 'td', 'th'].includes(floating_ui_utils_dom_getNodeName(element));
}
function floating_ui_utils_dom_isContainingBlock(element) {
  const webkit = floating_ui_utils_dom_isWebKit();
  const css = floating_ui_utils_dom_getComputedStyle(element);

  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block
  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));
}
function floating_ui_utils_dom_getContainingBlock(element) {
  let currentNode = floating_ui_utils_dom_getParentNode(element);
  while (floating_ui_utils_dom_isHTMLElement(currentNode) && !floating_ui_utils_dom_isLastTraversableNode(currentNode)) {
    if (floating_ui_utils_dom_isContainingBlock(currentNode)) {
      return currentNode;
    }
    currentNode = floating_ui_utils_dom_getParentNode(currentNode);
  }
  return null;
}
function floating_ui_utils_dom_isWebKit() {
  if (typeof CSS === 'undefined' || !CSS.supports) return false;
  return CSS.supports('-webkit-backdrop-filter', 'none');
}
function floating_ui_utils_dom_isLastTraversableNode(node) {
  return ['html', 'body', '#document'].includes(floating_ui_utils_dom_getNodeName(node));
}
function floating_ui_utils_dom_getComputedStyle(element) {
  return floating_ui_utils_dom_getWindow(element).getComputedStyle(element);
}
function floating_ui_utils_dom_getNodeScroll(element) {
  if (floating_ui_utils_dom_isElement(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.pageXOffset,
    scrollTop: element.pageYOffset
  };
}
function floating_ui_utils_dom_getParentNode(node) {
  if (floating_ui_utils_dom_getNodeName(node) === 'html') {
    return node;
  }
  const result =
  // Step into the shadow DOM of the parent of a slotted node.
  node.assignedSlot ||
  // DOM Element detected.
  node.parentNode ||
  // ShadowRoot detected.
  floating_ui_utils_dom_isShadowRoot(node) && node.host ||
  // Fallback.
  floating_ui_utils_dom_getDocumentElement(node);
  return floating_ui_utils_dom_isShadowRoot(result) ? result.host : result;
}
function floating_ui_utils_dom_getNearestOverflowAncestor(node) {
  const parentNode = floating_ui_utils_dom_getParentNode(node);
  if (floating_ui_utils_dom_isLastTraversableNode(parentNode)) {
    return node.ownerDocument ? node.ownerDocument.body : node.body;
  }
  if (floating_ui_utils_dom_isHTMLElement(parentNode) && floating_ui_utils_dom_isOverflowElement(parentNode)) {
    return parentNode;
  }
  return floating_ui_utils_dom_getNearestOverflowAncestor(parentNode);
}
function floating_ui_utils_dom_getOverflowAncestors(node, list, traverseIframes) {
  var _node$ownerDocument2;
  if (list === void 0) {
    list = [];
  }
  if (traverseIframes === void 0) {
    traverseIframes = true;
  }
  const scrollableAncestor = floating_ui_utils_dom_getNearestOverflowAncestor(node);
  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
  const win = floating_ui_utils_dom_getWindow(scrollableAncestor);
  if (isBody) {
    return list.concat(win, win.visualViewport || [], floating_ui_utils_dom_isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? floating_ui_utils_dom_getOverflowAncestors(win.frameElement) : []);
  }
  return list.concat(scrollableAncestor, floating_ui_utils_dom_getOverflowAncestors(scrollableAncestor, [], traverseIframes));
}



;// CONCATENATED MODULE: ./src/lib/floating/adapters.ts
function adapters_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function adapters_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            adapters_define_property(target, key, source[key]);
        });
    }
    return target;
}
function adapters_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function adapters_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        adapters_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function adapters_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = adapters_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function adapters_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var defaultOptions = {
    ancestorScroll: true,
    ancestorResize: true,
    // По умолчанию отключаем, т.к. навешивать `CustomResizeObserver` может быть дорого.
    // В `autoUpdateLib` по умолчанию опция включена. Там используется ResizeObserver, но и он не менее дорогостоящий.
    // https://github.com/floating-ui/floating-ui/blob/0a34fe9cc2c7483976785a71bd0777cd7c3f2a6a/packages/dom/src/autoUpdate.ts#L6-L33
    elementResize: false,
    animationFrame: false
};
function adapters_autoUpdateFloatingElement(reference, floating, update) {
    var options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : defaultOptions;
    var _options_elementResize = options.elementResize, elementResize = _options_elementResize === void 0 ? false : _options_elementResize, restOptions = adapters_object_without_properties(options, [
        "elementResize"
    ]);
    // eslint-disable-next-line no-restricted-globals, compat/compat
    var canUseResizeObserver = window.ResizeObserver !== undefined;
    var autoUpdateLibDisposer = autoUpdateLib(reference, floating, update, adapters_object_spread_props(adapters_object_spread({}, restOptions), {
        elementResize: elementResize && canUseResizeObserver
    }));
    // В случае если `ResizeObserver` будет полифилиться или он будет покрываться нашим `browserlist`, то надо удалить
    // код с `CustomResizeObserver`.
    var observer = null;
    if (elementResize && !canUseResizeObserver) {
        observer = new CustomResizeObserver(update);
        if (isHTMLElement(reference)) {
            observer.observe(reference);
        }
        observer.observe(floating);
        observer.appendToTheDOM();
    }
    return function() {
        if (observer) {
            observer.disconnect();
            observer = null;
        }
        autoUpdateLibDisposer();
    };
}

;// CONCATENATED MODULE: ./src/lib/floating/useFloatingMiddlewaresBootstrap/index.ts
function useFloatingMiddlewaresBootstrap_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useFloatingMiddlewaresBootstrap_array_without_holes(arr) {
    if (Array.isArray(arr)) return useFloatingMiddlewaresBootstrap_array_like_to_array(arr);
}
function useFloatingMiddlewaresBootstrap_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function useFloatingMiddlewaresBootstrap_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useFloatingMiddlewaresBootstrap_to_consumable_array(arr) {
    return useFloatingMiddlewaresBootstrap_array_without_holes(arr) || useFloatingMiddlewaresBootstrap_iterable_to_array(arr) || useFloatingMiddlewaresBootstrap_unsupported_iterable_to_array(arr) || useFloatingMiddlewaresBootstrap_non_iterable_spread();
}
function useFloatingMiddlewaresBootstrap_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useFloatingMiddlewaresBootstrap_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useFloatingMiddlewaresBootstrap_array_like_to_array(o, minLen);
}



var useFloatingMiddlewaresBootstrap_useFloatingMiddlewaresBootstrap = function(param) {
    var _param_placement = param.placement, placement = _param_placement === void 0 ? 'bottom-start' : _param_placement, _param_arrowRef = param.arrowRef, arrowRef = _param_arrowRef === void 0 ? null : _param_arrowRef, arrow = param.arrow, arrowHeight = param.arrowHeight, arrowPadding = param.arrowPadding, sameWidth = param.sameWidth, _param_offsetByMainAxis = param.offsetByMainAxis, offsetByMainAxis = _param_offsetByMainAxis === void 0 ? 0 : _param_offsetByMainAxis, _param_offsetByCrossAxis = param.offsetByCrossAxis, offsetByCrossAxis = _param_offsetByCrossAxis === void 0 ? 0 : _param_offsetByCrossAxis, customMiddlewares = param.customMiddlewares, hideWhenReferenceHidden = param.hideWhenReferenceHidden, _param_disableFlipMiddleware = param.disableFlipMiddleware, disableFlipMiddleware = _param_disableFlipMiddleware === void 0 ? false : _param_disableFlipMiddleware;
    return React.useMemo(function() {
        var isAutoPlacement = !checkIsNotAutoPlacement(placement);
        var middlewares = [
            offsetMiddleware({
                crossAxis: offsetByCrossAxis,
                mainAxis: arrow && arrowHeight ? offsetByMainAxis + arrowHeight : offsetByMainAxis
            })
        ];
        // см. https://floating-ui.com/docs/flip#conflict-with-autoplacement
        if (isAutoPlacement) {
            middlewares.push(autoPlacementMiddleware({
                alignment: getAutoPlacementAlign(placement)
            }));
        } else if (!disableFlipMiddleware) {
            middlewares.push(flipMiddleware({
                fallbackAxisSideDirection: 'start'
            }));
        }
        middlewares.push(shiftMiddleware());
        if (sameWidth) {
            middlewares.push(sizeMiddleware({
                apply: function apply(param) {
                    var rects = param.rects, elements = param.elements;
                    Object.assign(elements.floating.style, {
                        width: "".concat(rects.reference.width, "px")
                    });
                }
            }));
        }
        if (customMiddlewares) {
            var _middlewares;
            (_middlewares = middlewares).push.apply(_middlewares, useFloatingMiddlewaresBootstrap_to_consumable_array(customMiddlewares));
        }
        // см. https://floating-ui.com/docs/arrow#order
        if (arrow) {
            middlewares.push(arrowMiddleware({
                element: arrowRef,
                padding: arrowPadding
            }));
        }
        if (hideWhenReferenceHidden) {
            middlewares.push(hideMiddleware());
        }
        return {
            middlewares: middlewares,
            strictPlacement: isAutoPlacement ? undefined : placement
        };
    }, [
        offsetByCrossAxis,
        arrowRef,
        arrow,
        arrowHeight,
        arrowPadding,
        offsetByMainAxis,
        sameWidth,
        customMiddlewares,
        placement,
        hideWhenReferenceHidden,
        disableFlipMiddleware
    ]);
};

;// CONCATENATED MODULE: ./src/hooks/useEnsuredControl.ts
function useEnsuredControl_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useEnsuredControl_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useEnsuredControl_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useEnsuredControl_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useEnsuredControl_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = useEnsuredControl_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function useEnsuredControl_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function useEnsuredControl_sliced_to_array(arr, i) {
    return useEnsuredControl_array_with_holes(arr) || useEnsuredControl_iterable_to_array_limit(arr, i) || useEnsuredControl_unsupported_iterable_to_array(arr, i) || useEnsuredControl_non_iterable_rest();
}
function useEnsuredControl_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useEnsuredControl_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useEnsuredControl_array_like_to_array(o, minLen);
}




function useEnsuredControl_useEnsuredControl(_param) {
    var onChangeProp = _param.onChange, disabled = _param.disabled, props = useEnsuredControl_object_without_properties(_param, [
        "onChange",
        "disabled"
    ]);
    var _useCustomEnsuredControl = useEnsuredControl_sliced_to_array(useEnsuredControl_useCustomEnsuredControl(props), 2), value = _useCustomEnsuredControl[0], onChangeValue = _useCustomEnsuredControl[1];
    var onChange = React.useCallback(function(e) {
        if (disabled) {
            return;
        }
        onChangeValue(e.target.value);
        onChangeProp && onChangeProp(e);
    }, [
        onChangeValue,
        onChangeProp,
        disabled
    ]);
    return [
        value,
        onChange
    ];
}
var useEnsuredControl_warn = warnOnce('useCustomEnsuredControl');
function useEnsuredControl_useCustomEnsuredControl(param) {
    var value = param.value, defaultValue = param.defaultValue, disabled = param.disabled, onChangeProp = param.onChange;
    var isControlled = value !== undefined;
    var _React_useState = useEnsuredControl_sliced_to_array(react.useState(defaultValue), 2), localValue = _React_useState[0], setLocalValue = _React_useState[1];
    var preservedControlledValueRef = react.useRef();
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function() {
        preservedControlledValueRef.current = value;
    });
    /*
   * Для ситуации, когда nextValue это пользовательская функция,
   * и в качестве аргумента мы должны передать prevValue.
   * Обычно в качестве prevValue используется preservedControlledValueRef, но оно может быть undefined, если
   * некотролируемое value вдруг стало контролируемым
   * (value = undefined ---> value = true)
   * Если в момент вызова onChange preservedControlledValueRef ещё не был
   * обновлён в useEffect, то мы не можем использовать preservedControlledValueRef как prevValue
   * В качестве запасного варианта мы храним текущее значение value в currentFallbackValueRef, чтобы
   * использовать его вместо preservedControlledValueRef.
   */ var currentFallbackValueRef = react.useRef(value);
    currentFallbackValueRef.current = value;
    var onChange = react.useCallback(function(nextValue) {
        if (disabled) {
            return;
        }
        if (isFunction(nextValue)) {
            if (!isControlled) {
                setLocalValue(function(prevValue) {
                    var resolvedValue = nextValue(prevValue);
                    if (onChangeProp) {
                        onChangeProp(resolvedValue);
                    }
                    return resolvedValue;
                });
            } else if (onChangeProp) {
                if (false) {}
                var prevValue = preservedControlledValueRef.current === undefined ? currentFallbackValueRef.current : preservedControlledValueRef.current;
                // В теории prevValue не может быть undefined,
                // но лучше не вызывать nextValue с таким значением
                if (prevValue !== undefined) {
                    var resolvedValue = nextValue(prevValue);
                    onChangeProp(resolvedValue);
                }
            }
        } else {
            if (onChangeProp) {
                onChangeProp(nextValue);
            }
            if (!isControlled) {
                setLocalValue(nextValue);
            }
        }
    }, [
        disabled,
        isControlled,
        onChangeProp
    ]);
    return [
        isControlled ? value : localValue,
        onChange
    ];
}

;// CONCATENATED MODULE: ./src/hooks/useGlobalOnClickOutside.ts
function useGlobalOnClickOutside_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useGlobalOnClickOutside_array_without_holes(arr) {
    if (Array.isArray(arr)) return useGlobalOnClickOutside_array_like_to_array(arr);
}
function useGlobalOnClickOutside_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function useGlobalOnClickOutside_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useGlobalOnClickOutside_to_consumable_array(arr) {
    return useGlobalOnClickOutside_array_without_holes(arr) || useGlobalOnClickOutside_iterable_to_array(arr) || useGlobalOnClickOutside_unsupported_iterable_to_array(arr) || useGlobalOnClickOutside_non_iterable_spread();
}
function useGlobalOnClickOutside_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useGlobalOnClickOutside_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useGlobalOnClickOutside_array_like_to_array(o, minLen);
}


/**
 * Завязывается на document.
 *
 * @private
 */ var useGlobalOnClickOutside_useGlobalOnClickOutside = function(callback) {
    for(var _len = arguments.length, refs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
        refs[_key - 1] = arguments[_key];
    }
    var document = useDOM().document;
    useIsomorphicLayoutEffect(function() {
        var someRefNotNull = refs.some(function(ref) {
            return ref && ref.current !== null;
        });
        if (!document || !someRefNotNull) {
            return;
        }
        var handleClick = function(event) {
            var targetEl = event.target;
            var someRefHasTargetEl = isElement(targetEl) && refs.some(function(ref) {
                return ref && ref.current && ref.current.contains(targetEl);
            });
            if (!someRefHasTargetEl) {
                callback(event);
            }
        };
        document.addEventListener('click', handleClick, {
            passive: true,
            capture: true
        });
        return function() {
            document.removeEventListener('click', handleClick, true);
        };
    }, [
        document,
        callback
    ].concat(useGlobalOnClickOutside_to_consumable_array(refs)));
};

;// CONCATENATED MODULE: ./src/lib/floating/useFloatingWithInteractions/constants.ts
var constants_DEFAULT_TRIGGER = 'click';

;// CONCATENATED MODULE: ./src/lib/floating/useFloatingWithInteractions/useResolveTriggerType.ts
var useResolveTriggerType_useResolveTriggerType = function(triggerProp) {
    return (typeof triggerProp === 'string' ? [
        triggerProp
    ] : triggerProp).reduce(function(result, trigger) {
        switch(trigger){
            case 'click':
                result.triggerOnClick = true;
                return result;
            case 'hover':
                result.triggerOnHover = true;
                return result;
            case 'focus':
                result.triggerOnFocus = true;
                return result;
            case 'manual':
                return result;
        }
    }, {
        triggerOnFocus: false,
        triggerOnClick: false,
        triggerOnHover: false
    });
};

;// CONCATENATED MODULE: ./src/lib/floating/useFloatingWithInteractions/useFloatingWithInteractions.ts
function useFloatingWithInteractions_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useFloatingWithInteractions_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useFloatingWithInteractions_array_without_holes(arr) {
    if (Array.isArray(arr)) return useFloatingWithInteractions_array_like_to_array(arr);
}
function useFloatingWithInteractions_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function useFloatingWithInteractions_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useFloatingWithInteractions_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useFloatingWithInteractions_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useFloatingWithInteractions_sliced_to_array(arr, i) {
    return useFloatingWithInteractions_array_with_holes(arr) || useFloatingWithInteractions_iterable_to_array_limit(arr, i) || useFloatingWithInteractions_unsupported_iterable_to_array(arr, i) || useFloatingWithInteractions_non_iterable_rest();
}
function useFloatingWithInteractions_to_consumable_array(arr) {
    return useFloatingWithInteractions_array_without_holes(arr) || useFloatingWithInteractions_iterable_to_array(arr) || useFloatingWithInteractions_unsupported_iterable_to_array(arr) || useFloatingWithInteractions_non_iterable_spread();
}
function useFloatingWithInteractions_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useFloatingWithInteractions_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useFloatingWithInteractions_array_like_to_array(o, minLen);
}












var whileElementsMounted = function() {
    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
        args[_key] = arguments[_key];
    }
    return /* istanbul ignore next: не знаю как проверить */ autoUpdateFloatingElement.apply(void 0, useFloatingWithInteractions_to_consumable_array(args).concat([
        {
            elementResize: true
        }
    ]));
};
/**
 * @private
 */ var useFloatingWithInteractions_useFloatingWithInteractions = function(param) {
    var _param_trigger = param.trigger, trigger = _param_trigger === void 0 ? DEFAULT_TRIGGER : _param_trigger, tmp = param.// UseFloating
    placement, placementProp = tmp === void 0 ? 'bottom' : tmp, middlewares = param.middlewares, _param_hoverDelay = param.hoverDelay, hoverDelay = _param_hoverDelay === void 0 ? 0 : _param_hoverDelay, _param_closeAfterClick = param.closeAfterClick, closeAfterClick = _param_closeAfterClick === void 0 ? false : _param_closeAfterClick, _param_disabled = param.// disables
    disabled, disabled = _param_disabled === void 0 ? false : _param_disabled, _param_disableInteractive = param.disableInteractive, disableInteractive = _param_disableInteractive === void 0 ? false : _param_disableInteractive, _param_disableCloseOnClickOutside = param.disableCloseOnClickOutside, disableCloseOnClickOutside = _param_disableCloseOnClickOutside === void 0 ? false : _param_disableCloseOnClickOutside, _param_disableCloseOnEscKey = param.disableCloseOnEscKey, disableCloseOnEscKey = _param_disableCloseOnEscKey === void 0 ? false : _param_disableCloseOnEscKey, _param_defaultShown = param.// uncontrolled
    defaultShown, defaultShown = _param_defaultShown === void 0 ? false : _param_defaultShown, // controlled
    shownProp = param.shown, onShownChangeProp = param.onShownChange, onShownChangedProp = param.onShownChanged;
    var memoizedValue = React.useMemo(function() {
        return shownProp !== undefined ? {
            shown: shownProp
        } : undefined;
    }, [
        shownProp
    ]);
    var _useCustomEnsuredControl = useFloatingWithInteractions_sliced_to_array(useCustomEnsuredControl({
        value: memoizedValue,
        disabled: disabled,
        defaultValue: {
            shown: defaultShown
        },
        onChange: useStableCallback(function(param) {
            var shown = param.shown, reason = param.reason;
            if (onShownChangeProp) {
                onShownChangeProp(shown, reason);
            }
        })
    }), 2), shownLocalState = _useCustomEnsuredControl[0], setShownLocalState = _useCustomEnsuredControl[1];
    var onShownChanged = useStableCallback(onShownChangedProp ? onShownChangedProp : noop);
    var _React_useState = useFloatingWithInteractions_sliced_to_array(React.useState(function() {
        return shownLocalState.shown;
    }), 2), shownFinalState = _React_useState[0], setShownFinalState = _React_useState[1];
    var _React_useState1 = useFloatingWithInteractions_sliced_to_array(React.useState(false), 2), willBeHide = _React_useState1[0], setWillBeHide = _React_useState1[1];
    var hasCSSAnimation = React.useRef(false);
    var blockMouseEnterRef = React.useRef(false);
    var blockFocusRef = React.useRef(false);
    var blurTimeoutRef = React.useRef();
    var handleCloseOnReferenceClickOutsideDisabled = disabled || disableCloseOnClickOutside || willBeHide || !shownLocalState.shown;
    var handleCloseOnFloatingClickOutsideDisabled = disableInteractive || handleCloseOnReferenceClickOutsideDisabled;
    var _useResolveTriggerType = useResolveTriggerType(trigger), triggerOnFocus = _useResolveTriggerType.triggerOnFocus, triggerOnClick = _useResolveTriggerType.triggerOnClick, triggerOnHover = _useResolveTriggerType.triggerOnHover;
    // Библиотека `floating-ui`
    var _useFloating = useFloating({
        strategy: 'fixed',
        placement: placementProp,
        middleware: middlewares,
        whileElementsMounted: whileElementsMounted
    }), placement = _useFloating.placement, x = _useFloating.x, y = _useFloating.y, strategy = _useFloating.strategy, refs = _useFloating.refs, middlewareData = _useFloating.middlewareData;
    var commitShownLocalState = React.useCallback(function(nextShown, reason) {
        setShownLocalState(function(prevState) {
            if (prevState.shown !== nextShown || prevState.reason !== reason) {
                return {
                    shown: nextShown,
                    reason: reason
                };
            }
            /* istanbul ignore next: страховка, если вдруг на момент вызова обновления состояния, оно уже будет актуальным */ return prevState;
        });
    }, [
        setShownLocalState
    ]);
    var _ref = useFloatingWithInteractions_sliced_to_array(typeof hoverDelay === 'number' ? [
        hoverDelay,
        hoverDelay
    ] : hoverDelay, 2), mouseEnterDelay = _ref[0], mouseLeaveDelay = _ref[1];
    var showWithDelay = React.useMemo(function() {
        return debounce(function() {
            return commitShownLocalState(true, 'hover');
        }, mouseEnterDelay);
    }, [
        mouseEnterDelay,
        commitShownLocalState
    ]);
    var hideWithDelay = React.useMemo(function() {
        return debounce(function() {
            return commitShownLocalState(false, 'hover');
        }, mouseLeaveDelay);
    }, [
        mouseLeaveDelay,
        commitShownLocalState
    ]);
    var handleFocusOnReference = useStableCallback(function() {
        // Повторный вызов события фокуса - следствие клика на reference-элемент
        if (shownLocalState.shown) {
            if (!closeAfterClick && shownLocalState.reason === 'hover') {
                return;
            }
            commitShownLocalState(false, 'focus');
            return;
        }
        if (blockFocusRef.current) {
            /* istanbul ignore next: в Jest не воспроизводится баг на вебе (cм. onRestoreFocus) */ blockFocusRef.current = false;
            return;
        }
        commitShownLocalState(true, 'focus');
    });
    var handleBlurOnReference = useStableCallback(function(event) {
        blockFocusRef.current = false;
        blockMouseEnterRef.current = false;
        if (!shownLocalState.shown) {
            clearTimeout(blurTimeoutRef.current);
            return;
        }
        var relatedTarget = event.relatedTarget;
        blurTimeoutRef.current = setTimeout(function waitWindowBlurFire() {
            var reference = refs.reference.current;
            // Если пользователь покинул текущее окно в открытом состоянии, то
            // не закрываем всплывающий элемент.
            /* istanbul ignore if: не умеем симулировать уход из текущего окна */ if (!relatedTarget && getActiveElementByAnotherElement(reference) === reference) {
                /* istanbul ignore next */ return;
            }
            // Если пользователь нажал на всплывающий элемент, то не закрываем всплывающий элемент.
            // Note: для этого элемент должен быть фокусируемый (например, за счёт `tabindex="-1"`).
            if (contains(refs.floating.current, relatedTarget) || contains(reference, relatedTarget)) {
                return;
            }
            commitShownLocalState(false, 'focus');
        });
    });
    var handleClickOnReference = useStableCallback(function() {
        // Предыдущий триггер (фокус) уже вызвал открытие/закрытие всплывающего окна, игнорируем вызов
        if (shownLocalState.reason === 'focus') {
            commitShownLocalState(shownLocalState.shown, 'click');
            return;
        }
        commitShownLocalState(!shownLocalState.shown, 'click');
    });
    var handleClickOnReferenceForOnlyClose = useStableCallback(function() {
        blockMouseEnterRef.current = true;
        commitShownLocalState(false, 'click');
    });
    var handleMouseEnterOnBoth = useStableCallback(function(event) {
        if (willBeHide && event.currentTarget === refs.floating.current) {
            return;
        }
        showWithDelay.cancel();
        hideWithDelay.cancel();
        if (!blockMouseEnterRef.current && !shownLocalState.shown) {
            showWithDelay();
        }
    });
    var handleMouseLeaveOnBothForHoverAndFocusStates = useStableCallback(function(event) {
        if (willBeHide && event.currentTarget === refs.floating.current) {
            return;
        }
        blockFocusRef.current = false;
        blockMouseEnterRef.current = false;
        if (triggerOnHover) {
            showWithDelay.cancel();
            hideWithDelay.cancel();
            hideWithDelay();
        }
    });
    var handleFloatingAnimationStart = function() {
        hasCSSAnimation.current = true;
    };
    var handleFloatingAnimationEnd = function() {
        if (willBeHide) {
            setShownFinalState(false);
            setWillBeHide(false);
            onShownChanged(false, shownLocalState.reason);
        }
    };
    var handleOnClose = React.useCallback(function() {
        blockFocusRef.current = true;
        commitShownLocalState(false, 'callback');
    }, [
        commitShownLocalState
    ]);
    var handleRestoreFocus = React.useCallback(function() {
        return triggerOnFocus ? blockFocusRef.current : true;
    }, [
        triggerOnFocus
    ]);
    var handleEscapeKeyDown = React.useCallback(function() {
        blockFocusRef.current = true;
        commitShownLocalState(false, 'escape-key');
    }, [
        commitShownLocalState
    ]);
    var handleClickOutside = React.useCallback(function() {
        blockFocusRef.current = true;
        commitShownLocalState(false, 'click-outside');
    }, [
        commitShownLocalState
    ]);
    useGlobalOnClickOutside(handleClickOutside, handleCloseOnReferenceClickOutsideDisabled ? null : refs.reference, handleCloseOnFloatingClickOutsideDisabled ? null : refs.floating);
    useIsomorphicLayoutEffect(/**
     * Если пользователь покинул активное окно и:
     * 1. целевой элемент был в состоянии фокуса;
     * 2. всплывающий элемент был закрытом состоянии;
     * то фокус должен быть заблокирован, когда пользователь вернётся обратно. Иначе покажется
     * всплывающий элемент.
     */ function setGlobalBlurForTriggerOnFocus() {
        if (!triggerOnFocus || !refs.reference.current) {
            return;
        }
        var handleGlobalBlur = function() {
            /* istanbul ignore next */ var reference = refs.reference.current;
            /* istanbul ignore if: не умеем симулировать уход из текущего окна */ if (!shownLocalState.shown && isHTMLElement(reference) && reference === getActiveElementByAnotherElement(reference)) {
                /* istanbul ignore next */ blockFocusRef.current = true;
            }
        };
        var win = getWindow(refs.reference.current);
        win.addEventListener('blur', handleGlobalBlur);
        return function() {
            win.removeEventListener('blur', handleGlobalBlur);
        };
    }, [
        triggerOnFocus,
        refs.reference,
        shownLocalState
    ]);
    useIsomorphicLayoutEffect(function resolveShownStates() {
        if (willBeHide || shownLocalState.shown === shownFinalState) {
            return;
        }
        if (shownLocalState.shown) {
            setShownFinalState(true);
            onShownChanged(true, shownLocalState.reason);
        } else if (hasCSSAnimation.current && !willBeHide) {
            setWillBeHide(true);
        } else {
            setShownFinalState(false);
        }
        return function() {
            clearTimeout(blurTimeoutRef.current);
        };
    }, [
        shownLocalState,
        shownFinalState,
        willBeHide,
        onShownChanged
    ]);
    var referencePropsRef = React.useRef({});
    var floatingPropsRef = React.useRef({
        style: {}
    });
    if (shownFinalState) {
        floatingPropsRef.current.style = convertFloatingDataToReactCSSProperties(strategy, x, y, undefined, middlewareData);
        if (disableInteractive) {
            floatingPropsRef.current.style.pointerEvents = 'none';
        }
    }
    if (triggerOnFocus) {
        referencePropsRef.current.onFocus = handleFocusOnReference;
        referencePropsRef.current.onBlur = handleBlurOnReference;
    }
    if (triggerOnClick) {
        referencePropsRef.current.onClick = handleClickOnReference;
    }
    if (triggerOnHover) {
        referencePropsRef.current.onMouseOver = handleMouseEnterOnBoth;
        if (closeAfterClick && !triggerOnClick) {
            referencePropsRef.current.onClick = handleClickOnReferenceForOnlyClose;
        }
        if (!disableInteractive) {
            floatingPropsRef.current.onMouseOver = handleMouseEnterOnBoth;
        }
    }
    if (triggerOnHover || triggerOnFocus) {
        referencePropsRef.current.onMouseLeave = handleMouseLeaveOnBothForHoverAndFocusStates;
        if (!disableInteractive) {
            floatingPropsRef.current.onMouseLeave = handleMouseLeaveOnBothForHoverAndFocusStates;
        }
    }
    if (shownFinalState) {
        floatingPropsRef.current.onAnimationStart = handleFloatingAnimationStart;
        floatingPropsRef.current.onAnimationEnd = handleFloatingAnimationEnd;
    }
    return {
        placement: placement,
        shown: shownFinalState,
        willBeHide: willBeHide,
        refs: refs,
        referenceProps: referencePropsRef.current,
        floatingProps: floatingPropsRef.current,
        middlewareData: middlewareData,
        onClose: handleOnClose,
        // FocusTrap уже определяет нажатие на ESC, поэтому название события содержит конкретный код
        // кнопки вместо просто onKeyDown.
        onEscapeKeyDown: !shownFinalState || disableCloseOnEscKey ? undefined : handleEscapeKeyDown,
        // [Обход баги с FocusTrap]
        //
        // Если сфокусироваться на целевой элемент через нажатие, а потом нажать в область за пределами
        // целевого и всплывающего элемента, то появляется моргание из-за того, что FocusTrap
        // восстанавливает фокус, из-за чего всплывающий элемент снова показывается за счёт
        // `handleFocusOnReference`, а потом скрывается за счёт `handleBlurOnReference`.
        onRestoreFocus: handleRestoreFocus
    };
};

;// CONCATENATED MODULE: ./src/lib/floating/useFloatingWithInteractions/index.ts



;// CONCATENATED MODULE: ./src/lib/floating/usePlacementChangeCallback.ts


function usePlacementChangeCallback_usePlacementChangeCallback(initialPlacement, resolvedPlacement, onPlacementChange) {
    var prevPlacement = usePrevious(resolvedPlacement);
    useIsomorphicLayoutEffect(function() {
        if (!onPlacementChange) {
            return;
        }
        var isInitialPlacementChanged = prevPlacement === undefined && initialPlacement !== resolvedPlacement;
        var isResolvedPlacementChanged = prevPlacement !== undefined && prevPlacement !== resolvedPlacement;
        if (isInitialPlacementChanged || isResolvedPlacementChanged) {
            onPlacementChange(resolvedPlacement);
        }
    }, [
        prevPlacement,
        initialPlacement,
        resolvedPlacement,
        onPlacementChange
    ]);
}

;// CONCATENATED MODULE: ./src/lib/floating/index.ts






;// CONCATENATED MODULE: ./src/components/View/utils.ts

var swipeBackExcludedSelector = 'input, textarea, [data-vkui-swipe-back=false]';
function utils_swipeBackExcluded(e) {
    var _target_closest;
    var target = e.originalEvent.target;
    // eslint-disable-next-line no-restricted-properties
    return Boolean(target === null || target === void 0 ? void 0 : (_target_closest = target.closest) === null || _target_closest === void 0 ? void 0 : _target_closest.call(target, swipeBackExcludedSelector));
}
function utils_hasHorizontalScrollableElementWithScrolledToLeft(node) {
    return floating_ui_utils_dom_getOverflowAncestors(node).some(function(node) {
        return 'scrollLeft' in node ? node.scrollLeft > 0 : false;
    });
}
var SWIPE_BACK_EDGE_SIZE_THRESHOLD = 20;
var SWIPE_BACK_SHIFT_THRESHOLD = 10;
var utils_getSwipeBackPredicates = function(startX, shiftX, innerWidth) {
    var swipedToOpposite = shiftX < 0;
    var swipeBackTriggered = shiftX >= SWIPE_BACK_SHIFT_THRESHOLD;
    var viewportStartEdgeTouched = startX <= SWIPE_BACK_EDGE_SIZE_THRESHOLD;
    var viewportEndEdgeTouched = startX >= innerWidth - SWIPE_BACK_EDGE_SIZE_THRESHOLD;
    return {
        swipedToOpposite: swipedToOpposite,
        swipeBackTriggered: swipeBackTriggered,
        viewportStartEdgeTouched: viewportStartEdgeTouched,
        viewportEndEdgeTouched: viewportEndEdgeTouched
    };
};

;// CONCATENATED MODULE: ./src/components/View/View.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/View/View.tsx
function View_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function View_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function View_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function View_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function View_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function View_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            View_define_property(target, key, source[key]);
        });
    }
    return target;
}
function View_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function View_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        View_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function View_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = View_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function View_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function View_sliced_to_array(arr, i) {
    return View_array_with_holes(arr) || View_iterable_to_array_limit(arr, i) || View_unsupported_iterable_to_array(arr, i) || View_non_iterable_rest();
}
function View_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return View_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return View_array_like_to_array(o, minLen);
}

















var scrollsCache = {};
var View_warn = warnOnce('View');
/**
 * @see https://vkcom.github.io/VKUI/#/View
 */ var View = function(_param) {
    var activePanelProp = _param.activePanel, history = _param.history, nav = _param.nav, onTransition = _param.onTransition, onSwipeBack = _param.onSwipeBack, onSwipeBackStart = _param.onSwipeBackStart, onSwipeBackCancelProp = _param.onSwipeBackCancel, children = _param.children, className = _param.className, restProps = View_object_without_properties(_param, [
        "activePanel",
        "history",
        "nav",
        "onTransition",
        "onSwipeBack",
        "onSwipeBackStart",
        "onSwipeBackCancel",
        "children",
        "className"
    ]);
    var id = getNavId({
        nav: nav,
        id: restProps.id
    });
    var scrolls = React.useRef(scrollsCache[id] || {});
    var layoutEffectCall = useLayoutEffectCall();
    React.useEffect(function() {
        return function() {
            if (id) {
                scrollsCache[id] = scrolls.current;
            }
        };
    });
    var panelNodes = React.useRef({});
    var _useDOM = useDOM(), window = _useDOM.window, document = _useDOM.document;
    var scroll = useScroll();
    var configProvider = useConfigProvider();
    var splitCol = useSplitCol();
    var platform = usePlatform();
    var _React_useState = View_sliced_to_array(React.useState(false), 2), animated = _React_useState[0], setAnimated = _React_useState[1];
    var _React_useState1 = View_sliced_to_array(React.useState([
        activePanelProp
    ]), 2), visiblePanels = _React_useState1[0], setVisiblePanels = _React_useState1[1];
    var _React_useState2 = View_sliced_to_array(React.useState(activePanelProp), 2), activePanel = _React_useState2[0], setActivePanel = _React_useState2[1];
    var _React_useState3 = View_sliced_to_array(React.useState(undefined), 2), isBack = _React_useState3[0], setIsBack = _React_useState3[1];
    var _React_useState4 = View_sliced_to_array(React.useState(null), 2), prevPanel = _React_useState4[0], setPrevPanel = _React_useState4[1];
    var _React_useState5 = View_sliced_to_array(React.useState(null), 2), nextPanel = _React_useState5[0], setNextPanel = _React_useState5[1];
    var swipeBackPrevented = React.useRef(false);
    var _React_useState6 = View_sliced_to_array(React.useState(undefined), 2), swipingBack = _React_useState6[0], setSwipingBack = _React_useState6[1];
    var _React_useState7 = View_sliced_to_array(React.useState(0), 2), swipeBackStartX = _React_useState7[0], setSwipeBackStartX = _React_useState7[1];
    var _React_useState8 = View_sliced_to_array(React.useState(0), 2), swipeBackShift = _React_useState8[0], setSwipeBackShift = _React_useState8[1];
    var _React_useState9 = View_sliced_to_array(React.useState(null), 2), swipeBackNextPanel = _React_useState9[0], setSwipeBackNextPanel = _React_useState9[1];
    var _React_useState10 = View_sliced_to_array(React.useState(null), 2), swipeBackPrevPanel = _React_useState10[0], setSwipeBackPrevPanel = _React_useState10[1];
    var _React_useState11 = View_sliced_to_array(React.useState(null), 2), swipeBackResult = _React_useState11[0], setSwipeBackResult = _React_useState11[1];
    var _React_useState12 = View_sliced_to_array(React.useState(false), 2), browserSwipe = _React_useState12[0], setBrowserSwipe = _React_useState12[1];
    var prevActivePanel = usePrevious(activePanelProp);
    var prevSwipingBack = usePrevious(swipingBack);
    var prevBrowserSwipe = usePrevious(browserSwipe);
    var prevSwipeBackResult = usePrevious(swipeBackResult);
    var prevSwipeBackShift = usePrevious(swipeBackShift);
    var prevSwipeBackPrevPanel = usePrevious(swipeBackPrevPanel);
    var prevOnTransition = usePrevious(onTransition);
    var panels = React.Children.toArray(children).filter(function(panel) {
        var panelId = getNavId(panel.props, View_warn);
        return panelId !== undefined && visiblePanels.includes(panelId) || panelId === swipeBackPrevPanel || panelId === swipeBackNextPanel;
    });
    var disableAnimation = !configProvider.transitionMotionEnabled || !splitCol.animate || platform === 'vkcom';
    var iOSSwipeBackSimulationEnabled = !disableAnimation && platform === 'ios' && configProvider.isWebView && Boolean(onSwipeBack);
    var flushTransition = React.useCallback(function(prevPanel, isBackTransition) {
        if (isBackTransition) {
            scrolls.current[prevPanel] = 0;
        }
        setPrevPanel(null);
        setNextPanel(null);
        setVisiblePanels([
            activePanelProp
        ]);
        setActivePanel(activePanelProp);
        setAnimated(false);
        setIsBack(isBackTransition);
        layoutEffectCall(function() {
            scroll === null || scroll === void 0 ? void 0 : scroll.scrollTo(0, isBackTransition ? scrolls.current[activePanelProp] : 0);
            onTransition && onTransition({
                isBack: isBackTransition,
                from: prevPanel,
                to: activePanelProp
            });
        });
    }, [
        activePanelProp,
        layoutEffectCall,
        onTransition,
        scroll
    ]);
    var handleAnimatedTargetAnimationEnd = function() {
        if (prevPanel !== null) {
            flushTransition(prevPanel, Boolean(isBack));
        }
    };
    var onSwipeBackSuccess = React.useCallback(function() {
        onSwipeBack && onSwipeBack();
    }, [
        onSwipeBack
    ]);
    var onSwipeBackCancel = React.useCallback(function() {
        onSwipeBackCancelProp && onSwipeBackCancelProp();
        setSwipeBackPrevPanel(null);
        setSwipeBackNextPanel(null);
        setSwipingBack(false);
        setSwipeBackResult(null);
        setSwipeBackStartX(0);
        setSwipeBackShift(0);
    }, [
        onSwipeBackCancelProp
    ]);
    var swipingBackTransitionEndHandler = React.useCallback(function() {
        switch(swipeBackResult){
            case 'fail':
                onSwipeBackCancel();
                break;
            case 'success':
                onSwipeBackSuccess();
        }
    }, [
        onSwipeBackCancel,
        onSwipeBackSuccess,
        swipeBackResult
    ]);
    var handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext = function(event) {
        if (browserSwipe) {
            return;
        }
        var _getSwipeBackPredicates = getSwipeBackPredicates(event.startX, event.shiftX, window.innerWidth), swipeBackTriggered = _getSwipeBackPredicates.swipeBackTriggered, viewportStartEdgeTouched = _getSwipeBackPredicates.viewportStartEdgeTouched, viewportEndEdgeTouched = _getSwipeBackPredicates.viewportEndEdgeTouched;
        if ((viewportStartEdgeTouched || viewportEndEdgeTouched) && swipeBackTriggered) {
            setBrowserSwipe(true);
        }
    };
    var handleTouchMoveXForIOSSwipeBackSimulation = function(event) {
        if (swipeBackPrevented.current || swipeBackExcluded(event)) {
            return;
        }
        var _getSwipeBackPredicates = getSwipeBackPredicates(event.startX, event.shiftX, window.innerWidth), swipedToOpposite = _getSwipeBackPredicates.swipedToOpposite, swipeBackTriggered = _getSwipeBackPredicates.swipeBackTriggered, viewportStartEdgeTouched = _getSwipeBackPredicates.viewportStartEdgeTouched;
        if (animated && swipeBackTriggered) {
            return;
        }
        if (!swipingBack && history && history.length > 1) {
            if (swipedToOpposite) {
                swipeBackPrevented.current = true;
                return;
            }
            if (!swipeBackTriggered) {
                return;
            }
            if (!viewportStartEdgeTouched && hasHorizontalScrollableElementWithScrolledToLeft(event.originalEvent.target)) {
                swipeBackPrevented.current = true;
                return;
            }
            // Начался свайп назад
            if (onSwipeBackStart) {
                var payload = onSwipeBackStart(activePanel);
                if (payload === 'prevent') {
                    swipeBackPrevented.current = true;
                    return;
                }
            }
            if (activePanel !== null) {
                // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.
                blurActiveElement(document);
                scrolls.current[activePanel] = scroll === null || scroll === void 0 ? void 0 : scroll.getScroll().y;
            }
            setSwipingBack(true);
            setSwipeBackStartX(event.startX);
            setSwipeBackPrevPanel(activePanel);
            setSwipeBackNextPanel(history.slice(-2)[0]);
        }
        if (swipingBack) {
            if (event.shiftX < 0) {
                setSwipeBackShift(0);
            } else if (event.shiftX > window.innerWidth - swipeBackStartX) {
                setSwipeBackShift(window.innerWidth);
            } else {
                setSwipeBackShift(event.shiftX);
            }
        }
    };
    var handleTouchEndForIOSSwipeBackSimulation = function(event) {
        swipeBackPrevented.current = false;
        if (swipingBack) {
            var speed = swipeBackShift / event.duration * 1000;
            var _window_innerWidth;
            if (swipeBackShift === 0) {
                onSwipeBackCancel();
            } else if (swipeBackShift >= ((_window_innerWidth = window.innerWidth) !== null && _window_innerWidth !== void 0 ? _window_innerWidth : 0)) {
                onSwipeBackSuccess();
            } else if (speed > 250 || swipeBackShift >= window.innerWidth / 2) {
                setSwipeBackResult('success');
            } else {
                setSwipeBackResult('fail');
            }
        }
    };
    var calcPanelSwipeStyles = function(isPrev, isNext) {
        if (!isPrev && !isNext || swipeBackResult) {
            return {};
        }
        if (isNext) {
            return window ? {
                transform: "translate3d(".concat(-50 + swipeBackShift * 100 / window.innerWidth / 2, "%, 0, 0)")
            } : {};
        }
        if (isPrev) {
            return {
                transform: "translate3d(".concat(swipeBackShift, "px, 0, 0)")
            };
        }
        return {};
    };
    var calcPanelSwipeBackOverlayStyles = function(isNext) {
        if (!window || !isNext) {
            return {};
        }
        var opacityOnSwipeEnd = swipeBackResult === 'success' ? 0 : swipeBackResult === 'fail' ? 1 : null;
        return {
            display: 'block',
            opacity: opacityOnSwipeEnd === null ? 1 - swipeBackShift / window.innerWidth : opacityOnSwipeEnd
        };
    };
    var handleSwipeBackTargetTransitionEnd = function(event) {
        if (event.propertyName.includes('transform')) {
            swipingBackTransitionEndHandler();
        }
    };
    React.useEffect(function() {
        // Нужен переход
        if (prevActivePanel && prevActivePanel !== activePanelProp && !prevSwipingBack && !prevBrowserSwipe) {
            var firstLayerId = React.Children.toArray(children).map(function(panel) {
                return getNavId(panel.props, View_warn);
            }).find(function(id) {
                return id === prevActivePanel || id === activePanelProp;
            });
            var isBackTransition = firstLayerId === activePanelProp;
            scrolls.current[prevActivePanel] = scroll === null || scroll === void 0 ? void 0 : scroll.getScroll({
                compensateKeyboardHeight: false
            }).y;
            if (disableAnimation) {
                flushTransition(prevActivePanel, isBackTransition);
            } else {
                blurActiveElement(document);
                setVisiblePanels([
                    prevActivePanel,
                    activePanelProp
                ]);
                setPrevPanel(prevActivePanel);
                setNextPanel(activePanelProp);
                setActivePanel(null);
                setAnimated(true);
                setIsBack(isBackTransition);
            }
        }
        // Закончилась анимация свайпа назад
        if (prevActivePanel && prevActivePanel !== activePanelProp && prevSwipingBack) {
            var nextPanel = activePanelProp;
            var prevPanel = prevActivePanel;
            if (prevSwipeBackPrevPanel) {
                scrolls.current[prevSwipeBackPrevPanel] = 0;
            }
            setSwipeBackPrevPanel(null);
            setSwipeBackNextPanel(null);
            setSwipingBack(false);
            setSwipeBackResult(null);
            setSwipeBackStartX(0);
            setSwipeBackShift(0);
            setActivePanel(nextPanel);
            setVisiblePanels([
                nextPanel
            ]);
            setIsBack(true);
            layoutEffectCall(function() {
                if (nextPanel !== null) {
                    scroll === null || scroll === void 0 ? void 0 : scroll.scrollTo(0, scrolls.current[nextPanel]);
                }
                prevOnTransition && prevOnTransition({
                    isBack: true,
                    from: prevPanel,
                    to: nextPanel
                });
            });
        }
        // Началась анимация завершения свайпа назад.
        // см. `onTransitionEnd()`
        // Закончился Safari свайп
        if (prevActivePanel !== activePanelProp && browserSwipe) {
            setBrowserSwipe(false);
            setNextPanel(null);
            setPrevPanel(null);
            setAnimated(false);
            setVisiblePanels([
                activePanelProp
            ]);
            setActivePanel(activePanelProp);
        }
    }, [
        activePanelProp,
        activePanel,
        browserSwipe,
        children,
        disableAnimation,
        document,
        flushTransition,
        prevActivePanel,
        prevBrowserSwipe,
        prevOnTransition,
        prevSwipeBackPrevPanel,
        prevSwipeBackResult,
        prevSwipingBack,
        scroll,
        swipeBackNextPanel,
        swipeBackResult,
        layoutEffectCall
    ]);
    React.useEffect(function restoreScrollPositionWhenSwipeBackIsCancelled() {
        // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)
        var swipeBackCancelledInTheMiddleOfAction = prevSwipeBackResult === 'fail' && !swipeBackResult;
        var swipeBackCancelledByMovingPanelBackToInitialPoint = prevSwipingBack && !swipingBack && prevSwipeBackShift === 0;
        if ((swipeBackCancelledInTheMiddleOfAction || swipeBackCancelledByMovingPanelBackToInitialPoint) && activePanel !== null) {
            scroll === null || scroll === void 0 ? void 0 : scroll.scrollTo(0, scrolls.current[activePanel]);
        }
    }, [
        prevSwipeBackResult,
        swipeBackResult,
        prevSwipingBack,
        swipingBack,
        prevSwipeBackShift,
        activePanel,
        scroll
    ]);
    return /*#__PURE__*/ React.createElement(NavViewIdContext.Provider, {
        value: id
    }, /*#__PURE__*/ React.createElement(Touch, View_object_spread_props(View_object_spread({
        Component: "section"
    }, restProps), {
        className: classNames("vkuiView", platform === 'ios' && classNames("vkuiView--ios", 'vkuiInternalView--ios'), !disableAnimation && animated && "vkuiView--animated", !disableAnimation && swipingBack && "vkuiView--swiping-back", disableAnimation && "vkuiView--no-motion", className),
        onMoveX: iOSSwipeBackSimulationEnabled ? handleTouchMoveXForIOSSwipeBackSimulation : platform === 'ios' ? handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext : undefined,
        onEnd: iOSSwipeBackSimulationEnabled ? handleTouchEndForIOSSwipeBackSimulation : undefined
    }), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiView__panels"
    }, panels.map(function(panel) {
        var panelId = getNavId(panel.props, View_warn);
        var isPanelActive = panelId === activePanel;
        var isPanelPrev = panelId === prevPanel;
        var isPanelNext = panelId === nextPanel;
        var isAnimatedTarget = animated && (isBack ? isPanelPrev : isPanelNext);
        var isSwipeBackPrev = panelId === swipeBackPrevPanel;
        var isSwipeBackNext = panelId === swipeBackNextPanel;
        var isSwipeBackTarget = swipeBackResult && isSwipeBackPrev;
        var scrollCompensateStyle = undefined;
        if (isPanelPrev || isPanelNext && isBack || isSwipeBackPrev || isSwipeBackNext) {
            var marginTop = scrolls.current[panelId];
            if (marginTop !== undefined) {
                scrollCompensateStyle = {
                    marginTop: -1 * marginTop
                };
            }
        }
        return /*#__PURE__*/ React.createElement("div", {
            className: classNames("vkuiView__panel", isPanelActive && "vkuiView__panel--active", isPanelPrev && "vkuiView__panel--prev", isPanelNext && "vkuiView__panel--next", isSwipeBackPrev && "vkuiView__panel--swipe-back-prev", isSwipeBackNext && "vkuiView__panel--swipe-back-next", swipeBackResult === 'success' && "vkuiView__panel--swipe-back-success", swipeBackResult === 'fail' && "vkuiView__panel--swipe-back-failed"),
            onTransitionEnd: isSwipeBackTarget ? handleSwipeBackTargetTransitionEnd : undefined,
            onAnimationEnd: isAnimatedTarget ? handleAnimatedTargetAnimationEnd : undefined,
            ref: function(el) {
                return panelId !== undefined && (panelNodes.current[panelId] = el);
            },
            style: calcPanelSwipeStyles(isSwipeBackPrev, isSwipeBackNext),
            key: panelId
        }, platform === 'ios' && /*#__PURE__*/ React.createElement("div", {
            className: "vkuiView__panel-overlay",
            style: calcPanelSwipeBackOverlayStyles(isSwipeBackNext)
        }), /*#__PURE__*/ React.createElement("div", {
            className: "vkuiView__panel-in",
            style: scrollCompensateStyle
        }, /*#__PURE__*/ React.createElement(NavTransitionDirectionProvider, {
            isBack: swipingBack || isBack
        }, /*#__PURE__*/ React.createElement(NavTransitionProvider, {
            entering: panelId === nextPanel || panelId === swipeBackNextPanel
        }, panel))));
    }))));
};

;// CONCATENATED MODULE: ./src/components/Panel/Panel.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Panel/Panel.tsx
function Panel_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Panel_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Panel_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Panel_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Panel_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Panel_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Panel_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Panel_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Panel_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}









var Panel_sizeXClassNames = {
    none: "vkuiPanel--sizeX-none",
    compact: "vkuiPanel--sizeX-compact",
    regular: "vkuiPanel--sizeX-regular"
};
var Panel_stylesMode = {
    none: "vkuiPanel--mode-none",
    plain: "vkuiPanel--mode-plain",
    card: "vkuiPanel--mode-card"
};
/**
 * @see https://vkcom.github.io/VKUI/#/Panel
 */ var Panel = function(_param) {
    var _param_centered = _param.centered, centered = _param_centered === void 0 ? false : _param_centered, children = _param.children, nav = _param.nav, modeProp = _param.mode, disableBackground = _param.disableBackground, restProps = Panel_object_without_properties(_param, [
        "centered",
        "children",
        "nav",
        "mode",
        "disableBackground"
    ]);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeX = _useAdaptivity.sizeX, sizeX = _useAdaptivity_sizeX === void 0 ? 'none' : _useAdaptivity_sizeX;
    var mode = usePanelMode(modeProp, sizeX);
    return /*#__PURE__*/ React.createElement(NavPanelIdContext.Provider, {
        value: restProps.id || nav
    }, /*#__PURE__*/ React.createElement(RootComponent, Panel_object_spread_props(Panel_object_spread({}, restProps), {
        baseClassName: classNames("vkuiPanel", Panel_sizeXClassNames[sizeX], centered && 'vkuiInternalPanel--centered', disableBackground && "vkuiPanel--disableBackground", Panel_stylesMode[mode])
    }), /*#__PURE__*/ React.createElement(Touch, {
        Component: OnboardingTooltipContainer,
        className: classNames("vkuiPanel__in", 'vkuiInternalPanel__in')
    }, /*#__PURE__*/ React.createElement("div", {
        className: "vkuiPanel__in-before"
    }), centered ? /*#__PURE__*/ React.createElement("div", {
        className: "vkuiPanel__centered"
    }, children) : children, /*#__PURE__*/ React.createElement("div", {
        className: "vkuiPanel__in-after"
    }))));
};
function usePanelMode(modeProp, sizeX) {
    var layout = React.useContext(AppRootContext).layout;
    if (modeProp) {
        return modeProp;
    }
    if (layout) {
        return layout;
    }
    if (sizeX !== 'none') {
        return sizeX === 'regular' ? 'card' : 'plain';
    }
    return 'none';
}

;// CONCATENATED MODULE: ./src/components/PanelHeaderButton/PanelHeaderButton.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/PanelHeaderButton/PanelHeaderButton.tsx
function PanelHeaderButton_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function PanelHeaderButton_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            PanelHeaderButton_define_property(target, key, source[key]);
        });
    }
    return target;
}
function PanelHeaderButton_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function PanelHeaderButton_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        PanelHeaderButton_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function PanelHeaderButton_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = PanelHeaderButton_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function PanelHeaderButton_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}









var platformClassNames = {
    ios: "vkuiPanelHeaderButton--ios",
    android: "vkuiPanelHeaderButton--android",
    vkcom: "vkuiPanelHeaderButton--vkcom"
};
var ButtonTypography = function(param) {
    var primary = param.primary, children = param.children;
    var platform = usePlatform();
    if (platform === 'ios') {
        return /*#__PURE__*/ React.createElement(Title, {
            Component: "span",
            level: "3",
            weight: primary ? '1' : '3'
        }, children);
    }
    return /*#__PURE__*/ React.createElement(Text, {
        weight: platform === 'vkcom' ? undefined : '2'
    }, children);
};
var PanelHeaderButton_warn = warnOnce('PanelHeaderButton');
/**
 * @see https://vkcom.github.io/VKUI/#/PanelHeaderButton
 */ var PanelHeaderButton_PanelHeaderButton = function(_param) {
    var children = _param.children, _param_primary = _param.primary, primary = _param_primary === void 0 ? false : _param_primary, label = _param.label, className = _param.className, restProps = PanelHeaderButton_object_without_properties(_param, [
        "children",
        "primary",
        "label",
        "className"
    ]);
    var isPrimitive = isPrimitiveReactNode(children);
    var isPrimitiveLabel = isPrimitiveReactNode(label);
    var platform = usePlatform();
    var hoverMode;
    var activeMode;
    switch(platform){
        case 'ios':
            hoverMode = 'background';
            activeMode = 'opacity';
            break;
        case 'vkcom':
            hoverMode = "vkuiPanelHeaderButton--hover";
            activeMode = "vkuiPanelHeaderButton--active";
            break;
        default:
            hoverMode = 'background';
            activeMode = 'background';
    }
    if (false) { var isAccessible; }
    return /*#__PURE__*/ React.createElement(Tappable, PanelHeaderButton_object_spread_props(PanelHeaderButton_object_spread({
        Component: restProps.href ? 'a' : 'button'
    }, restProps), {
        hoverMode: hoverMode,
        activeEffectDelay: 200,
        activeMode: activeMode,
        className: classNames("vkuiPanelHeaderButton", platformClassNames.hasOwnProperty(platform) ? platformClassNames[platform] : platformClassNames.android, isPrimitive && "vkuiPanelHeaderButton--primitive", !isPrimitive && !isPrimitiveLabel && "vkuiPanelHeaderButton--notPrimitive", className)
    }), isPrimitive ? /*#__PURE__*/ React.createElement(ButtonTypography, {
        primary: primary
    }, children) : children, isPrimitiveLabel ? /*#__PURE__*/ React.createElement(ButtonTypography, {
        primary: primary,
        className: "vkuiPanelHeaderButton__label"
    }, label) : label);
};

;// CONCATENATED MODULE: ./src/components/ModalRoot/ModalRootContext.tsx
function ModalRootContext_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ModalRootContext_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ModalRootContext_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ModalRootContext_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ModalRootContext_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ModalRootContext_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}


var ModalRootContext_ModalRootContext = /*#__PURE__*/ react.createContext({
    updateModalHeight: function() {
        return undefined;
    },
    registerModal: function() {
        return undefined;
    },
    isInsideModal: false
});
/**
 * All referenced elements must be static
 */ function ModalRootContext_useModalRegistry(id, type) {
    var modalContext = React.useContext(ModalRootContext_ModalRootContext);
    var elements = React.useRef({}).current;
    useIsomorphicLayoutEffect(function() {
        if (id !== undefined) {
            modalContext.registerModal(ModalRootContext_object_spread_props(ModalRootContext_object_spread({}, elements), {
                type: type,
                id: id
            }));
            // unset refs on  unmount to prevent leak
            var reset = Object.keys(elements).reduce(function(acc, k) {
                return ModalRootContext_object_spread_props(ModalRootContext_object_spread({}, acc), ModalRootContext_define_property({}, k, null));
            }, {
                type: type,
                id: id
            });
            return function() {
                return modalContext.registerModal(reset);
            };
        }
        return undefined;
    }, []);
    var refs = React.useRef({
        modalElement: function(e) {
            return elements.modalElement = e;
        },
        innerElement: function(e) {
            return elements.innerElement = e;
        },
        headerElement: function(e) {
            return elements.headerElement = e;
        },
        contentElement: function(e) {
            return elements.contentElement = e;
        },
        bottomInset: function(e) {
            return elements.bottomInset = e;
        }
    }).current;
    return {
        refs: refs
    };
}

;// CONCATENATED MODULE: ./src/components/Separator/Separator.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Separator/Separator.tsx
function Separator_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Separator_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Separator_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Separator_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Separator_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Separator_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Separator_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Separator_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Separator_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



var modeClassNames = {
    'primary': "vkuiSeparator--mode-primary",
    'secondary': "vkuiSeparator--mode-secondary",
    'primary-alpha': "vkuiSeparator--mode-primaryAlpha"
};
/**
 * @see https://vkcom.github.io/VKUI/#/Separator
 */ var Separator_Separator = function(_param) {
    var wide = _param.wide, _param_mode = _param.mode, mode = _param_mode === void 0 ? 'primary' : _param_mode, restProps = Separator_object_without_properties(_param, [
        "wide",
        "mode"
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, Separator_object_spread_props(Separator_object_spread({}, restProps), {
        baseClassName: classNames(!wide && "vkuiSeparator--padded", modeClassNames[mode])
    }), /*#__PURE__*/ React.createElement("hr", {
        className: "vkuiSeparator__in"
    }));
};

;// CONCATENATED MODULE: ./src/components/Spacing/Spacing.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Spacing/Spacing.tsx
function Spacing_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Spacing_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Spacing_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Spacing_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Spacing_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Spacing_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Spacing_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Spacing_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Spacing_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var CUSTOM_CSS_TOKEN_FOR_USER_GAP = '--vkui_internal--Spacing_gap';
var sizesClassNames = {
    '3xs': "vkuiSpacing--3xs",
    '2xs': "vkuiSpacing--2xs",
    'xs': "vkuiSpacing--xs",
    's': "vkuiSpacing--s",
    'm': "vkuiSpacing--m",
    'l': "vkuiSpacing--l",
    'xl': "vkuiSpacing--xl",
    '2xl': "vkuiSpacing--2xl",
    '3xl': "vkuiSpacing--3xl",
    '4xl': "vkuiSpacing--4xl"
};
/**
 * @see https://vkcom.github.io/VKUI/#/Spacing
 */ var Spacing_Spacing = function(_param) {
    var _param_size = _param.size, size = _param_size === void 0 ? 'm' : _param_size, style = _param.style, restProps = Spacing_object_without_properties(_param, [
        "size",
        "style"
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, Spacing_object_spread_props(Spacing_object_spread({}, restProps), {
        style: Spacing_object_spread({}, typeof size === 'number' && Spacing_define_property({}, CUSTOM_CSS_TOKEN_FOR_USER_GAP, "".concat(size, "px")), style),
        baseClassName: classNames("vkuiSpacing", typeof size === 'string' && sizesClassNames[size])
    }));
};

;// CONCATENATED MODULE: ./src/components/PanelHeader/PanelHeader.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/PanelHeader/PanelHeader.tsx
function PanelHeader_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function PanelHeader_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            PanelHeader_define_property(target, key, source[key]);
        });
    }
    return target;
}
function PanelHeader_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function PanelHeader_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        PanelHeader_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function PanelHeader_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = PanelHeader_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function PanelHeader_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}














var PanelHeader_platformClassNames = {
    ios: "vkuiPanelHeader--ios",
    android: "vkuiPanelHeader--android",
    vkcom: clsx("vkuiPanelHeader--vkcom", 'vkuiInternalPanelHeader--vkcom')
};
var PanelHeader_sizeXClassNames = {
    none: "vkuiPanelHeader--sizeX-none",
    regular: "vkuiPanelHeader--sizeX-regular"
};
var PanelHeader_sizeYClassNames = {
    none: "vkuiPanelHeader--sizeY-none",
    compact: "vkuiPanelHeader--sizeY-compact"
};
var PanelHeaderIn = function(param) {
    var before = param.before, after = param.after, children = param.children, _param_typographyProps = param.typographyProps, typographyProps = _param_typographyProps === void 0 ? {} : _param_typographyProps;
    var _typographyProps_Component = typographyProps.Component, Component = _typographyProps_Component === void 0 ? 'span' : _typographyProps_Component, restProps = PanelHeader_object_without_properties(typographyProps, [
        "Component"
    ]);
    var _useConfigProvider = useConfigProvider(), hasCustomPanelHeaderAfter = _useConfigProvider.hasCustomPanelHeaderAfter, customPanelHeaderAfterMinWidth = _useConfigProvider.customPanelHeaderAfterMinWidth;
    var isInsideModal = React.useContext(ModalRootContext).isInsideModal;
    var platform = usePlatform();
    var afterSlotProps = !hasCustomPanelHeaderAfter || isInsideModal ? {
        children: after
    } : {
        style: {
            minWidth: customPanelHeaderAfterMinWidth
        }
    };
    var typographyNode = platform === 'vkcom' ? /*#__PURE__*/ React.createElement(Text, PanelHeader_object_spread({
        weight: "2",
        Component: Component
    }, restProps), children) : /*#__PURE__*/ React.createElement(Component, PanelHeader_object_spread({
        className: "vkuiPanelHeader__content-in"
    }, restProps), children);
    return /*#__PURE__*/ React.createElement(OnboardingTooltipContainer, {
        fixed: true,
        className: "vkuiPanelHeader__in"
    }, /*#__PURE__*/ React.createElement("div", {
        className: classNames("vkuiPanelHeader__before", 'vkuiInternalPanelHeader__before')
    }, before), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiPanelHeader__content"
    }, typographyNode), /*#__PURE__*/ React.createElement("div", PanelHeader_object_spread({
        className: classNames("vkuiPanelHeader__after", 'vkuiInternalPanelHeader__after')
    }, afterSlotProps)));
};
/**
 * @see https://vkcom.github.io/VKUI/#/PanelHeader
 */ var PanelHeader_PanelHeader = function(_param) {
    var before = _param.before, children = _param.children, after = _param.after, _param_float = _param.float, float = _param_float === void 0 ? false : _param_float, _param_transparent = _param.transparent, transparent = _param_transparent === void 0 ? false : _param_transparent, _param_delimiter = _param.delimiter, delimiter = _param_delimiter === void 0 ? 'auto' : _param_delimiter, shadow = _param.shadow, getRef = _param.getRef, getRootRef = _param.getRootRef, fixed = _param.fixed, typographyProps = _param.typographyProps, restProps = PanelHeader_object_without_properties(_param, [
        "before",
        "children",
        "after",
        "float",
        "transparent",
        "delimiter",
        "shadow",
        "getRef",
        "getRootRef",
        "fixed",
        "typographyProps"
    ]);
    var platform = usePlatform();
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeX = _useAdaptivity.sizeX, sizeX = _useAdaptivity_sizeX === void 0 ? 'none' : _useAdaptivity_sizeX, _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var _useAdaptivityConditionalRender = useAdaptivityConditionalRender(), adaptiveSizeX = _useAdaptivityConditionalRender.sizeX;
    var isVKCOM = platform === 'vkcom';
    var isFixed = fixed !== undefined ? fixed : !isVKCOM;
    var separatorVisible = delimiter === 'auto' || delimiter === 'separator';
    var staticSeparatorVisible = !float && separatorVisible;
    var staticSpacingVisible = !float && (delimiter === 'auto' || delimiter === 'spacing');
    return /*#__PURE__*/ React.createElement(RootComponent, PanelHeader_object_spread_props(PanelHeader_object_spread({}, restProps), {
        baseClassName: classNames("vkuiPanelHeader", 'vkuiInternalPanelHeader', PanelHeader_platformClassNames.hasOwnProperty(platform) ? PanelHeader_platformClassNames[platform] : PanelHeader_platformClassNames.android, transparent && "vkuiPanelHeader--trnsp", shadow && "vkuiPanelHeader--shadow", !float && classNames("vkuiPanelHeader--static", 'vkuiInternalPanelHeader--static'), staticSeparatorVisible && classNames("vkuiPanelHeader--sep", 'vkuiInternalPanelHeader--sep'), !before && classNames("vkuiPanelHeader--no-before", 'vkuiInternalPanelHeader--no-before'), !after && "vkuiPanelHeader--no-after", isFixed && "vkuiPanelHeader--fixed", sizeX !== 'compact' && PanelHeader_sizeXClassNames[sizeX], sizeY !== 'regular' && PanelHeader_sizeYClassNames[sizeY]),
        getRootRef: isFixed ? getRootRef : getRef
    }), isFixed ? /*#__PURE__*/ React.createElement(FixedLayout, {
        className: classNames("vkuiPanelHeader__fixed", 'vkuiInternalPanelHeader__fixed'),
        vertical: "top",
        getRootRef: getRef
    }, /*#__PURE__*/ React.createElement(PanelHeaderIn, {
        before: before,
        after: after,
        typographyProps: typographyProps
    }, children)) : /*#__PURE__*/ React.createElement(PanelHeaderIn, {
        before: before,
        after: after,
        typographyProps: typographyProps
    }, children), !isVKCOM && /*#__PURE__*/ React.createElement(React.Fragment, null, staticSeparatorVisible && adaptiveSizeX.compact && /*#__PURE__*/ React.createElement(Separator, {
        className: adaptiveSizeX.compact.className
    }), staticSpacingVisible && adaptiveSizeX.regular && /*#__PURE__*/ React.createElement(Spacing, {
        className: adaptiveSizeX.regular.className,
        size: 16
    })), separatorVisible && isVKCOM && /*#__PURE__*/ React.createElement(Separator, {
        className: "vkuiPanelHeader__separator",
        wide: true
    }));
};

;// CONCATENATED MODULE: ./src/components/PanelHeaderContent/PanelHeaderContent.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/PanelHeaderContent/PanelHeaderContent.tsx
function PanelHeaderContent_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function PanelHeaderContent_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            PanelHeaderContent_define_property(target, key, source[key]);
        });
    }
    return target;
}
function PanelHeaderContent_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function PanelHeaderContent_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        PanelHeaderContent_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function PanelHeaderContent_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = PanelHeaderContent_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function PanelHeaderContent_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}









var PanelHeaderContent_platformClassNames = {
    ios: "vkuiPanelHeaderContent--ios",
    android: "vkuiPanelHeaderContent--android",
    vkcom: "vkuiPanelHeaderContent--vkcom"
};
var PanelHeaderContent_sizeYClassNames = {
    none: "vkuiPanelHeaderContent--sizeY-none",
    compact: "vkuiPanelHeaderContent--sizeY-compact"
};
var PanelHeaderChildren = function(param) {
    var hasStatus = param.hasStatus, hasBefore = param.hasBefore, children = param.children;
    var platform = usePlatform();
    return hasStatus || hasBefore ? /*#__PURE__*/ React.createElement(Text, {
        className: "vkuiPanelHeaderContent__childrenText",
        Component: "div",
        weight: platform === 'vkcom' ? '2' : undefined
    }, children) : /*#__PURE__*/ React.createElement("div", {
        className: "vkuiPanelHeaderContent__children-in"
    }, children);
};
/**
 * @see https://vkcom.github.io/VKUI/#/PanelHeaderContent
 */ var PanelHeaderContent = function(_param) {
    var aside = _param.aside, status = _param.status, before = _param.before, children = _param.children, onClick = _param.onClick, restProps = PanelHeaderContent_object_without_properties(_param, [
        "aside",
        "status",
        "before",
        "children",
        "onClick"
    ]);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var InComponent = onClick ? Tappable : 'div';
    var rootProps = onClick ? {} : restProps;
    var platform = usePlatform();
    var inProps = onClick ? PanelHeaderContent_object_spread_props(PanelHeaderContent_object_spread({}, restProps), {
        onClick: onClick,
        activeEffectDelay: 200,
        hasActive: platform === 'ios',
        activeMode: 'opacity'
    }) : {};
    return /*#__PURE__*/ React.createElement(RootComponent, PanelHeaderContent_object_spread_props(PanelHeaderContent_object_spread({}, rootProps), {
        baseClassName: classNames("vkuiPanelHeaderContent", PanelHeaderContent_platformClassNames.hasOwnProperty(platform) ? PanelHeaderContent_platformClassNames[platform] : PanelHeaderContent_platformClassNames.android, sizeY !== 'regular' && PanelHeaderContent_sizeYClassNames[sizeY])
    }), hasReactNode(before) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiPanelHeaderContent__before"
    }, before), /*#__PURE__*/ React.createElement(InComponent, PanelHeaderContent_object_spread_props(PanelHeaderContent_object_spread({}, inProps), {
        className: classNames("vkuiPanelHeaderContent__in", !before && platform !== 'android' && "vkuiPanelHeaderContent__in--centered")
    }), hasReactNode(status) && /*#__PURE__*/ React.createElement(Footnote, {
        className: "vkuiPanelHeaderContent__status"
    }, status), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiPanelHeaderContent__children"
    }, /*#__PURE__*/ React.createElement(PanelHeaderChildren, {
        hasStatus: hasReactNode(status),
        hasBefore: hasReactNode(before)
    }, children), hasReactNode(aside) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiPanelHeaderContent__aside"
    }, aside)), hasReactNode(before) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiPanelHeaderContent__width"
    })));
};

;// CONCATENATED MODULE: ./src/components/PanelHeaderContext/PanelHeaderContext.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/PanelHeaderContext/PanelHeaderContext.tsx
function PanelHeaderContext_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function PanelHeaderContext_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function PanelHeaderContext_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function PanelHeaderContext_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function PanelHeaderContext_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function PanelHeaderContext_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            PanelHeaderContext_define_property(target, key, source[key]);
        });
    }
    return target;
}
function PanelHeaderContext_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function PanelHeaderContext_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        PanelHeaderContext_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function PanelHeaderContext_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = PanelHeaderContext_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function PanelHeaderContext_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function PanelHeaderContext_sliced_to_array(arr, i) {
    return PanelHeaderContext_array_with_holes(arr) || PanelHeaderContext_iterable_to_array_limit(arr, i) || PanelHeaderContext_unsupported_iterable_to_array(arr, i) || PanelHeaderContext_non_iterable_rest();
}
function PanelHeaderContext_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return PanelHeaderContext_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return PanelHeaderContext_array_like_to_array(o, minLen);
}









var PanelHeaderContext_sizeXClassNames = {
    none: "vkuiPanelHeaderContext--sizeX-none",
    compact: "vkuiPanelHeaderContext--sizeX-compact",
    regular: "vkuiPanelHeaderContext--sizeX-regular"
};
/**
 * @see https://vkcom.github.io/VKUI/#/PanelHeaderContext
 */ var PanelHeaderContext = function(_param) {
    var children = _param.children, _param_opened = _param.opened, opened = _param_opened === void 0 ? false : _param_opened, className = _param.className, onClose = _param.onClose, restProps = PanelHeaderContext_object_without_properties(_param, [
        "children",
        "opened",
        "className",
        "onClose"
    ]);
    var platform = usePlatform();
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeX = _useAdaptivity.sizeX, sizeX = _useAdaptivity_sizeX === void 0 ? 'none' : _useAdaptivity_sizeX;
    var elementRef = React.useRef(null);
    var _useCSSKeyframesAnimationController = PanelHeaderContext_sliced_to_array(useCSSKeyframesAnimationController(opened ? 'enter' : 'exit', undefined, true), 2), animationState = _useCSSKeyframesAnimationController[0], animationHandlers = _useCSSKeyframesAnimationController[1];
    var visible = animationState !== 'exited';
    useScrollLock(platform !== 'vkcom' && visible);
    var handleGlobalOnClickOutside = React.useCallback(function(event) {
        if (opened) {
            event.stopPropagation();
            onClose();
        }
    }, [
        opened,
        onClose
    ]);
    useGlobalOnClickOutside(handleGlobalOnClickOutside, visible ? elementRef : null);
    if (!visible) {
        return null;
    }
    return /*#__PURE__*/ React.createElement(FixedLayout, PanelHeaderContext_object_spread_props(PanelHeaderContext_object_spread({}, restProps), {
        className: classNames("vkuiPanelHeaderContext", platform === 'ios' && "vkuiPanelHeaderContext--ios", opened ? "vkuiPanelHeaderContext--opened" : "vkuiPanelHeaderContext--closing", PanelHeaderContext_sizeXClassNames[sizeX], className),
        vertical: "top"
    }), /*#__PURE__*/ React.createElement("div", {
        onClick: function(event) {
            event.stopPropagation();
            onClose();
        },
        className: "vkuiPanelHeaderContext__fade"
    }), /*#__PURE__*/ React.createElement("div", PanelHeaderContext_object_spread({
        "data-testid":  false ? 0 : undefined,
        className: "vkuiPanelHeaderContext__in",
        ref: elementRef
    }, animationHandlers), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiPanelHeaderContext__content"
    }, children)));
};

// EXTERNAL MODULE: ../../node_modules/react-dom/index.js
var react_dom = __webpack_require__(144);
;// CONCATENATED MODULE: ./src/lib/createPortal.ts


var createPortal_createPortal = function(children, container, key) {
    var resolvedContainer = container ? container : getDocumentBody();
    return resolvedContainer && ReactDOM.createPortal(children, resolvedContainer, key);
};

;// CONCATENATED MODULE: ./src/components/ConfigProvider/ConfigProviderOverride.tsx
function ConfigProviderOverride_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ConfigProviderOverride_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ConfigProviderOverride_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ConfigProviderOverride_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ConfigProviderOverride_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ConfigProviderOverride_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



/**
 * Компонент предназначен для перебивания одного из значений контекста
 */ function ConfigProviderOverride_ConfigProviderOverride(_param) {
    var children = _param.children, contextValue = ConfigProviderOverride_object_without_properties(_param, [
        "children"
    ]);
    var parentConfig = useConfigProvider();
    var configContext = useObjectMemo(ConfigProviderOverride_object_spread({}, parentConfig, contextValue));
    return /*#__PURE__*/ React.createElement(ConfigProviderContext.Provider, {
        value: configContext
    }, children);
}

;// CONCATENATED MODULE: ./src/components/AppearanceProvider/AppearanceProvider.tsx




/**
 * @see https://vkcom.github.io/VKUI/#/AppearanceProvider
 */ var AppearanceProvider_AppearanceProvider = function(param) {
    var value = param.value, children = param.children;
    return /*#__PURE__*/ React.createElement(ConfigProviderOverride, {
        appearance: value
    }, /*#__PURE__*/ React.createElement(IconAppearanceProvider, {
        value: value
    }, /*#__PURE__*/ React.createElement(TokensClassProvider, null, children)));
};

;// CONCATENATED MODULE: ./src/components/AppRoot/AppRootPortal.tsx







var AppRootPortal_AppRootPortal = function(param) {
    var children = param.children, usePortal = param.usePortal;
    var _React_useContext = React.useContext(AppRootContext), portalRoot = _React_useContext.portalRoot, mode = _React_useContext.mode, disablePortal = _React_useContext.disablePortal;
    var appearance = useAppearance();
    var isClient = useIsClient();
    if (!isClient) {
        return null;
    }
    var portalContainer = resolvePortalContainer(usePortal, portalRoot.current);
    if (!portalContainer || shouldDisablePortal(usePortal, mode, Boolean(disablePortal))) {
        return /*#__PURE__*/ React.createElement(React.Fragment, null, children);
    }
    return createPortal(/*#__PURE__*/ React.createElement(AppearanceProvider, {
        value: appearance
    }, children), portalContainer);
};
function shouldDisablePortal(usePortal, mode, disablePortal) {
    if (usePortal !== undefined) {
        if (typeof usePortal !== 'boolean') {
            return false;
        }
        return disablePortal || usePortal !== true;
    }
    // fallback
    return disablePortal || mode === 'full';
}
function resolvePortalContainer(usePortal, portalRootFromContext) {
    if (usePortal === true || !usePortal) {
        return portalRootFromContext ? portalRootFromContext : null;
    }
    return isRefObject(usePortal) ? usePortal.current : usePortal;
}

;// CONCATENATED MODULE: ./src/components/PopoutRoot/PopoutRoot.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/PopoutRoot/PopoutRoot.tsx
function PopoutRoot_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function PopoutRoot_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            PopoutRoot_define_property(target, key, source[key]);
        });
    }
    return target;
}
function PopoutRoot_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function PopoutRoot_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        PopoutRoot_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function PopoutRoot_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = PopoutRoot_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function PopoutRoot_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





/**
 * @private
 */ var PopoutRootPopout = function(_param) {
    var className = _param.className, restProps = PopoutRoot_object_without_properties(_param, [
        "className"
    ]);
    return /*#__PURE__*/ React.createElement("div", PopoutRoot_object_spread({
        className: classNames("vkuiPopoutRoot__popout", className)
    }, restProps));
};
/**
 * @private
 */ var PopoutRootModal = function(_param) {
    var className = _param.className, restProps = PopoutRoot_object_without_properties(_param, [
        "className"
    ]);
    return /*#__PURE__*/ React.createElement("div", PopoutRoot_object_spread({
        className: classNames("vkuiPopoutRoot__modal", className)
    }, restProps));
};
/**
 * @private
 */ var PopoutRoot_PopoutRoot = function(_param) {
    var popout = _param.popout, modal = _param.modal, children = _param.children, restProps = PopoutRoot_object_without_properties(_param, [
        "popout",
        "modal",
        "children"
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, PopoutRoot_object_spread_props(PopoutRoot_object_spread({}, restProps), {
        baseClassName: "vkuiPopoutRoot"
    }), children, /*#__PURE__*/ React.createElement(AppRootPortal, null, !!popout && /*#__PURE__*/ React.createElement(PopoutRootPopout, null, popout), !!modal && /*#__PURE__*/ React.createElement(PopoutRootModal, null, modal)));
};

;// CONCATENATED MODULE: ./src/components/SplitLayout/SplitLayout.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/SplitLayout/SplitLayout.tsx
function SplitLayout_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function SplitLayout_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            SplitLayout_define_property(target, key, source[key]);
        });
    }
    return target;
}
function SplitLayout_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function SplitLayout_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        SplitLayout_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function SplitLayout_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = SplitLayout_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function SplitLayout_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





/**
 * @see https://vkcom.github.io/VKUI/#/SplitLayout
 */ var SplitLayout = function(_param) {
    var popout = _param.popout, modal = _param.modal, header = _param.header, children = _param.children, getRootRef = _param.getRootRef, getRef = _param.getRef, className = _param.className, center = _param.center, restProps = SplitLayout_object_without_properties(_param, [
        "popout",
        "modal",
        "header",
        "children",
        "getRootRef",
        "getRef",
        "className",
        "center"
    ]);
    var platform = usePlatform();
    return /*#__PURE__*/ React.createElement(PopoutRoot, {
        className: classNames("vkuiSplitLayout", platform === 'ios' && "vkuiSplitLayout--ios"),
        popout: popout,
        modal: modal,
        getRootRef: getRootRef
    }, header, /*#__PURE__*/ React.createElement("div", SplitLayout_object_spread_props(SplitLayout_object_spread({}, restProps), {
        ref: getRef,
        className: classNames("vkuiSplitLayout__inner", !!header && "vkuiSplitLayout__inner--header", center && "vkuiSplitLayout__inner--center", className)
    }), children));
};

;// CONCATENATED MODULE: ./src/hooks/useMediaQueries.ts




var mediaQueriesCache = new WeakMap();
function getMediaQueries(matchMedia) {
    return {
        desktopPlus: matchMedia(MEDIA_QUERIES.DESKTOP_PLUS),
        smallTabletPlus: matchMedia(MEDIA_QUERIES.SMALL_TABLET_PLUS),
        tablet: matchMedia(MEDIA_QUERIES.TABLET),
        smallTablet: matchMedia(MEDIA_QUERIES.SMALL_TABLET),
        mobile: matchMedia(MEDIA_QUERIES.MOBILE),
        mediumHeight: matchMedia(MEDIA_QUERIES.MEDIUM_HEIGHT),
        mobileLandscapeHeight: matchMedia(MEDIA_QUERIES.MOBILE_LANDSCAPE_HEIGHT)
    };
}
/**
 * Возвращает медиа выражения определенные дизайн-системой.
 */ var useMediaQueries_useMediaQueries = function() {
    var window = dom_useDOM().window;
    return react.useMemo(function initializeStoreOrUpdateStoreIfWindowChanges() {
        if (!window) {
            return getMediaQueries(mediaQueryNull);
        }
        var storedMediaQueries = mediaQueriesCache.get(window);
        if (storedMediaQueries) {
            return storedMediaQueries;
        }
        var mediaQueries = getMediaQueries(window.matchMedia.bind(window));
        mediaQueriesCache.set(window, mediaQueries);
        return mediaQueries;
    }, [
        window
    ]);
};

;// CONCATENATED MODULE: ./src/components/SplitCol/SplitCol.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/SplitCol/SplitCol.tsx
function SplitCol_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function SplitCol_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function SplitCol_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function SplitCol_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function SplitCol_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function SplitCol_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            SplitCol_define_property(target, key, source[key]);
        });
    }
    return target;
}
function SplitCol_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function SplitCol_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        SplitCol_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function SplitCol_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = SplitCol_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function SplitCol_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function SplitCol_sliced_to_array(arr, i) {
    return SplitCol_array_with_holes(arr) || SplitCol_iterable_to_array_limit(arr, i) || SplitCol_unsupported_iterable_to_array(arr, i) || SplitCol_non_iterable_rest();
}
function SplitCol_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return SplitCol_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return SplitCol_array_like_to_array(o, minLen);
}











var breakpointClassNames = {
    none: clsx("vkuiSplitCol--viewWidth-none", 'vkuiInternalSplitCol--viewWidth-none'),
    tabletMinus: "vkuiSplitCol--viewWidth-tabletMinus",
    smallTabletPlus: "vkuiSplitCol--viewWidth-smallTabletPlus",
    tabletPlus: 'vkuiInternalSplitCol--viewWidth-tabletPlus'
};
function useTransitionAnimate(animateProp) {
    var viewWidth = useAdaptivity().viewWidth;
    var _React_useState = SplitCol_sliced_to_array(React.useState(Boolean(animateProp)), 2), animate = _React_useState[0], setAnimate = _React_useState[1];
    var mediaQueries = useMediaQueries();
    React.useEffect(function() {
        if (animateProp !== undefined) {
            setAnimate(animateProp);
            return;
        }
        if (viewWidth !== undefined) {
            setAnimate(viewWidth < ViewWidth.TABLET);
            return;
        }
        // eslint-disable-next-line no-restricted-properties
        var listener = function() {
            return setAnimate(!mediaQueries.smallTabletPlus.matches);
        };
        listener();
        matchMediaListAddListener(mediaQueries.smallTabletPlus, listener);
        return function() {
            matchMediaListRemoveListener(mediaQueries.smallTabletPlus, listener);
        };
    }, [
        animateProp,
        viewWidth,
        mediaQueries
    ]);
    return animate;
}
/**
 * @see https://vkcom.github.io/VKUI/#/SplitCol
 */ var SplitCol = function(props) {
    var children = props.children, width = props.width, maxWidth = props.maxWidth, minWidth = props.minWidth, animateProp = props.animate, fixed = props.fixed, style = props.style, autoSpaced = props.autoSpaced, stretchedOnMobile = props.stretchedOnMobile, getRootRef = props.getRootRef, restProps = SplitCol_object_without_properties(props, [
        "children",
        "width",
        "maxWidth",
        "minWidth",
        "animate",
        "fixed",
        "style",
        "autoSpaced",
        "stretchedOnMobile",
        "getRootRef"
    ]);
    var baseRef = useExternRef(getRootRef);
    var viewWidth = useAdaptivity().viewWidth;
    var animate = useTransitionAnimate(animateProp);
    var contextValue = useObjectMemo({
        colRef: baseRef,
        animate: animate
    });
    return /*#__PURE__*/ React.createElement(RootComponent, SplitCol_object_spread_props(SplitCol_object_spread({}, restProps), {
        style: SplitCol_object_spread_props(SplitCol_object_spread({}, style), {
            width: width,
            maxWidth: maxWidth,
            minWidth: minWidth
        }),
        getRootRef: baseRef,
        baseClassName: classNames("vkuiSplitCol", viewWidthToClassName(breakpointClassNames, viewWidth), autoSpaced && classNames("vkuiSplitCol--spaced-auto", 'vkuiInternalSplitCol--spaced-auto'), fixed && "vkuiSplitCol--fixed", stretchedOnMobile && "vkuiSplitCol--stretched-on-mobile")
    }), /*#__PURE__*/ React.createElement(SplitColContext.Provider, {
        value: contextValue
    }, fixed ? /*#__PURE__*/ React.createElement("div", {
        className: "vkuiSplitCol__fixedInner"
    }, children) : children));
};

;// CONCATENATED MODULE: ./src/components/Epic/ScrollSaver.tsx



/**
 * @see https://vkcom.github.io/VKUI/#/ScrollSaver
 */ var ScrollSaver_ScrollSaver = function(param) {
    var children = param.children, initialScroll = param.initialScroll, saveScroll = param.saveScroll;
    var _React_useContext = React.useContext(ScrollContext), getScroll = _React_useContext.getScroll, scrollTo = _React_useContext.scrollTo;
    useIsomorphicLayoutEffect(function() {
        if (typeof initialScroll === 'number') {
            scrollTo(0, initialScroll);
        }
        return function() {
            return saveScroll(getScroll().y);
        };
    }, []);
    return /*#__PURE__*/ React.createElement(React.Fragment, null, children);
};

;// CONCATENATED MODULE: ./src/components/Epic/Epic.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Epic/Epic.tsx
function Epic_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Epic_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Epic_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Epic_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Epic_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Epic_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Epic_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Epic_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Epic_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}







var Epic_warn = warnOnce('Epic');
/**
 * @see https://vkcom.github.io/VKUI/#/Epic
 */ var Epic = function(_param) {
    var activeStory = _param.activeStory, tabbar = _param.tabbar, children = _param.children, restProps = Epic_object_without_properties(_param, [
        "activeStory",
        "tabbar",
        "children"
    ]);
    var scroll = React.useRef({}).current;
    var _React_Children_toArray_find;
    var story = (_React_Children_toArray_find = React.Children.toArray(children).find(function(story) {
        return /*#__PURE__*/ React.isValidElement(story) && getNavId(story.props, Epic_warn) === activeStory;
    })) !== null && _React_Children_toArray_find !== void 0 ? _React_Children_toArray_find : null;
    return /*#__PURE__*/ React.createElement(RootComponent, Epic_object_spread_props(Epic_object_spread({}, restProps), {
        baseClassName: classNames("vkuiEpic", tabbar && 'vkuiInternalEpic--hasTabbar')
    }), /*#__PURE__*/ React.createElement(ScrollSaver, {
        key: activeStory,
        initialScroll: scroll[activeStory] || 0,
        saveScroll: function(value) {
            return scroll[activeStory] = value;
        }
    }, story), tabbar);
};

;// CONCATENATED MODULE: ./src/components/Tabbar/Tabbar.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Tabbar/Tabbar.tsx
function Tabbar_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Tabbar_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Tabbar_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Tabbar_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Tabbar_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Tabbar_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





var getItemsLayoutClassName = function(itemsLayout, children) {
    switch(itemsLayout){
        case 'horizontal':
            return 'vkuiInternalTabbar--layout-horizontal';
        case 'vertical':
            return 'vkuiInternalTabbar--layout-vertical';
        default:
            return React.Children.count(children) > 2 ? getItemsLayoutClassName('vertical', []) : getItemsLayoutClassName('horizontal', []);
    }
};
/**
 * @see https://vkcom.github.io/VKUI/#/Tabbar
 */ var Tabbar = function(_param) {
    var _param_plain = _param.plain, plain = _param_plain === void 0 ? false : _param_plain, mode = _param.mode, restProps = Tabbar_object_without_properties(_param, [
        "plain",
        "mode"
    ]);
    var platform = usePlatform();
    return /*#__PURE__*/ React.createElement(RootComponent, Tabbar_object_spread({
        baseClassName: classNames('vkuiInternalTabbar', "vkuiTabbar", platform === 'ios' && "vkuiTabbar--ios", getItemsLayoutClassName(mode, restProps.children), !plain && "vkuiTabbar--shadow")
    }, restProps));
};

;// CONCATENATED MODULE: ./src/components/TabbarItem/TabbarItem.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/TabbarItem/TabbarItem.tsx
function TabbarItem_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function TabbarItem_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            TabbarItem_define_property(target, key, source[key]);
        });
    }
    return target;
}
function TabbarItem_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function TabbarItem_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        TabbarItem_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function TabbarItem_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = TabbarItem_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function TabbarItem_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}








var TabbarItem_warn = warnOnce('TabbarItem');
/**
 * @see https://vkcom.github.io/VKUI/#/TabbarItem
 */ var TabbarItem = function(_param) {
    var children = _param.children, selected = _param.selected, indicator = _param.indicator, text = _param.text, href = _param.href, _param_Component = _param.Component, Component = _param_Component === void 0 ? href ? 'a' : 'button' : _param_Component, disabled = _param.disabled, restProps = TabbarItem_object_without_properties(_param, [
        "children",
        "selected",
        "indicator",
        "text",
        "href",
        "Component",
        "disabled"
    ]);
    var platform = usePlatform();
    if (false) { var hasAccessibleName; }
    return /*#__PURE__*/ React.createElement(RootComponent, TabbarItem_object_spread_props(TabbarItem_object_spread({
        Component: Component
    }, restProps), {
        disabled: disabled,
        href: href,
        baseClassName: classNames("vkuiTabbarItem", platform === 'ios' && "vkuiTabbarItem--ios", platform === 'android' && "vkuiTabbarItem--android", selected && "vkuiTabbarItem--selected")
    }), /*#__PURE__*/ React.createElement(Tappable, {
        role: "presentation",
        disabled: disabled,
        activeMode: platform === 'ios' ? "vkuiTabbarItem__tappable--active" : 'background',
        activeEffectDelay: platform === 'ios' ? 0 : 300,
        hasHover: false,
        className: "vkuiTabbarItem__tappable",
        onClick: noop
    }), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiTabbarItem__in"
    }, /*#__PURE__*/ React.createElement("div", {
        className: "vkuiTabbarItem__icon"
    }, children, /*#__PURE__*/ React.createElement("div", {
        className: "vkuiInternalTabbarItem__label"
    }, hasReactNode(indicator) && indicator)), text && /*#__PURE__*/ React.createElement(Footnote, {
        Component: "div",
        className: "vkuiTabbarItem__text",
        weight: "2"
    }, text)));
};

;// CONCATENATED MODULE: ./src/components/ScrollArrow/ScrollArrow.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ScrollArrow/ScrollArrow.tsx
function ScrollArrow_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ScrollArrow_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ScrollArrow_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ScrollArrow_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ScrollArrow_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ScrollArrow_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






var ScrollArrow_stylesSize = {
    m: "vkuiScrollArrow--size-m",
    l: "vkuiScrollArrow--size-l"
};
var ScrollArrow_stylesDirection = {
    up: "vkuiScrollArrow--direction-up",
    right: "vkuiScrollArrow--direction-right",
    down: "vkuiScrollArrow--direction-down",
    left: "vkuiScrollArrow--direction-left"
};
var labelDirection = {
    up: 'Назад',
    right: 'Вперед',
    down: 'Вперед',
    left: 'Назад'
};
var ArrowIcon = function(param) {
    var size = param.size;
    var Icon = Icon24Chevron;
    if (size === 'm') {
        Icon = Icon16Chevron;
    }
    return /*#__PURE__*/ React.createElement(Icon, {
        className: "vkuiScrollArrow__defaultIcon"
    });
};
/**
 * Компонент стрелки. Используется в [HorizontalScroll](#/HorizontalScroll) и [Gallery](#/Gallery).
 *
 * @since 5.4.0
 * @see https://vkcom.github.io/VKUI/#/ScrollArrow
 */ var ScrollArrow_ScrollArrow = function(_param) {
    var _param_size = _param.size, size = _param_size === void 0 ? 'l' : _param_size, offsetY = _param.offsetY, direction = _param.direction, labelProp = _param.label, _param_children = _param.children, children = _param_children === void 0 ? /*#__PURE__*/ React.createElement(ArrowIcon, {
        size: size
    }) : _param_children, restProps = ScrollArrow_object_without_properties(_param, [
        "size",
        "offsetY",
        "direction",
        "label",
        "children"
    ]);
    var label = labelProp !== null && labelProp !== void 0 ? labelProp : labelDirection[direction];
    return /*#__PURE__*/ React.createElement(RootComponent, ScrollArrow_object_spread({
        Component: "button",
        type: "button",
        baseClassName: classNames("vkuiScrollArrow", ScrollArrow_stylesSize[size], ScrollArrow_stylesDirection[direction])
    }, restProps), label && /*#__PURE__*/ React.createElement(VisuallyHidden, null, label), /*#__PURE__*/ React.createElement("span", {
        className: "vkuiScrollArrow__icon",
        style: offsetY ? {
            top: offsetY
        } : undefined
    }, children));
};

;// CONCATENATED MODULE: ./src/hooks/useDirection.ts
function useDirection_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useDirection_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useDirection_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useDirection_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useDirection_sliced_to_array(arr, i) {
    return useDirection_array_with_holes(arr) || useDirection_iterable_to_array_limit(arr, i) || useDirection_unsupported_iterable_to_array(arr, i) || useDirection_non_iterable_rest();
}
function useDirection_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useDirection_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useDirection_array_like_to_array(o, minLen);
}



/**
 * Определяет направление текста элемента.
 *
 * ## Ограничения
 *
 * - Не следит за изменением направлением.
 * - Определяется только на второй рендер.
 *
 * ## Пример
 *
 * ```jsx
 * import { strict as assert } from 'node:assert';
 *
 * const Component = () => {
 *   const [ref, direction, writingMode] = useDirection();
 *
 *   React.useEffect(()=>{
 *     if (!direction || !writingMode) {
 *       return
 *     }
 *
 *     assert.equal(direction, 'ltr')
 *     assert.equal(writingMode, 'vertical-rl')
 *   }, [direction, writingMode])
 *
 *   return <div ref={ref} style={{writingMode: 'vertical-rl'}}>我家没有电脑。</div>
 * }
 * ```
 */ function useDirection_useDirection() {
    var ref = React.useRef(null);
    var _React_useState = useDirection_sliced_to_array(React.useState(undefined), 2), direction = _React_useState[0], setDirection = _React_useState[1];
    var _React_useState1 = useDirection_sliced_to_array(React.useState(undefined), 2), writingMode = _React_useState1[0], setWritingMode = _React_useState1[1];
    var window = useDOM().window;
    var update = function() {
        if (!window || !ref.current) {
            return;
        }
        var styleDeclaration = window.getComputedStyle(ref.current);
        setDirection(styleDeclaration.direction);
        setWritingMode(styleDeclaration.writingMode);
    };
    useIsomorphicLayoutEffect(update, [
        window
    ]);
    return [
        ref,
        direction,
        writingMode
    ];
}

;// CONCATENATED MODULE: ./src/lib/fx.ts
/**
 * ease function
 * @param x absolute progress of the animation in bounds 0 (beginning) and 1 (end)
 */ function fx_easeInOutSine(x) {
    return 0.5 * (1 - Math.cos(Math.PI * x));
}
function cubicBezier(x1, x2) {
    return function(progress) {
        var t = progress;
        var cx = 3 * x1;
        var bx = 3 * (x2 - x1) - cx;
        var ax = 1 - cx - bx;
        var x = ax * Math.pow(t, 3) + bx * Math.pow(t, 2) + cx * t;
        return x;
    };
}

;// CONCATENATED MODULE: ./src/components/HorizontalScroll/HorizontalScroll.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/HorizontalScroll/HorizontalScroll.tsx
function HorizontalScroll_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function HorizontalScroll_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function HorizontalScroll_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function HorizontalScroll_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function HorizontalScroll_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function HorizontalScroll_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            HorizontalScroll_define_property(target, key, source[key]);
        });
    }
    return target;
}
function HorizontalScroll_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function HorizontalScroll_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        HorizontalScroll_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function HorizontalScroll_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = HorizontalScroll_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function HorizontalScroll_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function HorizontalScroll_sliced_to_array(arr, i) {
    return HorizontalScroll_array_with_holes(arr) || HorizontalScroll_iterable_to_array_limit(arr, i) || HorizontalScroll_unsupported_iterable_to_array(arr, i) || HorizontalScroll_non_iterable_rest();
}
function HorizontalScroll_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return HorizontalScroll_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return HorizontalScroll_array_like_to_array(o, minLen);
}










/**
 * timing method
 */ function now() {
    return performance && performance.now ? performance.now() : Date.now();
}
/**
 * Округление к большему по модулю
 *
 * ## Пример
 *
 * ```ts
 * import { strict as assert } from 'node:assert';
 *
 * assert.equal(roundingAwayFromZero(5.1), 6)
 * assert.equal(roundingAwayFromZero(-5.1), -6)
 * ```
 */ function roundingAwayFromZero(value) {
    return value > 0 ? Math.ceil(value) : Math.floor(value);
}
/**
 * Округляем el.scrollLeft
 * https://github.com/VKCOM/VKUI/pull/2445
 */ var roundUpElementScrollLeft = function(el) {
    return roundingAwayFromZero(el.scrollLeft);
};
/**
 * Код анимации скрола, на основе полифила: https://github.com/iamdustan/smoothscroll
 * Константа взята из полифила (468), на дизайн-ревью уточнили до 250
 * @var {number} SCROLL_ONE_FRAME_TIME время анимации скролла
 */ var SCROLL_ONE_FRAME_TIME = 250;
function doScroll(param) {
    var scrollElement = param.scrollElement, getScrollPosition = param.getScrollPosition, animationQueue = param.animationQueue, onScrollToEndBorder = param.onScrollToEndBorder, onScrollEnd = param.onScrollEnd, onScrollStart = param.onScrollStart, initialScrollWidth = param.initialScrollWidth, scrollAnimationDuration = param.scrollAnimationDuration, textDirection = param.textDirection;
    if (!scrollElement || !getScrollPosition) {
        return;
    }
    /**
   * крайнее значение сдвига
   */ var extremeScrollLeft = (textDirection === 'ltr' ? 1 : -1) * (initialScrollWidth - scrollElement.offsetWidth);
    var startScrollLeft = roundUpElementScrollLeft(scrollElement);
    var endScrollLeft = getScrollPosition(startScrollLeft);
    onScrollStart();
    /**
   * Если окончание прокрутки вышло за ноль
   */ if (startScrollLeft * endScrollLeft < 0) {
        endScrollLeft = 0;
    }
    if (Math.abs(endScrollLeft) >= Math.abs(extremeScrollLeft)) {
        onScrollToEndBorder();
        endScrollLeft = extremeScrollLeft;
    }
    var startTime = now();
    (function scroll() {
        var time = now();
        var elapsed = Math.min((time - startTime) / scrollAnimationDuration, 1);
        var value = easeInOutSine(elapsed);
        var currentScrollLeft = startScrollLeft + (endScrollLeft - startScrollLeft) * value;
        scrollElement.scrollLeft = roundingAwayFromZero(currentScrollLeft);
        var scrollEnd = textDirection === 'ltr' ? Math.max(0, endScrollLeft) : Math.min(0, endScrollLeft);
        if (roundUpElementScrollLeft(scrollElement) !== scrollEnd && elapsed !== 1) {
            requestAnimationFrame(scroll);
            return;
        }
        onScrollEnd();
        animationQueue.shift();
        if (animationQueue.length > 0) {
            animationQueue[0]();
        }
    })();
}
/**
 * @see https://vkcom.github.io/VKUI/#/HorizontalScroll
 */ var HorizontalScroll_HorizontalScroll = function(_param) {
    var children = _param.children, getScrollToLeft = _param.getScrollToLeft, getScrollToRight = _param.getScrollToRight, _param_showArrows = _param.showArrows, showArrows = _param_showArrows === void 0 ? true : _param_showArrows, _param_arrowSize = _param.arrowSize, arrowSize = _param_arrowSize === void 0 ? 'l' : _param_arrowSize, arrowOffsetY = _param.arrowOffsetY, _param_scrollAnimationDuration = _param.scrollAnimationDuration, scrollAnimationDuration = _param_scrollAnimationDuration === void 0 ? SCROLL_ONE_FRAME_TIME : _param_scrollAnimationDuration, getRef = _param.getRef, _param_scrollOnAnyWheel = _param.scrollOnAnyWheel, scrollOnAnyWheel = _param_scrollOnAnyWheel === void 0 ? false : _param_scrollOnAnyWheel, _param_inline = _param.inline, inline = _param_inline === void 0 ? false : _param_inline, restProps = HorizontalScroll_object_without_properties(_param, [
        "children",
        "getScrollToLeft",
        "getScrollToRight",
        "showArrows",
        "arrowSize",
        "arrowOffsetY",
        "scrollAnimationDuration",
        "getRef",
        "scrollOnAnyWheel",
        "inline"
    ]);
    var _React_useState = HorizontalScroll_sliced_to_array(React.useState(false), 2), canScrollLeft = _React_useState[0], setCanScrollLeft = _React_useState[1];
    var _React_useState1 = HorizontalScroll_sliced_to_array(React.useState(false), 2), canScrollRight = _React_useState1[0], setCanScrollRight = _React_useState1[1];
    var _useDirection = HorizontalScroll_sliced_to_array(useDirection(), 2), directionRef = _useDirection[0], textDirection = _useDirection[1];
    var direction = textDirection || 'ltr';
    var setCanScrollStart = direction === 'ltr' ? setCanScrollLeft : setCanScrollRight;
    var setCanScrollEnd = direction === 'ltr' ? setCanScrollRight : setCanScrollLeft;
    var isCustomScrollingRef = React.useRef(false);
    var scrollerRef = useExternRef(getRef, directionRef);
    var animationQueue = React.useRef([]);
    var hasPointer = useAdaptivityHasPointer();
    var scrollTo = React.useCallback(function(getScrollPosition) {
        var scrollElement = scrollerRef.current;
        animationQueue.current.push(function() {
            var _scrollElement_firstElementChild;
            return doScroll({
                scrollElement: scrollElement,
                getScrollPosition: getScrollPosition,
                animationQueue: animationQueue.current,
                onScrollToEndBorder: function() {
                    return setCanScrollEnd(false);
                },
                onScrollEnd: function() {
                    return isCustomScrollingRef.current = false;
                },
                onScrollStart: function() {
                    return isCustomScrollingRef.current = true;
                },
                initialScrollWidth: (scrollElement === null || scrollElement === void 0 ? void 0 : (_scrollElement_firstElementChild = scrollElement.firstElementChild) === null || _scrollElement_firstElementChild === void 0 ? void 0 : _scrollElement_firstElementChild.scrollWidth) || 0,
                scrollAnimationDuration: scrollAnimationDuration,
                textDirection: direction
            });
        });
        if (animationQueue.current.length === 1) {
            animationQueue.current[0]();
        }
    }, [
        scrollerRef,
        scrollAnimationDuration,
        direction,
        setCanScrollEnd
    ]);
    var scrollToLeft = React.useCallback(function() {
        var getScrollPosition = getScrollToLeft !== null && getScrollToLeft !== void 0 ? getScrollToLeft : function(i) {
            return i - scrollerRef.current.offsetWidth;
        };
        scrollTo(getScrollPosition);
    }, [
        getScrollToLeft,
        scrollTo,
        scrollerRef
    ]);
    var scrollToRight = React.useCallback(function() {
        var getScrollPosition = getScrollToRight !== null && getScrollToRight !== void 0 ? getScrollToRight : function(i) {
            return i + scrollerRef.current.offsetWidth;
        };
        scrollTo(getScrollPosition);
    }, [
        getScrollToRight,
        scrollTo,
        scrollerRef
    ]);
    var calculateArrowsVisibility = React.useCallback(function() {
        if (showArrows && hasPointer && scrollerRef.current && !isCustomScrollingRef.current) {
            var scrollElement = scrollerRef.current;
            setCanScrollStart(scrollElement.scrollLeft !== 0);
            setCanScrollEnd(Math.abs(roundUpElementScrollLeft(scrollElement)) + scrollElement.offsetWidth < scrollElement.scrollWidth);
        }
    }, [
        showArrows,
        hasPointer,
        scrollerRef,
        setCanScrollStart,
        setCanScrollEnd
    ]);
    var scrollEvent = useEventListener('scroll', calculateArrowsVisibility);
    React.useEffect(function addScrollerRefToScrollEvent() {
        if (!scrollerRef.current) {
            return noop;
        }
        scrollEvent.add(scrollerRef.current);
        return scrollEvent.remove;
    }, [
        scrollEvent,
        scrollerRef
    ]);
    React.useEffect(calculateArrowsVisibility, [
        calculateArrowsVisibility,
        children
    ]);
    /**
   * Прокрутка с помощью любого колеса мыши
   */ var onwheel = React.useCallback(function(e) {
        scrollerRef.current.scrollBy({
            left: e.deltaX + e.deltaY,
            behavior: 'auto'
        });
        e.preventDefault();
    }, [
        scrollerRef
    ]);
    var wheelEvent = useEventListener('wheel', onwheel);
    React.useEffect(function addScrollerRefToWheelEvent() {
        if (!scrollerRef.current || !scrollOnAnyWheel) {
            return noop;
        }
        wheelEvent.add(scrollerRef.current);
        return wheelEvent.remove;
    }, [
        wheelEvent,
        scrollerRef,
        scrollOnAnyWheel
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, HorizontalScroll_object_spread_props(HorizontalScroll_object_spread({}, restProps), {
        baseClassName: classNames("vkuiHorizontalScroll", 'vkuiInternalHorizontalScroll', showArrows === 'always' && "vkuiHorizontalScroll--withConstArrows", inline && "vkuiHorizontalScroll--inline"),
        onMouseEnter: calculateArrowsVisibility
    }), showArrows && (hasPointer || hasPointer === undefined) && canScrollLeft && /*#__PURE__*/ React.createElement(ScrollArrow, {
        "data-testid":  false ? 0 : undefined,
        size: arrowSize,
        offsetY: arrowOffsetY,
        direction: "left",
        "aria-hidden": true,
        tabIndex: -1,
        className: classNames("vkuiHorizontalScroll__arrow", "vkuiHorizontalScroll__arrowLeft"),
        onClick: scrollToLeft
    }), showArrows && (hasPointer || hasPointer === undefined) && canScrollRight && /*#__PURE__*/ React.createElement(ScrollArrow, {
        "data-testid":  false ? 0 : undefined,
        size: arrowSize,
        offsetY: arrowOffsetY,
        direction: "right",
        "aria-hidden": true,
        tabIndex: -1,
        className: classNames("vkuiHorizontalScroll__arrow", "vkuiHorizontalScroll__arrowRight"),
        onClick: scrollToRight
    }), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiHorizontalScroll__in",
        ref: scrollerRef
    }, /*#__PURE__*/ React.createElement("div", {
        className: "vkuiHorizontalScroll__in-wrapper"
    }, children)));
};

;// CONCATENATED MODULE: ./src/components/AspectRatio/AspectRatio.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/AspectRatio/AspectRatio.tsx
function AspectRatio_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function AspectRatio_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            AspectRatio_define_property(target, key, source[key]);
        });
    }
    return target;
}
function AspectRatio_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = AspectRatio_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function AspectRatio_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




/**
 * `AspectRatio` позволяет поддерживать постоянное соотношение ширины и высоты.
 * Его можно использовать для отображения изображений, карт, видео и других медиафайлов.

 * @since 5.5.0
 * @see https://vkcom.github.io/VKUI/#/AspectRatio
 */ function AspectRatio(_param) {
    var ratio = _param.ratio, _param_mode = _param.mode, mode = _param_mode === void 0 ? 'stretch' : _param_mode, styleProp = _param.style, props = AspectRatio_object_without_properties(_param, [
        "ratio",
        "mode",
        "style"
    ]);
    var style = {
        '--vkui_internal--aspect_ratio': String(ratio)
    };
    return /*#__PURE__*/ React.createElement(RootComponent, AspectRatio_object_spread({
        baseClassName: classNames("vkuiAspectRatio", mode === 'stretch' && "vkuiAspectRatio--mode-stretch"),
        style: AspectRatio_object_spread({}, styleProp, style)
    }, props));
}

;// CONCATENATED MODULE: ./src/lib/layouts/gaps.ts

var gaps_columnGapClassNames = {
    '2xs': "vkui-column-gap--2xs",
    'xs': "vkui-column-gap--xs",
    's': "vkui-column-gap--s",
    'm': "vkui-column-gap--m",
    'l': "vkui-column-gap--l",
    'xl': "vkui-column-gap--xl",
    '2xl': "vkui-column-gap--2xl",
    '3xl': "vkui-column-gap--3xl",
    '4xl': "vkui-column-gap--4xl"
};
var gaps_rowGapClassNames = {
    '2xs': "vkui-row-gap--2xs",
    'xs': "vkui-row-gap--xs",
    's': "vkui-row-gap--s",
    'm': "vkui-row-gap--m",
    'l': "vkui-row-gap--l",
    'xl': "vkui-row-gap--xl",
    '2xl': "vkui-row-gap--2xl",
    '3xl': "vkui-row-gap--3xl",
    '4xl': "vkui-row-gap--4xl"
};
/**
 * Возвращает массив отступов [columnGap, rowGap]
 */ function gaps_calculateGap(gap) {
    if (!gap) {
        return [
            undefined,
            undefined
        ];
    }
    if (typeof gap === 'number' || typeof gap === 'string') {
        return [
            gap,
            gap
        ];
    }
    return gap;
}

;// CONCATENATED MODULE: ./src/lib/layouts/index.ts


;// CONCATENATED MODULE: ./src/components/Flex/FlexItem/FlexItem.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Flex/FlexItem/FlexItem.tsx
function FlexItem_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function FlexItem_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            FlexItem_define_property(target, key, source[key]);
        });
    }
    return target;
}
function FlexItem_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function FlexItem_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        FlexItem_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function FlexItem_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = FlexItem_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function FlexItem_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



var flexClassNames = {
    grow: "vkuiFlexItem--flex-grow",
    shrink: "vkuiFlexItem--flex-shrink",
    content: "vkuiFlexItem--flex-content",
    fixed: "vkuiFlexItem--flex-fixed"
};
var alignSelfClassNames = {
    start: "vkuiFlexItem--align-self-start",
    end: "vkuiFlexItem--align-self-end",
    center: "vkuiFlexItem--align-self-center",
    baseline: "vkuiFlexItem--align-self-baseline",
    stretch: "vkuiFlexItem--align-self-stretch"
};
var FlexItem = function(_param) {
    var children = _param.children, alignSelf = _param.alignSelf, flex = _param.flex, flexBasis = _param.flexBasis, style = _param.style, rest = FlexItem_object_without_properties(_param, [
        "children",
        "alignSelf",
        "flex",
        "flexBasis",
        "style"
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent_RootComponent, FlexItem_object_spread_props(FlexItem_object_spread({}, rest), {
        style: FlexItem_object_spread({
            flexBasis: flexBasis
        }, style),
        baseClassName: clsx("vkuiFlexItem", alignSelf && alignSelfClassNames[alignSelf], flex && flexClassNames[flex])
    }), children);
};

;// CONCATENATED MODULE: ./src/components/Flex/Flex.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Flex/Flex.tsx
function Flex_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Flex_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Flex_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Flex_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Flex_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Flex_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Flex_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Flex_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Flex_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Flex_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Flex_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Flex_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Flex_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Flex_sliced_to_array(arr, i) {
    return Flex_array_with_holes(arr) || Flex_iterable_to_array_limit(arr, i) || Flex_unsupported_iterable_to_array(arr, i) || Flex_non_iterable_rest();
}
function Flex_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Flex_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Flex_array_like_to_array(o, minLen);
}






var justifyClassNames = {
    'start': "vkuiFlex--justify-start",
    'end': "vkuiFlex--justify-end",
    'center': "vkuiFlex--justify-center",
    'space-around': "vkuiFlex--justify-space-around",
    'space-between': "vkuiFlex--justify-space-between",
    'space-evenly': "vkuiFlex--justify-space-evenly"
};
var alignClassNames = {
    start: "vkuiFlex--align-start",
    end: "vkuiFlex--align-end",
    center: "vkuiFlex--align-center",
    stretch: "vkuiFlex--align-stretch",
    baseline: "vkuiFlex--align-baseline"
};
var Flex = function(_param) {
    var gap = _param.gap, align = _param.align, justify = _param.justify, _param_margin = _param.margin, margin = _param_margin === void 0 ? 'none' : _param_margin, _param_noWrap = _param.noWrap, noWrap = _param_noWrap === void 0 ? false : _param_noWrap, _param_direction = _param.direction, direction = _param_direction === void 0 ? 'row' : _param_direction, styleProp = _param.style, _param_reverse = _param.reverse, reverse = _param_reverse === void 0 ? false : _param_reverse, children = _param.children, props = Flex_object_without_properties(_param, [
        "gap",
        "align",
        "justify",
        "margin",
        "noWrap",
        "direction",
        "style",
        "reverse",
        "children"
    ]);
    var withGaps = react.Children.count(children) > 1 && gap;
    var _calculateGap = Flex_sliced_to_array(gaps_calculateGap(withGaps ? gap : undefined), 2), columnGap = _calculateGap[0], rowGap = _calculateGap[1];
    return /*#__PURE__*/ React.createElement(RootComponent_RootComponent, Flex_object_spread_props(Flex_object_spread({}, props), {
        baseClassName: clsx("vkuiFlex", !noWrap && "vkuiFlex--wrap", reverse && "vkuiFlex--reverse", direction !== 'row' && "vkuiFlex--direction-column", margin !== 'none' && "vkuiFlex--margin-auto", align && alignClassNames[align], justify && justifyClassNames[justify], withGaps && "vkuiFlex--withGaps", withGaps && getGapsPresets(rowGap, columnGap)),
        style: withGaps ? Flex_object_spread({}, getGapsByUser(rowGap, columnGap), styleProp) : styleProp
    }), children);
};
function getGapsPresets(rowGap, columnGap) {
    return clsx(typeof rowGap === 'string' && gaps_rowGapClassNames[rowGap], typeof columnGap === 'string' && gaps_columnGapClassNames[columnGap]);
}
function getGapsByUser(rowGap, columnGap) {
    var style = {};
    if (typeof rowGap === 'number') {
        style['--vkui_internal--row_gap'] = "".concat(rowGap, "px");
    }
    if (typeof columnGap === 'number') {
        style['--vkui_internal--column_gap'] = "".concat(columnGap, "px");
    }
    return style;
}
Flex.Item = FlexItem;

;// CONCATENATED MODULE: ./src/components/SimpleGrid/SimpleGrid.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/SimpleGrid/SimpleGrid.tsx
function SimpleGrid_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function SimpleGrid_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function SimpleGrid_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function SimpleGrid_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function SimpleGrid_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function SimpleGrid_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            SimpleGrid_define_property(target, key, source[key]);
        });
    }
    return target;
}
function SimpleGrid_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function SimpleGrid_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        SimpleGrid_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function SimpleGrid_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = SimpleGrid_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function SimpleGrid_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function SimpleGrid_sliced_to_array(arr, i) {
    return SimpleGrid_array_with_holes(arr) || SimpleGrid_iterable_to_array_limit(arr, i) || SimpleGrid_unsupported_iterable_to_array(arr, i) || SimpleGrid_non_iterable_rest();
}
function SimpleGrid_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return SimpleGrid_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return SimpleGrid_array_like_to_array(o, minLen);
}




var marginClassNames = {
    'auto': "vkuiSimpleGrid--margin-auto",
    'auto-inline': "vkuiSimpleGrid--margin-auto-inline",
    'auto-block': "vkuiSimpleGrid--margin-auto-block"
};
var SimpleGrid_alignClassNames = {
    start: "vkuiSimpleGrid--align-start",
    end: "vkuiSimpleGrid--align-end",
    center: "vkuiSimpleGrid--align-center",
    stretch: "vkuiSimpleGrid--align-stretch",
    baseline: "vkuiSimpleGrid--align-baseline"
};
var SimpleGrid = function(_param) {
    var _param_columns = _param.columns, columns = _param_columns === void 0 ? 1 : _param_columns, gap = _param.gap, styleProp = _param.style, _param_margin = _param.margin, margin = _param_margin === void 0 ? 'none' : _param_margin, minColWidth = _param.minColWidth, _param_align = _param.align, align = _param_align === void 0 ? 'stretch' : _param_align, props = SimpleGrid_object_without_properties(_param, [
        "columns",
        "gap",
        "style",
        "margin",
        "minColWidth",
        "align"
    ]);
    var style = {};
    var _calculateGap = SimpleGrid_sliced_to_array(calculateGap(gap), 2), columnGap = _calculateGap[0], rowGap = _calculateGap[1];
    if (typeof rowGap === 'number') {
        style['--vkui_internal--row_gap'] = "".concat(rowGap, "px");
    }
    if (typeof columnGap === 'number') {
        style['--vkui_internal--column_gap'] = "".concat(columnGap, "px");
    }
    style['--vkui_internal--grid_columns'] = "".concat(columns);
    if (minColWidth) {
        style['--vkui_internal--min_col_width'] = "".concat(minColWidth, "px");
    }
    return /*#__PURE__*/ React.createElement(RootComponent, SimpleGrid_object_spread_props(SimpleGrid_object_spread({}, props), {
        baseClassName: classNames("vkuiSimpleGrid", margin !== 'none' && marginClassNames[margin], SimpleGrid_alignClassNames[align], minColWidth && "vkuiSimpleGrid--with-min-width", typeof columnGap === 'string' && columnGapClassNames[columnGap], typeof rowGap === 'string' && rowGapClassNames[rowGap]),
        style: SimpleGrid_object_spread({}, style, styleProp)
    }));
};

;// CONCATENATED MODULE: ./src/components/PopoutWrapper/PopoutWrapper.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/PopoutWrapper/PopoutWrapper.tsx
function PopoutWrapper_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function PopoutWrapper_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            PopoutWrapper_define_property(target, key, source[key]);
        });
    }
    return target;
}
function PopoutWrapper_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function PopoutWrapper_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        PopoutWrapper_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function PopoutWrapper_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = PopoutWrapper_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function PopoutWrapper_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var stylesAlignX = {
    center: "vkuiPopoutWrapper--alignX-center",
    left: "vkuiPopoutWrapper--alignX-left",
    right: "vkuiPopoutWrapper--alignX-right"
};
var stylesAlignY = {
    center: "vkuiPopoutWrapper--alignY-center",
    top: "vkuiPopoutWrapper--alignY-top",
    bottom: "vkuiPopoutWrapper--alignY-bottom"
};
/**
 * @see https://vkcom.github.io/VKUI/#/PopoutWrapper
 */ var PopoutWrapper_PopoutWrapper = function(_param) {
    var _param_alignY = _param.alignY, alignY = _param_alignY === void 0 ? 'center' : _param_alignY, _param_alignX = _param.alignX, alignX = _param_alignX === void 0 ? 'center' : _param_alignX, _param_closing = _param.closing, closing = _param_closing === void 0 ? false : _param_closing, _param_noBackground = _param.noBackground, noBackground = _param_noBackground === void 0 ? false : _param_noBackground, _param_fixed = _param.fixed, fixed = _param_fixed === void 0 ? true : _param_fixed, children = _param.children, onClick = _param.onClick, restProps = PopoutWrapper_object_without_properties(_param, [
        "alignY",
        "alignX",
        "closing",
        "noBackground",
        "fixed",
        "children",
        "onClick"
    ]);
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, PopoutWrapper_object_spread_props(PopoutWrapper_object_spread({}, restProps), {
        baseClassName: clsx("vkuiPopoutWrapper", stylesAlignY[alignY], stylesAlignX[alignX], closing ? "vkuiPopoutWrapper--closing" : "vkuiPopoutWrapper--opened", fixed && "vkuiPopoutWrapper--fixed", !noBackground && "vkuiPopoutWrapper--masked")
    }), /*#__PURE__*/ react.createElement("div", {
        className: "vkuiPopoutWrapper__container"
    }, /*#__PURE__*/ react.createElement("div", {
        className: "vkuiPopoutWrapper__overlay",
        onClick: onClick
    }), /*#__PURE__*/ react.createElement("div", {
        className: "vkuiPopoutWrapper__content"
    }, children)));
};

;// CONCATENATED MODULE: ./src/helpers/getOrDefault.ts
/**
 * Вернёт первый аргумент если он есть, иначе вернёт значение по умолчанию.
 */ function getOrDefault_getOrDefault(value, defaultValue) {
    return value !== null && value !== void 0 ? value : defaultValue;
}

;// CONCATENATED MODULE: ./src/hooks/useAdaptivityWithJSMediaQueries.ts
function useAdaptivityWithJSMediaQueries_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useAdaptivityWithJSMediaQueries_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useAdaptivityWithJSMediaQueries_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useAdaptivityWithJSMediaQueries_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useAdaptivityWithJSMediaQueries_sliced_to_array(arr, i) {
    return useAdaptivityWithJSMediaQueries_array_with_holes(arr) || useAdaptivityWithJSMediaQueries_iterable_to_array_limit(arr, i) || useAdaptivityWithJSMediaQueries_unsupported_iterable_to_array(arr, i) || useAdaptivityWithJSMediaQueries_non_iterable_rest();
}
function useAdaptivityWithJSMediaQueries_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useAdaptivityWithJSMediaQueries_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useAdaptivityWithJSMediaQueries_array_like_to_array(o, minLen);
}








/**
 * Высчитывает и возвращает параметры адаптивности при изменении вьюпорта.
 *
 * Берёт в приоритет значения из `AdaptivityContext`.
 *
 * > ⚠ SSR
 * >
 * > Во избежания ошибок при гидратации, не используйте данный хук, если есть вероятность, что компонент будет отрендерен
 * > на стороне сервера.
 * >
 * > Лучше всего использовать для всплывающих окон, т.к. они вызываются только после загрузки
 * > страницы либо пользователем, либо программно.
 */ var useAdaptivityWithJSMediaQueries_useAdaptivityWithJSMediaQueries = function() {
    if (!canUseDOM) {
        // eslint-disable-next-line no-console
        console.error("[useAdaptivityWithJSMediaQueries] Похоже, вы пытаетесь использовать хук вне браузера.\n\nПостарайтесь этого избегать, чтобы не было ошибок при гидратации: при SSR нет информации о размерах экрана.\n\nИспользуйте CSS Media Query или библиотеку по типу https://github.com/artsy/fresnel.");
    }
    var _React_useContext = React.useContext(AdaptivityContext), viewWidthContext = _React_useContext.viewWidth, viewHeightContext = _React_useContext.viewHeight, sizeXContext = _React_useContext.sizeX, sizeYContext = _React_useContext.sizeY, hasPointerContext = _React_useContext.hasPointer, hasHoverContext = _React_useContext.hasHover;
    var platform = usePlatform();
    var mediaQueries = useMediaQueries();
    var _React_useState = useAdaptivityWithJSMediaQueries_sliced_to_array(React.useState(function() {
        return [
            getOrDefault(viewWidthContext, getViewWidthByMediaQueries(mediaQueries)),
            getOrDefault(viewHeightContext, getViewHeightByMediaQueries(mediaQueries))
        ];
    }), 2), _React_useState_ = useAdaptivityWithJSMediaQueries_sliced_to_array(_React_useState[0], 2), viewWidthLocal = _React_useState_[0], viewHeightLocal = _React_useState_[1], setViewSizeLocal = _React_useState[1];
    var adaptivityProps = React.useMemo(function() {
        var hasPointer = getOrDefault(hasPointerContext, hasPointerLib);
        var hasHover = getOrDefault(hasHoverContext, hasHoverLib);
        var viewWidth = getOrDefault(viewWidthContext, viewWidthLocal);
        var viewHeight = getOrDefault(viewHeightContext, viewHeightLocal);
        var sizeX = getOrDefault(sizeXContext, getSizeX(viewWidth));
        var sizeY = getOrDefault(sizeYContext, getSizeY(viewWidth, viewHeight, hasPointer));
        var isDesktop = tryToCheckIsDesktop(viewWidth, viewHeight, hasPointer, platform);
        return {
            viewWidth: viewWidth,
            viewHeight: viewHeight,
            sizeX: sizeX,
            sizeY: sizeY,
            hasPointer: hasPointer,
            hasHover: hasHover,
            isDesktop: isDesktop
        };
    }, [
        viewWidthLocal,
        viewHeightLocal,
        viewWidthContext,
        viewHeightContext,
        sizeXContext,
        sizeYContext,
        hasPointerContext,
        hasHoverContext,
        platform
    ]);
    React.useEffect(function() {
        var handleMediaQuery = function() {
            setViewSizeLocal(function(prevSizeLocal) {
                var newViewWidthLocal = getOrDefault(viewWidthContext, getViewWidthByMediaQueries(mediaQueries));
                var newViewHeightLocal = getOrDefault(viewHeightContext, getViewHeightByMediaQueries(mediaQueries));
                var _prevSizeLocal = useAdaptivityWithJSMediaQueries_sliced_to_array(prevSizeLocal, 2), prevViewWidthLocal = _prevSizeLocal[0], prevViewHeightLocal = _prevSizeLocal[1];
                if (prevViewWidthLocal !== newViewWidthLocal || prevViewHeightLocal !== newViewHeightLocal) {
                    return [
                        newViewWidthLocal,
                        newViewHeightLocal
                    ];
                }
                return prevSizeLocal;
            });
        };
        if (!viewWidthContext) {
            [
                mediaQueries.desktopPlus,
                mediaQueries.tablet,
                mediaQueries.smallTablet,
                mediaQueries.mobile
            ].forEach(function(matchMediaListener) {
                return matchMediaListAddListener(matchMediaListener, handleMediaQuery);
            });
        }
        if (!viewHeightContext) {
            [
                mediaQueries.mediumHeight,
                mediaQueries.mobileLandscapeHeight
            ].forEach(function(matchMediaListener) {
                return matchMediaListAddListener(matchMediaListener, handleMediaQuery);
            });
        }
        return function() {
            [
                mediaQueries.desktopPlus,
                mediaQueries.tablet,
                mediaQueries.smallTablet,
                mediaQueries.mobile,
                mediaQueries.mediumHeight,
                mediaQueries.mobileLandscapeHeight
            ].forEach(function(matchMediaListener) {
                return matchMediaListRemoveListener(matchMediaListener, handleMediaQuery);
            });
        };
    }, [
        mediaQueries,
        viewWidthContext,
        viewHeightContext
    ]);
    return adaptivityProps;
};

;// CONCATENATED MODULE: ./src/helpers/array.ts
/**
 * Сравнивает два массива
 */ function arraysEquals(arrA, arrB) {
    if (arrA.length !== arrB.length) {
        return false;
    }
    return arrA.every(function(item, index) {
        return item === arrB[index];
    });
}

;// CONCATENATED MODULE: ./src/hooks/useMutationObserver.ts


var useMutationObserver_useMutationObserver = function(ref, callback) {
    var stableCallback = useStableCallback_useStableCallback(callback);
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function() {
        if (!ref || !ref.current) {
            return;
        }
        var observer = new MutationObserver(stableCallback);
        observer.observe(ref.current, {
            subtree: true,
            childList: true
        });
        return function() {
            return observer.disconnect();
        };
    }, [
        ref,
        stableCallback
    ]);
};

;// CONCATENATED MODULE: ./src/components/FocusTrap/FocusTrap.tsx
function FocusTrap_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function FocusTrap_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function FocusTrap_array_without_holes(arr) {
    if (Array.isArray(arr)) return FocusTrap_array_like_to_array(arr);
}
function FocusTrap_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function FocusTrap_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function FocusTrap_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function FocusTrap_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function FocusTrap_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function FocusTrap_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            FocusTrap_define_property(target, key, source[key]);
        });
    }
    return target;
}
function FocusTrap_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = FocusTrap_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function FocusTrap_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function FocusTrap_sliced_to_array(arr, i) {
    return FocusTrap_array_with_holes(arr) || FocusTrap_iterable_to_array_limit(arr, i) || FocusTrap_unsupported_iterable_to_array(arr, i) || FocusTrap_non_iterable_rest();
}
function FocusTrap_to_consumable_array(arr) {
    return FocusTrap_array_without_holes(arr) || FocusTrap_iterable_to_array(arr) || FocusTrap_unsupported_iterable_to_array(arr) || FocusTrap_non_iterable_spread();
}
function FocusTrap_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return FocusTrap_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return FocusTrap_array_like_to_array(o, minLen);
}







var FOCUSABLE_ELEMENTS = FOCUSABLE_ELEMENTS_LIST.join();
/**
 * @see https://vkcom.github.io/VKUI/#/FocusTrap
 */ var FocusTrap_FocusTrap = function(_param) {
    var _param_Component = _param.Component, Component = _param_Component === void 0 ? 'div' : _param_Component, onClose = _param.onClose, _param_autoFocus = _param.autoFocus, autoFocus = _param_autoFocus === void 0 ? true : _param_autoFocus, _param_restoreFocus = _param.restoreFocus, restoreFocus = _param_restoreFocus === void 0 ? true : _param_restoreFocus, _param_disabled = _param.disabled, disabled = _param_disabled === void 0 ? false : _param_disabled, _param_mount = _param.mount, mount = _param_mount === void 0 ? true : _param_mount, _param_timeout = _param.timeout, timeout = _param_timeout === void 0 ? 0 : _param_timeout, getRootRef = _param.getRootRef, children = _param.children, restProps = FocusTrap_object_without_properties(_param, [
        "Component",
        "onClose",
        "autoFocus",
        "restoreFocus",
        "disabled",
        "mount",
        "timeout",
        "getRootRef",
        "children"
    ]);
    var ref = useExternRef_useExternRef(getRootRef);
    var document = dom_useDOM().document;
    var focusableNodesRef = (0,react.useRef)([]);
    var _useState = FocusTrap_sliced_to_array((0,react.useState)(null), 2), restoreFocusTo = _useState[0], setRestoreFocusTo = _useState[1];
    var focusNodeByIndex = function(nodeIndex) {
        var element = focusableNodesRef.current[nodeIndex];
        if (element) {
            element.focus({
                preventScroll: true
            });
        }
    };
    var recalculateFocusableNodesRef = function(parentNode) {
        // eslint-disable-next-line no-restricted-properties
        var newFocusableElements = parentNode.querySelectorAll(FOCUSABLE_ELEMENTS);
        var nodes = [];
        newFocusableElements.forEach(function(focusableEl) {
            var _getComputedStyle = getComputedStyle(focusableEl), display = _getComputedStyle.display, visibility = _getComputedStyle.visibility;
            if (display !== 'none' && visibility !== 'hidden') {
                nodes.push(focusableEl);
            }
        });
        if (nodes.length === 0) {
            // Чтобы фокус был хотя бы на родителе
            nodes.push(parentNode);
        }
        focusableNodesRef.current = nodes;
    };
    var onMutateParentHandler = function(parentNode) {
        var oldFocusableNodes = FocusTrap_to_consumable_array(focusableNodesRef.current);
        recalculateFocusableNodesRef(parentNode);
        if (!autoFocus || arraysEquals(oldFocusableNodes, focusableNodesRef.current)) {
            return;
        }
        if (document) {
            var activeElement = document.activeElement;
            var currentElementIndex = Math.max(document.activeElement ? focusableNodesRef.current.indexOf(activeElement) : -1, 0);
            focusNodeByIndex(currentElementIndex);
        }
    };
    useMutationObserver_useMutationObserver(ref, function() {
        return ref.current && onMutateParentHandler(ref.current);
    });
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function() {
        ref.current && recalculateFocusableNodesRef(ref.current);
    }, [
        ref
    ]);
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function tryToAutoFocusToFirstNode() {
        if (!ref.current || !autoFocus || disabled) {
            return;
        }
        var autoFocusToNode = function() {
            if (!ref.current || !focusableNodesRef.current.length) {
                return;
            }
            var activeElement = dom_getActiveElementByAnotherElement(ref.current);
            if (!dom_contains(ref.current, activeElement)) {
                if (autoFocus === 'root') {
                    var _ref_current;
                    (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.focus();
                } else {
                    focusableNodesRef.current[0].focus();
                }
            }
        };
        var timeoutId = setTimeout(autoFocusToNode, timeout);
        return function() {
            clearTimeout(timeoutId);
        };
    }, [
        autoFocus,
        timeout,
        disabled
    ]);
    var restoreFocusImpl = (0,react.useCallback)(function() {
        var shouldRestoreFocus = typeof restoreFocus === 'function' ? restoreFocus() : restoreFocus;
        if (!restoreFocusTo || !floating_ui_utils_dom_esm_isHTMLElement(restoreFocusTo) || !shouldRestoreFocus) {
            return;
        }
        setTimeout(function() {
            if (restoreFocusTo) {
                restoreFocusTo.focus();
                setRestoreFocusTo(null);
            }
        }, timeout);
    }, [
        restoreFocus,
        restoreFocusTo,
        timeout
    ]);
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function calculateRestoreFocusTo() {
        if (!ref.current || !restoreFocus || !mount) {
            setRestoreFocusTo(null);
            return;
        }
        setRestoreFocusTo(dom_getActiveElementByAnotherElement(ref.current));
    }, [
        ref,
        mount,
        restoreFocus
    ]);
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function tryToRestoreFocusOnUnmount() {
        return function() {
            return restoreFocusImpl();
        };
    }, [
        restoreFocusImpl
    ]);
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function tryToRestoreFocusWhenFakeUnmount() {
        if (!mount) {
            restoreFocusImpl();
        }
    }, [
        mount,
        restoreFocusImpl
    ]);
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function() {
        if (!ref.current) {
            return;
        }
        var onDocumentKeydown = function(event) {
            if (disabled) {
                return;
            }
            var pressedKeyResult = accessibility_pressedKey(event);
            switch(pressedKeyResult){
                case accessibility_Keys.TAB:
                    {
                        if (!focusableNodesRef.current.length) {
                            return false;
                        }
                        var lastIdx = focusableNodesRef.current.length - 1;
                        var targetIdx = focusableNodesRef.current.findIndex(function(node) {
                            return node === event.target;
                        });
                        var shouldFocusFirstNode = targetIdx === -1 || targetIdx === lastIdx && !event.shiftKey;
                        if (shouldFocusFirstNode || targetIdx === 0 && event.shiftKey) {
                            event.preventDefault();
                            var node = focusableNodesRef.current[shouldFocusFirstNode ? 0 : lastIdx];
                            if (node !== dom_getActiveElementByAnotherElement(node)) {
                                node.focus();
                            }
                            return false;
                        }
                        break;
                    }
                case accessibility_Keys.ESCAPE:
                    {
                        if (onClose) {
                            event.preventDefault();
                            onClose();
                        }
                    }
            }
            return true;
        };
        var doc = floating_ui_utils_dom_esm_getWindow(ref.current).document;
        doc.addEventListener('keydown', onDocumentKeydown, {
            capture: true
        });
        return function() {
            doc.removeEventListener('keydown', onDocumentKeydown, true);
        };
    }, [
        onClose,
        ref,
        disabled
    ]);
    return /*#__PURE__*/ React.createElement(Component, FocusTrap_object_spread({
        tabIndex: -1,
        ref: ref
    }, restProps), children);
};

;// CONCATENATED MODULE: ./src/components/ModalDismissButton/ModalDismissButton.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ModalDismissButton/ModalDismissButton.tsx
function ModalDismissButton_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ModalDismissButton_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ModalDismissButton_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ModalDismissButton_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ModalDismissButton_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ModalDismissButton_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ModalDismissButton_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ModalDismissButton_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ModalDismissButton_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






/**
 * @see https://vkcom.github.io/VKUI/#/ModalDismissButton
 */ var ModalDismissButton_ModalDismissButton = function(_param) {
    var _param_children = _param.children, children = _param_children === void 0 ? 'Закрыть' : _param_children, className = _param.className, restProps = ModalDismissButton_object_without_properties(_param, [
        "children",
        "className"
    ]);
    return /*#__PURE__*/ React.createElement(Tappable, ModalDismissButton_object_spread_props(ModalDismissButton_object_spread({
        className: classNames("vkuiModalDismissButton", className)
    }, restProps), {
        activeMode: "vkuiModalDismissButton--active",
        hoverMode: "vkuiModalDismissButton--hover"
    }), children && /*#__PURE__*/ React.createElement(VisuallyHidden, null, children), /*#__PURE__*/ React.createElement(Icon20Cancel, null));
};

;// CONCATENATED MODULE: ./src/components/Alert/Alert.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Alert/AlertAction.tsx
function AlertAction_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function AlertAction_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            AlertAction_define_property(target, key, source[key]);
        });
    }
    return target;
}
function AlertAction_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = AlertAction_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function AlertAction_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






var AlertActionIos = function(_param) {
    var mode = _param.mode, restProps = AlertAction_object_without_properties(_param, [
        "mode"
    ]);
    return /*#__PURE__*/ React.createElement(Tappable, AlertAction_object_spread({
        Component: restProps.href ? 'a' : 'button',
        className: classNames("vkuiAlert__action", mode === 'destructive' && "vkuiAlert__action--mode-destructive", mode === 'cancel' && "vkuiAlert__action--mode-cancel")
    }, restProps));
};
var AlertActionBase = function(_param) {
    var mode = _param.mode, restProps = AlertAction_object_without_properties(_param, [
        "mode"
    ]);
    var platform = usePlatform();
    var buttonMode = 'tertiary';
    if (platform === 'vkcom') {
        buttonMode = mode === 'cancel' ? 'secondary' : 'primary';
    }
    return /*#__PURE__*/ React.createElement(Button, AlertAction_object_spread({
        className: classNames("vkuiAlert__button", mode === 'cancel' && "vkuiAlert__button--mode-cancel"),
        mode: buttonMode,
        size: "m"
    }, restProps));
};
var AlertAction_AlertAction = function(props) {
    var platform = usePlatform();
    if (platform === 'ios') {
        return /*#__PURE__*/ React.createElement(AlertActionIos, props);
    }
    return /*#__PURE__*/ React.createElement(AlertActionBase, props);
};

;// CONCATENATED MODULE: ./src/components/Alert/AlertActions.tsx
function AlertActions_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function AlertActions_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            AlertActions_define_property(target, key, source[key]);
        });
    }
    return target;
}
function AlertActions_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = AlertActions_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function AlertActions_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





var alignStyles = {
    left: "vkuiAlert__actions--align-left",
    center: "vkuiAlert__actions--align-center",
    right: "vkuiAlert__actions--align-right"
};
var directionStyles = {
    vertical: "vkuiAlert__actions--direction-vertical",
    horizontal: "vkuiAlert__actions--direction-horizontal"
};
var AlertActions_AlertActions = function(param) {
    var _param_actions = param.actions, actions = _param_actions === void 0 ? [] : _param_actions, _param_renderAction = param.renderAction, renderAction = _param_renderAction === void 0 ? function(props) {
        return /*#__PURE__*/ React.createElement(AlertAction, props);
    } : _param_renderAction, onItemClick = param.onItemClick, actionsAlign = param.actionsAlign, actionsLayout = param.actionsLayout;
    var platform = usePlatform();
    var direction = platform === 'vkcom' ? 'horizontal' : actionsLayout;
    return /*#__PURE__*/ React.createElement("div", {
        className: classNames("vkuiAlert__actions", actionsAlign && alignStyles[actionsAlign], direction && directionStyles[direction])
    }, actions.map(function(action, i) {
        // Убираем
        var children = action.title, _ = action.action, autoCloseDisabled = action.autoCloseDisabled, restProps = AlertActions_object_without_properties(action, [
            "title",
            "action",
            "autoCloseDisabled"
        ]);
        return /*#__PURE__*/ React.createElement(React.Fragment, {
            key: i
        }, renderAction(AlertActions_object_spread({
            children: children,
            onClick: function() {
                return onItemClick(action);
            }
        }, restProps)));
    }));
};

;// CONCATENATED MODULE: ./src/components/Alert/AlertTypography.tsx
function AlertTypography_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function AlertTypography_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            AlertTypography_define_property(target, key, source[key]);
        });
    }
    return target;
}







var AlertTypography_AlertHeader = function(props) {
    var platform = usePlatform();
    switch(platform){
        case 'ios':
            return /*#__PURE__*/ React.createElement(Title, AlertTypography_object_spread({
                className: "vkuiAlert__header",
                weight: "1",
                level: "3"
            }, props));
        default:
            return /*#__PURE__*/ React.createElement(Title, AlertTypography_object_spread({
                className: "vkuiAlert__header",
                weight: "2",
                level: "2"
            }, props));
    }
};
var AlertTypography_AlertText = function(props) {
    var platform = usePlatform();
    switch(platform){
        case 'vkcom':
            return /*#__PURE__*/ React.createElement(Footnote, AlertTypography_object_spread({
                className: "vkuiAlert__text"
            }, props));
        case 'ios':
            return /*#__PURE__*/ React.createElement(Caption, AlertTypography_object_spread({
                className: "vkuiAlert__text"
            }, props));
        default:
            return /*#__PURE__*/ React.createElement(Text, AlertTypography_object_spread({
                Component: "span",
                className: "vkuiAlert__text",
                weight: "3"
            }, props));
    }
};

;// CONCATENATED MODULE: ./src/components/Alert/Alert.tsx
function Alert_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Alert_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Alert_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Alert_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Alert_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Alert_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Alert_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Alert_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Alert_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Alert_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Alert_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Alert_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Alert_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Alert_sliced_to_array(arr, i) {
    return Alert_array_with_holes(arr) || Alert_iterable_to_array_limit(arr, i) || Alert_unsupported_iterable_to_array(arr, i) || Alert_non_iterable_rest();
}
function Alert_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Alert_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Alert_array_like_to_array(o, minLen);
}















/**
 * @see https://vkcom.github.io/VKUI/#/Alert
 */ var Alert = function(_param) {
    var actions = _param.actions, _param_actionsLayout = _param.actionsLayout, actionsLayout = _param_actionsLayout === void 0 ? 'horizontal' : _param_actionsLayout, children = _param.children, className = _param.className, style = _param.style, text = _param.text, header = _param.header, onClose = _param.onClose, _param_dismissLabel = _param.dismissLabel, dismissLabel = _param_dismissLabel === void 0 ? 'Закрыть предупреждение' : _param_dismissLabel, renderAction = _param.renderAction, actionsAlign = _param.actionsAlign, _param_dismissButtonMode = _param.dismissButtonMode, dismissButtonMode = _param_dismissButtonMode === void 0 ? 'outside' : _param_dismissButtonMode, dismissButtonTestId = _param.dismissButtonTestId, getRootRef = _param.getRootRef, restProps = Alert_object_without_properties(_param, [
        "actions",
        "actionsLayout",
        "children",
        "className",
        "style",
        "text",
        "header",
        "onClose",
        "dismissLabel",
        "renderAction",
        "actionsAlign",
        "dismissButtonMode",
        "dismissButtonTestId",
        "getRootRef"
    ]);
    var generatedId = React.useId();
    var headerId = "vkui-alert-".concat(generatedId, "-header");
    var textId = "vkui-alert-".concat(generatedId, "-text");
    var platform = usePlatform();
    var isDesktop = useAdaptivityWithJSMediaQueries().isDesktop;
    var _React_useState = Alert_sliced_to_array(React.useState(false), 2), closing = _React_useState[0], setClosing = _React_useState[1];
    var itemActionCallbackRef = React.useRef(noop);
    var _useCSSKeyframesAnimationController = Alert_sliced_to_array(useCSSKeyframesAnimationController(closing ? 'exit' : 'enter', {
        onExited: function onExited() {
            itemActionCallbackRef.current();
            itemActionCallbackRef.current = noop;
            onClose();
        }
    }), 2), animationState = _useCSSKeyframesAnimationController[0], animationHandlers = _useCSSKeyframesAnimationController[1];
    var isDismissButtonVisible = isDesktop && platform !== 'ios';
    var elementRef = React.useRef(null);
    var close = React.useCallback(function() {
        setClosing(true);
    }, []);
    var onItemClick = React.useCallback(function(item) {
        var itemAction = item.action, _item_autoCloseDisabled = item.autoCloseDisabled, autoCloseDisabled = _item_autoCloseDisabled === void 0 ? false : _item_autoCloseDisabled;
        if (autoCloseDisabled) {
            itemAction && itemAction({
                close: close
            });
        } else {
            if (itemAction) {
                itemActionCallbackRef.current = itemAction;
            }
            setClosing(true);
        }
    }, [
        close
    ]);
    useScrollLock();
    return /*#__PURE__*/ React.createElement(PopoutWrapper, {
        className: className,
        closing: closing,
        style: style,
        onClick: close,
        getRootRef: getRootRef
    }, /*#__PURE__*/ React.createElement(FocusTrap, Alert_object_spread_props(Alert_object_spread({}, restProps, animationHandlers), {
        getRootRef: elementRef,
        onClick: stopPropagation,
        onClose: close,
        autoFocus: animationState === 'entered',
        className: classNames("vkuiAlert", platform === 'ios' && "vkuiAlert--ios", platform === 'vkcom' && "vkuiAlert--vkcom", closing ? "vkuiAlert--closing" : "vkuiAlert--opening", isDesktop && "vkuiAlert--desktop"),
        role: "alertdialog",
        "aria-modal": true,
        "aria-labelledby": headerId,
        "aria-describedby": textId
    }), /*#__PURE__*/ React.createElement("div", {
        className: classNames("vkuiAlert__content", dismissButtonMode === 'inside' && "vkuiAlert__content--withButton")
    }, hasReactNode(header) && /*#__PURE__*/ React.createElement(AlertHeader, {
        id: headerId
    }, header), hasReactNode(text) && /*#__PURE__*/ React.createElement(AlertText, {
        id: textId
    }, text), children, isDismissButtonVisible && dismissButtonMode === 'inside' && /*#__PURE__*/ React.createElement(IconButton, {
        label: dismissLabel,
        className: classNames("vkuiAlert__dismiss", 'vkuiInternalAlert__dismiss'),
        onClick: close,
        hoverMode: "opacity",
        activeMode: "opacity",
        "data-testid": dismissButtonTestId
    }, /*#__PURE__*/ React.createElement(Icon20Cancel, null))), /*#__PURE__*/ React.createElement(AlertActions, {
        actions: actions,
        actionsAlign: actionsAlign,
        actionsLayout: actionsLayout,
        renderAction: renderAction,
        onItemClick: onItemClick
    }), isDismissButtonVisible && dismissButtonMode === 'outside' && /*#__PURE__*/ React.createElement(ModalDismissButton, {
        onClick: close,
        "data-testid": dismissButtonTestId
    }, dismissLabel)));
};

;// CONCATENATED MODULE: ./src/components/ActionSheet/ActionSheetContext.ts

var ActionSheetContext_ActionSheetContext = react.createContext({});

;// CONCATENATED MODULE: ./src/components/ActionSheetItem/helpers.ts
/**
 * По дизайну `ActionSheet` должен закрывать при клике на `ActionSheetItem`.
 * В режиме `selectable` в реализации используются нативный input type=radio
 * И при навигации стрелочками по элементам происходит событие `click` из-за чего `ActionSheet` закрывается.
 * Поэтому нужно как-то отличить реальное событие клика
 * @see https://github.com/facebook/react/issues/7407
 * @see https://github.com/VKCOM/VKUI/issues/6954
 */ var helpers_isRealClickEvent = function(event) {
    return event.type === 'click' && event.clientX !== 0 && event.clientY !== 0;
};

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/20/check_circle_on_20.js
'use client';

var Icon20CheckCircleOn = makeIcon('Icon20CheckCircleOn', 'check_circle_on_20', '0 0 20 20', '<symbol xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20" id="check_circle_on_20"><path fill-rule="evenodd" d="M10 20c5.523 0 10-4.477 10-10S15.523 0 10 0 0 4.477 0 10s4.477 10 10 10m5.35-12.72a.75.75 0 1 0-1.062-1.06l-5.955 5.968L5.81 9.66a.75.75 0 1 0-1.062 1.06l3.054 3.06a.75.75 0 0 0 1.062 0z" clip-rule="evenodd" /></symbol>', 20, 20, false, undefined);

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/24/check_circle_on_24.js
'use client';

var Icon24CheckCircleOn = makeIcon('Icon24CheckCircleOn', 'check_circle_on_24', '0 0 24 24', '<symbol xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" id="check_circle_on_24"><path fill="currentColor" fill-rule="evenodd" d="M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12m6.207-14.793a1 1 0 0 0-1.414-1.414L10 14.586l-2.793-2.793a1 1 0 0 0-1.414 1.414l3.5 3.5a1 1 0 0 0 1.414 0z" clip-rule="evenodd" /></symbol>', 24, 24, false, undefined);

;// CONCATENATED MODULE: ./src/components/ActionSheetItem/subcomponents/Radio/Radio.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ActionSheetItem/subcomponents/Radio/Radio.tsx
function Radio_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Radio_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Radio_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Radio_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Radio_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Radio_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






var adaptiveIcon = /*#__PURE__*/ react.createElement(AdaptiveIconRenderer_AdaptiveIconRenderer, {
    IconCompact: Icon20CheckCircleOn,
    IconRegular: Icon24CheckCircleOn
});
var Radio_Radio = function(_param) {
    var _param_children = _param.children, children = _param_children === void 0 ? adaptiveIcon : _param_children, getRootRef = _param.getRootRef, getRef = _param.getRef, className = _param.className, style = _param.style, restProps = Radio_object_without_properties(_param, [
        "children",
        "getRootRef",
        "getRef",
        "className",
        "style"
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, {
        getRootRef: getRootRef,
        className: className,
        style: style
    }, /*#__PURE__*/ React.createElement(VisuallyHidden, Radio_object_spread({
        Component: "input",
        getRootRef: getRef,
        type: "radio",
        className: "vkuiActionSheetItemRadio__input"
    }, restProps)), children);
};

;// CONCATENATED MODULE: ./src/components/ActionSheetItem/ActionSheetItem.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ActionSheetItem/ActionSheetItem.tsx
function ActionSheetItem_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ActionSheetItem_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ActionSheetItem_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ActionSheetItem_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ActionSheetItem_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ActionSheetItem_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ActionSheetItem_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ActionSheetItem_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ActionSheetItem_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}













/**
 * @see https://vkcom.github.io/VKUI/#/ActionSheetItem
 */ var ActionSheetItem_ActionSheetItem = function(_param) {
    var children = _param.children, _param_autoCloseDisabled = _param.autoCloseDisabled, autoCloseDisabled = _param_autoCloseDisabled === void 0 ? false : _param_autoCloseDisabled, _param_mode = _param.mode, mode = _param_mode === void 0 ? 'default' : _param_mode, meta = _param.meta, subtitle = _param.subtitle, before = _param.before, after = _param.after, selectable = _param.selectable, value = _param.value, name = _param.name, checked = _param.checked, defaultChecked = _param.defaultChecked, onChange = _param.onChange, onClick = _param.onClick, onImmediateClick = _param.onImmediateClick, _param_multiline = _param.multiline, multiline = _param_multiline === void 0 ? false : _param_multiline, iconChecked = _param.iconChecked, className = _param.className, isCancelItem = _param.isCancelItem, restProps = ActionSheetItem_object_without_properties(_param, [
        "children",
        "autoCloseDisabled",
        "mode",
        "meta",
        "subtitle",
        "before",
        "after",
        "selectable",
        "value",
        "name",
        "checked",
        "defaultChecked",
        "onChange",
        "onClick",
        "onImmediateClick",
        "multiline",
        "iconChecked",
        "className",
        "isCancelItem"
    ]);
    var platform = usePlatform();
    var _React_useContext = React.useContext(ActionSheetContext), _React_useContext_onItemClick = _React_useContext.onItemClick, onItemClick = _React_useContext_onItemClick === void 0 ? function() {
        return noop;
    } : _React_useContext_onItemClick, actionSheetMode = _React_useContext.mode, onActionSheetClose = _React_useContext.onClose;
    var sizeY = useAdaptivityWithJSMediaQueries().sizeY;
    var Component = selectable ? 'label' : undefined;
    var isRich = subtitle || meta || selectable;
    var isCentered = !isRich && !before && platform === 'ios';
    var onItemClickHandler = React.useCallback(function(e) {
        var _onItemClick;
        (_onItemClick = onItemClick({
            action: onClick,
            immediateAction: onImmediateClick,
            autoClose: !autoCloseDisabled,
            isCancelItem: Boolean(isCancelItem)
        })) === null || _onItemClick === void 0 ? void 0 : _onItemClick(e);
    }, [
        autoCloseDisabled,
        isCancelItem,
        onClick,
        onImmediateClick,
        onItemClick
    ]);
    var onKeyDown = React.useCallback(function(event) {
        if (pressedKey(event) === Keys.ENTER) {
            onActionSheetClose === null || onActionSheetClose === void 0 ? void 0 : onActionSheetClose();
        }
    }, [
        onActionSheetClose
    ]);
    var onItemClickImpl = React.useCallback(function(event) {
        if (selectable) {
            if (isRealClickEvent(event)) {
                onItemClickHandler(event);
            }
        } else {
            onItemClickHandler(event);
        }
    }, [
        onItemClickHandler,
        selectable
    ]);
    return /*#__PURE__*/ React.createElement(Tappable, ActionSheetItem_object_spread_props(ActionSheetItem_object_spread({}, Component && {
        Component: Component
    }, restProps), {
        onClick: onItemClickImpl,
        activeMode: platform === 'ios' ? "vkuiActionSheetItem--active" : undefined,
        className: classNames("vkuiActionSheetItem", platform === 'ios' && "vkuiActionSheetItem--ios", mode === 'cancel' && "vkuiActionSheetItem--mode-cancel", mode === 'destructive' && "vkuiActionSheetItem--mode-destructive", sizeY === 'compact' && "vkuiActionSheetItem--sizeY-compact", isRich && "vkuiActionSheetItem--rich", actionSheetMode === 'menu' && "vkuiActionSheetItem--menu", selectable && "vkuiActionSheetItem--selectable", className),
        onKeyDown: onKeyDown
    }), before && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiActionSheetItem__before"
    }, before), /*#__PURE__*/ React.createElement("div", {
        className: classNames("vkuiActionSheetItem__container", !multiline && "vkuiActionSheetItem--ellipsis")
    }, /*#__PURE__*/ React.createElement("div", {
        className: classNames("vkuiActionSheetItem__content", isCentered && "vkuiActionSheetItem--centered")
    }, platform === 'ios' ? /*#__PURE__*/ React.createElement(Title, {
        className: "vkuiActionSheetItem__children",
        weight: mode === 'cancel' ? '2' : '3',
        level: isCentered ? '2' : '3'
    }, children) : /*#__PURE__*/ React.createElement(Text, {
        className: "vkuiActionSheetItem__children"
    }, children), meta && /*#__PURE__*/ React.createElement(Text, {
        className: "vkuiActionSheetItem__meta"
    }, meta)), subtitle && /*#__PURE__*/ React.createElement(Subhead, {
        className: "vkuiActionSheetItem__subtitle"
    }, subtitle)), (selectable || after) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiActionSheetItem__after"
    }, after, selectable && /*#__PURE__*/ React.createElement(Radio, {
        name: name,
        value: value,
        onChange: onChange,
        defaultChecked: defaultChecked,
        checked: checked,
        disabled: restProps.disabled
    }, iconChecked)));
};

;// CONCATENATED MODULE: ./src/components/ActionSheet/ActionSheetDefaultIosCloseItem.tsx
function ActionSheetDefaultIosCloseItem_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ActionSheetDefaultIosCloseItem_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ActionSheetDefaultIosCloseItem_define_property(target, key, source[key]);
        });
    }
    return target;
}

var ActionSheetDefaultIosCloseItem_ActionSheetDefaultIosCloseItem = function(props) {
    return /*#__PURE__*/ React.createElement(ActionSheetItem, ActionSheetDefaultIosCloseItem_object_spread({
        mode: "cancel",
        isCancelItem: true
    }, props), "Отмена");
};

;// CONCATENATED MODULE: ./src/hooks/useEffectDev.ts


var useEffectDev_useEffectDev = (/* unused pure expression or super */ null && ( false ? 0 : noop));

;// CONCATENATED MODULE: ./src/components/FloatingArrow/DefaultIcon.tsx
function DefaultIcon_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function DefaultIcon_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            DefaultIcon_define_property(target, key, source[key]);
        });
    }
    return target;
}

/**
 * Примечание 1.
 *
 * В компоненте, SVG элемент `<path />` представляет собой стрелку с платформой в виде прямоугольника в 1px. Платформа
 * служит для исправления проблемы с белой полоской между контентом и стрелкой, которая зачастую проявляется при
 * изменении масштаба страницы.
 *
 * Чтобы исправление сработало нужно:
 * 1. Прибавить высоту платформы к `height` и `viewBox` SVG контейнера.
 * 2. Сместить положение SVG контейнера на высоту платформы – сделано в CSS через `translateY(1px)`.
 *
 * https://github.com/VKCOM/VKUI/issues/2123
 */ var DEFAULT_ARROW_WIDTH = 20;
var DefaultIcon_DEFAULT_ARROW_HEIGHT = 8;
var DefaultIcon_DEFAULT_ARROW_PADDING = 10;
var PLATFORM_HEIGHT = 1;
var ARROW_HEIGHT_WITH_WHITE_SPACE = DefaultIcon_DEFAULT_ARROW_HEIGHT + PLATFORM_HEIGHT;
var DefaultIcon_DefaultIcon = function(props) {
    return /*#__PURE__*/ React.createElement("svg", DefaultIcon_object_spread({
        width: DEFAULT_ARROW_WIDTH,
        height: ARROW_HEIGHT_WITH_WHITE_SPACE,
        viewBox: "0 0 ".concat(DEFAULT_ARROW_WIDTH, " ").concat(ARROW_HEIGHT_WITH_WHITE_SPACE),
        xmlns: "http://www.w3.org/2000/svg"
    }, props), /*#__PURE__*/ React.createElement("path", {
        d: "M10 0c3 0 6 8 10 8v1H0V8c3.975 0 7-8 10-8Z",
        fill: "currentColor"
    }));
};

;// CONCATENATED MODULE: ./src/components/FloatingArrow/FloatingArrow.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/FloatingArrow/FloatingArrow.tsx
function FloatingArrow_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function FloatingArrow_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function FloatingArrow_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function FloatingArrow_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function FloatingArrow_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function FloatingArrow_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            FloatingArrow_define_property(target, key, source[key]);
        });
    }
    return target;
}
function FloatingArrow_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = FloatingArrow_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function FloatingArrow_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function FloatingArrow_sliced_to_array(arr, i) {
    return FloatingArrow_array_with_holes(arr) || FloatingArrow_iterable_to_array_limit(arr, i) || FloatingArrow_unsupported_iterable_to_array(arr, i) || FloatingArrow_non_iterable_rest();
}
function FloatingArrow_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return FloatingArrow_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return FloatingArrow_array_like_to_array(o, minLen);
}




var placementClassNames = {
    right: "vkuiFloatingArrow--placement-right",
    bottom: "vkuiFloatingArrow--placement-bottom",
    left: "vkuiFloatingArrow--placement-left"
};
/**
 * @private
 */ var FloatingArrow_FloatingArrow = function(_param) {
    var offset = _param.offset, isStaticOffset = _param.isStaticOffset, coords = _param.coords, iconStyle = _param.iconStyle, iconClassName = _param.iconClassName, _param_placement = _param.placement, placement = _param_placement === void 0 ? 'bottom' : _param_placement, getRootRef = _param.getRootRef, _param_Icon = _param.Icon, Icon = _param_Icon === void 0 ? DefaultIcon : _param_Icon, restProps = FloatingArrow_object_without_properties(_param, [
        "offset",
        "isStaticOffset",
        "coords",
        "iconStyle",
        "iconClassName",
        "placement",
        "getRootRef",
        "Icon"
    ]);
    var _getArrowPositionData = FloatingArrow_sliced_to_array(getArrowPositionData(placement, coords, offset, isStaticOffset), 2), arrowPlacement = _getArrowPositionData[0], arrowStyles = _getArrowPositionData[1];
    return /*#__PURE__*/ React.createElement("div", FloatingArrow_object_spread({
        ref: getRootRef,
        style: arrowStyles,
        className: classNames("vkuiFloatingArrow", arrowPlacement && placementClassNames[arrowPlacement])
    }, restProps), /*#__PURE__*/ React.createElement(Icon, {
        className: classNames("vkuiFloatingArrow__in", iconClassName),
        style: iconStyle
    }));
};
function getArrowPositionData(placement) {
    var coords = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
        x: 0,
        y: 0
    }, offset = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, isStaticOffset = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;
    var withOffset = function(isVerticalPlacement) {
        var parsedCoords = {
            x: coords.x || 0,
            y: coords.y || 0
        };
        if (isVerticalPlacement) {
            return isStaticOffset ? offset : parsedCoords.y + offset;
        } else {
            return isStaticOffset ? offset : parsedCoords.x + offset;
        }
    };
    if (placement.startsWith('top')) {
        var xOffsetProp = getXOffsetProp(placement, isStaticOffset);
        return [
            'bottom',
            FloatingArrow_define_property({
                top: '100%'
            }, xOffsetProp, withOffset(false))
        ];
    } else if (placement.startsWith('right')) {
        var yOffsetProp = getYOffsetProp(placement, isStaticOffset);
        var _obj;
        return [
            'left',
            (_obj = {}, FloatingArrow_define_property(_obj, yOffsetProp, withOffset(true)), FloatingArrow_define_property(_obj, "left", 0), _obj)
        ];
    } else if (placement.startsWith('bottom')) {
        var xOffsetProp1 = getXOffsetProp(placement, isStaticOffset);
        return [
            undefined,
            FloatingArrow_define_property({
                bottom: '100%'
            }, xOffsetProp1, withOffset(false))
        ];
    } else {
        var yOffsetProp1 = getYOffsetProp(placement, isStaticOffset);
        var _obj1;
        return [
            'right',
            (_obj1 = {}, FloatingArrow_define_property(_obj1, yOffsetProp1, withOffset(true)), FloatingArrow_define_property(_obj1, "right", 0), _obj1)
        ];
    }
}
function getXOffsetProp(placement, isStaticOffset) {
    return placement.endsWith('end') && isStaticOffset ? 'right' : 'left';
}
function getYOffsetProp(placement, isStaticOffset) {
    return placement.endsWith('end') && isStaticOffset ? 'bottom' : 'top';
}

;// CONCATENATED MODULE: ./src/components/Popper/Popper.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Popper/Popper.tsx
function Popper_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Popper_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Popper_array_without_holes(arr) {
    if (Array.isArray(arr)) return Popper_array_like_to_array(arr);
}
function Popper_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Popper_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function Popper_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Popper_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Popper_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Popper_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Popper_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Popper_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Popper_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Popper_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Popper_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Popper_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Popper_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Popper_sliced_to_array(arr, i) {
    return Popper_array_with_holes(arr) || Popper_iterable_to_array_limit(arr, i) || Popper_unsupported_iterable_to_array(arr, i) || Popper_non_iterable_rest();
}
function Popper_to_consumable_array(arr) {
    return Popper_array_without_holes(arr) || Popper_iterable_to_array(arr) || Popper_unsupported_iterable_to_array(arr) || Popper_non_iterable_spread();
}
function Popper_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Popper_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Popper_array_like_to_array(o, minLen);
}









/**
 * @see https://vkcom.github.io/VKUI/#/Popper
 */ var Popper_Popper = function(_param) {
    var tmp = _param.// UseFloatingMiddlewaresBootstrapProps
    placement, placementProp = tmp === void 0 ? 'bottom-start' : tmp, sameWidth = _param.sameWidth, hideWhenReferenceHidden = _param.hideWhenReferenceHidden, _param_offsetByMainAxis = _param.offsetByMainAxis, offsetByMainAxis = _param_offsetByMainAxis === void 0 ? 8 : _param_offsetByMainAxis, _param_offsetByCrossAxis = _param.offsetByCrossAxis, offsetByCrossAxis = _param_offsetByCrossAxis === void 0 ? 0 : _param_offsetByCrossAxis, arrow = _param.arrow, _param_arrowHeight = _param.arrowHeight, arrowHeight = _param_arrowHeight === void 0 ? DEFAULT_ARROW_HEIGHT : _param_arrowHeight, _param_arrowPadding = _param.arrowPadding, arrowPadding = _param_arrowPadding === void 0 ? DEFAULT_ARROW_PADDING : _param_arrowPadding, customMiddlewares = _param.customMiddlewares, _param_disableFlipMiddleware = _param.disableFlipMiddleware, disableFlipMiddleware = _param_disableFlipMiddleware === void 0 ? false : _param_disableFlipMiddleware, _param_autoUpdateOnTargetResize = _param.// UseFloatingProps
    autoUpdateOnTargetResize, autoUpdateOnTargetResize = _param_autoUpdateOnTargetResize === void 0 ? false : _param_autoUpdateOnTargetResize, // ArrowProps
    arrowProps = _param.arrowProps, _param_ArrowIcon = _param.ArrowIcon, ArrowIcon = _param_ArrowIcon === void 0 ? DefaultIcon : _param_ArrowIcon, // rest
    targetRef = _param.targetRef, getRootRef = _param.getRootRef, children = _param.children, _param_usePortal = _param.usePortal, usePortal = _param_usePortal === void 0 ? true : _param_usePortal, styleProp = _param.style, onPlacementChange = _param.onPlacementChange, restProps = Popper_object_without_properties(_param, [
        "placement",
        "sameWidth",
        "hideWhenReferenceHidden",
        "offsetByMainAxis",
        "offsetByCrossAxis",
        "arrow",
        "arrowHeight",
        "arrowPadding",
        "customMiddlewares",
        "disableFlipMiddleware",
        "autoUpdateOnTargetResize",
        "arrowProps",
        "ArrowIcon",
        "targetRef",
        "getRootRef",
        "children",
        "usePortal",
        "style",
        "onPlacementChange"
    ]);
    var _React_useState = Popper_sliced_to_array(React.useState(null), 2), arrowRef = _React_useState[0], setArrowRef = _React_useState[1];
    var _useFloatingMiddlewaresBootstrap = useFloatingMiddlewaresBootstrap({
        placement: placementProp,
        sameWidth: sameWidth,
        arrow: arrow,
        arrowRef: arrowRef,
        arrowHeight: arrowHeight,
        arrowPadding: arrowPadding,
        offsetByMainAxis: offsetByMainAxis,
        offsetByCrossAxis: offsetByCrossAxis,
        hideWhenReferenceHidden: hideWhenReferenceHidden,
        customMiddlewares: customMiddlewares,
        disableFlipMiddleware: disableFlipMiddleware
    }), strictPlacement = _useFloatingMiddlewaresBootstrap.strictPlacement, middlewares = _useFloatingMiddlewaresBootstrap.middlewares;
    var _useFloating = useFloating({
        placement: strictPlacement,
        middleware: middlewares,
        whileElementsMounted: function whileElementsMounted() {
            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
                args[_key] = arguments[_key];
            }
            /* istanbul ignore next: не знаю как проверить */ return autoUpdateFloatingElement.apply(void 0, Popper_to_consumable_array(args).concat([
                {
                    elementResize: autoUpdateOnTargetResize
                }
            ]));
        }
    }), floatingDataX = _useFloating.x, floatingDataY = _useFloating.y, floatingPositionStrategy = _useFloating.strategy, resolvedPlacement = _useFloating.placement, refs = _useFloating.refs, middlewareData = _useFloating.middlewareData;
    usePlacementChangeCallback(placementProp, resolvedPlacement, onPlacementChange);
    var arrowCoords = middlewareData.arrow;
    var handleRootRef = useExternRef(refs.setFloating, getRootRef);
    useIsomorphicLayoutEffect(function() {
        refs.setReference('current' in targetRef ? targetRef.current : targetRef);
    }, [
        refs.setReference,
        targetRef
    ]);
    var dropdown = /*#__PURE__*/ React.createElement(RootComponent, Popper_object_spread_props(Popper_object_spread({}, restProps), {
        baseClassName: "vkuiPopper",
        getRootRef: handleRootRef,
        style: Popper_object_spread({}, styleProp, convertFloatingDataToReactCSSProperties(floatingPositionStrategy, floatingDataX, floatingDataY, sameWidth ? null : undefined, middlewareData))
    }), arrow && /*#__PURE__*/ React.createElement(FloatingArrow, Popper_object_spread_props(Popper_object_spread({}, arrowProps), {
        coords: arrowCoords,
        placement: resolvedPlacement,
        getRootRef: setArrowRef,
        Icon: ArrowIcon
    })), children);
    return /*#__PURE__*/ React.createElement(AppRootPortal, {
        usePortal: usePortal
    }, dropdown);
};

;// CONCATENATED MODULE: ./src/components/ActionSheet/ActionSheet.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ActionSheet/ActionSheetDropdownMenu.tsx
function ActionSheetDropdownMenu_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ActionSheetDropdownMenu_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ActionSheetDropdownMenu_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ActionSheetDropdownMenu_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ActionSheetDropdownMenu_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ActionSheetDropdownMenu_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ActionSheetDropdownMenu_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ActionSheetDropdownMenu_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ActionSheetDropdownMenu_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}












var ActionSheetDropdownMenu_warn = warnOnce('ActionSheet');
function getEl(ref) {
    return ref && 'current' in ref ? ref.current : ref;
}
var ActionSheetDropdownMenu_ActionSheetDropdownMenu = function(_param) {
    var children = _param.children, toggleRef = _param.toggleRef, closing = _param.closing, onClose = _param.onClose, className = _param.className, style = _param.style, _param_popupOffsetDistance = _param.popupOffsetDistance, popupOffsetDistance = _param_popupOffsetDistance === void 0 ? 0 : _param_popupOffsetDistance, placement = _param.placement, onAnimationStart = _param.onAnimationStart, onAnimationEnd = _param.onAnimationEnd, restProps = ActionSheetDropdownMenu_object_without_properties(_param, [
        "children",
        "toggleRef",
        "closing",
        "onClose",
        "className",
        "style",
        "popupOffsetDistance",
        "placement",
        "onAnimationStart",
        "onAnimationEnd"
    ]);
    var document = useDOM().document;
    var platform = usePlatform();
    var sizeY = useAdaptivityWithJSMediaQueries().sizeY;
    var elementRef = React.useRef(null);
    useEffectDev(function() {
        var toggleEl = getEl(toggleRef);
        if (!toggleEl) {
            ActionSheetDropdownMenu_warn('Свойство "toggleRef" не передано', 'error');
        }
    }, [
        toggleRef
    ]);
    var bodyClickListener = useEventListener('click', function(e) {
        var dropdownElement = elementRef === null || elementRef === void 0 ? void 0 : elementRef.current;
        if (dropdownElement && !dropdownElement.contains(e.target)) {
            onClose === null || onClose === void 0 ? void 0 : onClose();
        }
    });
    React.useEffect(function() {
        setTimeout(function() {
            bodyClickListener.add(document.body);
        });
    }, [
        bodyClickListener,
        document
    ]);
    var onClick = React.useCallback(function(e) {
        return e.stopPropagation();
    }, []);
    var targetRef = React.useMemo(function() {
        if (isRefObject(toggleRef)) {
            return toggleRef;
        }
        return {
            current: toggleRef
        };
    }, [
        toggleRef
    ]);
    return /*#__PURE__*/ React.createElement(Popper, {
        targetRef: targetRef,
        offsetByMainAxis: popupOffsetDistance,
        placement: placement,
        className: classNames("vkuiActionSheet", platform === 'ios' && "vkuiActionSheet--ios", "vkuiActionSheet--menu", closing ? "vkuiActionSheet--closing" : "vkuiActionSheet--opening", sizeY === 'compact' && "vkuiActionSheet--sizeY-compact", className),
        style: style,
        getRootRef: elementRef,
        usePortal: false,
        onAnimationStart: onAnimationStart,
        onAnimationEnd: onAnimationEnd
    }, /*#__PURE__*/ React.createElement(FocusTrap, ActionSheetDropdownMenu_object_spread_props(ActionSheetDropdownMenu_object_spread({
        onClose: onClose
    }, restProps), {
        onClick: onClick
    }), children));
};

;// CONCATENATED MODULE: ./src/components/ActionSheet/ActionSheetDropdownSheet.tsx
function ActionSheetDropdownSheet_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ActionSheetDropdownSheet_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ActionSheetDropdownSheet_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ActionSheetDropdownSheet_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ActionSheetDropdownSheet_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ActionSheetDropdownSheet_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ActionSheetDropdownSheet_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ActionSheetDropdownSheet_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ActionSheetDropdownSheet_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






var ActionSheetDropdownSheet_stopPropagation = function(e) {
    return e.stopPropagation();
};
var ActionSheetDropdownSheet_ActionSheetDropdownSheet = function(_param) {
    var children = _param.children, closing = _param.closing, // these 2 props are only omitted - ActionSheetDesktop compat
    toggleRef = _param.toggleRef, className = _param.className, restProps = ActionSheetDropdownSheet_object_without_properties(_param, [
        "children",
        "closing",
        "toggleRef",
        "className"
    ]);
    var sizeY = useAdaptivityWithJSMediaQueries().sizeY;
    var platform = usePlatform();
    return /*#__PURE__*/ React.createElement(FocusTrap, ActionSheetDropdownSheet_object_spread_props(ActionSheetDropdownSheet_object_spread({}, restProps), {
        onClick: ActionSheetDropdownSheet_stopPropagation,
        className: classNames("vkuiActionSheet", platform === 'ios' && "vkuiActionSheet--ios", closing ? "vkuiActionSheet--closing" : "vkuiActionSheet--opening", sizeY === 'compact' && "vkuiActionSheet--sizeY-compact", className)
    }), children);
};

;// CONCATENATED MODULE: ./src/components/ActionSheet/ActionSheet.tsx
function ActionSheet_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function ActionSheet_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function ActionSheet_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ActionSheet_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function ActionSheet_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function ActionSheet_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ActionSheet_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ActionSheet_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ActionSheet_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ActionSheet_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ActionSheet_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ActionSheet_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ActionSheet_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function ActionSheet_sliced_to_array(arr, i) {
    return ActionSheet_array_with_holes(arr) || ActionSheet_iterable_to_array_limit(arr, i) || ActionSheet_unsupported_iterable_to_array(arr, i) || ActionSheet_non_iterable_rest();
}
function ActionSheet_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return ActionSheet_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ActionSheet_array_like_to_array(o, minLen);
}














/**
 * @see https://vkcom.github.io/VKUI/#/ActionSheet
 */ var ActionSheet = function(_param) {
    var children = _param.children, className = _param.className, header = _param.header, text = _param.text, style = _param.style, iosCloseItem = _param.iosCloseItem, popupOffsetDistance = _param.popupOffsetDistance, placement = _param.placement, modeProp = _param.mode, onClose = _param.onClose, restProps = ActionSheet_object_without_properties(_param, [
        "children",
        "className",
        "header",
        "text",
        "style",
        "iosCloseItem",
        "popupOffsetDistance",
        "placement",
        "mode",
        "onClose"
    ]);
    var platform = usePlatform();
    var _React_useState = ActionSheet_sliced_to_array(React.useState(undefined), 2), closingBy = _React_useState[0], setClosingBy = _React_useState[1];
    var onCloseWithOther = function() {
        return setClosingBy('other');
    };
    var actionCallbackRef = React.useRef(noop);
    var _useCSSKeyframesAnimationController = ActionSheet_sliced_to_array(useCSSKeyframesAnimationController(closingBy !== undefined ? 'exit' : 'enter', {
        onExited: function onExited() {
            onClose({
                closedBy: closingBy || 'other'
            });
            actionCallbackRef.current();
            actionCallbackRef.current = noop;
        }
    }), 2), animationState = _useCSSKeyframesAnimationController[0], animationHandlers = _useCSSKeyframesAnimationController[1];
    var isDesktop = useAdaptivityWithJSMediaQueries().isDesktop;
    var mode = modeProp !== null && modeProp !== void 0 ? modeProp : isDesktop ? 'menu' : 'sheet';
    useScrollLock(mode === 'sheet');
    var onItemClick = React.useCallback(function(param) {
        var action = param.action, immediateAction = param.immediateAction, autoClose = param.autoClose, isCancelItem = param.isCancelItem;
        return function(event) {
            event.persist();
            immediateAction && immediateAction(event);
            if (autoClose) {
                if (action) {
                    actionCallbackRef.current = function() {
                        return action(event);
                    };
                }
                setClosingBy(isCancelItem ? 'cancel-item' : 'action-item');
            } else {
                action && action(event);
            }
        };
    }, []);
    var contextValue = useObjectMemo({
        onItemClick: onItemClick,
        mode: mode,
        onClose: onCloseWithOther
    });
    var DropdownComponent = mode === 'menu' ? ActionSheetDropdownMenu : ActionSheetDropdownSheet;
    var dropdownProps = mode === 'menu' ? Object.assign(restProps, {
        popupOffsetDistance: popupOffsetDistance,
        placement: placement
    }) : restProps;
    var actionSheet = /*#__PURE__*/ React.createElement(ActionSheetContext.Provider, {
        value: contextValue
    }, /*#__PURE__*/ React.createElement(DropdownComponent, ActionSheet_object_spread_props(ActionSheet_object_spread({
        closing: Boolean(closingBy),
        role: "dialog",
        "aria-modal": "true",
        autoFocus: animationState === 'entered'
    }, dropdownProps, animationHandlers), {
        onClose: onCloseWithOther,
        className: mode === 'menu' ? className : undefined,
        style: mode === 'menu' ? style : undefined
    }), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiActionSheet__content-wrapper"
    }, (header || text) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiActionSheet__header"
    }, header && /*#__PURE__*/ React.createElement(Footnote, {
        weight: "2",
        className: "vkuiActionSheet__title"
    }, header), text && /*#__PURE__*/ React.createElement(Footnote, {
        className: "vkuiActionSheet__text"
    }, text)), children), platform === 'ios' && mode === 'sheet' && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiActionSheet__close-item-wrapper--ios"
    }, iosCloseItem !== null && iosCloseItem !== void 0 ? iosCloseItem : /*#__PURE__*/ React.createElement(ActionSheetDefaultIosCloseItem, null))));
    if (mode === 'menu') {
        return actionSheet;
    }
    return /*#__PURE__*/ React.createElement(PopoutWrapper, {
        closing: Boolean(closingBy),
        alignY: "bottom",
        className: className,
        style: style,
        onClick: onCloseWithOther,
        fixed: true
    }, actionSheet);
};

;// CONCATENATED MODULE: ./src/components/ScreenSpinner/context.ts

var ScreenSpinnerContext = react.createContext({
    state: 'loading',
    caption: undefined
});

;// CONCATENATED MODULE: ./src/components/ScreenSpinner/ScreenSpinner.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ScreenSpinner/ScreenSpinnerContainer.tsx
function ScreenSpinnerContainer_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ScreenSpinnerContainer_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ScreenSpinnerContainer_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ScreenSpinnerContainer_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ScreenSpinnerContainer_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ScreenSpinnerContainer_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






var stateClassNames = {
    cancelable: "vkuiScreenSpinner--state-cancelable",
    done: "vkuiScreenSpinner--state-done",
    error: "vkuiScreenSpinner--state-error"
};
var ScreenSpinnerContainer_modeClassNames = {
    shadow: "vkuiScreenSpinner--mode-shadow",
    overlay: "vkuiScreenSpinner--mode-overlay"
};
var ScreenSpinnerContainer = function(_param) {
    var _param_state = _param.state, state = _param_state === void 0 ? 'loading' : _param_state, _param_mode = _param.mode, mode = _param_mode === void 0 ? 'shadow' : _param_mode, caption = _param.caption, children = _param.children, restProps = ScreenSpinnerContainer_object_without_properties(_param, [
        "state",
        "mode",
        "caption",
        "children"
    ]);
    return /*#__PURE__*/ react.createElement(ScreenSpinnerContext.Provider, {
        value: {
            state: state,
            caption: caption
        }
    }, /*#__PURE__*/ react.createElement(RootComponent_RootComponent, ScreenSpinnerContainer_object_spread({
        baseClassName: clsx("vkuiScreenSpinner", ScreenSpinnerContainer_modeClassNames[mode], state !== 'loading' && stateClassNames[state], react_utils_hasReactNode(caption) && "vkuiScreenSpinner--has-caption")
    }, restProps), /*#__PURE__*/ react.createElement("div", {
        className: "vkuiScreenSpinner__icon-slot"
    }, children), react_utils_hasReactNode(caption) && /*#__PURE__*/ react.createElement(Footnote_Footnote, {
        className: "vkuiScreenSpinner__caption",
        "aria-hidden": true
    }, caption)));
};
ScreenSpinnerContainer.displayName = 'ScreenSpinnerContainer';

;// CONCATENATED MODULE: ./src/components/ScreenSpinner/ScreenSpinnerLoader.tsx
function ScreenSpinnerLoader_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ScreenSpinnerLoader_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ScreenSpinnerLoader_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ScreenSpinnerLoader_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ScreenSpinnerLoader_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ScreenSpinnerLoader_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





var ScreenSpinnerLoader = function(_param) {
    var _param_size = _param.size, size = _param_size === void 0 ? 'large' : _param_size, children = _param.children, restProps = ScreenSpinnerLoader_object_without_properties(_param, [
        "size",
        "children"
    ]);
    var caption = react.useContext(ScreenSpinnerContext).caption;
    // TODO [>=7]: см. https://github.com/VKCOM/VKUI/pull/7505#discussion_r1754153438
    var a11yText = children ? children : caption !== null && caption !== void 0 ? caption : 'Пожалуйста, подождите...';
    return /*#__PURE__*/ react.createElement(Spinner_Spinner, ScreenSpinnerLoader_object_spread({
        className: clsx("vkuiScreenSpinner__spinner", !caption && "vkuiScreenSpinner__spinner--transition"),
        size: size,
        noColor: true
    }, restProps), a11yText);
};
ScreenSpinnerLoader.displayName = 'ScreenSpinnerLoader';

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/24/cancel_24.js
'use client';

var cancel_24_Icon24Cancel = makeIcon('Icon24Cancel', 'cancel_24', '0 0 24 24', '<symbol xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24" id="cancel_24"><path d="M7.536 6.264a.9.9 0 0 0-1.272 1.272L10.727 12l-4.463 4.464a.9.9 0 0 0 1.272 1.272L12 13.273l4.464 4.463a.9.9 0 1 0 1.272-1.272L13.273 12l4.463-4.464a.9.9 0 1 0-1.272-1.272L12 10.727z" /></symbol>', 24, 24, false, undefined);

;// CONCATENATED MODULE: ./src/components/ScreenSpinner/Icon48CancelCircle.tsx
function Icon48CancelCircle_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Icon48CancelCircle_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Icon48CancelCircle_define_property(target, key, source[key]);
        });
    }
    return target;
}

var Icon48CancelCircle = function(props) {
    return /*#__PURE__*/ react.createElement("svg", Icon48CancelCircle_object_spread({
        className: "vkuiIcon",
        width: "48",
        height: "48",
        viewBox: "0 0 48 48",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
    }, props), /*#__PURE__*/ react.createElement("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M40 24c0 8.837-7.163 16-16 16S8 32.837 8 24 15.163 8 24 8s16 7.163 16 16Zm-10.08-4.33a1.125 1.125 0 0 0-1.59-1.59L24 22.409l-4.33-4.33a1.125 1.125 0 0 0-1.59 0l-.101.116a1.125 1.125 0 0 0 .1 1.476L22.41 24l-4.33 4.33a1.125 1.125 0 0 0 1.591 1.59L24 25.591l4.33 4.33c.439.439 1.151.439 1.59 0l.101-.116a1.125 1.125 0 0 0-.1-1.476L25.59 24l4.33-4.33Z",
        fill: "currentColor"
    }));
};

;// CONCATENATED MODULE: ./src/components/ScreenSpinner/Icon48DoneOutline.tsx
function Icon48DoneOutline_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Icon48DoneOutline_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Icon48DoneOutline_define_property(target, key, source[key]);
        });
    }
    return target;
}

var Icon48DoneOutline = function(props) {
    return /*#__PURE__*/ react.createElement("svg", Icon48DoneOutline_object_spread({
        className: "vkuiIcon",
        width: "48",
        height: "48",
        viewBox: "0 0 48 48",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
    }, props), /*#__PURE__*/ react.createElement("path", {
        d: "M9 24L19 34L39 14",
        stroke: "currentColor",
        strokeWidth: "3.5",
        strokeLinecap: "round",
        strokeLinejoin: "round"
    }));
};

;// CONCATENATED MODULE: ./src/components/ScreenSpinner/ScreenSpinnerSwapIcon.tsx
function ScreenSpinnerSwapIcon_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ScreenSpinnerSwapIcon_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ScreenSpinnerSwapIcon_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ScreenSpinnerSwapIcon_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ScreenSpinnerSwapIcon_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ScreenSpinnerSwapIcon_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ScreenSpinnerSwapIcon_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ScreenSpinnerSwapIcon_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ScreenSpinnerSwapIcon_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}









var ScreenSpinnerCancelIcon = function(_param) {
    var onKeyDown = _param.onKeyDown, tmp = _param['aria-label'], ariaLabel = tmp === void 0 ? 'Отменить' : tmp, restProps = ScreenSpinnerSwapIcon_object_without_properties(_param, [
        "onKeyDown",
        'aria-label'
    ]);
    var handlers = mergeCalls({
        onKeyDown: clickByKeyboardHandler
    }, {
        onKeyDown: onKeyDown
    });
    var clickableProps = ScreenSpinnerSwapIcon_object_spread_props(ScreenSpinnerSwapIcon_object_spread({}, handlers), {
        'tabIndex': 0,
        'role': 'button',
        'aria-label': ariaLabel
    });
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, ScreenSpinnerSwapIcon_object_spread({
        baseClassName: "vkuiScreenSpinner__icon"
    }, clickableProps, restProps), /*#__PURE__*/ react.createElement(cancel_24_Icon24Cancel, null));
};
ScreenSpinnerCancelIcon.displayName = 'ScreenSpinnerCancelIcon';
var ScreenSpinnerSwapIcon = function(_param) {
    var cancelLabel = _param.cancelLabel, restProps = ScreenSpinnerSwapIcon_object_without_properties(_param, [
        "cancelLabel"
    ]);
    var state = react.useContext(ScreenSpinnerContext).state;
    if (state === 'cancelable') {
        return /*#__PURE__*/ react.createElement(ScreenSpinnerCancelIcon, ScreenSpinnerSwapIcon_object_spread({
            "aria-label": cancelLabel
        }, restProps));
    }
    var Icon = {
        loading: function() {
            return null;
        },
        done: Icon48DoneOutline,
        error: Icon48CancelCircle
    }[state];
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, ScreenSpinnerSwapIcon_object_spread({
        baseClassName: "vkuiScreenSpinner__icon"
    }, restProps), /*#__PURE__*/ react.createElement(Icon, null));
};
ScreenSpinnerSwapIcon.displayName = 'ScreenSpinnerSwapIcon';

;// CONCATENATED MODULE: ./src/components/ScreenSpinner/ScreenSpinner.tsx
function ScreenSpinner_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ScreenSpinner_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ScreenSpinner_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






/**
 * @see https://vkcom.github.io/VKUI/#/ScreenSpinner
 */ var ScreenSpinner = function(_param) {
    var style = _param.style, className = _param.className, _param_state = _param.state, state = _param_state === void 0 ? 'loading' : _param_state, onClick = _param.onClick, cancelLabel = _param.cancelLabel, mode = _param.mode, caption = _param.caption, restProps = ScreenSpinner_object_without_properties(_param, [
        "style",
        "className",
        "state",
        "onClick",
        "cancelLabel",
        "mode",
        "caption"
    ]);
    ScrollContext_useScrollLock();
    return /*#__PURE__*/ react.createElement(PopoutWrapper_PopoutWrapper, {
        className: className,
        style: style,
        noBackground: true
    }, /*#__PURE__*/ react.createElement(ScreenSpinnerContainer, {
        state: state,
        mode: mode,
        caption: caption
    }, /*#__PURE__*/ react.createElement(ScreenSpinnerLoader, restProps), /*#__PURE__*/ react.createElement(ScreenSpinnerSwapIcon, {
        onClick: onClick,
        cancelLabel: cancelLabel
    })));
};
ScreenSpinner.displayName = 'ScreenSpinner';
ScreenSpinner.Container = ScreenSpinnerContainer;
ScreenSpinner.Container.displayName = 'ScreenSpinner.Container';
ScreenSpinner.Loader = ScreenSpinnerLoader;
ScreenSpinner.Loader.displayName = 'ScreenSpinner.Loader';
ScreenSpinner.SwapIcon = ScreenSpinnerSwapIcon;
ScreenSpinner.SwapIcon.displayName = 'ScreenSpinner.SwapIcon';

;// CONCATENATED MODULE: ./src/hooks/useGlobalEscKeyDown.ts



var useGlobalEscKeyDown_EVENT_OPTIONS = {
    passive: true,
    capture: true
};
/**
 * Завязывается на document.
 *
 * @private
 */ var useGlobalEscKeyDown_useGlobalEscKeyDown = function(init, callback) {
    var document = dom_useDOM().document;
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function() {
        if (!document || !init || !callback) {
            return;
        }
        var handleKeyDown = function(event) {
            if (accessibility_pressedKey(event) === accessibility_Keys.ESCAPE) {
                callback(event);
            }
        };
        document.addEventListener('keydown', handleKeyDown, useGlobalEscKeyDown_EVENT_OPTIONS);
        return function() {
            document.removeEventListener('keydown', handleKeyDown, useGlobalEscKeyDown_EVENT_OPTIONS);
        };
    }, [
        init,
        document,
        callback
    ]);
};

;// CONCATENATED MODULE: ./src/components/Snackbar/subcomponents/Basic/Basic.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Snackbar/subcomponents/Basic/Basic.tsx
function Basic_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Basic_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Basic_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Basic_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Basic_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Basic_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Basic_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Basic_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Basic_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}







var stylesLayout = {
    none: "vkuiSnackbar--layout-none",
    vertical: "vkuiSnackbar--layout-vertical",
    horizontal: "vkuiSnackbar--layout-horizontal"
};
var Basic_sizeYClassNames = {
    none: "vkuiSnackbar--sizeY-none",
    regular: "vkuiSnackbar--sizeY-regular"
};
function Basic(_param) {
    var layoutProps = _param.layout, action = _param.action, after = _param.after, before = _param.before, mode = _param.mode, subtitle = _param.subtitle, children = _param.children, restProps = Basic_object_without_properties(_param, [
        "layout",
        "action",
        "after",
        "before",
        "mode",
        "subtitle",
        "children"
    ]);
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var layout = after || subtitle ? 'vertical' : 'none';
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, Basic_object_spread_props(Basic_object_spread({}, restProps), {
        baseClassName: clsx("vkuiSnackbar__body", stylesLayout[layoutProps || layout], sizeY !== 'compact' && Basic_sizeYClassNames[sizeY], mode === 'dark' && "vkuiSnackbar--mode-dark")
    }), before && /*#__PURE__*/ react.createElement("div", {
        className: "vkuiSnackbar__before"
    }, before), /*#__PURE__*/ react.createElement("div", {
        className: "vkuiSnackbar__content"
    }, /*#__PURE__*/ react.createElement(Paragraph_Paragraph, {
        className: "vkuiSnackbar__content-text"
    }, children), subtitle && !action && /*#__PURE__*/ react.createElement(Subhead_Subhead, {
        className: "vkuiSnackbar__content-subtitle"
    }, subtitle), action && !subtitle && /*#__PURE__*/ react.createElement("div", {
        className: "vkuiSnackbar__action"
    }, action)), after && /*#__PURE__*/ react.createElement("div", {
        className: "vkuiSnackbar__after"
    }, after));
}

;// CONCATENATED MODULE: ./src/components/Snackbar/utils.ts
function utils_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function utils_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            utils_define_property(target, key, source[key]);
        });
    }
    return target;
}
function utils_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function utils_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        utils_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}

function resolveOffsetYCssStyle(placement, style, offsetY) {
    if (offsetY === undefined) {
        return style;
    }
    switch(placement){
        case 'top-start':
        case 'top':
        case 'top-end':
            return utils_object_spread_props(utils_object_spread({}, style), {
                top: offsetY
            });
        case 'bottom-start':
        case 'bottom':
        case 'bottom-end':
            return utils_object_spread_props(utils_object_spread({}, style), {
                bottom: offsetY
            });
    }
}
function getInitialShiftData(width, height, mediaQueries) {
    return {
        shifted: false,
        direction: null,
        isDesktop: mediaQueries.smallTabletPlus.matches,
        x: 0,
        y: 0,
        width: width,
        height: height
    };
}
function getMovedShiftData(placement, shiftData, nextShift) {
    /* istanbul ignore else: TODO чтобы протестировать кейс в блоке else, нужно мокать useMediaQueries(), чтобы перебивать mediaQueries.smallTabletPlus.matches */ if (shiftData.isDesktop) {
        if (placement.endsWith('start')) {
            shiftData.x = rubberbandIfOutOfBounds(nextShift.x, -shiftData.width, 0);
        } else if (placement.endsWith('end')) {
            shiftData.x = rubberbandIfOutOfBounds(nextShift.x, 0, shiftData.width);
        }
        if (placement.startsWith('bottom')) {
            shiftData.y = rubberbandIfOutOfBounds(nextShift.y, 0, shiftData.height);
        }
    } else if (placement.startsWith('bottom')) {
        shiftData.x = nextShift.x;
        var movingToLeft = nextShift.x < 0 ? -1 : null;
        var movingToRight = nextShift.x > 0 ? 1 : null;
        shiftData.direction = movingToLeft || movingToRight;
    }
    if (placement.startsWith('top')) {
        shiftData.y = rubberbandIfOutOfBounds(nextShift.y, -shiftData.height, 0);
    }
    shiftData.shifted = true;
    return shiftData;
}
var MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE = 200;
function shouldBeClosedByShiftData(placement, shiftData, relativeClientRect, velocity) {
    if (!shiftData.shifted) {
        return false;
    }
    var shouldBeClosedThreshold = {
        x: false,
        y: false
    };
    var shouldBeClosedByVelocity = {
        x: false,
        y: false
    };
    /* istanbul ignore else: TODO чтобы протестировать кейс в блоке else, нужно мокать useMediaQueries(), чтобы перебивать mediaQueries.smallTabletPlus.matches */ if (shiftData.isDesktop) {
        if (placement.endsWith('start')) {
            shouldBeClosedThreshold.x = relativeClientRect.x < -relativeClientRect.width / 2;
            shouldBeClosedByVelocity.x = relativeClientRect.x < 0 ? velocity.x < -MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE : false;
        } else if (placement.endsWith('end')) {
            shouldBeClosedThreshold.x = relativeClientRect.x > relativeClientRect.width / 2;
            shouldBeClosedByVelocity.x = relativeClientRect.x > 0 ? velocity.x > MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE : false;
        }
        if (placement.startsWith('bottom')) {
            shouldBeClosedThreshold.y = relativeClientRect.y > relativeClientRect.height / 2;
            shouldBeClosedByVelocity.y = relativeClientRect.y > 0 ? velocity.y > MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE : false;
        }
    } else if (placement.startsWith('bottom')) {
        shouldBeClosedThreshold.x = relativeClientRect.x < -relativeClientRect.width / 2 || relativeClientRect.x > relativeClientRect.width / 2;
        shouldBeClosedByVelocity.x = relativeClientRect.x < 0 && velocity.x < -MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE || relativeClientRect.x > 0 && velocity.x > MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE;
    }
    if (placement.startsWith('top')) {
        shouldBeClosedThreshold.y = relativeClientRect.y < -relativeClientRect.height / 2;
        shouldBeClosedByVelocity.y = relativeClientRect.y < 0 ? velocity.y < -MINIMUM_PAN_GESTURE_FOR_TRIGGER_CLOSE : false;
    }
    return shouldBeClosedThreshold.x || shouldBeClosedByVelocity.x || shouldBeClosedThreshold.y || /* istanbul ignore next: подсвечивает жёлтым и пишет "branch not covered" */ shouldBeClosedByVelocity.y;
}

;// CONCATENATED MODULE: ./src/components/Snackbar/Snackbar.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Snackbar/Snackbar.tsx
function Snackbar_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Snackbar_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Snackbar_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Snackbar_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Snackbar_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Snackbar_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Snackbar_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Snackbar_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Snackbar_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Snackbar_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Snackbar_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Snackbar_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Snackbar_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Snackbar_sliced_to_array(arr, i) {
    return Snackbar_array_with_holes(arr) || Snackbar_iterable_to_array_limit(arr, i) || Snackbar_unsupported_iterable_to_array(arr, i) || Snackbar_non_iterable_rest();
}
function Snackbar_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Snackbar_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Snackbar_array_like_to_array(o, minLen);
}
















var Snackbar_placementClassNames = {
    'top-start': "vkuiSnackbar--placement-top-start",
    'top': "vkuiSnackbar--placement-top",
    'top-end': "vkuiSnackbar--placement-top-end",
    'bottom-start': "vkuiSnackbar--placement-bottom-start",
    'bottom': "vkuiSnackbar--placement-bottom",
    'bottom-end': "vkuiSnackbar--placement-bottom-end"
};
var animationStateClassNames = {
    enter: "vkuiSnackbar--state-enter",
    entering: "vkuiSnackbar--state-entering",
    entered: "vkuiSnackbar--state-entered",
    exit: "vkuiSnackbar--state-exit",
    exiting: "vkuiSnackbar--state-exiting",
    exited: undefined
};
/**
 * @see https://vkcom.github.io/VKUI/#/Snackbar
 */ var Snackbar = function(_param) {
    var _param_placement = _param.placement, placement = _param_placement === void 0 ? 'bottom-start' : _param_placement, children = _param.children, layout = _param.layout, action = _param.action, before = _param.before, after = _param.after, _param_duration = _param.duration, duration = _param_duration === void 0 ? 4000 : _param_duration, onActionClick = _param.onActionClick, onClose = _param.onClose, _param_mode = _param.mode, mode = _param_mode === void 0 ? 'default' : _param_mode, subtitle = _param.subtitle, offsetY = _param.offsetY, style = _param.style, getRootRef = _param.getRootRef, restProps = Snackbar_object_without_properties(_param, [
        "placement",
        "children",
        "layout",
        "action",
        "before",
        "after",
        "duration",
        "onActionClick",
        "onClose",
        "mode",
        "subtitle",
        "offsetY",
        "style",
        "getRootRef"
    ]);
    var platform = usePlatform_usePlatform();
    var _React_useState = Snackbar_sliced_to_array(react.useState(true), 2), open = _React_useState[0], setOpen = _React_useState[1];
    var _React_useState1 = Snackbar_sliced_to_array(react.useState(false), 2), touched = _React_useState1[0], setTouched = _React_useState1[1];
    var rootRef = useExternRef_useExternRef(getRootRef);
    var focused = useFocusWithin_useFocusWithin(rootRef);
    var inRef = react.useRef(null);
    var panGestureRecognizer = react.useRef(null);
    var shiftDataRef = react.useRef(null);
    var rafRef = react.useRef(null);
    var closeTimeoutIdRef = react.useRef();
    var mediaQueries = useMediaQueries_useMediaQueries();
    var _useCSSKeyframesAnimationController = Snackbar_sliced_to_array(useCSSKeyframesAnimationController_useCSSKeyframesAnimationController(open ? 'enter' : 'exit', {
        onExited: onClose
    }), 2), animationState = _useCSSKeyframesAnimationController[0], animationHandlers = _useCSSKeyframesAnimationController[1];
    var clearRAF = react.useCallback(function() {
        if (rafRef.current !== null) {
            cancelAnimationFrame(rafRef.current);
            rafRef.current = null;
        }
    }, []);
    var updateShiftAxisCSSProperties = react.useCallback(function(x, y, direction) {
        rafRef.current = requestAnimationFrame(function() {
            if (rootRef.current) {
                x === null ? rootRef.current.style.removeProperty('--vkui_internal--snackbar_shift_x') : rootRef.current.style.setProperty('--vkui_internal--snackbar_shift_x', "".concat(x, "px"));
                y === null ? rootRef.current.style.removeProperty('--vkui_internal--snackbar_shift_y') : rootRef.current.style.setProperty('--vkui_internal--snackbar_shift_y', "".concat(y, "px"));
                direction === null ? rootRef.current.style.removeProperty('--vkui_internal--snackbar_direction') : /* istanbul ignore next: TODO чтобы протестировать кейс, нужно мокать useMediaQueries(), чтобы перебивать mediaQueries.smallTabletPlus.matches */ rootRef.current.style.setProperty('--vkui_internal--snackbar_direction', "".concat(direction));
            }
        });
    }, [
        rootRef
    ]);
    var close = react.useCallback(function() {
        setOpen(false);
    }, []);
    var handleActionClick = function(event) {
        close();
        if (action) {
            onActionClick === null || onActionClick === void 0 ? void 0 : onActionClick(event);
        }
    };
    var handleTouchStart = function(event) {
        panGestureRecognizer.current = new UIPanGestureRecognizer();
        panGestureRecognizer.current.setStartCoords(event.nativeEvent);
        shiftDataRef.current = getInitialShiftData(rootRef.current.offsetWidth, rootRef.current.offsetHeight, mediaQueries);
        setTouched(true);
    };
    var handleTouchMove = function(event) {
        if (shiftDataRef.current && panGestureRecognizer.current) {
            panGestureRecognizer.current.setInitialTimeOnce();
            panGestureRecognizer.current.setEndCoords(event.nativeEvent);
            shiftDataRef.current = getMovedShiftData(placement, shiftDataRef.current, panGestureRecognizer.current.delta());
            if (shiftDataRef.current.shifted) {
                updateShiftAxisCSSProperties(shiftDataRef.current.x, shiftDataRef.current.y, shiftDataRef.current.direction);
            }
        }
    };
    var handleTouchEnd = function() {
        if (touched && shiftDataRef.current && panGestureRecognizer.current && shouldBeClosedByShiftData(placement, shiftDataRef.current, getRelativeBoundingClientRect(rootRef.current, inRef.current), panGestureRecognizer.current.velocity())) {
            close();
        }
        setTouched(false);
    };
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function closeAfterDelay() {
        if (!open || focused || touched || animationState !== 'entered') {
            return;
        }
        closeTimeoutIdRef.current = setTimeout(close, duration);
        return function preventCloseAfterDelayOnUnmount() {
            clearTimeout(closeTimeoutIdRef.current);
        };
    }, [
        open,
        focused,
        touched,
        animationState,
        close,
        duration
    ]);
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function clearUserInteractionDataAfterTouchEnd() {
        if (!touched) {
            clearRAF();
            shiftDataRef.current = null;
            panGestureRecognizer.current = null;
            if (open) {
                updateShiftAxisCSSProperties(null, null, null);
            }
        }
    }, [
        touched,
        open,
        updateShiftAxisCSSProperties,
        clearRAF
    ]);
    react.useEffect(function() {
        return clearRAF;
    }, [
        clearRAF
    ]);
    useGlobalEscKeyDown_useGlobalEscKeyDown(open, close);
    if (animationState === 'exited') {
        return null;
    }
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, Snackbar_object_spread_props(Snackbar_object_spread({}, restProps), {
        role: "presentation",
        baseClassName: clsx("vkuiSnackbar", platform === 'ios' && "vkuiSnackbar--ios", touched && "vkuiSnackbar--touched", Snackbar_placementClassNames[placement], animationStateClassNames[animationState]),
        style: resolveOffsetYCssStyle(placement, style, offsetY),
        getRootRef: rootRef
    }), /*#__PURE__*/ react.createElement("div", Snackbar_object_spread({
        role: "alert",
        className: "vkuiSnackbar__in",
        ref: inRef,
        // mobile
        onTouchStart: handleTouchStart,
        onTouchMove: handleTouchMove,
        onTouchEnd: handleTouchEnd,
        // desktop
        onMouseDown: handleTouchStart,
        onMouseMove: handleTouchMove,
        onMouseUp: handleTouchEnd,
        onMouseLeave: handleTouchEnd
    }, animationHandlers), /*#__PURE__*/ react.createElement(Basic, {
        mode: mode,
        layout: layout,
        before: before,
        after: after,
        subtitle: subtitle,
        action: action && /*#__PURE__*/ react.createElement(Button_Button, {
            align: "left",
            mode: "link",
            appearance: mode === 'dark' ? /* istanbul ignore next: проверяется в e2e */ 'overlay' : 'accent',
            size: "s",
            onClick: handleActionClick
        }, action)
    }, children)));
};
Snackbar.Basic = Basic;

;// CONCATENATED MODULE: ./src/helpers/getMergedSameEventsByProps.ts
var isFunctionExistInProps = function(props, key) {
    return typeof props[key] === 'function';
};
/**
 * Полезен, когда нужно сохранить пользовательские события.
 *
 * Приоритет даём пользовательскому событию. Например, можно будет отловить был ли вызван
 * `event.preventDefault()` через `event.defaultPrevented`.
 *
 * @private
 */ var getMergedSameEventsByProps_getMergedSameEventsByProps = function(mainProps, secondProps) {
    var _loop = function(eventName) {
        if (mainProps.hasOwnProperty(eventName) && secondProps.hasOwnProperty(eventName) && isFunctionExistInProps(mainProps, eventName) && isFunctionExistInProps(secondProps, eventName)) {
            result[eventName] = function mergeSameEventsByProps() {
                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
                    args[_key] = arguments[_key];
                }
                secondProps[eventName].apply(this, args);
                mainProps[eventName].apply(this, args);
            };
        }
    };
    var result = {};
    for(var eventName in mainProps)_loop(eventName);
    return result;
};

;// CONCATENATED MODULE: ./src/hooks/usePatchChildren.ts
function usePatchChildren_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function usePatchChildren_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            usePatchChildren_define_property(target, key, source[key]);
        });
    }
    return target;
}






var usePatchChildren_warn = warnOnce('usePatchChildrenRef');
/**
 * Функция пытается прокинуть в переданный React-элемент хук для получения его ссылки на DOM этого
 * элемента.
 *
 * @param children
 * @param injectProps
 * @param externRef – полезен когда нужно прокинуть `ref` элементу выше.
 *
 * 👎 Без параметра `externRef`
 * ```ts
 * const { ref } = useSomeHook();
 * const [childRef, child] = usePatchChildrenRef(children);
 * React.useLayoutEffect(() => {
 *   ref.current = childRef.current; // или ref.current(childRef.current)
 * }, [childRef]);
 * ```
 *
 * 👍 С параметром `externRef`
 * ```ts
 * const { ref } = useSomeHook();
 * const [childRef, child] = usePatchChildrenRef(children, undefined, ref);
 * ```
 *
 * @private
 */ var usePatchChildren_usePatchChildren = function(children, injectProps, externRef) {
    var isValidElementResult = isValidNotReactFragmentElement(children);
    var isDOMTypeElementResult = isValidElementResult && isDOMTypeElement(children);
    var isForwardedRefElementResult = isValidElementResult && isForwardRefElement(children);
    var shouldUseRef = isDOMTypeElementResult || isForwardedRefElementResult;
    var childRef = useExternRef(shouldUseRef ? children.ref : isValidElementResult ? children.props.getRootRef : undefined, externRef);
    var mergedEventsByInjectProps = getMergedSameEventsByProps(injectProps ? injectProps : {}, isValidElementResult ? children.props : {});
    var props = shouldUseRef ? usePatchChildren_object_spread({
        ref: childRef
    }, injectProps, mergedEventsByInjectProps) : isValidElementResult ? usePatchChildren_object_spread({
        getRootRef: childRef
    }, injectProps, mergedEventsByInjectProps) : undefined;
    useEffectDev(function() {
        if (!childRef.current) {
            usePatchChildren_warn('Кажется, в children передан компонент, который не поддерживает свойство getRootRef. Мы не можем получить ссылку на корневой dom-элемент этого компонента', 'error');
        }
    }, [
        isValidElementResult ? children.type : null,
        childRef
    ]);
    return [
        childRef,
        isValidElementResult ? React.cloneElement(children, props) : children
    ];
};

;// CONCATENATED MODULE: ./src/components/TooltipBase/TooltipBase.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/TooltipBase/TooltipBase.tsx
function TooltipBase_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function TooltipBase_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            TooltipBase_define_property(target, key, source[key]);
        });
    }
    return target;
}
function TooltipBase_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function TooltipBase_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        TooltipBase_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function TooltipBase_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = TooltipBase_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function TooltipBase_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}










var TooltipBase_TOOLTIP_MAX_WIDTH = 220;
var TooltipBase_stylesAppearance = {
    accent: "vkuiTooltipBase--appearance-accent",
    white: "vkuiTooltipBase--appearance-white",
    black: "vkuiTooltipBase--appearance-black",
    inversion: "vkuiTooltipBase--appearance-inversion"
};
/**
 * Низкоуровневый компонент для отрисовки тултипа.
 * Примеры использования и Readme можно найти в документации Tooltip
 * @see https://vkcom.github.io/VKUI/#/Tooltip
 * @private
 */ var TooltipBase_TooltipBase = function(_param) {
    var _param_appearance = _param.appearance, appearance = _param_appearance === void 0 ? 'accent' : _param_appearance, arrowProps = _param.arrowProps, _param_ArrowIcon = _param.ArrowIcon, ArrowIcon = _param_ArrowIcon === void 0 ? DefaultIcon : _param_ArrowIcon, text = _param.text, header = _param.header, _param_maxWidth = _param.maxWidth, maxWidth = _param_maxWidth === void 0 ? TooltipBase_TOOLTIP_MAX_WIDTH : _param_maxWidth, _param_closeIconLabel = _param.closeIconLabel, closeIconLabel = _param_closeIconLabel === void 0 ? 'Закрыть' : _param_closeIconLabel, onCloseIconClick = _param.onCloseIconClick, className = _param.className, restProps = TooltipBase_object_without_properties(_param, [
        "appearance",
        "arrowProps",
        "ArrowIcon",
        "text",
        "header",
        "maxWidth",
        "closeIconLabel",
        "onCloseIconClick",
        "className"
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, TooltipBase_object_spread_props(TooltipBase_object_spread({}, restProps), {
        baseClassName: classNames("vkuiTooltipBase", appearance !== 'neutral' && TooltipBase_stylesAppearance[appearance], className),
        role: "tooltip"
    }), arrowProps && /*#__PURE__*/ React.createElement(FloatingArrow, TooltipBase_object_spread_props(TooltipBase_object_spread({}, arrowProps), {
        iconClassName: classNames("vkuiTooltipBase__arrow", arrowProps.iconClassName),
        Icon: ArrowIcon
    })), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiTooltipBase__content",
        style: maxWidth !== null ? {
            maxWidth: maxWidth
        } : undefined
    }, /*#__PURE__*/ React.createElement("div", null, hasReactNode(header) && /*#__PURE__*/ React.createElement(Subhead, {
        weight: "2"
    }, header), hasReactNode(text) && /*#__PURE__*/ React.createElement(Subhead, null, text)), typeof onCloseIconClick === 'function' && /*#__PURE__*/ React.createElement(Tappable, {
        Component: "button",
        className: "vkuiTooltipBase__closeButton",
        hoverMode: "opacity",
        activeMode: "opacity",
        onClick: onCloseIconClick
    }, /*#__PURE__*/ React.createElement(VisuallyHidden, null, closeIconLabel), /*#__PURE__*/ React.createElement(Icon16Cancel, {
        display: "block"
    }))));
};

;// CONCATENATED MODULE: ./src/components/Tooltip/Tooltip.tsx
function Tooltip_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Tooltip_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Tooltip_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Tooltip_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Tooltip_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Tooltip_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Tooltip_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Tooltip_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Tooltip_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Tooltip_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Tooltip_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Tooltip_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Tooltip_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Tooltip_sliced_to_array(arr, i) {
    return Tooltip_array_with_holes(arr) || Tooltip_iterable_to_array_limit(arr, i) || Tooltip_unsupported_iterable_to_array(arr, i) || Tooltip_non_iterable_rest();
}
function Tooltip_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Tooltip_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Tooltip_array_like_to_array(o, minLen);
}









/**
 * @see https://vkcom.github.io/VKUI/#/Tooltip
 */ var Tooltip = function(_param) {
    var tmp = _param.// UseFloatingMiddlewaresBootstrapOptions
    placement, placementProp = tmp === void 0 ? 'bottom' : tmp, _param_arrowPadding = _param.arrowPadding, arrowPadding = _param_arrowPadding === void 0 ? 10 : _param_arrowPadding, _param_arrowHeight = _param.arrowHeight, arrowHeight = _param_arrowHeight === void 0 ? 8 : _param_arrowHeight, _param_offsetByMainAxis = _param.offsetByMainAxis, offsetByMainAxis = _param_offsetByMainAxis === void 0 ? 8 : _param_offsetByMainAxis, _param_offsetByCrossAxis = _param.offsetByCrossAxis, offsetByCrossAxis = _param_offsetByCrossAxis === void 0 ? 0 : _param_offsetByCrossAxis, hideWhenReferenceHidden = _param.hideWhenReferenceHidden, _param_disableFlipMiddleware = _param.disableFlipMiddleware, disableFlipMiddleware = _param_disableFlipMiddleware === void 0 ? false : _param_disableFlipMiddleware, _param_disableTriggerOnFocus = _param.disableTriggerOnFocus, disableTriggerOnFocus = _param_disableTriggerOnFocus === void 0 ? false : _param_disableTriggerOnFocus, // useFloatingWithInteractions
    defaultShown = _param.defaultShown, shownProp = _param.shown, onShownChange = _param.onShownChange, _param_hoverDelay = _param.hoverDelay, hoverDelay = _param_hoverDelay === void 0 ? 150 : _param_hoverDelay, _param_enableInteractive = _param.// инверсированные св-ва для useFloatingWithInteractions
    enableInteractive, enableInteractive = _param_enableInteractive === void 0 ? false : _param_enableInteractive, _param_disableArrow = _param.disableArrow, disableArrow = _param_disableArrow === void 0 ? false : _param_disableArrow, _param_disableCloseAfterClick = _param.disableCloseAfterClick, disableCloseAfterClick = _param_disableCloseAfterClick === void 0 ? false : _param_disableCloseAfterClick, // Reference
    children = _param.children, // AppRootProps
    usePortal = _param.usePortal, // TooltipBaseProps
    idProp = _param.id, getRootRef = _param.getRootRef, _param_appearance = _param.appearance, appearance = _param_appearance === void 0 ? 'neutral' : _param_appearance, styleProp = _param.style, className = _param.className, _param_zIndex = _param.zIndex, zIndex = _param_zIndex === void 0 ? 'var(--vkui--z_index_popout)' : _param_zIndex, closable = _param.closable, onPlacementChange = _param.onPlacementChange, popperProps = Tooltip_object_without_properties(_param, [
        "placement",
        "arrowPadding",
        "arrowHeight",
        "offsetByMainAxis",
        "offsetByCrossAxis",
        "hideWhenReferenceHidden",
        "disableFlipMiddleware",
        "disableTriggerOnFocus",
        "defaultShown",
        "shown",
        "onShownChange",
        "hoverDelay",
        "enableInteractive",
        "disableArrow",
        "disableCloseAfterClick",
        "children",
        "usePortal",
        "id",
        "getRootRef",
        "appearance",
        "style",
        "className",
        "zIndex",
        "closable",
        "onPlacementChange"
    ]);
    var generatedId = React.useId();
    var tooltipId = idProp || generatedId;
    var _React_useState = Tooltip_sliced_to_array(React.useState(null), 2), arrowRef = _React_useState[0], setArrowRef = _React_useState[1];
    var _useFloatingMiddlewaresBootstrap = useFloatingMiddlewaresBootstrap({
        placement: placementProp,
        offsetByMainAxis: offsetByMainAxis,
        offsetByCrossAxis: offsetByCrossAxis,
        hideWhenReferenceHidden: hideWhenReferenceHidden,
        arrow: !disableArrow,
        arrowRef: arrowRef,
        arrowPadding: arrowPadding,
        arrowHeight: arrowHeight,
        disableFlipMiddleware: disableFlipMiddleware
    }), middlewares = _useFloatingMiddlewaresBootstrap.middlewares, strictPlacement = _useFloatingMiddlewaresBootstrap.strictPlacement;
    var _useFloatingWithInteractions = useFloatingWithInteractions({
        defaultShown: defaultShown,
        shown: shownProp,
        onShownChange: onShownChange,
        placement: strictPlacement,
        trigger: disableTriggerOnFocus ? 'hover' : [
            'hover',
            'focus'
        ],
        hoverDelay: hoverDelay,
        closeAfterClick: !disableCloseAfterClick,
        disableInteractive: !enableInteractive,
        middlewares: middlewares
    }), shown = _useFloatingWithInteractions.shown, willBeHide = _useFloatingWithInteractions.willBeHide, placement = _useFloatingWithInteractions.placement, refs = _useFloatingWithInteractions.refs, referenceProps = _useFloatingWithInteractions.referenceProps, floatingProps = _useFloatingWithInteractions.floatingProps, middlewareData = _useFloatingWithInteractions.middlewareData, onClose = _useFloatingWithInteractions.onClose, onEscapeKeyDown = _useFloatingWithInteractions.onEscapeKeyDown;
    var tooltipRef = useExternRef(getRootRef, refs.setFloating);
    usePlacementChangeCallback(placementProp, placement, onPlacementChange);
    var tooltip = null;
    if (shown) {
        tooltip = /*#__PURE__*/ React.createElement(AppRootPortal, {
            usePortal: usePortal
        }, /*#__PURE__*/ React.createElement(TooltipBase, Tooltip_object_spread_props(Tooltip_object_spread({}, popperProps, floatingProps), {
            style: Tooltip_object_spread(Tooltip_object_spread_props(Tooltip_object_spread({}, floatingProps.style), {
                zIndex: zIndex
            }), styleProp),
            id: tooltipId,
            getRootRef: tooltipRef,
            appearance: appearance,
            arrowProps: disableArrow ? undefined : {
                placement: placement,
                coords: getArrowCoordsByMiddlewareData(middlewareData),
                getRootRef: setArrowRef
            },
            className: classNames(willBeHide ? animationFadeClassNames.out : animationFadeClassNames.in, className),
            onCloseIconClick: closable ? onClose : undefined
        })));
    }
    var _usePatchChildren = Tooltip_sliced_to_array(usePatchChildren(children, Tooltip_object_spread({}, referenceProps, shown && {
        'aria-describedby': tooltipId
    }), refs.setReference), 2), child = _usePatchChildren[1];
    useGlobalEscKeyDown(shown, onEscapeKeyDown);
    return /*#__PURE__*/ React.createElement(React.Fragment, null, child, tooltip);
};

;// CONCATENATED MODULE: ./src/hoc/withContext.tsx
function withContext_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function withContext_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            withContext_define_property(target, key, source[key]);
        });
    }
    return target;
}
function withContext_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function withContext_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        withContext_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}

function withContext(Component, Ctx, prop) {
    function WithContext(props) {
        var context = react.useContext(Ctx);
        return /*#__PURE__*/ react.createElement(Component, withContext_object_spread_props(withContext_object_spread({}, props), withContext_define_property({}, prop, context)));
    }
    return WithContext;
}

;// CONCATENATED MODULE: ./src/hoc/withPlatform.tsx
function withPlatform_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function withPlatform_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            withPlatform_define_property(target, key, source[key]);
        });
    }
    return target;
}
function withPlatform_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function withPlatform_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        withPlatform_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}


function withPlatform(Component) {
    function WithPlatform(props) {
        var platform = ConfigProviderContext_useConfigProvider().platform;
        return /*#__PURE__*/ react.createElement(Component, withPlatform_object_spread_props(withPlatform_object_spread({}, props), {
            platform: platform
        }));
    }
    return WithPlatform;
}

;// CONCATENATED MODULE: ./src/components/Touch/TouchContext.ts

/**
 * Контекст для компонентов, использующих Touch в качестве корневой обёртки,
 * и для которых важно не предотвращать всплытие тач-событий от дочерних компонентов
 */ var TouchContext_TouchRootContext = react.createContext(false);
// eslint-disable-next-line import/no-default-export
/* harmony default export */ const TouchContext = (TouchContext_TouchRootContext);

;// CONCATENATED MODULE: ./src/components/ModalRoot/constants.ts
var MODAL_PAGE_DEFAULT_PERCENT_HEIGHT = 75;

;// CONCATENATED MODULE: ./src/components/ModalRoot/useModalManager.tsx
function useModalManager_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useModalManager_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useModalManager_array_without_holes(arr) {
    if (Array.isArray(arr)) return useModalManager_array_like_to_array(arr);
}
function useModalManager_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function useModalManager_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function useModalManager_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useModalManager_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useModalManager_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useModalManager_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            useModalManager_define_property(target, key, source[key]);
        });
    }
    return target;
}
function useModalManager_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function useModalManager_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        useModalManager_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function useModalManager_sliced_to_array(arr, i) {
    return useModalManager_array_with_holes(arr) || useModalManager_iterable_to_array_limit(arr, i) || useModalManager_unsupported_iterable_to_array(arr, i) || useModalManager_non_iterable_rest();
}
function useModalManager_to_consumable_array(arr) {
    return useModalManager_array_without_holes(arr) || useModalManager_iterable_to_array(arr) || useModalManager_unsupported_iterable_to_array(arr) || useModalManager_non_iterable_spread();
}
function useModalManager_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useModalManager_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useModalManager_array_like_to_array(o, minLen);
}





function getModals(children) {
    return react.Children.toArray(children);
}
var useModalManager_warn = warnOnce('ModalRoot');
function modalTransitionReducer(state, action) {
    if (action.type === 'setActive' && action.id !== state.activeModal) {
        var nextModal = action.id;
        // preserve exiting modal if switching mid-transition
        var prevModal = state.exitingModal || state.activeModal;
        var history = state.history ? useModalManager_to_consumable_array(state.history) : [];
        var isBack = Boolean(nextModal && history.includes(nextModal));
        if (nextModal === null) {
            history = [];
        } else if (isBack) {
            history = history.splice(0, history.indexOf(nextModal) + 1);
        } else {
            history.push(nextModal);
        }
        return {
            activeModal: nextModal,
            // not entering yet
            enteringModal: null,
            exitingModal: prevModal,
            history: history,
            isBack: isBack
        };
    }
    if (action.type === 'entered' && action.id === state.enteringModal) {
        return useModalManager_object_spread_props(useModalManager_object_spread({}, state), {
            enteringModal: null
        });
    }
    if (action.type === 'exited' && action.id === state.exitingModal) {
        return useModalManager_object_spread_props(useModalManager_object_spread({}, state), {
            exitingModal: null
        });
    }
    if (action.type === 'inited' && action.id === state.activeModal) {
        return useModalManager_object_spread_props(useModalManager_object_spread({}, state), {
            enteringModal: action.id
        });
    }
    return state;
}
/**
 * Реализует переход модалок. При смене activeModal m1 -> m2:
 * 1. activeModal: m1, exitingModal: null, enteringModal: null, триггер перехода
 * 2. activeModal: m2, exitingModal: m1, enteringModal: null, рендерим m2 чтобы прошел init, начинаем анимацию выхода
 * одновременный переход между ModalPage:
 *   3a. activeModal: m2, exitingModal: m1, enteringModal: m2
 *   4a. exitingModal и enteringModal переходят в null в порядке завершения анимации
 * ИЛИ дожидаемся скрытия ModalCard
 *   3b. activeModal: m2, exitingModal: null, enteringModal: m2
 *   4b. enteringModal переходит в null после завершения анимации
 * 5. activeModal: m2, exitingModal: null, enteringModal: null, переход закончен
 */ function useModalManager_useModalManager(activeModal, children) {
    var onOpen = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : functions_noop, onOpened = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : functions_noop, onClose = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : functions_noop, onClosed = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : functions_noop, initModal = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : functions_noop;
    var modalsState = react.useRef({}).current;
    getModals(children).forEach(function(Modal) {
        var modalProps = Modal.props;
        var id = getNavId_getNavId(modalProps, useModalManager_warn);
        var state = id !== undefined && modalsState[id] || {
            id: id !== null && id !== void 0 ? id : null
        };
        state.onOpen = Modal.props.onOpen;
        state.onOpened = Modal.props.onOpened;
        state.onClose = Modal.props.onClose;
        state.onClosed = Modal.props.onClosed;
        state.preventClose = Modal.props.preventClose;
        // ModalPage props
        if (typeof modalProps.settlingHeight === 'number') {
            state.settlingHeight = modalProps.settlingHeight;
        }
        if (state.id !== null) {
            modalsState[state.id] = state;
        }
    });
    var isMissing = activeModal && !modalsState[activeModal];
    var safeActiveModal = isMissing ? null : activeModal;
    var _React_useReducer = useModalManager_sliced_to_array(react.useReducer(modalTransitionReducer, {
        activeModal: safeActiveModal,
        enteringModal: null,
        exitingModal: null,
        history: safeActiveModal ? [
            safeActiveModal
        ] : [],
        isBack: false
    }), 2), transitionState = _React_useReducer[0], dispatchTransition = _React_useReducer[1];
    // Map props to state, render activeModal for init
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function() {
        // ignore non-existent activeModal
        if (false) {}
        dispatchTransition({
            type: 'setActive',
            id: safeActiveModal !== null && safeActiveModal !== void 0 ? safeActiveModal : null
        });
    }, [
        activeModal
    ]);
    // Init activeModal & set enteringModal
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function() {
        if (transitionState.activeModal) {
            initModal(modalsState[transitionState.activeModal]);
            dispatchTransition({
                type: 'inited',
                id: transitionState.activeModal
            });
        }
    }, [
        transitionState.activeModal
    ]);
    var isCard = function(id) {
        var _modalsState_id;
        return id != null && ((_modalsState_id = modalsState[id]) === null || _modalsState_id === void 0 ? void 0 : _modalsState_id.type) === 'card';
    };
    var onEntered = react.useCallback(function(id) {
        if (id) {
            var modalState = modalsState[id];
            if (isFunction(modalState.onOpened)) {
                modalState.onOpened();
            } else if (isFunction(onOpened)) {
                onOpened(id);
            }
        }
        dispatchTransition({
            type: 'entered',
            id: id
        });
    }, [
        modalsState,
        onOpened
    ]);
    var onExited = react.useCallback(function(id) {
        if (id) {
            var modalState = modalsState[id];
            if (isFunction(modalState.onClosed)) {
                modalState.onClosed();
            } else if (isFunction(onClosed)) {
                onClosed(id);
            }
        }
        dispatchTransition({
            type: 'exited',
            id: id
        });
    }, [
        modalsState,
        onClosed
    ]);
    var delayEnter = Boolean(transitionState.exitingModal && (isCard(activeModal) || isCard(transitionState.exitingModal)));
    var getModalState = react.useCallback(function(id) {
        return id ? modalsState[id] : undefined;
    }, [
        modalsState
    ]);
    function onEnter() {
        var modalState = transitionState.activeModal && modalsState[transitionState.activeModal];
        if (modalState) {
            if (isFunction(modalState.onOpen)) {
                modalState.onOpen();
            } else if (isFunction(onOpen) && modalState.id) {
                onOpen(modalState.id);
            }
        }
    }
    function onExit() {
        var modalState = transitionState.activeModal && modalsState[transitionState.activeModal];
        if (modalState && !modalState.preventClose) {
            if (isFunction(modalState.onClose)) {
                modalState.onClose();
            } else if (isFunction(onClose) && modalState.id) {
                onClose(modalState.id);
            }
        }
    }
    return useModalManager_object_spread_props(useModalManager_object_spread({
        onEnter: onEnter,
        onEntered: onEntered,
        onExit: onExit,
        onExited: onExited
    }, transitionState), {
        delayEnter: delayEnter,
        getModalState: getModalState
    });
}
function withModalManager() {
    var initModal = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : functions_noop;
    return function(Wrapped) {
        return function WithModalManager(props) {
            var transitionManager = useModalManager_useModalManager(props.activeModal, props.children, props.onOpen, props.onOpened, props.onClose, props.onClosed, initModal);
            return /*#__PURE__*/ react.createElement(Wrapped, useModalManager_object_spread({}, props, transitionManager));
        };
    };
}

;// CONCATENATED MODULE: ./src/components/ModalRoot/ModalRoot.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ModalRoot/ModalRoot.tsx
function ModalRoot_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function ModalRoot_array_without_holes(arr) {
    if (Array.isArray(arr)) return ModalRoot_array_like_to_array(arr);
}
function _assert_this_initialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _call_super(_this, derived, args) {
    derived = _get_prototype_of(derived);
    return _possible_constructor_return(_this, _is_native_reflect_construct() ? Reflect.construct(derived, args || [], _get_prototype_of(_this).constructor) : derived.apply(_this, args));
}
function ModalRoot_class_call_check(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function ModalRoot_defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function ModalRoot_create_class(Constructor, protoProps, staticProps) {
    if (protoProps) ModalRoot_defineProperties(Constructor.prototype, protoProps);
    if (staticProps) ModalRoot_defineProperties(Constructor, staticProps);
    return Constructor;
}
function ModalRoot_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _get_prototype_of(o) {
    _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _get_prototype_of(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _set_prototype_of(subClass, superClass);
}
function ModalRoot_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function ModalRoot_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function ModalRoot_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ModalRoot_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ModalRoot_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ModalRoot_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ModalRoot_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function _possible_constructor_return(self, call) {
    if (call && (ModalRoot_type_of(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assert_this_initialized(self);
}
function _set_prototype_of(o, p) {
    _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _set_prototype_of(o, p);
}
function ModalRoot_to_consumable_array(arr) {
    return ModalRoot_array_without_holes(arr) || ModalRoot_iterable_to_array(arr) || ModalRoot_unsupported_iterable_to_array(arr) || ModalRoot_non_iterable_spread();
}
function ModalRoot_type_of(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}
function ModalRoot_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return ModalRoot_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ModalRoot_array_like_to_array(o, minLen);
}
function _is_native_reflect_construct() {
    try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (_) {}
    return (_is_native_reflect_construct = function() {
        return !!result;
    })();
}

















var ModalRoot_warn = warnOnce('ModalRoot');
function numberInRange(number, range) {
    if (!range) {
        return false;
    }
    return number >= range[0] && number <= range[1];
}
function rangeTranslate(number) {
    return math_clamp(number, 0, 98);
}
var ModalRootTouchComponent = /*#__PURE__*/ function(_React_Component) {
    "use strict";
    _inherits(ModalRootTouchComponent, _React_Component);
    function ModalRootTouchComponent(props) {
        ModalRoot_class_call_check(this, ModalRootTouchComponent);
        var _this;
        _this = _call_super(this, ModalRootTouchComponent, [
            props
        ]), ModalRoot_define_property(_this, "maskElementRef", void 0), ModalRoot_define_property(_this, "viewportRef", /*#__PURE__*/ react.createRef()), ModalRoot_define_property(_this, "maskAnimationFrame", undefined), ModalRoot_define_property(_this, "modalRootContext", void 0), ModalRoot_define_property(_this, "frameIds", void 0), ModalRoot_define_property(_this, "restoreFocusTo", undefined), ModalRoot_define_property(_this, "updateModalHeight", function() {
            var modalState = _this.props.getModalState(_this.props.activeModal);
            if (modalState && modalState.type === 'page') {
                if (_this.props.enteringModal) {
                    _this.waitTransitionFinish(modalState, function() {
                        requestAnimationFrame(function() {
                            return _this.checkPageContentHeight();
                        });
                    });
                } else {
                    requestAnimationFrame(function() {
                        return _this.checkPageContentHeight();
                    });
                }
            }
        }), ModalRoot_define_property(_this, "onTouchMove", function(e) {
            if (_this.props.exitingModal) {
                return;
            }
            var modalState = _this.props.getModalState(_this.props.activeModal);
            if (!modalState) {
                return;
            }
            if (modalState.type === 'page') {
                return _this.onPageTouchMove(e, modalState);
            }
            if (modalState.type === 'card') {
                return _this.onCardTouchMove(e, modalState);
            }
        }), ModalRoot_define_property(_this, "onTouchEnd", function(e) {
            var modalState = _this.props.getModalState(_this.props.activeModal);
            if ((modalState === null || modalState === void 0 ? void 0 : modalState.type) === 'page') {
                return _this.onPageTouchEnd(e, modalState);
            }
            if ((modalState === null || modalState === void 0 ? void 0 : modalState.type) === 'card') {
                return _this.onCardTouchEnd(e, modalState);
            }
        }), ModalRoot_define_property(_this, "onScroll", function(e) {
            var _modalState_contentElement;
            var activeModal = _this.props.activeModal;
            var target = e.target;
            if (!activeModal) {
                return;
            }
            var modalState = _this.props.getModalState(activeModal);
            if ((modalState === null || modalState === void 0 ? void 0 : modalState.type) === 'page' && (modalState === null || modalState === void 0 ? void 0 : (_modalState_contentElement = modalState.contentElement) === null || _modalState_contentElement === void 0 ? void 0 : _modalState_contentElement.contains(target))) {
                modalState.contentScrolled = true;
                if (modalState.contentScrollStopTimeout) {
                    clearTimeout(modalState.contentScrollStopTimeout);
                }
                modalState.contentScrollStopTimeout = setTimeout(function() {
                    if (modalState.contentScrolled) {
                        modalState.contentScrolled = false;
                    }
                }, 250);
            }
        });
        _this.state = {
            touchDown: false,
            dragging: false,
            modalOpenedLog: []
        };
        _this.maskElementRef = /*#__PURE__*/ react.createRef();
        _this.modalRootContext = {
            updateModalHeight: _this.updateModalHeight,
            registerModal: function(_param) {
                var id = _param.id, data = ModalRoot_object_without_properties(_param, [
                    "id"
                ]);
                var _this_props_getModalState;
                return Object.assign((_this_props_getModalState = _this.props.getModalState(id)) !== null && _this_props_getModalState !== void 0 ? _this_props_getModalState : {}, data);
            },
            onClose: function() {
                return _this.props.onExit();
            },
            isInsideModal: true
        };
        _this.frameIds = {};
        return _this;
    }
    ModalRoot_create_class(ModalRootTouchComponent, [
        {
            key: "timeout",
            get: function get() {
                return this.props.platform === 'ios' ? 400 : 320;
            }
        },
        {
            key: "document",
            get: function get() {
                return this.props.document;
            }
        },
        {
            key: "window",
            get: function get() {
                return this.props.window;
            }
        },
        {
            key: "getModals",
            value: function getModals() {
                return react.Children.toArray(this.props.children);
            }
        },
        {
            key: "componentDidMount",
            value: function componentDidMount() {
                var // Отслеживаем изменение размеров viewport
                _this_window;
                (_this_window = this.window) === null || _this_window === void 0 ? void 0 : _this_window.addEventListener('resize', this.updateModalHeight, false);
            }
        },
        {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                this.toggleDocumentScrolling(true);
                this.window.removeEventListener('resize', this.updateModalHeight, false);
            }
        },
        {
            key: "componentDidUpdate",
            value: function componentDidUpdate(prevProps) {
                var _this = this;
                // transition phase 2: animate exiting modal
                if (this.props.exitingModal && this.props.exitingModal !== prevProps.exitingModal) {
                    this.closeModal(this.props.exitingModal);
                }
                // transition phase 3: animate entering modal
                if (this.props.enteringModal && this.props.enteringModal !== prevProps.enteringModal) {
                    var enteringState = this.props.getModalState(this.props.enteringModal);
                    this.props.onEnter();
                    this.waitTransitionFinish(enteringState, function() {
                        if (enteringState) {
                            if (enteringState.innerElement) {
                                enteringState.innerElement.style.transitionDelay = '';
                            }
                            _this.onEntered(enteringState);
                        }
                    });
                    if (enteringState === null || enteringState === void 0 ? void 0 : enteringState.innerElement) {
                        enteringState.innerElement.style.transitionDelay = this.props.delayEnter ? "".concat(this.timeout, "ms") : '';
                        this.animateTranslate(enteringState, enteringState.translateY);
                        this.setMaskOpacity(enteringState, 1);
                    }
                }
                // focus restoration
                if (this.props.activeModal && !prevProps.activeModal) {
                    this.restoreFocusTo = this.document.activeElement;
                }
                if (!this.props.activeModal && !this.props.exitingModal && this.restoreFocusTo) {
                    this.restoreFocusTo.focus();
                    this.restoreFocusTo = null;
                }
                this.toggleDocumentScrolling(!this.props.activeModal && !this.props.exitingModal);
            }
        },
        {
            /* Отключает скролл документа */ key: "toggleDocumentScrolling",
            value: function toggleDocumentScrolling(enabled) {
                if (enabled) {
                    // восстанавливаем значение overscroll behavior
                    // eslint-disable-next-line no-restricted-properties
                    this.document.documentElement.classList.remove('vkui--disable-overscroll-behavior');
                } else {
                    // отключаем нативный pull-to-refresh при открытом модальном окне
                    // чтобы он не срабатывал при закрытии модалки смахиванием вниз
                    // eslint-disable-next-line no-restricted-properties
                    this.document.documentElement.classList.add('vkui--disable-overscroll-behavior');
                }
            }
        },
        {
            key: "checkPageContentHeight",
            value: function checkPageContentHeight() {
                var modalState = this.props.getModalState(this.props.activeModal);
                if ((modalState === null || modalState === void 0 ? void 0 : modalState.type) === 'page' && (modalState === null || modalState === void 0 ? void 0 : modalState.modalElement)) {
                    var prevModalState = ModalRoot_object_spread({}, modalState);
                    initPageModal(modalState);
                    var currentModalState = ModalRoot_object_spread({}, modalState);
                    var needAnimate = false;
                    if (prevModalState.expandable === currentModalState.expandable) {
                        if (prevModalState.translateYFrom !== currentModalState.translateYFrom) {
                            needAnimate = true;
                        }
                    } else {
                        needAnimate = true;
                    }
                    if (needAnimate) {
                        this.animateTranslate(modalState, modalState.translateY);
                    }
                }
            }
        },
        {
            key: "onEntered",
            value: function onEntered(param) {
                var id = param.id, modalElement = param.modalElement;
                if (!this.props.noFocusToDialog && modalElement && !modalElement.contains(this.document.activeElement)) {
                    modalElement.focus();
                }
                this.props.onEntered(id);
            }
        },
        {
            key: "closeModal",
            value: function closeModal(id) {
                var _this = this;
                // Сбрасываем состояния, которые могут помешать закрытию модального окна
                this.setState({
                    touchDown: false
                });
                var prevModalState = this.props.getModalState(id);
                if (!prevModalState) {
                    id && ModalRoot_warn("closeActiveModal: модальное окно (страница) ".concat(id, " не существует"), 'error');
                    return;
                }
                if (!this.state.modalOpenedLog.length) {
                    this.setState(function(prevState) {
                        return {
                            modalOpenedLog: ModalRoot_to_consumable_array(prevState.modalOpenedLog).concat([
                                id
                            ])
                        };
                    });
                }
                var nextModalState = this.props.getModalState(this.props.activeModal);
                var nextIsPage = !!nextModalState && nextModalState.type === 'page';
                var prevIsPage = !!prevModalState && prevModalState.type === 'page';
                this.waitTransitionFinish(prevModalState, function() {
                    return _this.props.onExited(id);
                });
                var _prevModalState_translateY, _nextModalState_translateYFrom, _nextModalState_translateYFrom1;
                var exitTranslate = prevIsPage && nextIsPage && ((_prevModalState_translateY = prevModalState.translateY) !== null && _prevModalState_translateY !== void 0 ? _prevModalState_translateY : 0) <= ((_nextModalState_translateYFrom = nextModalState === null || nextModalState === void 0 ? void 0 : nextModalState.translateYFrom) !== null && _nextModalState_translateYFrom !== void 0 ? _nextModalState_translateYFrom : 0) && !this.props.isBack ? ((_nextModalState_translateYFrom1 = nextModalState === null || nextModalState === void 0 ? void 0 : nextModalState.translateYFrom) !== null && _nextModalState_translateYFrom1 !== void 0 ? _nextModalState_translateYFrom1 : 0) + 10 : 100;
                this.animateTranslate(prevModalState, exitTranslate);
                if (!nextModalState) {
                    // NOTE: was only for clean exit
                    this.setMaskOpacity(prevModalState, 0);
                    this.setState({
                        modalOpenedLog: []
                    });
                    prevModalState.translateY = undefined;
                    prevModalState.expandable = undefined;
                } else if (nextModalState.id && !this.state.modalOpenedLog.includes(nextModalState.id)) {
                    nextModalState.translateY = undefined;
                    this.setState(function(prevState) {
                        return {
                            modalOpenedLog: ModalRoot_to_consumable_array(prevState.modalOpenedLog).concat([
                                nextModalState.id
                            ])
                        };
                    });
                }
            }
        },
        {
            key: "onPageTouchMove",
            value: function onPageTouchMove(event, modalState) {
                var _modalState_innerElement, _modalState_headerElement;
                var shiftY = event.shiftY, originalEvent = event.originalEvent;
                var target = originalEvent.target;
                if (!event.isY) {
                    var _this_viewportRef_current;
                    if ((_this_viewportRef_current = this.viewportRef.current) === null || _this_viewportRef_current === void 0 ? void 0 : _this_viewportRef_current.contains(target)) {
                        originalEvent.preventDefault();
                    }
                    return;
                }
                if (!((_modalState_innerElement = modalState.innerElement) === null || _modalState_innerElement === void 0 ? void 0 : _modalState_innerElement.contains(target))) {
                    return originalEvent.preventDefault();
                }
                originalEvent.stopPropagation();
                var expandable = modalState.expandable, contentScrolled = modalState.contentScrolled, collapsed = modalState.collapsed, expanded = modalState.expanded;
                if (!this.state.touchDown) {
                    var _modalState_contentElement;
                    var _modalState_contentElement_scrollTop;
                    modalState.touchStartContentScrollTop = (_modalState_contentElement_scrollTop = (_modalState_contentElement = modalState.contentElement) === null || _modalState_contentElement === void 0 ? void 0 : _modalState_contentElement.scrollTop) !== null && _modalState_contentElement_scrollTop !== void 0 ? _modalState_contentElement_scrollTop : 0;
                    this.setState({
                        touchDown: true
                    });
                }
                if (contentScrolled) {
                    return;
                }
                if (modalState.touchMovePositive === null) {
                    modalState.touchMovePositive = shiftY > 0;
                }
                if (!modalState.expandable || collapsed || expanded && modalState.touchMovePositive && modalState.touchStartContentScrollTop === 0 || ((_modalState_headerElement = modalState.headerElement) === null || _modalState_headerElement === void 0 ? void 0 : _modalState_headerElement.contains(target))) {
                    originalEvent.preventDefault();
                    if (!expandable && shiftY < 0 || !this.window) {
                        return;
                    }
                    !this.state.dragging && this.setState({
                        dragging: true
                    });
                    var shiftYPercent = shiftY / this.window.innerHeight * 100;
                    var shiftYCurrent = rubber(shiftYPercent, 72, 0.8, this.props.platform !== 'ios');
                    modalState.touchShiftYPercent = shiftYPercent;
                    var _modalState_translateY;
                    modalState.translateYCurrent = rangeTranslate(((_modalState_translateY = modalState.translateY) !== null && _modalState_translateY !== void 0 ? _modalState_translateY : 0) + shiftYCurrent);
                    this.animateTranslate(modalState, modalState.translateYCurrent);
                    this.setMaskOpacity(modalState);
                }
            }
        },
        {
            key: "onCardTouchMove",
            value: function onCardTouchMove(event, modalState) {
                var _modalState_innerElement;
                var originalEvent = event.originalEvent, shiftY = event.shiftY;
                var target = originalEvent.target;
                if ((_modalState_innerElement = modalState.innerElement) === null || _modalState_innerElement === void 0 ? void 0 : _modalState_innerElement.contains(target)) {
                    if (!this.state.touchDown) {
                        this.setState({
                            touchDown: true,
                            dragging: true
                        });
                    }
                    var shiftYPercent = shiftY / modalState.innerElement.offsetHeight * 100;
                    var shiftYCurrent = rubber(shiftYPercent, 72, 1.2, this.props.platform !== 'ios');
                    modalState.touchShiftYPercent = shiftYPercent;
                    var _modalState_translateY;
                    modalState.translateYCurrent = Math.max(0, ((_modalState_translateY = modalState.translateY) !== null && _modalState_translateY !== void 0 ? _modalState_translateY : 0) + shiftYCurrent);
                    this.animateTranslate(modalState, modalState.translateYCurrent);
                    this.setMaskOpacity(modalState);
                }
            }
        },
        {
            key: "onPageTouchEnd",
            value: function onPageTouchEnd(event, modalState) {
                var _this = this;
                var startY = event.startY, shiftY = event.shiftY;
                modalState.contentScrolled = false;
                modalState.touchMovePositive = null;
                var setStateCallback;
                if (this.state.dragging && this.window) {
                    var shiftYEndPercent = (startY + shiftY) / this.window.innerHeight * 100;
                    var _modalState_translateYCurrent;
                    var translateY = (_modalState_translateYCurrent = modalState.translateYCurrent) !== null && _modalState_translateYCurrent !== void 0 ? _modalState_translateYCurrent : 0;
                    var _modalState_touchShiftYPercent;
                    var expectTranslateY = translateY / event.duration * 240 * 0.6 * (((_modalState_touchShiftYPercent = modalState.touchShiftYPercent) !== null && _modalState_touchShiftYPercent !== void 0 ? _modalState_touchShiftYPercent : 0) < 0 ? -1 : 1);
                    translateY = rangeTranslate(translateY + expectTranslateY);
                    if (modalState.settlingHeight !== 100) {
                        if (numberInRange(translateY, modalState.expandedRange)) {
                            var _modalState_expandedRange;
                            var _modalState_expandedRange_;
                            translateY = (_modalState_expandedRange_ = (_modalState_expandedRange = modalState.expandedRange) === null || _modalState_expandedRange === void 0 ? void 0 : _modalState_expandedRange[0]) !== null && _modalState_expandedRange_ !== void 0 ? _modalState_expandedRange_ : 0;
                        } else if (numberInRange(translateY, modalState.collapsedRange)) {
                            var _modalState_translateYFrom;
                            translateY = (_modalState_translateYFrom = modalState.translateYFrom) !== null && _modalState_translateYFrom !== void 0 ? _modalState_translateYFrom : 0;
                        } else if (numberInRange(translateY, modalState.hiddenRange)) {
                            var _modalState_translateYFrom1;
                            translateY = modalState.preventClose ? (_modalState_translateYFrom1 = modalState.translateYFrom) !== null && _modalState_translateYFrom1 !== void 0 ? _modalState_translateYFrom1 : 0 : 100;
                        } else {
                            var _modalState_translateYFrom2;
                            translateY = (_modalState_translateYFrom2 = modalState.translateYFrom) !== null && _modalState_translateYFrom2 !== void 0 ? _modalState_translateYFrom2 : 0;
                        }
                    } else {
                        if (numberInRange(translateY, [
                            0,
                            25
                        ])) {
                            translateY = 0;
                        } else {
                            var _modalState_translateYFrom3;
                            translateY = modalState.preventClose ? (_modalState_translateYFrom3 = modalState.translateYFrom) !== null && _modalState_translateYFrom3 !== void 0 ? _modalState_translateYFrom3 : 0 : 100;
                        }
                    }
                    if (translateY !== 100 && shiftYEndPercent >= 75 && !modalState.preventClose) {
                        translateY = 100;
                    }
                    modalState.translateY = translateY;
                    modalState.translateYCurrent = translateY;
                    modalState.collapsed = numberInRange(translateY, modalState.collapsedRange);
                    modalState.expanded = translateY === 0;
                    modalState.hidden = translateY === 100;
                    if (modalState.hidden) {
                        this.props.onExit();
                    }
                    setStateCallback = function() {
                        if (!modalState.hidden) {
                            _this.animateTranslate(modalState, modalState.translateY);
                        }
                        _this.setMaskOpacity(modalState);
                    };
                }
                this.setState({
                    touchDown: false,
                    dragging: false
                }, setStateCallback);
            }
        },
        {
            key: "onCardTouchEnd",
            value: function onCardTouchEnd(param, modalState) {
                var _this = this;
                var duration = param.duration;
                var setStateCallback;
                if (this.state.dragging) {
                    var _modalState_translateYCurrent;
                    var translateY = (_modalState_translateYCurrent = modalState.translateYCurrent) !== null && _modalState_translateYCurrent !== void 0 ? _modalState_translateYCurrent : 0;
                    var _modalState_touchShiftYPercent;
                    var expectTranslateY = translateY / duration * 240 * 0.6 * (((_modalState_touchShiftYPercent = modalState.touchShiftYPercent) !== null && _modalState_touchShiftYPercent !== void 0 ? _modalState_touchShiftYPercent : 0) < 0 ? -1 : 1);
                    translateY = Math.max(0, translateY + expectTranslateY);
                    if (translateY >= 30) {
                        translateY = 100;
                    } else {
                        translateY = 0;
                    }
                    modalState.translateY = translateY;
                    modalState.hidden = translateY === 100;
                    if (modalState.hidden) {
                        this.props.onExit();
                    }
                    setStateCallback = function() {
                        if (!modalState.hidden) {
                            _this.animateTranslate(modalState, modalState.translateY);
                        }
                        _this.setMaskOpacity(modalState);
                    };
                }
                this.setState({
                    touchDown: false,
                    dragging: false
                }, setStateCallback);
            }
        },
        {
            key: "waitTransitionFinish",
            value: function waitTransitionFinish(modalState, eventHandler) {
                var el = modalState ? modalState.innerElement : null;
                if (el) {
                    el.addEventListener('transitionend', eventHandler, {
                        once: true
                    });
                } else {
                    setTimeout(eventHandler, this.timeout);
                }
            }
        },
        {
            /**
   * Анимирует сдвиг модалки
   *
   * @param {ModalsStateEntry} modalState
   * @param {number} percent Процент сдвига: 0 – полностью открыта, 100 – полностью закрыта
   */ key: "animateTranslate",
            value: function animateTranslate(modalState, percent) {
                var frameId = "animateTranslateFrame".concat(modalState.id);
                cancelAnimationFrame(this.frameIds[frameId]);
                this.frameIds[frameId] = requestAnimationFrame(function() {
                    if (!modalState.innerElement) {
                        return;
                    }
                    modalState.innerElement.style.transform = "translate3d(0, ".concat(percent, "%, 0)");
                });
            }
        },
        {
            /* Устанавливает прозрачность для полупрозрачной подложки */ key: "setMaskOpacity",
            value: function setMaskOpacity(modalState) {
                var _this = this;
                var forceOpacity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
                var _this_props_history;
                if (forceOpacity === null && ((_this_props_history = this.props.history) === null || _this_props_history === void 0 ? void 0 : _this_props_history[0]) !== modalState.id) {
                    return;
                }
                if (this.maskAnimationFrame) {
                    cancelAnimationFrame(this.maskAnimationFrame);
                }
                this.maskAnimationFrame = requestAnimationFrame(function() {
                    if (_this.maskElementRef.current) {
                        var _modalState_translateY = modalState.translateY, translateY = _modalState_translateY === void 0 ? 0 : _modalState_translateY, _modalState_translateYCurrent = modalState.translateYCurrent, translateYCurrent = _modalState_translateYCurrent === void 0 ? 0 : _modalState_translateYCurrent;
                        var opacity = forceOpacity === null ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0 : forceOpacity;
                        _this.maskElementRef.current.style.opacity = math_clamp(opacity, 0, 100).toString();
                        _this.maskElementRef.current.style.transitionDelay = opacity && _this.props.delayEnter ? "".concat(_this.timeout, "ms") : '';
                    }
                });
            }
        },
        {
            key: "render",
            value: function render() {
                var _this = this;
                var _this_props_configProvider;
                var _this_props = this.props, activeModal = _this_props.activeModal, exitingModal = _this_props.exitingModal, enteringModal = _this_props.enteringModal, modalOverlayTestId = _this_props.modalOverlayTestId;
                var _this_state = this.state, touchDown = _this_state.touchDown, dragging = _this_state.dragging;
                if (!activeModal && !exitingModal) {
                    return null;
                }
                return /*#__PURE__*/ react.createElement(TouchContext.Provider, {
                    value: true
                }, /*#__PURE__*/ react.createElement(ModalRootContext_ModalRootContext.Provider, {
                    value: this.modalRootContext
                }, /*#__PURE__*/ react.createElement(Touch_Touch, {
                    className: clsx("vkuiModalRoot", ((_this_props_configProvider = this.props.configProvider) === null || _this_props_configProvider === void 0 ? void 0 : _this_props_configProvider.hasCustomPanelHeaderAfter) && "vkuiModalRoot--hasCustomPanelHeaderAfterSlot", touchDown && clsx("vkuiModalRoot--touched", 'vkuiInternalModalRoot--touched'), !!(enteringModal || exitingModal) && clsx("vkuiModalRoot--switching", 'vkuiInternalModalRoot--switching')),
                    onMove: this.onTouchMove,
                    onEnd: this.onTouchEnd,
                    onScroll: this.onScroll
                }, /*#__PURE__*/ react.createElement("div", {
                    "data-testid": modalOverlayTestId,
                    className: "vkuiModalRoot__mask",
                    onClick: this.props.onExit,
                    ref: this.maskElementRef
                }), /*#__PURE__*/ react.createElement("div", {
                    className: "vkuiModalRoot__viewport",
                    ref: this.viewportRef
                }, this.getModals().map(function(Modal) {
                    var modalId = getNavId_getNavId(Modal.props, ModalRoot_warn);
                    var _modalState = _this.props.getModalState(modalId);
                    if (modalId !== activeModal && modalId !== exitingModal || !_modalState) {
                        return null;
                    }
                    var modalState = ModalRoot_object_spread({}, _modalState);
                    var isPage = modalState.type === 'page';
                    var key = "modal-".concat(modalId);
                    return /*#__PURE__*/ react.createElement(FocusTrap_FocusTrap, {
                        key: key,
                        onClose: _this.props.onExit,
                        timeout: _this.timeout,
                        className: clsx("vkuiModalRoot__modal", dragging && 'vkuiInternalModalRoot__modal--dragging', isPage && modalState.expandable && 'vkuiInternalModalRoot__modal--expandable', isPage && modalState.collapsed && 'vkuiInternalModalRoot__modal--collapsed'),
                        autoFocus: false,
                        restoreFocus: false
                    }, Modal);
                })))));
            }
        }
    ]);
    return ModalRootTouchComponent;
}(react.Component);
var ModalRoot_ModalRootTouch = withContext(withPlatform(withDOM(withModalManager(initModal)(ModalRootTouchComponent))), ConfigProviderContext_ConfigProviderContext, 'configProvider');
/**
 * Инициализирует модалку перед анимацией открытия
 */ function initModal(modalState) {
    switch(modalState.type){
        case 'page':
            modalState.settlingHeight = modalState.settlingHeight || MODAL_PAGE_DEFAULT_PERCENT_HEIGHT;
            return initPageModal(modalState);
        case 'card':
            return initCardModal(modalState);
        default:
             false && 0;
    }
}
function initPageModal(modalState) {
    var contentElement = modalState.contentElement, bottomInset = modalState.bottomInset;
    var contentElementHeight = calculateModalContentHeight(contentElement === null || contentElement === void 0 ? void 0 : contentElement.firstElementChild, modalState.expandable);
    var bottomInsetHeight = (bottomInset === null || bottomInset === void 0 ? void 0 : bottomInset.offsetHeight) || 0;
    var contentHeight = contentElementHeight + bottomInsetHeight;
    var prevTranslateY = modalState.translateY;
    var prevExpandable = modalState.expandable;
    var _contentElement_clientHeight;
    modalState.expandable = contentHeight > ((_contentElement_clientHeight = contentElement === null || contentElement === void 0 ? void 0 : contentElement.clientHeight) !== null && _contentElement_clientHeight !== void 0 ? _contentElement_clientHeight : 0) || modalState.settlingHeight === 100;
    var collapsed = false;
    var expanded = false;
    var translateYFrom;
    var translateY;
    var expandedRange;
    var collapsedRange;
    var hiddenRange;
    var hasCollapsedState = Boolean(modalState.expandable && modalState.settlingHeight !== 100);
    if (modalState.expandable) {
        var _modalState_settlingHeight;
        translateYFrom = 100 - ((_modalState_settlingHeight = modalState.settlingHeight) !== null && _modalState_settlingHeight !== void 0 ? _modalState_settlingHeight : 0);
        var shiftHalf = translateYFrom / 2;
        var visiblePart = 100 - translateYFrom;
        expandedRange = [
            0,
            shiftHalf
        ];
        collapsedRange = hasCollapsedState ? [
            shiftHalf,
            translateYFrom + visiblePart / 4
        ] : undefined;
        hiddenRange = [
            translateYFrom + visiblePart / 4,
            100
        ];
        collapsed = hasCollapsedState && translateYFrom > 0;
        expanded = translateYFrom <= 0;
        translateY = translateYFrom;
    } else {
        var _modalState_headerElement, _modalState_innerElement_parentElement, _modalState_innerElement;
        var _modalState_headerElement_offsetHeight;
        var headerHeight = (_modalState_headerElement_offsetHeight = (_modalState_headerElement = modalState.headerElement) === null || _modalState_headerElement === void 0 ? void 0 : _modalState_headerElement.offsetHeight) !== null && _modalState_headerElement_offsetHeight !== void 0 ? _modalState_headerElement_offsetHeight : 0;
        var height = contentHeight + headerHeight;
        var _modalState_innerElement_parentElement_offsetHeight;
        translateYFrom = 100 - height / ((_modalState_innerElement_parentElement_offsetHeight = (_modalState_innerElement = modalState.innerElement) === null || _modalState_innerElement === void 0 ? void 0 : (_modalState_innerElement_parentElement = _modalState_innerElement.parentElement) === null || _modalState_innerElement_parentElement === void 0 ? void 0 : _modalState_innerElement_parentElement.offsetHeight) !== null && _modalState_innerElement_parentElement_offsetHeight !== void 0 ? _modalState_innerElement_parentElement_offsetHeight : 0) * 100;
        translateY = translateYFrom;
        expandedRange = [
            translateY,
            translateY + 25
        ];
        collapsedRange = undefined;
        hiddenRange = [
            translateY + 25,
            translateY + 100
        ];
    }
    // Свойство expandable может измениться из-за высоты контента, в таком случае на всю высоту не разворачиваем
    var shouldExpand = prevExpandable && modalState.expandable;
    // Если модалка может открываться на весь экран, и новый сдвиг больше предыдущего, то откроем её на весь экран
    if (shouldExpand && translateY > (prevTranslateY !== null && prevTranslateY !== void 0 ? prevTranslateY : 100) || modalState.settlingHeight === 100) {
        translateY = 0;
    }
    // Если модалка уже раскрыта обновляем состояния
    if (translateY === 0) {
        expanded = true;
        collapsed = false;
    }
    modalState.expandedRange = expandedRange;
    modalState.collapsedRange = collapsedRange;
    modalState.hiddenRange = hiddenRange;
    modalState.translateY = translateY;
    modalState.translateYFrom = translateYFrom;
    modalState.collapsed = collapsed;
    modalState.expanded = expanded;
}
function initCardModal(modalState) {
    modalState.translateY = 0;
}
function calculateModalContentHeight(element, isExpandable) {
    if (!isExpandable) {
        return element.scrollHeight;
    }
    /*
   * В режиме expandable мы назначаем контейнеру контента высоту 100%, что не даёт
   * получить реальную высоту контента.
   * Поэтому мы пересчитываем высоту, временно устанавливая height: auto;
   * */ var currentHeightStyle = element.style.height;
    element.style.height = 'auto';
    var elementHeight = element.scrollHeight;
    element.style.height = currentHeightStyle;
    return elementHeight;
}

;// CONCATENATED MODULE: ./src/hooks/useWaitTransitionFinish.ts



var useWaitTransitionFinish_useWaitTransitionFinish = function() {
    var timeoutRef = React.useRef(null);
    var document = useDOM().document;
    var detach = React.useRef(noop);
    var remove = React.useCallback(function() {
        detach.current();
        detach.current = noop;
    }, []);
    var waitTransitionFinish = React.useCallback(function(element, eventHandler, durationFallback) {
        if (element) {
            if (!(document === null || document === void 0 ? void 0 : document.hidden)) {
                remove();
                element.addEventListener('transitionend', eventHandler);
                detach.current = function() {
                    element.removeEventListener('transitionend', eventHandler);
                };
            } else {
                if (timeoutRef === null || timeoutRef === void 0 ? void 0 : timeoutRef.current) {
                    clearTimeout(timeoutRef.current);
                }
                timeoutRef.current = setTimeout(eventHandler, durationFallback);
            }
        }
    }, [
        document,
        remove,
        timeoutRef
    ]);
    return waitTransitionFinish;
};

;// CONCATENATED MODULE: ./src/components/ModalRoot/ModalRootDesktop.tsx
function ModalRootDesktop_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ModalRootDesktop_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ModalRootDesktop_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}














var ModalRootDesktop_warn = warnOnce('ModalRoot');
var ModalRootDesktop_ModalRootDesktop = function(param) {
    var activeModalProp = param.activeModal, children = param.children, _param_noFocusToDialog = param.noFocusToDialog, noFocusToDialog = _param_noFocusToDialog === void 0 ? false : _param_noFocusToDialog, onOpen = param.onOpen, onOpened = param.onOpened, onClose = param.onClose, onClosed = param.onClosed, modalOverlayTestId = param.modalOverlayTestId;
    var maskElementRef = React.useRef(null);
    var maskAnimationFrame = React.useRef(undefined);
    var restoreFocusTo = React.useRef(undefined);
    var document = useDOM().document;
    var _useConfigProvider = useConfigProvider(), hasCustomPanelHeaderAfter = _useConfigProvider.hasCustomPanelHeaderAfter, platform = _useConfigProvider.platform;
    var _useModalManager = useModalManager(activeModalProp, children, onOpen, onOpened, onClose, onClosed, noop), activeModal = _useModalManager.activeModal, exitingModal = _useModalManager.exitingModal, onExit = _useModalManager.onExit, getModalState = _useModalManager.getModalState, enteringModal = _useModalManager.enteringModal, onEnter = _useModalManager.onEnter, onEnteredProp = _useModalManager.onEntered, onExited = _useModalManager.onExited, history = _useModalManager.history, delayEnter = _useModalManager.delayEnter;
    var waitTransitionFinish = useWaitTransitionFinish();
    var prevProps = usePrevious({
        exitingModal: exitingModal,
        enteringModal: enteringModal,
        activeModal: activeModal
    });
    var modalRootContext = useObjectMemo({
        updateModalHeight: function() {
            return undefined;
        },
        registerModal: function(_param) {
            var id = _param.id, data = ModalRootDesktop_object_without_properties(_param, [
                "id"
            ]);
            var _getModalState;
            return Object.assign((_getModalState = getModalState(id)) !== null && _getModalState !== void 0 ? _getModalState : {}, data);
        },
        onClose: onExit,
        isInsideModal: true
    });
    var timeout = platform === 'ios' ? 400 : 320;
    var modals = React.Children.toArray(children);
    /* Анимирует сдвиг модального окна */ var animateModalOpacity = function(modalState, display) {
        if (modalState === null || modalState === void 0 ? void 0 : modalState.innerElement) {
            modalState.innerElement.style.transition = '';
            modalState.innerElement.style.transitionDelay = display && delayEnter ? "".concat(timeout, "ms") : '';
            modalState.innerElement.style.opacity = display ? '1' : '0';
        }
    };
    /* Устанавливает прозрачность для полупрозрачной подложки */ var setMaskOpacity = function(modalState) {
        var forceOpacity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
        if (forceOpacity === null && (history === null || history === void 0 ? void 0 : history[0]) !== modalState.id) {
            return;
        }
        if (maskAnimationFrame.current) {
            cancelAnimationFrame(maskAnimationFrame.current);
        }
        maskAnimationFrame.current = requestAnimationFrame(function() {
            if (maskElementRef.current) {
                var _modalState_translateY = modalState.translateY, translateY = _modalState_translateY === void 0 ? 0 : _modalState_translateY, _modalState_translateYCurrent = modalState.translateYCurrent, translateYCurrent = _modalState_translateYCurrent === void 0 ? 0 : _modalState_translateYCurrent;
                var opacity = forceOpacity === null ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0 : forceOpacity;
                maskElementRef.current.style.opacity = clamp(opacity, 0, 100).toString();
            }
        });
    };
    var onEntered = function(param) {
        var id = param.id, modalElement = param.modalElement;
        if (!noFocusToDialog && modalElement && !modalElement.contains(document.activeElement)) {
            modalElement.focus();
        }
        onEnteredProp(id);
    };
    var openModal = function() {
        if (!enteringModal || !prevProps) {
            return;
        }
        var enteringState = getModalState(enteringModal);
        onEnter();
        // Анимация открытия модального окна
        if (!prevProps.exitingModal) {
            requestAnimationFrame(function() {
                if (enteringModal === enteringModal && enteringState) {
                    waitTransitionFinish(enteringState.innerElement, function() {
                        return onEntered(enteringState);
                    }, timeout);
                    animateModalOpacity(enteringState, true);
                    setMaskOpacity(enteringState, 1);
                }
            });
            return;
        }
        // Переход между модальными окнами без анимации
        requestAnimationFrame(function() {
            if (enteringState === null || enteringState === void 0 ? void 0 : enteringState.innerElement) {
                enteringState.innerElement.style.transition = 'none';
                enteringState.innerElement.style.opacity = '1';
                setMaskOpacity(enteringState, 1);
            }
        });
        if (enteringState) {
            onEntered(enteringState);
        }
    };
    var closeModal = function(id) {
        var prevModalState = getModalState(id);
        if (!prevModalState) {
            return;
        }
        // Анимация закрытия модального окна
        if (!activeModal) {
            requestAnimationFrame(function() {
                waitTransitionFinish(prevModalState === null || prevModalState === void 0 ? void 0 : prevModalState.innerElement, function(event) {
                    // Исключаем дочерние элементы
                    if (event && event.target === (prevModalState === null || prevModalState === void 0 ? void 0 : prevModalState.innerElement)) {
                        onExited(id);
                    } else if (!event) {
                        // Вызвался по тайм-ауту
                        onExited(id);
                    }
                }, timeout);
                animateModalOpacity(prevModalState, false);
                setMaskOpacity(prevModalState, 0);
            });
            return;
        }
        // Переход между модальными окнами без анимации
        onExited(id);
    };
    React.useEffect(function() {
        if (!prevProps) {
            return;
        }
        // transition phase 2: animate exiting modal
        if (exitingModal && exitingModal !== prevProps.exitingModal) {
            closeModal(exitingModal);
        }
        // transition phase 3: animate entering modal
        if (enteringModal && enteringModal !== prevProps.enteringModal) {
            openModal();
        }
        // focus restoration
        if (activeModal && !prevProps.activeModal) {
            var _document_activeElement;
            restoreFocusTo.current = (_document_activeElement = document === null || document === void 0 ? void 0 : document.activeElement) !== null && _document_activeElement !== void 0 ? _document_activeElement : undefined;
        }
        if (!activeModal && !exitingModal && restoreFocusTo.current) {
            restoreFocusTo.current.focus();
            restoreFocusTo.current = undefined;
        }
    });
    if (!activeModal && !exitingModal) {
        return null;
    }
    return /*#__PURE__*/ React.createElement(ModalRootContext.Provider, {
        value: modalRootContext
    }, /*#__PURE__*/ React.createElement("div", {
        className: classNames("vkuiModalRoot", hasCustomPanelHeaderAfter && "vkuiModalRoot--hasCustomPanelHeaderAfterSlot", "vkuiModalRoot--desktop")
    }, /*#__PURE__*/ React.createElement("div", {
        "data-testid": modalOverlayTestId,
        className: "vkuiModalRoot__mask",
        ref: maskElementRef,
        onClick: onExit
    }), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiModalRoot__viewport"
    }, modals.map(function(Modal) {
        var modalId = getNavId(Modal.props, ModalRootDesktop_warn);
        if (modalId !== activeModal && modalId !== exitingModal) {
            return null;
        }
        var key = "modal-".concat(modalId);
        return /*#__PURE__*/ React.createElement(FocusTrap, {
            autoFocus: false,
            restoreFocus: false,
            onClose: onExit,
            timeout: timeout,
            key: key,
            className: "vkuiModalRoot__modal"
        }, Modal);
    }))));
};

;// CONCATENATED MODULE: ./src/components/ModalRoot/ModalRootAdaptive.tsx





/**
 * @see https://vkcom.github.io/VKUI/#/ModalRoot
 */ var ModalRoot = function(props) {
    var isDesktop = useAdaptivityWithJSMediaQueries().isDesktop;
    useScrollLock(!!props.activeModal);
    var RootComponent = isDesktop ? ModalRootDesktop : ModalRootTouch;
    return /*#__PURE__*/ React.createElement(RootComponent, props);
};

;// CONCATENATED MODULE: ./src/components/ModalRoot/useModalRootContext.tsx


var useModalRootContext_useModalRootContext = function() {
    return React.useContext(ModalRootContext);
};

;// CONCATENATED MODULE: ./src/components/ModalRoot/withModalRootContext.tsx
function withModalRootContext_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function withModalRootContext_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            withModalRootContext_define_property(target, key, source[key]);
        });
    }
    return target;
}
function withModalRootContext_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function withModalRootContext_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        withModalRootContext_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}


function withModalRootContext(Component) {
    function WithModalRootContext(props) {
        var updateModalHeight = useModalRootContext().updateModalHeight;
        return /*#__PURE__*/ React.createElement(Component, withModalRootContext_object_spread_props(withModalRootContext_object_spread({}, props), {
            updateModalHeight: updateModalHeight
        }));
    }
    return WithModalRootContext;
}

;// CONCATENATED MODULE: ./src/hooks/useOrientationChange.ts
function useOrientationChange_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useOrientationChange_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useOrientationChange_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useOrientationChange_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useOrientationChange_sliced_to_array(arr, i) {
    return useOrientationChange_array_with_holes(arr) || useOrientationChange_iterable_to_array_limit(arr, i) || useOrientationChange_unsupported_iterable_to_array(arr, i) || useOrientationChange_non_iterable_rest();
}
function useOrientationChange_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useOrientationChange_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useOrientationChange_array_like_to_array(o, minLen);
}



/**
 * Возвращает текущую ориентация экрана на человеческом языке.
 * Учитывает особенности API на разных платформах.
 */ function getOrientation(window) {
    var // eslint-disable-next-line compat/compat
    _window_screen_orientation, _window_screen;
    if (!window) {
        return 'portrait';
    }
    var _window_screen_orientation_angle;
    var angle = Math.abs((_window_screen_orientation_angle = (_window_screen = window.screen) === null || _window_screen === void 0 ? void 0 : (_window_screen_orientation = _window_screen.orientation) === null || _window_screen_orientation === void 0 ? void 0 : _window_screen_orientation.angle) !== null && _window_screen_orientation_angle !== void 0 ? _window_screen_orientation_angle : Number(window.orientation));
    return angle === 90 ? 'landscape' : 'portrait';
}
/**
 * Возвращает текущую ориентация экрана на человеческом языке.
 * Обновляется при изменении ориентации.
 */ function useOrientationChange_useOrientationChange() {
    var window = useDOM().window;
    var _React_useState = useOrientationChange_sliced_to_array(React.useState(function() {
        return getOrientation(window);
    }), 2), orientation = _React_useState[0], setOrientation = _React_useState[1];
    useGlobalEventListener(window, 'orientationchange', function() {
        return setOrientation(getOrientation(window));
    });
    return orientation;
}

;// CONCATENATED MODULE: ./src/components/ModalPage/ModalPageContext.tsx

var ModalPageContext_ModalPageContext = /*#__PURE__*/ react.createContext({});

;// CONCATENATED MODULE: ./src/components/ModalPage/ModalPage.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ModalPage/ModalPage.tsx
function ModalPage_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ModalPage_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ModalPage_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ModalPage_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ModalPage_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ModalPage_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ModalPage_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ModalPage_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ModalPage_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}














var sizeClassName = {
    s: "vkuiModalPage--size-s",
    m: "vkuiModalPage--size-m",
    l: "vkuiModalPage--size-l"
};
var ModalPage_warn = warnOnce('ModalPage');
/**
 * @see https://vkcom.github.io/VKUI/#/ModalPage
 */ var ModalPage = function(_param) {
    var children = _param.children, header = _param.header, tmp = _param.size, sizeProp = tmp === void 0 ? 's' : tmp, onOpen = _param.onOpen, onOpened = _param.onOpened, onClose = _param.onClose, onClosed = _param.onClosed, settlingHeight = _param.settlingHeight, dynamicContentHeight = _param.dynamicContentHeight, getModalContentRef = _param.getModalContentRef, nav = _param.nav, idProp = _param.id, _param_hideCloseButton = _param.hideCloseButton, hideCloseButton = _param_hideCloseButton === void 0 ? false : _param_hideCloseButton, height = _param.height, modalContentTestId = _param.modalContentTestId, modalDismissButtonTestId = _param.modalDismissButtonTestId, getRootRef = _param.getRootRef, preventClose = _param.preventClose, restProps = ModalPage_object_without_properties(_param, [
        "children",
        "header",
        "size",
        "onOpen",
        "onOpened",
        "onClose",
        "onClosed",
        "settlingHeight",
        "dynamicContentHeight",
        "getModalContentRef",
        "nav",
        "id",
        "hideCloseButton",
        "height",
        "modalContentTestId",
        "modalDismissButtonTestId",
        "getRootRef",
        "preventClose"
    ]);
    var generatingId = React.useId();
    var id = idProp || generatingId;
    var updateModalHeight = React.useContext(ModalRootContext).updateModalHeight;
    var platform = usePlatform();
    var orientation = useOrientationChange();
    var _useAdaptivityWithJSMediaQueries = useAdaptivityWithJSMediaQueries(), sizeX = _useAdaptivityWithJSMediaQueries.sizeX, isDesktop = _useAdaptivityWithJSMediaQueries.isDesktop;
    React.useEffect(function() {
        if (dynamicContentHeight) {
            updateModalHeight();
        }
    }, [
        children,
        dynamicContentHeight,
        orientation,
        updateModalHeight
    ]);
    var isCloseButtonShown = !hideCloseButton && isDesktop;
    var size = isDesktop ? sizeProp : 's';
    var modalContext = React.useContext(ModalRootContext);
    var refs = useModalRegistry(getNavId({
        nav: nav,
        id: id
    }, ModalPage_warn), 'page').refs;
    var rootRef = useExternRef(getRootRef, refs.modalElement);
    var contextValue = React.useMemo(function() {
        return {
            labelId: "".concat(id, "-label")
        };
    }, [
        id
    ]);
    return /*#__PURE__*/ React.createElement(ModalPageContext.Provider, {
        value: contextValue
    }, /*#__PURE__*/ React.createElement(RootComponent, ModalPage_object_spread_props(ModalPage_object_spread({}, restProps), {
        getRootRef: rootRef,
        tabIndex: -1,
        role: "dialog",
        "aria-modal": "true",
        "aria-labelledby": contextValue.labelId,
        id: id,
        baseClassName: classNames("vkuiModalPage", platform === 'ios' && "vkuiModalPage--ios", isDesktop && "vkuiModalPage--desktop", sizeX === 'regular' && 'vkuiInternalModalPage--sizeX-regular', typeof size === 'string' && sizeClassName[size])
    }), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiModalPage__in-wrap",
        style: {
            maxWidth: typeof size === 'number' ? size : undefined,
            height: height
        },
        ref: refs.innerElement
    }, /*#__PURE__*/ React.createElement("div", {
        className: "vkuiModalPage__in"
    }, /*#__PURE__*/ React.createElement("div", {
        className: "vkuiModalPage__header",
        ref: refs.headerElement
    }, header), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiModalPage__content-wrap"
    }, /*#__PURE__*/ React.createElement("div", ModalPage_object_spread({
        className: "vkuiModalPage__content",
        ref: multiRef(refs.contentElement, getModalContentRef)
    }, modalContentTestId && {
        'data-testid': modalContentTestId
    }), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiModalPage__content-in"
    }, children)), /*#__PURE__*/ React.createElement("div", {
        ref: refs.bottomInset,
        className: "vkuiModalPage__bottom-inset"
    })), isCloseButtonShown && /*#__PURE__*/ React.createElement(ModalDismissButton, {
        "data-testid": modalDismissButtonTestId,
        onClick: onClose || modalContext.onClose
    })))));
};

;// CONCATENATED MODULE: ./src/components/ModalPageHeader/ModalPageHeader.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ModalPageHeader/ModalPageHeader.tsx
function ModalPageHeader_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ModalPageHeader_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ModalPageHeader_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ModalPageHeader_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ModalPageHeader_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ModalPageHeader_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ModalPageHeader_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ModalPageHeader_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ModalPageHeader_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}








/**
 * @see https://vkcom.github.io/VKUI/#/ModalPageHeader
 */ var ModalPageHeader = function(_param) {
    var children = _param.children, _param_noSeparator = _param.noSeparator, noSeparator = _param_noSeparator === void 0 ? false : _param_noSeparator, getRootRef = _param.getRootRef, className = _param.className, typographyProps = _param.typographyProps, restProps = ModalPageHeader_object_without_properties(_param, [
        "children",
        "noSeparator",
        "getRootRef",
        "className",
        "typographyProps"
    ]);
    var platform = usePlatform();
    var _useAdaptivityWithJSMediaQueries = useAdaptivityWithJSMediaQueries(), isDesktop = _useAdaptivityWithJSMediaQueries.isDesktop, sizeX = _useAdaptivityWithJSMediaQueries.sizeX;
    var labelId = React.useContext(ModalPageContext).labelId;
    return /*#__PURE__*/ React.createElement(React.Fragment, null, /*#__PURE__*/ React.createElement("div", {
        className: classNames("vkuiModalPageHeader", platform !== 'vkcom' && "vkuiModalPageHeader--withGaps", isDesktop && "vkuiModalPageHeader--desktop"),
        ref: getRootRef
    }, /*#__PURE__*/ React.createElement(PanelHeader, ModalPageHeader_object_spread_props(ModalPageHeader_object_spread({
        className: classNames('vkuiInternalModalPageHeader__in', className),
        typographyProps: ModalPageHeader_object_spread({
            Component: 'h2',
            id: labelId
        }, typographyProps)
    }, restProps), {
        fixed: false,
        delimiter: "none",
        transparent: true
    }), children)), !noSeparator && /*#__PURE__*/ React.createElement(Separator, {
        wide: sizeX === 'regular'
    }));
};

;// CONCATENATED MODULE: ./src/hooks/useKeyboard.ts
function useKeyboard_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useKeyboard_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useKeyboard_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useKeyboard_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useKeyboard_sliced_to_array(arr, i) {
    return useKeyboard_array_with_holes(arr) || useKeyboard_iterable_to_array_limit(arr, i) || useKeyboard_unsupported_iterable_to_array(arr, i) || useKeyboard_non_iterable_rest();
}
function useKeyboard_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useKeyboard_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useKeyboard_array_like_to_array(o, minLen);
}



/**
 Проверяет, закрыла ли клавиатура часть экрана, 24% подошло к большинству устройств
 Работает на iOS и Android, где софт-клавиатура ресайзит viewport в браузерах
 */ function getPreciseKeyboardState(window) {
    var innerHeight = window.innerHeight, availHeight = window.screen.availHeight;
    var coveredViewportPercentage = Math.round((1 - innerHeight / availHeight) * 100);
    return coveredViewportPercentage > 24;
}
var eventOptions = {
    passive: true,
    capture: false
};
function useKeyboard_useKeyboard() {
    var _document_activeElement;
    var document = useDOM().document;
    var _React_useState = useKeyboard_sliced_to_array(React.useState(false), 2), isOpened = _React_useState[0], setIsOpened = _React_useState[1];
    var onFocus = React.useCallback(function(event) {
        var _document_activeElement, _document_activeElement1;
        var isOpened = (event === true || event.type === 'focusin') && ((document === null || document === void 0 ? void 0 : (_document_activeElement = document.activeElement) === null || _document_activeElement === void 0 ? void 0 : _document_activeElement.tagName) === 'INPUT' || (document === null || document === void 0 ? void 0 : (_document_activeElement1 = document.activeElement) === null || _document_activeElement1 === void 0 ? void 0 : _document_activeElement1.tagName) === 'TEXTAREA');
        setIsOpened(isOpened);
    }, [
        document === null || document === void 0 ? void 0 : (_document_activeElement = document.activeElement) === null || _document_activeElement === void 0 ? void 0 : _document_activeElement.tagName
    ]);
    /**
   У полей с autoFocus не отлавливаются события focus, для этого вызываем вручную,
   чтобы иметь хоть какое-то понимание происходящего.
   */ React.useEffect(function() {
        onFocus(true);
    }, [
        onFocus
    ]);
    useGlobalEventListener(document, 'focusout', onFocus, eventOptions);
    useGlobalEventListener(document, 'focusin', onFocus, eventOptions);
    return {
        isOpened: isOpened
    };
}

;// CONCATENATED MODULE: ./src/components/ModalCardBase/ModalCardBase.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ModalCardBase/ModalCardBaseCloseButton.tsx








function ModalCardBaseCloseButton_ModalCardBaseCloseButton(param) {
    var _param_children = param.children, children = _param_children === void 0 ? 'Закрыть' : _param_children, testId = param.testId, mode = param.mode, onClose = param.onClose;
    var platform = usePlatform();
    var isDesktop = useAdaptivityWithJSMediaQueries().isDesktop;
    if (isDesktop && mode === 'outside') {
        return /*#__PURE__*/ React.createElement(ModalDismissButton, {
            "data-testid": testId,
            onClick: onClose
        }, children);
    }
    if (mode === 'inside' || platform === 'ios' && !isDesktop) {
        return /*#__PURE__*/ React.createElement(Tappable, {
            className: "vkuiModalCardBase__dismiss",
            onClick: onClose,
            hoverMode: "opacity",
            activeMode: "opacity",
            "data-testid": testId
        }, /*#__PURE__*/ React.createElement(VisuallyHidden, null, children), platform === 'ios' ? /*#__PURE__*/ React.createElement(Icon24Dismiss, null) : /*#__PURE__*/ React.createElement(Icon20Cancel, null));
    }
    return null;
}

;// CONCATENATED MODULE: ./src/components/ModalCardBase/ModalCardBase.tsx
function ModalCardBase_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ModalCardBase_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ModalCardBase_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ModalCardBase_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ModalCardBase_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ModalCardBase_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ModalCardBase_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ModalCardBase_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ModalCardBase_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}












/**
 * @see https://vkcom.github.io/VKUI/#/ModalCardBase
 */ var ModalCardBase_ModalCardBase = function(_param) {
    var icon = _param.icon, header = _param.header, _param_headerComponent = _param.headerComponent, headerComponent = _param_headerComponent === void 0 ? 'span' : _param_headerComponent, subheader = _param.subheader, _param_subheaderComponent = _param.subheaderComponent, subheaderComponent = _param_subheaderComponent === void 0 ? 'span' : _param_subheaderComponent, children = _param.children, actions = _param.actions, onClose = _param.onClose, _param_dismissLabel = _param.dismissLabel, dismissLabel = _param_dismissLabel === void 0 ? 'Скрыть' : _param_dismissLabel, style = _param.style, sizeProp = _param.size, modalDismissButtonTestId = _param.modalDismissButtonTestId, _param_dismissButtonMode = _param.dismissButtonMode, dismissButtonMode = _param_dismissButtonMode === void 0 ? 'outside' : _param_dismissButtonMode, preventClose = _param.preventClose, restProps = ModalCardBase_object_without_properties(_param, [
        "icon",
        "header",
        "headerComponent",
        "subheader",
        "subheaderComponent",
        "children",
        "actions",
        "onClose",
        "dismissLabel",
        "style",
        "size",
        "modalDismissButtonTestId",
        "dismissButtonMode",
        "preventClose"
    ]);
    var platform = usePlatform();
    var isDesktop = useAdaptivityWithJSMediaQueries().isDesktop;
    var isSoftwareKeyboardOpened = useKeyboard().isOpened;
    var size = isDesktop ? sizeProp : undefined;
    var withSafeZone = !icon && (dismissButtonMode === 'inside' || platform === 'ios' && !isDesktop && dismissButtonMode !== 'none');
    var hasHeader = hasReactNode(header);
    var hasSubheader = hasReactNode(subheader);
    return /*#__PURE__*/ React.createElement(RootComponent, ModalCardBase_object_spread_props(ModalCardBase_object_spread({}, restProps), {
        baseClassName: classNames('vkuiInternalModalCardBase', platform === 'ios' && "vkuiModalCardBase--ios", isDesktop && "vkuiModalCardBase--desktop", withSafeZone && "vkuiModalCardBase--withSafeZone"),
        style: ModalCardBase_object_spread_props(ModalCardBase_object_spread({}, style), {
            maxWidth: size
        })
    }), /*#__PURE__*/ React.createElement("div", {
        className: classNames("vkuiModalCardBase__container", isSoftwareKeyboardOpened && "vkuiModalCardBase__container--softwareKeyboardOpened")
    }, hasReactNode(icon) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiModalCardBase__icon"
    }, icon), hasReactNode(header) && /*#__PURE__*/ React.createElement(Title, {
        level: "2",
        weight: "2",
        className: "vkuiModalCardBase__header",
        Component: headerComponent
    }, header), hasHeader && hasSubheader && /*#__PURE__*/ React.createElement(Spacing, {
        size: 8
    }), hasSubheader && /*#__PURE__*/ React.createElement(AdaptivityContext.Provider, {
        value: {
            sizeY: 'regular'
        }
    }, /*#__PURE__*/ React.createElement(Subhead, {
        className: "vkuiModalCardBase__subheader",
        Component: subheaderComponent
    }, subheader)), children, hasReactNode(actions) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiModalCardBase__actions"
    }, actions), dismissButtonMode !== 'none' && /*#__PURE__*/ React.createElement(ModalCardBaseCloseButton, {
        testId: modalDismissButtonTestId,
        onClose: onClose,
        mode: dismissButtonMode
    }, dismissLabel)));
};

;// CONCATENATED MODULE: ./src/components/ModalCard/ModalCard.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ModalCard/ModalCard.tsx
function ModalCard_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ModalCard_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ModalCard_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ModalCard_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ModalCard_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ModalCard_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ModalCard_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ModalCard_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ModalCard_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}











var ModalCard_platformClassNames = {
    ios: "vkuiModalCard--ios",
    android: "vkuiModalCard--android",
    vkcom: "vkuiModalCard--vkcom"
};
var ModalCard_warn = warnOnce('ModalCard');
/**
 * @see https://vkcom.github.io/VKUI/#/ModalCard
 */ var ModalCard = function(_param) {
    var icon = _param.icon, header = _param.header, headerComponent = _param.headerComponent, subheader = _param.subheader, subheaderComponent = _param.subheaderComponent, children = _param.children, actions = _param.actions, onClose = _param.onClose, nav = _param.nav, id = _param.id, size = _param.size, modalDismissButtonTestId = _param.modalDismissButtonTestId, getRootRef = _param.getRootRef, dismissButtonMode = _param.dismissButtonMode, dismissLabel = _param.dismissLabel, restProps = ModalCard_object_without_properties(_param, [
        "icon",
        "header",
        "headerComponent",
        "subheader",
        "subheaderComponent",
        "children",
        "actions",
        "onClose",
        "nav",
        "id",
        "size",
        "modalDismissButtonTestId",
        "getRootRef",
        "dismissButtonMode",
        "dismissLabel"
    ]);
    var isDesktop = useAdaptivityWithJSMediaQueries().isDesktop;
    var platform = usePlatform();
    var modalContext = React.useContext(ModalRootContext);
    var refs = useModalRegistry(getNavId({
        nav: nav,
        id: id
    }, ModalCard_warn), 'card').refs;
    var rootRef = useExternRef(getRootRef, refs.modalElement);
    var contextValue = React.useMemo(function() {
        return {
            labelId: "".concat(id, "-label")
        };
    }, [
        id
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, ModalCard_object_spread_props(ModalCard_object_spread({}, restProps), {
        getRootRef: rootRef,
        tabIndex: -1,
        role: "dialog",
        "aria-modal": "true",
        "aria-labelledby": contextValue.labelId,
        id: id,
        baseClassName: classNames("vkuiModalCard", ModalCard_platformClassNames.hasOwnProperty(platform) ? ModalCard_platformClassNames[platform] : ModalCard_platformClassNames.android, isDesktop && "vkuiModalCard--desktop")
    }), /*#__PURE__*/ React.createElement(ModalCardBase, {
        className: "vkuiModalCard__in",
        getRootRef: refs.innerElement,
        icon: icon,
        header: header,
        headerComponent: headerComponent,
        subheader: subheader,
        subheaderComponent: subheaderComponent,
        actions: actions,
        onClose: onClose || modalContext.onClose,
        size: size,
        modalDismissButtonTestId: modalDismissButtonTestId,
        dismissButtonMode: dismissButtonMode,
        dismissLabel: dismissLabel
    }, children));
};

;// CONCATENATED MODULE: ./src/components/Badge/Badge.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Badge/Badge.tsx
function Badge_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Badge_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Badge_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Badge_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Badge_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Badge_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var Badge_stylesMode = {
    new: "vkuiBadge--mode-new",
    prominent: "vkuiBadge--mode-prominent"
};
/**
 * @see https://vkcom.github.io/VKUI/#/Badge
 *
 * TODO [>=7]: переименовать в Dot
 */ var Badge = function(_param) {
    var _param_mode = _param.mode, mode = _param_mode === void 0 ? 'new' : _param_mode, children = _param.children, restProps = Badge_object_without_properties(_param, [
        "mode",
        "children"
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, Badge_object_spread({
        Component: "span",
        baseClassName: classNames("vkuiBadge", 'vkuiInternalBadge', Badge_stylesMode[mode])
    }, restProps), children && /*#__PURE__*/ React.createElement(VisuallyHidden, null, children));
};

;// CONCATENATED MODULE: ./src/components/ContentBadge/ContentBadgeContext.tsx

/**
 * Контекст для внутреннего использовния.
 * @private
 */ var ContentBadgeContext = /*#__PURE__*/ react.createContext({
    isSingleChild: false,
    size: 'm'
});

;// CONCATENATED MODULE: ./src/components/ContentBadge/ContentBadge.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ContentBadge/ContentBadgeSlotIcon.tsx
function ContentBadgeSlotIcon_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ContentBadgeSlotIcon_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ContentBadgeSlotIcon_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ContentBadgeSlotIcon_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ContentBadgeSlotIcon_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ContentBadgeSlotIcon_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var iconsClassNames = {
    m: null,
    l: "vkuiContentBadge__icon-slot--size-l"
};
var singleIconClassNames = {
    m: "vkuiContentBadge__singleIcon-slot--size-m",
    l: "vkuiContentBadge__singleIcon-slot--size-l"
};
var ContentBadgeSlotIcon = function(_param) {
    var className = _param.className, getRootRef = _param.getRootRef, children = _param.children, restProps = ContentBadgeSlotIcon_object_without_properties(_param, [
        "className",
        "getRootRef",
        "children"
    ]);
    var _React_useContext = react.useContext(ContentBadgeContext), size = _React_useContext.size, isSingleChild = _React_useContext.isSingleChild;
    if (size === 's') {
        return null;
    }
    return /*#__PURE__*/ react.createElement("div", ContentBadgeSlotIcon_object_spread({
        ref: getRootRef,
        className: clsx(className, isSingleChild ? singleIconClassNames[size] : iconsClassNames[size])
    }, restProps), children);
};
ContentBadgeSlotIcon.displayName = 'ContentBadgeSlotIcon';

;// CONCATENATED MODULE: ./src/components/ContentBadge/ContentBadge.tsx
function ContentBadge_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ContentBadge_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ContentBadge_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ContentBadge_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ContentBadge_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ContentBadge_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ContentBadge_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ContentBadge_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ContentBadge_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}







var appearanceClassNames = {
    'accent': {
        primary: "vkuiContentBadge--primary-accent",
        secondary: "vkuiContentBadge--secondary-accent",
        outline: "vkuiContentBadge--outline-accent"
    },
    'neutral': {
        primary: "vkuiContentBadge--primary-neutral",
        secondary: "vkuiContentBadge--secondary-neutral",
        outline: "vkuiContentBadge--outline-neutral"
    },
    'accent-green': {
        primary: "vkuiContentBadge--primary-accent-green",
        secondary: "vkuiContentBadge--secondary-accent-green",
        outline: "vkuiContentBadge--outline-accent-green"
    },
    'accent-red': {
        primary: "vkuiContentBadge--primary-accent-red",
        secondary: "vkuiContentBadge--secondary-accent-red",
        outline: "vkuiContentBadge--outline-accent-red"
    },
    'overlay': {
        primary: "vkuiContentBadge--primary-overlay",
        secondary: "vkuiContentBadge--secondary-overlay",
        outline: "vkuiContentBadge--outline-overlay"
    }
};
var sizeClassNames = {
    s: "vkuiContentBadge--size-s",
    m: "vkuiContentBadge--size-m",
    l: "vkuiContentBadge--size-l"
};
/**
 * Компонент, который позволяет добавить текстовые или иконочные бейджи. Как правило, используются
 * поверх других элементов или рядом с ними.
 *
 * Используйте `ContentBadge.SlotIcon` для размещения иконок внутри `ContentBadge`.
 *
 * @since 6.1.0
 * @see https://vkcom.github.io/VKUI/#/ContentBadge
 *
 * TODO [>=7]: переименовать в Badge
 */ var ContentBadge = function(_param) {
    var _param_appearance = _param.appearance, appearance = _param_appearance === void 0 ? 'accent' : _param_appearance, _param_mode = _param.mode, mode = _param_mode === void 0 ? 'primary' : _param_mode, capsule = _param.capsule, _param_size = _param.size, size = _param_size === void 0 ? 'm' : _param_size, _param_weight = _param.weight, weight = _param_weight === void 0 ? '2' : _param_weight, className = _param.className, children = _param.children, restProps = ContentBadge_object_without_properties(_param, [
        "appearance",
        "mode",
        "capsule",
        "size",
        "weight",
        "className",
        "children"
    ]);
    var TypographyComponent = size === 'l' ? Footnote_Footnote : Caption_Caption;
    return /*#__PURE__*/ react.createElement(TypographyComponent, ContentBadge_object_spread_props(ContentBadge_object_spread({}, restProps), {
        weight: weight,
        normalize: true,
        className: clsx(className, "vkuiContentBadge", size !== 's' && capsule && "vkuiContentBadge--capsule", mode === 'outline' && "vkuiContentBadge--mode-outline", appearanceClassNames[appearance][mode], sizeClassNames[size])
    }), /*#__PURE__*/ react.createElement(ContentBadgeContext.Provider, {
        value: {
            isSingleChild: react.Children.count(children) === 1,
            size: size
        }
    }, children));
};
ContentBadge.displayName = 'ContentBadge';
ContentBadge.SlotIcon = ContentBadgeSlotIcon;
ContentBadge.SlotIcon.displayName = 'ContentBadge.SlotIcon';

;// CONCATENATED MODULE: ./src/components/ButtonGroup/ButtonGroup.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ButtonGroup/ButtonGroup.tsx
function ButtonGroup_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ButtonGroup_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ButtonGroup_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ButtonGroup_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ButtonGroup_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ButtonGroup_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



var ButtonGroup_stylesMode = {
    vertical: "vkuiButtonGroup--mode-vertical",
    horizontal: "vkuiButtonGroup--mode-horizontal"
};
var stylesGap = {
    space: "vkuiButtonGroup--gap-space",
    s: "vkuiButtonGroup--gap-s",
    m: "vkuiButtonGroup--gap-m"
};
var ButtonGroup_stylesAlign = {
    left: "vkuiButtonGroup--align-left",
    center: "vkuiButtonGroup--align-center",
    right: "vkuiButtonGroup--align-right"
};
/**
 * @see https://vkcom.github.io/VKUI/#/ButtonGroup
 */ var ButtonGroup = function(_param) {
    var _param_mode = _param.mode, mode = _param_mode === void 0 ? 'horizontal' : _param_mode, _param_gap = _param.gap, gap = _param_gap === void 0 ? 'm' : _param_gap, _param_stretched = _param.stretched, stretched = _param_stretched === void 0 ? false : _param_stretched, _param_align = _param.align, align = _param_align === void 0 ? 'left' /* NOTE: Чтобы блоки по-умолчанию не растягивались на всю ширину контейнера */  : _param_align, restProps = ButtonGroup_object_without_properties(_param, [
        "mode",
        "gap",
        "stretched",
        "align"
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, ButtonGroup_object_spread({
        baseClassName: classNames("vkuiButtonGroup", ButtonGroup_stylesMode[mode], gap !== 'none' && stylesGap[gap], stretched && "vkuiButtonGroup--stretched", ButtonGroup_stylesAlign[align]),
        role: "group"
    }, restProps));
};

;// CONCATENATED MODULE: ./src/components/Card/Card.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Card/Card.tsx
function Card_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Card_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Card_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Card_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Card_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Card_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Card_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Card_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Card_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



/**
 * @see https://vkcom.github.io/VKUI/#/Card
 */ var Card_Card = function(_param) {
    var _param_mode = _param.mode, mode = _param_mode === void 0 ? 'tint' : _param_mode, _param_Component = _param.// TODO [>=7]: поменять тег на li https://github.com/VKCOM/VKUI/issues/7336
    Component, Component = _param_Component === void 0 ? 'div' : _param_Component, restProps = Card_object_without_properties(_param, [
        "mode",
        "Component"
    ]);
    var withBorder = mode === 'outline' || mode === 'outline-tint';
    return /*#__PURE__*/ React.createElement(RootComponent, Card_object_spread_props(Card_object_spread({}, restProps), {
        Component: Component,
        baseClassName: classNames("vkuiCard", mode === 'outline' && "vkuiCard--mode-outline", mode === 'shadow' && "vkuiCard--mode-shadow", withBorder && "vkuiCard--withBorder")
    }));
};

;// CONCATENATED MODULE: ./src/components/CardGrid/CardGrid.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/CardGrid/CardGrid.tsx
function CardGrid_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CardGrid_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CardGrid_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CardGrid_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function CardGrid_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        CardGrid_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function CardGrid_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CardGrid_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CardGrid_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var CardGrid_sizeXClassNames = {
    none: "vkuiCardGrid--sizeX-none",
    compact: "vkuiCardGrid--sizeX-compact"
};
var CardGrid_stylesSize = {
    s: 'vkuiInternalCardGrid--size-s',
    m: 'vkuiInternalCardGrid--size-m',
    l: 'vkuiInternalCardGrid--size-l'
};
/**
 * @see https://vkcom.github.io/VKUI/#/CardGrid
 */ var CardGrid = function(_param) {
    var _param_size = _param.size, size = _param_size === void 0 ? 's' : _param_size, _param_spaced = _param.spaced, spaced = _param_spaced === void 0 ? false : _param_spaced, _param_Component = _param.// TODO [>=7]: поменять тег на ul https://github.com/VKCOM/VKUI/issues/7336
    Component, Component = _param_Component === void 0 ? 'div' : _param_Component, restProps = CardGrid_object_without_properties(_param, [
        "size",
        "spaced",
        "Component"
    ]);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeX = _useAdaptivity.sizeX, sizeX = _useAdaptivity_sizeX === void 0 ? 'none' : _useAdaptivity_sizeX;
    return /*#__PURE__*/ React.createElement(RootComponent, CardGrid_object_spread_props(CardGrid_object_spread({}, restProps), {
        Component: Component,
        baseClassName: classNames("vkuiCardGrid", 'vkuiInternalCardGrid', spaced && "vkuiCardGrid--spaced", CardGrid_stylesSize[size], sizeX !== 'regular' && CardGrid_sizeXClassNames[sizeX])
    }));
};

;// CONCATENATED MODULE: ./src/components/CardScroll/CardScroll.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/CardScroll/CardScroll.tsx
function CardScroll_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function CardScroll_array_without_holes(arr) {
    if (Array.isArray(arr)) return CardScroll_array_like_to_array(arr);
}
function CardScroll_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CardScroll_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function CardScroll_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function CardScroll_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CardScroll_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CardScroll_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function CardScroll_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        CardScroll_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function CardScroll_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CardScroll_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CardScroll_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function CardScroll_to_consumable_array(arr) {
    return CardScroll_array_without_holes(arr) || CardScroll_iterable_to_array(arr) || CardScroll_unsupported_iterable_to_array(arr) || CardScroll_non_iterable_spread();
}
function CardScroll_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return CardScroll_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return CardScroll_array_like_to_array(o, minLen);
}






var CardScroll_stylesSize = {
    s: 'vkuiInternalCardScroll--size-s',
    m: 'vkuiInternalCardScroll--size-m',
    l: 'vkuiInternalCardScroll--size-l'
};
/**
 * @see https://vkcom.github.io/VKUI/#/CardScroll
 */ var CardScroll = function(_param) {
    var getScrollToLeft = function getScrollToLeft(offset) {
        if (!refContainer.current || !gapRef.current) {
            return offset;
        }
        var containerWidth = refContainer.current.offsetWidth;
        var slideIndex = CardScroll_to_consumable_array(refContainer.current.children).findIndex(function(el) {
            return el.offsetLeft + el.offsetWidth + parseInt(window.getComputedStyle(el).marginRight) - offset >= 0;
        });
        if (slideIndex === -1) {
            return offset;
        }
        if (slideIndex === 0) {
            return 0;
        }
        var slide = refContainer.current.children[slideIndex];
        var scrollTo = slide.offsetLeft - (containerWidth - slide.offsetWidth) + gapRef.current.offsetWidth;
        if (scrollTo <= 2 * gapRef.current.offsetWidth) {
            return 0;
        }
        return scrollTo;
    };
    var getScrollToRight = function getScrollToRight(offset) {
        if (!refContainer.current || !gapRef.current) {
            return offset;
        }
        var containerWidth = refContainer.current.offsetWidth;
        var slide = Array.prototype.find.call(refContainer.current.children, function(el) {
            return el.offsetLeft + el.offsetWidth - offset > containerWidth;
        });
        if (!slide) {
            return offset;
        }
        return slide.offsetLeft - gapRef.current.offsetWidth;
    };
    var children = _param.children, _param_size = _param.size, size = _param_size === void 0 ? 's' : _param_size, _param_showArrows = _param.showArrows, showArrows = _param_showArrows === void 0 ? true : _param_showArrows, _param_noSpaces = _param.noSpaces, noSpaces = _param_noSpaces === void 0 ? false : _param_noSpaces, _param_Component = _param.// TODO [>=7]: поменять тег на ul https://github.com/VKCOM/VKUI/issues/7336
    Component, Component = _param_Component === void 0 ? 'div' : _param_Component, restProps = CardScroll_object_without_properties(_param, [
        "children",
        "size",
        "showArrows",
        "noSpaces",
        "Component"
    ]);
    var refContainer = React.useRef(null);
    var gapRef = React.useRef(null);
    var window = useDOM().window;
    return /*#__PURE__*/ React.createElement(RootComponent, CardScroll_object_spread_props(CardScroll_object_spread({}, restProps), {
        Component: Component,
        baseClassName: classNames("vkuiCardScroll", 'vkuiInternalCardScroll', size !== false && CardScroll_stylesSize[size], !noSpaces && "vkuiCardScroll--withSpaces")
    }), /*#__PURE__*/ React.createElement(HorizontalScroll, {
        getScrollToLeft: getScrollToLeft,
        getScrollToRight: getScrollToRight,
        showArrows: showArrows
    }, /*#__PURE__*/ React.createElement("div", {
        className: "vkuiCardScroll__in",
        ref: refContainer
    }, /*#__PURE__*/ React.createElement("span", {
        className: "vkuiCardScroll__gap",
        ref: gapRef
    }), children, /*#__PURE__*/ React.createElement("span", {
        className: "vkuiCardScroll__gap"
    }))));
};

;// CONCATENATED MODULE: ./src/components/ContentCard/ContentCard.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ContentCard/ContentCard.tsx
function ContentCard_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ContentCard_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ContentCard_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ContentCard_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ContentCard_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ContentCard_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ContentCard_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ContentCard_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ContentCard_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}










/**
 * @see https://vkcom.github.io/VKUI/#/ContentCard
 */ var ContentCard = function(_param) {
    var subtitle = _param.subtitle, header = _param.header, _param_headerComponent = _param.headerComponent, headerComponent = _param_headerComponent === void 0 ? 'span' : _param_headerComponent, text = _param.text, caption = _param.caption, // card props
    className = _param.className, _param_mode = _param.mode, mode = _param_mode === void 0 ? 'shadow' : _param_mode, style = _param.style, getRootRef = _param.getRootRef, // img props
    getRef = _param.getRef, maxHeight = _param.maxHeight, src = _param.src, srcSet = _param.srcSet, _param_alt = _param.alt, alt = _param_alt === void 0 ? '' : _param_alt, width = _param.width, height = _param.height, crossOrigin = _param.crossOrigin, decoding = _param.decoding, loading = _param.loading, referrerPolicy = _param.referrerPolicy, sizes = _param.sizes, useMap = _param.useMap, fetchPriority = _param.fetchPriority, _param_hasHover = _param.hasHover, hasHover = _param_hasHover === void 0 ? false : _param_hasHover, _param_hasActive = _param.hasActive, hasActive = _param_hasActive === void 0 ? false : _param_hasActive, _param_Component = _param.// TODO [>=7]: поменять тег на li https://github.com/VKCOM/VKUI/issues/7336
    Component, Component = _param_Component === void 0 ? 'div' : _param_Component, restProps = ContentCard_object_without_properties(_param, [
        "subtitle",
        "header",
        "headerComponent",
        "text",
        "caption",
        "className",
        "mode",
        "style",
        "getRootRef",
        "getRef",
        "maxHeight",
        "src",
        "srcSet",
        "alt",
        "width",
        "height",
        "crossOrigin",
        "decoding",
        "loading",
        "referrerPolicy",
        "sizes",
        "useMap",
        "fetchPriority",
        "hasHover",
        "hasActive",
        "Component"
    ]);
    return /*#__PURE__*/ React.createElement(Card, {
        mode: mode,
        getRootRef: getRootRef,
        Component: Component,
        style: style,
        className: classNames(restProps.disabled && "vkuiContentCard--disabled", className)
    }, /*#__PURE__*/ React.createElement(Tappable, ContentCard_object_spread_props(ContentCard_object_spread({}, restProps), {
        hasHover: hasHover,
        hasActive: hasActive,
        className: "vkuiContentCard__tappable"
    }), (src || srcSet) && /*#__PURE__*/ React.createElement("img", ContentCard_object_spread_props(ContentCard_object_spread({
        ref: getRef,
        className: "vkuiContentCard__img",
        src: src,
        srcSet: srcSet,
        alt: alt,
        crossOrigin: crossOrigin,
        decoding: decoding,
        loading: loading,
        referrerPolicy: referrerPolicy,
        sizes: sizes,
        useMap: useMap
    }, getFetchPriorityProp(fetchPriority)), {
        height: height,
        style: {
            maxHeight: maxHeight
        },
        width: "100%"
    })), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiContentCard__body"
    }, hasReactNode(subtitle) && /*#__PURE__*/ React.createElement(Caption, {
        className: classNames("vkuiContentCard__text", "vkuiContentCard__subtitle"),
        weight: "1",
        level: "3",
        caps: true
    }, subtitle), hasReactNode(header) && /*#__PURE__*/ React.createElement(Headline, {
        className: "vkuiContentCard__text",
        weight: "2",
        level: "1",
        Component: headerComponent
    }, header), hasReactNode(text) && /*#__PURE__*/ React.createElement(Text, {
        className: "vkuiContentCard__text"
    }, text), hasReactNode(caption) && /*#__PURE__*/ React.createElement(Footnote, {
        className: classNames("vkuiContentCard__text", "vkuiContentCard__caption")
    }, caption))));
};

;// CONCATENATED MODULE: ./src/components/Header/Header.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Header/Header.tsx
function Header_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Header_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Header_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Header_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Header_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Header_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Header_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Header_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Header_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}










var HeaderContent = function(_param) {
    var mode = _param.mode, size = _param.size, restProps = Header_object_without_properties(_param, [
        "mode",
        "size"
    ]);
    var isLarge = size === 'large';
    var platform = usePlatform();
    if (platform === 'ios') {
        switch(mode){
            case 'primary':
                return isLarge ? /*#__PURE__*/ React.createElement(Title, Header_object_spread({
                    level: "2",
                    weight: "2"
                }, restProps)) : /*#__PURE__*/ React.createElement(Title, Header_object_spread({
                    weight: "1",
                    level: "3"
                }, restProps));
            case 'secondary':
                return /*#__PURE__*/ React.createElement(Footnote, Header_object_spread({
                    weight: "1",
                    caps: true
                }, restProps));
            case 'tertiary':
                return /*#__PURE__*/ React.createElement(Title, Header_object_spread({
                    weight: "1",
                    level: "3"
                }, restProps));
        }
    }
    switch(mode){
        case 'primary':
            return isLarge ? /*#__PURE__*/ React.createElement(Title, Header_object_spread({
                level: "2",
                weight: "2"
            }, restProps)) : /*#__PURE__*/ React.createElement(Headline, Header_object_spread({
                weight: "2"
            }, restProps));
        case 'secondary':
            return /*#__PURE__*/ React.createElement(Footnote, Header_object_spread({
                weight: "1",
                caps: true
            }, restProps));
        case 'tertiary':
            return /*#__PURE__*/ React.createElement(Headline, Header_object_spread({
                weight: "2"
            }, restProps));
    }
    return null;
};
var Header_stylesMode = {
    primary: "vkuiHeader--mode-primary",
    secondary: "vkuiHeader--mode-secondary",
    tertiary: "vkuiHeader--mode-tertiary"
};
/**
 * @see https://vkcom.github.io/VKUI/#/Header
 */ var Header = function(_param) {
    var _param_mode = _param.mode, mode = _param_mode === void 0 ? 'primary' : _param_mode, _param_size = _param.size, size = _param_size === void 0 ? 'regular' : _param_size, _param_Component = _param.Component, Component = _param_Component === void 0 ? 'h2' : _param_Component, children = _param.children, subtitle = _param.subtitle, _param_subtitleComponent = _param.subtitleComponent, subtitleComponent = _param_subtitleComponent === void 0 ? 'span' : _param_subtitleComponent, indicator = _param.indicator, aside = _param.aside, multiline = _param.multiline, before = _param.before, beforeTitle = _param.beforeTitle, afterTitle = _param.afterTitle, beforeSubtitle = _param.beforeSubtitle, afterSubtitle = _param.afterSubtitle, restProps = Header_object_without_properties(_param, [
        "mode",
        "size",
        "Component",
        "children",
        "subtitle",
        "subtitleComponent",
        "indicator",
        "aside",
        "multiline",
        "before",
        "beforeTitle",
        "afterTitle",
        "beforeSubtitle",
        "afterSubtitle"
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, Header_object_spread_props(Header_object_spread({}, restProps), {
        baseClassName: classNames("vkuiHeader", Header_stylesMode[mode], size === 'large' && "vkuiHeader--large", isPrimitiveReactNode(indicator) && "vkuiHeader--pi", hasReactNode(subtitle) && "vkuiHeader--with-subtitle")
    }), before && /*#__PURE__*/ React.createElement("div", {
        className: classNames("vkuiHeader__before", subtitle && "vkuiHeader__before--withSubtitle")
    }, before), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiHeader__main"
    }, /*#__PURE__*/ React.createElement(HeaderContent, {
        className: "vkuiHeader__content",
        Component: Component,
        mode: mode,
        size: size
    }, beforeTitle && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiHeader__content__before"
    }, beforeTitle), /*#__PURE__*/ React.createElement("span", {
        className: classNames("vkuiHeader__content-in", multiline && "vkuiHeader__content--multiline")
    }, children), afterTitle && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiHeader__content__after"
    }, afterTitle), hasReactNode(indicator) && /*#__PURE__*/ React.createElement(Footnote, {
        className: "vkuiHeader__indicator",
        weight: "2"
    }, indicator)), hasReactNode(subtitle) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiHeader__subtitleWrapper"
    }, beforeSubtitle && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiHeader__subtitleBefore"
    }, beforeSubtitle), /*#__PURE__*/ React.createElement(Subhead, {
        className: classNames("vkuiHeader__subtitle", multiline && "vkuiHeader__content--multiline"),
        Component: subtitleComponent
    }, subtitle), afterSubtitle && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiHeader__subtitleAfter"
    }, afterSubtitle))), hasReactNode(aside) && /*#__PURE__*/ React.createElement(Paragraph, {
        className: "vkuiHeader__aside",
        Component: "span"
    }, aside));
};

;// CONCATENATED MODULE: ./src/components/Group/Group.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Group/GroupContainer.tsx
function GroupContainer_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function GroupContainer_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            GroupContainer_define_property(target, key, source[key]);
        });
    }
    return target;
}
function GroupContainer_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function GroupContainer_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        GroupContainer_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function GroupContainer_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = GroupContainer_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function GroupContainer_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}








var GroupContainer_sizeXClassNames = {
    none: clsx("vkuiGroup--sizeX-none", 'vkuiInternalGroup--sizeX-none'),
    regular: "vkuiGroup--sizeX-regular",
    compact: "vkuiGroup--sizeX-compact"
};
var GroupContainer_stylesMode = {
    none: clsx("vkuiGroup--mode-none", 'vkuiInternalGroup--mode-none'),
    plain: clsx("vkuiGroup--mode-plain", 'vkuiInternalGroup--mode-plain'),
    card: clsx("vkuiGroup--mode-card", 'vkuiInternalGroup--mode-card')
};
var stylesPadding = {
    s: "vkuiGroup--padding-s",
    m: "vkuiGroup--padding-m"
};
/**
 * Вычисляем mode для Group.
 */ function useGroupMode(forcedMode, sizeX, isInsideModal) {
    var layout = react.useContext(AppRootContext_AppRootContext).layout;
    if (forcedMode) {
        return forcedMode;
    }
    if (isInsideModal) {
        return 'plain';
    }
    if (layout) {
        return layout;
    }
    if (sizeX !== 'none') {
        return sizeX === 'regular' ? 'card' : 'plain';
    }
    return 'none';
}
var GroupContainer_warn = warnOnce('Group');
var GroupContainer = function(_param) {
    var children = _param.children, _param_separator = _param.separator, separator = _param_separator === void 0 ? 'auto' : _param_separator, modeProps = _param.mode, _param_padding = _param.padding, padding = _param_padding === void 0 ? 'm' : _param_padding, tabIndexProp = _param.tabIndex, restProps = GroupContainer_object_without_properties(_param, [
        "children",
        "separator",
        "mode",
        "padding",
        "tabIndex"
    ]);
    var isInsideModal = react.useContext(ModalRootContext_ModalRootContext).isInsideModal;
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeX = _useAdaptivity.sizeX, sizeX = _useAdaptivity_sizeX === void 0 ? 'none' : _useAdaptivity_sizeX;
    var mode = useGroupMode(modeProps, sizeX, isInsideModal);
    var isTabPanel = restProps.role === 'tabpanel';
    if (false) {}
    var tabIndex = isTabPanel && tabIndexProp === undefined ? 0 : tabIndexProp;
    var siblingSeparatorElement = null;
    switch(separator){
        case 'auto':
            siblingSeparatorElement = /*#__PURE__*/ react.createElement("div", {
                className: "vkuiGroup__separator-sibling"
            });
            break;
        case 'show':
            siblingSeparatorElement = /*#__PURE__*/ react.createElement("div", {
                className: clsx("vkuiGroup__separator-sibling", mode === 'plain' || mode === 'none' ? "vkuiGroup__separator-sibling--forced" : undefined)
            });
            break;
        case 'hide':
            break;
    }
    return /*#__PURE__*/ react.createElement(react.Fragment, null, /*#__PURE__*/ react.createElement(RootComponent_RootComponent, GroupContainer_object_spread_props(GroupContainer_object_spread({
        Component: "section"
    }, restProps), {
        tabIndex: tabIndex,
        baseClassName: clsx('vkuiInternalGroup', "vkuiGroup", GroupContainer_sizeXClassNames[sizeX], mode === 'plain' && isInsideModal && "vkuiGroup--mode-plain-inside-modal", GroupContainer_stylesMode[mode], stylesPadding[padding])
    }), children), siblingSeparatorElement);
};
GroupContainer.displayName = 'GroupContainer';

;// CONCATENATED MODULE: ./src/components/Group/GroupDescription.tsx
function GroupDescription_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function GroupDescription_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            GroupDescription_define_property(target, key, source[key]);
        });
    }
    return target;
}
function GroupDescription_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = GroupDescription_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function GroupDescription_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var GroupDescription = function(_param) {
    var className = _param.className, restProps = GroupDescription_object_without_properties(_param, [
        "className"
    ]);
    return /*#__PURE__*/ react.createElement(Footnote_Footnote, GroupDescription_object_spread({
        className: clsx(className, "vkuiGroup__description")
    }, restProps));
};
GroupDescription.displayName = 'GroupDescription';

;// CONCATENATED MODULE: ./src/components/Group/GroupExpandedContent.tsx
function GroupExpandedContent_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function GroupExpandedContent_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            GroupExpandedContent_define_property(target, key, source[key]);
        });
    }
    return target;
}
function GroupExpandedContent_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function GroupExpandedContent_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        GroupExpandedContent_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function GroupExpandedContent_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = GroupExpandedContent_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function GroupExpandedContent_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var GroupExpandedContent_stylesDirection = {
    inline: "vkuiGroup__expanded-content--inline",
    block: "vkuiGroup__expanded-content--block"
};
var GroupExpandedContent = function(_param) {
    var _param_direction = _param.direction, direction = _param_direction === void 0 ? 'inline' : _param_direction, restProps = GroupExpandedContent_object_without_properties(_param, [
        "direction"
    ]);
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, GroupExpandedContent_object_spread_props(GroupExpandedContent_object_spread({
        Component: "div"
    }, restProps), {
        baseClassName: clsx("vkuiGroup__expanded-content", GroupExpandedContent_stylesDirection[direction])
    }));
};

;// CONCATENATED MODULE: ./src/components/Group/GroupHeader.tsx
function GroupHeader_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function GroupHeader_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            GroupHeader_define_property(target, key, source[key]);
        });
    }
    return target;
}
function GroupHeader_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = GroupHeader_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function GroupHeader_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



var GroupHeader = function(_param) {
    var className = _param.className, restProps = GroupHeader_object_without_properties(_param, [
        "className"
    ]);
    return /*#__PURE__*/ react.createElement("div", GroupHeader_object_spread({
        className: clsx(className, "vkuiGroup__header")
    }, restProps));
};
GroupHeader.displayName = 'GroupHeader';

;// CONCATENATED MODULE: ./src/components/Group/Group.tsx
function Group_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Group_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Group_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






/**
 * @see https://vkcom.github.io/VKUI/#/Group
 */ var Group = function(_param) {
    var header = _param.header, description = _param.description, children = _param.children, restProps = Group_object_without_properties(_param, [
        "header",
        "description",
        "children"
    ]);
    return /*#__PURE__*/ react.createElement(GroupContainer, restProps, react_utils_hasReactNode(header) && /*#__PURE__*/ react.createElement(GroupHeader, null, header), children, react_utils_hasReactNode(description) && /*#__PURE__*/ react.createElement(GroupDescription, null, description));
};
Group.displayName = 'Group';
Group.Container = GroupContainer;
Group.Container.displayName = 'Group.Container';
Group.Header = GroupHeader;
Group.Header.displayName = 'Group.Header';
Group.Description = GroupDescription;
Group.Description.displayName = 'Group.Description';
Group.ExpandedContent = GroupExpandedContent;
Group.ExpandedContent.displayName = 'Group.ExpandedContent';

;// CONCATENATED MODULE: ./src/components/Gradient/Gradient.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Gradient/Gradient.tsx
function Gradient_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Gradient_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Gradient_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Gradient_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Gradient_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Gradient_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Gradient_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Gradient_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Gradient_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



var modeStyles = {
    overlay: "vkuiGradient--mode-overlay",
    tint: "vkuiGradient--mode-tint"
};
/**
 * @see https://vkcom.github.io/VKUI/#/Gradient
 */ var Gradient = function(_param) {
    var _param_mode = _param.mode, mode = _param_mode === void 0 ? 'default' : _param_mode, _param_to = _param.to, to = _param_to === void 0 ? 'top' : _param_to, restProps = Gradient_object_without_properties(_param, [
        "mode",
        "to"
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, Gradient_object_spread_props(Gradient_object_spread({
        role: "presentation"
    }, restProps), {
        baseClassName: classNames("vkuiGradient", mode !== 'default' && modeStyles[mode], to === 'bottom' && "vkuiGradient--to-bottom")
    }));
};

;// CONCATENATED MODULE: ./src/hooks/useDraggableWithDomApi/constants.ts
function useDraggableWithDomApi_constants_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
var AUTO_SCROLL_START_DELAY = 300;
var ITEM_INITIAL_INDEX = -1;
var DATA_DRAGGABLE_PLACEHOLDER_KEY = 'data-draggable-placeholder';
var constants_DATA_DRAGGABLE_PLACEHOLDER_REACT_PROP = useDraggableWithDomApi_constants_define_property({}, DATA_DRAGGABLE_PLACEHOLDER_KEY, 'true');

;// CONCATENATED MODULE: ./src/lib/rafSchd.ts
/**
 * https://github.com/alexreardon/raf-schd
 *
 * Copyright (c) 2021 Alex Reardon
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function rafSchd_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function rafSchd_array_without_holes(arr) {
    if (Array.isArray(arr)) return rafSchd_array_like_to_array(arr);
}
function rafSchd_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function rafSchd_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function rafSchd_to_consumable_array(arr) {
    return rafSchd_array_without_holes(arr) || rafSchd_iterable_to_array(arr) || rafSchd_unsupported_iterable_to_array(arr) || rafSchd_non_iterable_spread();
}
function rafSchd_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return rafSchd_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return rafSchd_array_like_to_array(o, minLen);
}
var rafSchd = function(fn) {
    var lastArgs = [];
    var frameId = null;
    var wrapperFn = function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
            args[_key] = arguments[_key];
        }
        // Always capture the latest value
        lastArgs = args;
        // There is already a frame queued
        if (frameId) {
            return;
        }
        // Schedule a new frame
        frameId = requestAnimationFrame(function() {
            frameId = null;
            fn.apply(void 0, rafSchd_to_consumable_array(lastArgs));
        });
    };
    // Adding cancel property to result function
    wrapperFn.cancel = function() {
        if (!frameId) {
            return;
        }
        cancelAnimationFrame(frameId);
        frameId = null;
    };
    return wrapperFn;
};

;// CONCATENATED MODULE: ./src/hooks/useDraggableWithDomApi/autoScroll.ts
function autoScroll_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function autoScroll_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function autoScroll_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function autoScroll_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function autoScroll_sliced_to_array(arr, i) {
    return autoScroll_array_with_holes(arr) || autoScroll_iterable_to_array_limit(arr, i) || autoScroll_unsupported_iterable_to_array(arr, i) || autoScroll_non_iterable_rest();
}
function autoScroll_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return autoScroll_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return autoScroll_array_like_to_array(o, minLen);
}


var SCROLL_SPEED = 10;
var EDGE_SIZE = 50;
var getAutoScrollingData = function(clientY, scrollEl) {
    var scrollTop = Math.floor(getNodeScroll(scrollEl).scrollTop);
    var _getScrollRect = getScrollRect(scrollEl), relative = _getScrollRect.relative, edges = _getScrollRect.edges;
    var viewportHeight = relative.height;
    var documentHeight = getScrollHeight(scrollEl);
    var maxScrollY = documentHeight - viewportHeight;
    var canScrollUp = scrollTop > 0;
    var canScrollDown = scrollTop < maxScrollY;
    var _edges_y = autoScroll_sliced_to_array(edges.y, 2), edgeTop = _edges_y[0], edgeBottom = _edges_y[1];
    var topDistance = clientY - edgeTop;
    var bottomDistance = edgeBottom - clientY;
    var isInTopEdge = topDistance <= EDGE_SIZE;
    var isInBottomEdge = bottomDistance <= EDGE_SIZE;
    var result = {
        shouldScrolling: canScrollUp && isInTopEdge || canScrollDown && isInBottomEdge,
        y: 0
    };
    // Inspired by https://github.com/SortableJS/Sortable/issues/1907#issuecomment-1495403785
    if (isInTopEdge) {
        result.y = -1 * ((EDGE_SIZE - topDistance) / EDGE_SIZE) * SCROLL_SPEED;
    } else if (isInBottomEdge) {
        result.y = (EDGE_SIZE - bottomDistance) / EDGE_SIZE * SCROLL_SPEED;
    }
    return result;
};
var createAutoScrollController = function(scrollEl) {
    var scroll = function scroll(fn) {
        var _fn = fn(), shouldScrolling = _fn.shouldScrolling, y = _fn.y;
        if (shouldScrolling) {
            isRunning = true;
            scrollEl.scrollBy(0, y);
            scheduledScroll(fn);
        } else {
            isRunning = false;
            scheduledScroll.cancel();
        }
    };
    var isRunning = false;
    var scheduledScroll = rafSchd(scroll);
    var tryAutoScroll = function(fn) {
        scheduledScroll(fn);
    };
    var stop = function() {
        isRunning = false;
        scheduledScroll.cancel();
    };
    return {
        tryAutoScroll: tryAutoScroll,
        stop: stop,
        get isRunning () {
            return isRunning;
        }
    };
};

;// CONCATENATED MODULE: ./src/hooks/useDraggableWithDomApi/utils.ts
function utils_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function utils_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function utils_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function utils_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function utils_sliced_to_array(arr, i) {
    return utils_array_with_holes(arr) || utils_iterable_to_array_limit(arr, i) || utils_unsupported_iterable_to_array(arr, i) || utils_non_iterable_rest();
}
function utils_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return utils_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return utils_array_like_to_array(o, minLen);
}
var getTargetIsOverOrUnderElData = function(clientY, elRect) {
    var elRectHalfHeight = elRect.height / 2;
    return {
        isUnderEl: clientY <= elRect.bottom - elRectHalfHeight,
        isOverEl: clientY >= elRect.top + elRectHalfHeight
    };
};
var setDraggingItemShiftStyles = function(draggingEl, nextShiftY) {
    requestAnimationFrame(function() {
        draggingEl.style.transform = "translateY(".concat(nextShiftY, "px)");
    });
};
var setSiblingItemsShiftStyles = function(param) {
    var _param = utils_sliced_to_array(param, 2), _param_ = _param[0], el = _param_.el, height = _param_.draggingElRect.height, direction = _param[1], additionalGap = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
    requestAnimationFrame(function() {
        if (direction === 'up') {
            el.style.setProperty('transition', 'transform 0.3s ease-in 0s');
            el.style.removeProperty('transform');
        } else {
            el.style.setProperty('transition', 'transform 0.3s ease-out 0s');
            el.style.setProperty('transform', "translateY(".concat(height + additionalGap, "px)"));
        }
    });
};
var setInitialDraggingItemStyles = function(param) {
    var el = param.el, draggingElRect = param.draggingElRect;
    var top = draggingElRect.top, left = draggingElRect.left, width = draggingElRect.width, height = draggingElRect.height;
    requestAnimationFrame(function() {
        // Inspired by https://github.com/hello-pangea/dnd
        el.style.setProperty('pointer-events', 'none');
        el.style.setProperty('position', 'fixed');
        el.style.setProperty('top', "".concat(top, "px"));
        el.style.setProperty('left', "".concat(left, "px"));
        el.style.setProperty('width', "".concat(width, "px"));
        el.style.setProperty('height', "".concat(height, "px"));
        el.style.setProperty('z-index', 'var(--vkui_internal--z_index_cell_dragging)');
        el.style.setProperty('box-sizing', 'border-box');
        el.style.setProperty('transform', 'translateY(0)');
    });
};
var unsetInitialDraggingItemStyles = function(param) {
    var el = param.el;
    requestAnimationFrame(function() {
        el.style.removeProperty('pointer-events');
        el.style.removeProperty('position');
        el.style.removeProperty('top');
        el.style.removeProperty('left');
        el.style.removeProperty('width');
        el.style.removeProperty('height');
        el.style.removeProperty('z-index');
        el.style.removeProperty('box-sizing');
        el.style.removeProperty('transform');
    });
};
var setInitialPlaceholderItemStyles = function(param) {
    var el = param.el, draggingElRect = param.draggingElRect;
    if (el.firstElementChild) {
        return;
    }
    var width = draggingElRect.width, height = draggingElRect.height;
    var node = el.cloneNode();
    node.style.setProperty('display', 'block');
    node.style.setProperty('width', "".concat(width, "px"));
    node.style.setProperty('height', "".concat(height, "px"));
    node.style.setProperty('pointer-events', 'none');
    el.appendChild(node);
    el.style.setProperty('display', 'block');
};
var unsetInitialPlaceholderItemStyles = function(param) {
    var el = param.el;
    el.style.display = '';
    el.removeAttribute('style');
    if (el.firstElementChild) {
        el.firstElementChild.remove();
    }
};
var setInitialSiblingItemStyles = function(param) {
    var el = param.el, shifted = param.shifted, draggingElRect = param.draggingElRect, additionalGap = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
    var height = draggingElRect.height;
    requestAnimationFrame(function() {
        el.style.setProperty('pointer-events', 'none');
        el.style.setProperty('transition', 'none 0s ease 0s');
        if (shifted) {
            el.style.setProperty('transform', "translateY(".concat(height + additionalGap, "px)"));
        }
    });
};
var unsetInitialSiblingItemStyles = function(param) {
    var el = param.el;
    requestAnimationFrame(function() {
        el.style.removeProperty('pointer-events');
        el.style.removeProperty('transition');
        el.style.removeProperty('transform');
    });
};

;// CONCATENATED MODULE: ./src/hooks/useDraggableWithDomApi/useDraggableWithDomApi.ts
function useDraggableWithDomApi_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useDraggableWithDomApi_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useDraggableWithDomApi_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useDraggableWithDomApi_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useDraggableWithDomApi_sliced_to_array(arr, i) {
    return useDraggableWithDomApi_array_with_holes(arr) || useDraggableWithDomApi_iterable_to_array_limit(arr, i) || useDraggableWithDomApi_unsupported_iterable_to_array(arr, i) || useDraggableWithDomApi_non_iterable_rest();
}
function useDraggableWithDomApi_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useDraggableWithDomApi_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useDraggableWithDomApi_array_like_to_array(o, minLen);
}






var useDraggableWithDomApi = function(param) {
    var draggingElRef = param.elRef, onDragFinish = param.onDragFinish;
    var _React_useState = useDraggableWithDomApi_sliced_to_array(react.useState(false), 2), dragging = _React_useState[0], setDragging = _React_useState[1];
    var lastClientYRef = react.useRef(0);
    var lastDragShiftYRef = react.useRef(0);
    var scrollElRef = react.useRef(null);
    var lastScrollTopRef = react.useRef(0);
    var scrollControllerRef = react.useRef(null);
    var initializeScrollRefs = function(draggableEl) {
        var node = dom_getNearestOverflowAncestor(draggableEl);
        if (node) {
            scrollElRef.current = node;
            lastScrollTopRef.current = getNodeScroll(node).scrollTop;
            scrollControllerRef.current = createAutoScrollController(scrollElRef.current);
        }
    };
    var cleanupScrollRefs = function() {
        var _scrollControllerRef_current;
        lastScrollTopRef.current = 0;
        (_scrollControllerRef_current = scrollControllerRef.current) === null || _scrollControllerRef_current === void 0 ? void 0 : _scrollControllerRef_current.stop();
        scrollElRef.current = scrollControllerRef.current = null;
    };
    var lastDragDirectionRef = react.useRef(undefined);
    var toggleDragDirection = function(prevShiftY, nextShiftY) {
        var shiftYDiff = prevShiftY - nextShiftY;
        if (shiftYDiff < 0) {
            return 'down';
        }
        if (shiftYDiff > 0) {
            return 'up';
        }
        return lastDragDirectionRef.current;
    };
    var itemStartIndexRef = react.useRef(ITEM_INITIAL_INDEX);
    var itemEndIndexRef = react.useRef(ITEM_INITIAL_INDEX);
    var draggingItemRef = react.useRef(null);
    var placeholderItemRef = react.useRef(null);
    var siblingItemsRef = react.useRef([]);
    var itemsGapRef = react.useRef(0);
    var initializeItems = function(draggingEl) {
        var draggingElRect = getBoundingClientRect(draggingEl, true);
        var parentElement = draggingEl.parentElement;
        itemsGapRef.current = parentElement ? parseInt(parentElement.style.gridGap) : 0;
        var children = (parentElement || {
            children: []
        }).children;
        Array.prototype.forEach.call(children, function(el, index) {
            if (el === draggingEl) {
                itemStartIndexRef.current = itemEndIndexRef.current = index;
                draggingItemRef.current = {
                    index: index,
                    el: el,
                    draggingElRect: draggingElRect
                };
            } else if (el.getAttribute(DATA_DRAGGABLE_PLACEHOLDER_KEY) !== null) {
                placeholderItemRef.current = {
                    index: index,
                    el: el,
                    draggingElRect: draggingElRect
                };
            } else {
                siblingItemsRef.current.push({
                    index: index,
                    el: el,
                    shifted: itemStartIndexRef.current !== ITEM_INITIAL_INDEX && itemStartIndexRef.current < index,
                    draggingElRect: draggingElRect
                }); // prettier-ignore
            }
        });
        if (placeholderItemRef.current) {
            setInitialPlaceholderItemStyles(placeholderItemRef.current); // 1. reflow
        }
        if (draggingItemRef.current) {
            setInitialDraggingItemStyles(draggingItemRef.current); // 2. repaint
        }
        siblingItemsRef.current.forEach(function(sibling) {
            return setInitialSiblingItemStyles(sibling, itemsGapRef.current);
        }); // 2. repaint
    };
    var cleanupItems = function() {
        if (placeholderItemRef.current) {
            unsetInitialPlaceholderItemStyles(placeholderItemRef.current); // 1. reflow
        }
        if (draggingItemRef.current) {
            unsetInitialDraggingItemStyles(draggingItemRef.current); // 2. repaint
        }
        siblingItemsRef.current.forEach(unsetInitialSiblingItemStyles); // 2. repaint
        siblingItemsRef.current = [];
        placeholderItemRef.current = draggingItemRef.current = null;
        var swappedItemIndexRange = {
            from: itemStartIndexRef.current,
            to: itemEndIndexRef.current
        };
        itemStartIndexRef.current = itemEndIndexRef.current = ITEM_INITIAL_INDEX;
        return swappedItemIndexRange;
    };
    var getShiftAndUnshiftItemsPreparedData = function(clientY) {
        var shiftItemEls = [];
        var unshiftItemEls = [];
        itemEndIndexRef.current = itemStartIndexRef.current;
        siblingItemsRef.current.forEach(function(siblingItem) {
            var _getTargetIsOverOrUnderElData = getTargetIsOverOrUnderElData(clientY, getBoundingClientRect(siblingItem.el)), isOverEl = _getTargetIsOverOrUnderElData.isOverEl, isUnderEl = _getTargetIsOverOrUnderElData.isUnderEl;
            if (itemStartIndexRef.current < siblingItem.index) {
                if (isOverEl) {
                    itemEndIndexRef.current = itemEndIndexRef.current + 1;
                    if (lastDragDirectionRef.current === 'down' && siblingItem.shifted) {
                        siblingItem.shifted = false;
                        shiftItemEls.push([
                            siblingItem,
                            'up'
                        ]);
                    }
                }
                if (isUnderEl) {
                    if (lastDragDirectionRef.current === 'up' && !siblingItem.shifted) {
                        siblingItem.shifted = true;
                        unshiftItemEls.push([
                            siblingItem,
                            'down'
                        ]);
                    }
                }
            } else if (itemStartIndexRef.current > siblingItem.index) {
                if (isUnderEl) {
                    itemEndIndexRef.current = itemEndIndexRef.current - 1;
                    if (lastDragDirectionRef.current === 'up' && !siblingItem.shifted) {
                        siblingItem.shifted = true;
                        shiftItemEls.push([
                            siblingItem,
                            'down'
                        ]);
                    }
                }
                if (isOverEl) {
                    if (lastDragDirectionRef.current === 'down' && siblingItem.shifted) {
                        siblingItem.shifted = false;
                        unshiftItemEls.push([
                            siblingItem,
                            'up'
                        ]);
                    }
                }
            }
        });
        return [
            shiftItemEls,
            unshiftItemEls
        ];
    };
    var setShiftAndUnshiftItemStyles = function(shiftItemEls, unshiftItemEls) {
        shiftItemEls.forEach(function(item) {
            return setSiblingItemsShiftStyles(item, itemsGapRef.current);
        });
        unshiftItemEls.forEach(function(item) {
            return setSiblingItemsShiftStyles(item, itemsGapRef.current);
        });
    };
    var schedulingAutoScrollTimeoutIdRef = react.useRef(null);
    var clearSchedulingAutoScrollTimeout = function() {
        if (schedulingAutoScrollTimeoutIdRef.current) {
            clearTimeout(schedulingAutoScrollTimeoutIdRef.current);
            schedulingAutoScrollTimeoutIdRef.current = null;
        }
    };
    var tryAutoScroll = function() {
        if (scrollControllerRef.current) {
            scrollControllerRef.current.tryAutoScroll(function() {
                return scrollElRef.current ? getAutoScrollingData(lastClientYRef.current, scrollElRef.current) : {
                    shouldScrolling: false,
                    y: 0
                };
            });
        }
    };
    var schedulingAutoScroll = function() {
        clearSchedulingAutoScrollTimeout();
        schedulingAutoScrollTimeoutIdRef.current = setTimeout(function() {
            schedulingAutoScrollTimeoutIdRef.current = null;
            tryAutoScroll();
        }, AUTO_SCROLL_START_DELAY);
    };
    var onDragStart = function(event) {
        event.originalEvent.stopPropagation();
        event.originalEvent.preventDefault();
    };
    var onDragMove = function(event) {
        event.originalEvent.stopPropagation();
        event.originalEvent.preventDefault();
        var draggingEl = draggingElRef.current;
        if (!draggingEl) {
            return;
        }
        if (dragging) {
            lastDragDirectionRef.current = toggleDragDirection(lastDragShiftYRef.current, event.shiftY);
            lastDragShiftYRef.current = event.shiftY;
            lastClientYRef.current = event.clientY;
            if (scrollControllerRef.current && scrollControllerRef.current.isRunning) {
                setDraggingItemShiftStyles(draggingEl, lastDragShiftYRef.current);
            } else {
                var _getShiftAndUnshiftItemsPreparedData = useDraggableWithDomApi_sliced_to_array(getShiftAndUnshiftItemsPreparedData(lastClientYRef.current), 2), shiftItemEls = _getShiftAndUnshiftItemsPreparedData[0], unshiftItemEls = _getShiftAndUnshiftItemsPreparedData[1];
                setDraggingItemShiftStyles(draggingEl, lastDragShiftYRef.current);
                setShiftAndUnshiftItemStyles(shiftItemEls, unshiftItemEls);
                schedulingAutoScroll();
            }
        } else {
            setDragging(function(prevDragging) {
                // На случай, если onDragMove успеет вызваться ещё раз до того, как `dragging` выставится в
                // `true`
                if (prevDragging) {
                    return prevDragging;
                }
                initializeScrollRefs(draggingEl);
                initializeItems(draggingEl);
                return true;
            });
        }
    };
    var onDragEnd = function(event) {
        event.originalEvent.stopPropagation();
        event.originalEvent.preventDefault();
        clearSchedulingAutoScrollTimeout();
        cleanupScrollRefs();
        lastClientYRef.current = lastDragShiftYRef.current = 0;
        lastDragDirectionRef.current = undefined;
        if (dragging) {
            var swappedItemRange = cleanupItems();
            if (onDragFinish) {
                onDragFinish(swappedItemRange);
            }
            setDragging(false);
        }
    };
    var handleScroll = react.useCallback(function() {
        if (!draggingElRef.current || !scrollElRef.current) {
            return;
        }
        var nextScrollTop = getNodeScroll(scrollElRef.current).scrollTop;
        lastDragDirectionRef.current = toggleDragDirection(lastScrollTopRef.current, nextScrollTop);
        var scrollDiff = lastScrollTopRef.current - nextScrollTop;
        var clientYWithScrollOffset = lastClientYRef.current + scrollDiff;
        lastScrollTopRef.current = nextScrollTop;
        var _getShiftAndUnshiftItemsPreparedData = useDraggableWithDomApi_sliced_to_array(getShiftAndUnshiftItemsPreparedData(clientYWithScrollOffset), 2), shiftItemEls = _getShiftAndUnshiftItemsPreparedData[0], unshiftItemEls = _getShiftAndUnshiftItemsPreparedData[1];
        setShiftAndUnshiftItemStyles(shiftItemEls, unshiftItemEls);
    }, [
        draggingElRef
    ]);
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function recalculateOnScroll() {
        var scrollEl = scrollElRef.current;
        if (!dragging || !scrollEl) {
            return;
        }
        scrollEl.addEventListener('scroll', handleScroll);
        return function() {
            if (scrollEl) {
                scrollEl.removeEventListener('scroll', handleScroll);
            }
        };
    }, [
        dragging,
        handleScroll
    ]);
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function() {
        return function componentWillUnmount() {
            if (placeholderItemRef.current) {
                unsetInitialPlaceholderItemStyles(placeholderItemRef.current);
            }
        };
    }, []);
    return {
        dragging: dragging,
        onDragStart: onDragStart,
        onDragMove: onDragMove,
        onDragEnd: onDragEnd
    };
};

;// CONCATENATED MODULE: ./src/hooks/useDraggableWithDomApi/index.tsx



;// CONCATENATED MODULE: ./src/components/List/List.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/List/List.tsx
function List_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function List_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            List_define_property(target, key, source[key]);
        });
    }
    return target;
}
function List_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function List_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        List_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function List_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = List_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function List_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





/**
 * @see https://vkcom.github.io/VKUI/#/List
 */ var List = function(_param) {
    var children = _param.children, _param_gap = _param.gap, gap = _param_gap === void 0 ? 0 : _param_gap, className = _param.className, style = _param.style, restProps = List_object_without_properties(_param, [
        "children",
        "gap",
        "className",
        "style"
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, List_object_spread({
        role: "list",
        className: classNames("vkuiList", className),
        style: List_object_spread_props(List_object_spread({}, style), {
            gridGap: gap
        })
    }, restProps), children, /*#__PURE__*/ React.createElement("div", List_object_spread_props(List_object_spread({
        "aria-hidden": true
    }, DATA_DRAGGABLE_PLACEHOLDER_REACT_PROP), {
        className: "vkuiList__placeholder"
    })));
};

;// CONCATENATED MODULE: ./src/components/Removable/Removable.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Removable/Removable.tsx
function Removable_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Removable_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Removable_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Removable_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Removable_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Removable_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Removable_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Removable_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Removable_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Removable_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Removable_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Removable_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Removable_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Removable_sliced_to_array(arr, i) {
    return Removable_array_with_holes(arr) || Removable_iterable_to_array_limit(arr, i) || Removable_unsupported_iterable_to_array(arr, i) || Removable_non_iterable_rest();
}
function Removable_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Removable_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Removable_array_like_to_array(o, minLen);
}












/**
 * @see https://vkcom.github.io/VKUI/#/RemovableIos
 */ var RemovableIos = function(param) {
    var onRemove = param.onRemove, removePlaceholder = param.removePlaceholder, removePlaceholderString = param.removePlaceholderString, childrenProp = param.children, toggleButtonTestId = param.toggleButtonTestId, removeButtonTestId = param.removeButtonTestId, disabled = param.disabled;
    var window = dom_useDOM().window;
    var removeButtonRef = react.useRef(null);
    var disabledRef = react.useRef(true);
    var _React_useState = Removable_sliced_to_array(react.useState(0), 2), removeOffset = _React_useState[0], updateRemoveOffset = _React_useState[1];
    useGlobalEventListener_useGlobalEventListener(window, 'click', function() {
        if (removeOffset > 0) {
            updateRemoveOffset(0);
        }
    }, {
        capture: true
    });
    var onRemoveTransitionEnd = function() {
        if (removeOffset > 0) {
            var _removeButtonRef_current;
            removeButtonRef === null || removeButtonRef === void 0 ? void 0 : (_removeButtonRef_current = removeButtonRef.current) === null || _removeButtonRef_current === void 0 ? void 0 : _removeButtonRef_current.focus();
        } else {
            disabledRef.current = true;
        }
    };
    var onRemoveActivateClick = function(e) {
        e.stopPropagation();
        if (!removeButtonRef.current) {
            return;
        }
        var offsetWidth = removeButtonRef.current.offsetWidth;
        disabledRef.current = false;
        updateRemoveOffset(offsetWidth);
    };
    return /*#__PURE__*/ react.createElement("div", {
        className: clsx("vkuiRemovable__content", 'vkuiInternalRemovable__content'),
        style: {
            transform: "translateX(-".concat(removeOffset !== null && removeOffset !== void 0 ? removeOffset : 0, "px)")
        },
        onTransitionEnd: onRemoveTransitionEnd
    }, /*#__PURE__*/ react.createElement(IconButton_IconButton, {
        hasActive: false,
        hasHover: false,
        className: clsx("vkuiRemovable__action", "vkuiRemovable__toggle", 'vkuiInternalRemovable__action'),
        onClick: onRemoveActivateClick,
        disabled: removeOffset > 0 || disabled,
        "data-testid": toggleButtonTestId
    }, /*#__PURE__*/ react.createElement(VisuallyHidden_VisuallyHidden, null, removePlaceholderString), /*#__PURE__*/ react.createElement("i", {
        className: "vkuiRemovable__toggle-in",
        role: "presentation"
    })), typeof childrenProp === 'function' ? childrenProp({
        isRemoving: removeOffset > 0
    }) : childrenProp, /*#__PURE__*/ react.createElement("span", {
        className: "vkuiRemovable__offset",
        "aria-hidden": true
    }), /*#__PURE__*/ react.createElement(Tappable_Tappable, {
        Component: "button",
        hasActive: false,
        hasHover: false,
        disabled: disabledRef.current,
        getRootRef: removeButtonRef,
        className: "vkuiRemovable__remove",
        onClick: onRemove,
        "data-testid": removeButtonTestId
    }, /*#__PURE__*/ react.createElement("span", {
        className: "vkuiRemovable__remove-in"
    }, removePlaceholder)));
};
/**
 * @see https://vkcom.github.io/VKUI/#/Removable
 */ var Removable_Removable = function(_param) {
    var children = _param.children, onRemove = _param.onRemove, _param_removePlaceholder = _param.removePlaceholder, removePlaceholder = _param_removePlaceholder === void 0 ? 'Удалить' : _param_removePlaceholder, _param_align = _param.align, align = _param_align === void 0 ? 'center' : _param_align, _param_indent = _param.indent, indent = _param_indent === void 0 ? false : _param_indent, toggleButtonTestId = _param.toggleButtonTestId, removeButtonTestId = _param.removeButtonTestId, disabled = _param.disabled, restProps = Removable_object_without_properties(_param, [
        "children",
        "onRemove",
        "removePlaceholder",
        "align",
        "indent",
        "toggleButtonTestId",
        "removeButtonTestId",
        "disabled"
    ]);
    var platform = usePlatform_usePlatform();
    var onRemoveClick = function(e) {
        e.preventDefault();
        onRemove === null || onRemove === void 0 ? void 0 : onRemove(e);
    };
    var removePlaceholderString = children_getTextFromChildren(removePlaceholder);
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, Removable_object_spread_props(Removable_object_spread({}, restProps), {
        baseClassName: clsx(platform === 'ios' && "vkuiRemovable--ios", align === 'start' && "vkuiRemovable--align-start", indent && "vkuiRemovable--indent")
    }), platform !== 'ios' && /*#__PURE__*/ react.createElement("div", {
        className: clsx("vkuiRemovable__content", 'vkuiInternalRemovable__content')
    }, typeof children === 'function' ? children({
        isRemoving: false
    }) : children, /*#__PURE__*/ react.createElement(IconButton_IconButton, {
        activeMode: "opacity",
        hoverMode: "opacity",
        className: clsx("vkuiRemovable__action", 'vkuiInternalRemovable__action'),
        onClick: onRemoveClick,
        label: removePlaceholderString,
        "data-testid": removeButtonTestId,
        disabled: disabled
    }, /*#__PURE__*/ react.createElement(cancel_24_Icon24Cancel, {
        role: "presentation"
    })), /*#__PURE__*/ react.createElement("span", {
        className: "vkuiRemovable__offset",
        "aria-hidden": true
    })), platform === 'ios' && /*#__PURE__*/ react.createElement(RemovableIos, {
        onRemove: onRemoveClick,
        removePlaceholder: removePlaceholder,
        removePlaceholderString: removePlaceholderString,
        toggleButtonTestId: toggleButtonTestId,
        removeButtonTestId: removeButtonTestId,
        disabled: disabled
    }, children));
};

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/16/chevron_16.js
'use client';

var chevron_16_Icon16Chevron = makeIcon('Icon16Chevron', 'chevron_16', '0 0 12 16', '<symbol xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 12 16" id="chevron_16"><path fill="currentColor" d="M7.227 8 3.864 4.636a.9.9 0 0 1 1.272-1.272l4 4a.9.9 0 0 1 0 1.272l-4 4a.9.9 0 0 1-1.272-1.272z" /></symbol>', 12, 16, false, undefined);

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/24/chevron_compact_right_24.js
'use client';

var chevron_compact_right_24_Icon24ChevronCompactRight = makeIcon('Icon24ChevronCompactRight', 'chevron_compact_right_24', '0 0 16 24', '<symbol xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 24" id="chevron_compact_right_24"><path fill="currentColor" d="M4.706 7.706a1 1 0 0 1 0-1.412l.088-.088a.997.997 0 0 1 1.414.002l5.084 5.084a1 1 0 0 1 0 1.416l-5.084 5.084a1 1 0 0 1-1.414.002l-.088-.088a.995.995 0 0 1 0-1.412L9 12z" /></symbol>', 16, 24, false, undefined);

;// CONCATENATED MODULE: ./src/components/SimpleCell/Chevron/Chevron.tsx
function Chevron_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Chevron_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Chevron_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}


var iconSize = {
    s: chevron_16_Icon16Chevron,
    m: chevron_compact_right_24_Icon24ChevronCompactRight
};
var Chevron = function(_param) {
    var _param_size = _param.size, size = _param_size === void 0 ? 'm' : _param_size, restProps = Chevron_object_without_properties(_param, [
        "size"
    ]);
    var Icon = iconSize[size];
    return /*#__PURE__*/ react.createElement(Icon, restProps);
};

;// CONCATENATED MODULE: ./src/components/SimpleCell/SimpleCell.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/SimpleCell/SimpleCell.tsx
function SimpleCell_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function SimpleCell_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            SimpleCell_define_property(target, key, source[key]);
        });
    }
    return target;
}
function SimpleCell_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function SimpleCell_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        SimpleCell_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function SimpleCell_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = SimpleCell_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function SimpleCell_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}










var SimpleCell_sizeYClassNames = {
    none: "vkuiSimpleCell--sizeY-none",
    compact: "vkuiSimpleCell--sizeY-compact"
};
/**
 * @see https://vkcom.github.io/VKUI/#/SimpleCell
 */ var SimpleCell_SimpleCell = function(_param) {
    var badgeBeforeTitle = _param.badgeBeforeTitle, badgeAfterTitle = _param.badgeAfterTitle, badgeBeforeSubtitle = _param.badgeBeforeSubtitle, badgeAfterSubtitle = _param.badgeAfterSubtitle, before = _param.before, indicator = _param.indicator, children = _param.children, after = _param.after, expandable = _param.expandable, multiline = _param.multiline, subhead = _param.subhead, subtitle = _param.subtitle, extraSubtitle = _param.extraSubtitle, className = _param.className, _param_chevronSize = _param.chevronSize, chevronSize = _param_chevronSize === void 0 ? 'm' : _param_chevronSize, restProps = SimpleCell_object_without_properties(_param, [
        "badgeBeforeTitle",
        "badgeAfterTitle",
        "badgeBeforeSubtitle",
        "badgeAfterSubtitle",
        "before",
        "indicator",
        "children",
        "after",
        "expandable",
        "multiline",
        "subhead",
        "subtitle",
        "extraSubtitle",
        "className",
        "chevronSize"
    ]);
    var platform = usePlatform_usePlatform();
    var hasChevron = expandable === 'always' || expandable === 'auto' && platform === 'ios';
    var hasAfter = react_utils_hasReactNode(after) || hasChevron;
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    return /*#__PURE__*/ react.createElement(Tappable_Tappable, SimpleCell_object_spread_props(SimpleCell_object_spread({}, restProps), {
        className: clsx("vkuiSimpleCell", restProps.disabled && "vkuiSimpleCell--disabled", sizeY !== 'regular' && SimpleCell_sizeYClassNames[sizeY], multiline && "vkuiSimpleCell--mult", className)
    }), /*#__PURE__*/ react.createElement("div", {
        className: clsx("vkuiSimpleCell__before", platform === 'ios' && "vkuiSimpleCell__before--ios")
    }, before), /*#__PURE__*/ react.createElement("div", {
        className: "vkuiSimpleCell__middle"
    }, subhead && /*#__PURE__*/ react.createElement(Subhead_Subhead, {
        Component: "span",
        className: clsx("vkuiSimpleCell__text", "vkuiSimpleCell__subhead")
    }, subhead), /*#__PURE__*/ react.createElement("div", {
        className: "vkuiSimpleCell__content"
    }, badgeBeforeTitle && /*#__PURE__*/ react.createElement("span", {
        className: "vkuiSimpleCell__badge"
    }, badgeBeforeTitle), /*#__PURE__*/ react.createElement(Headline_Headline, {
        Component: "span",
        className: "vkuiSimpleCell__children",
        weight: "3"
    }, children), react_utils_hasReactNode(badgeAfterTitle) && /*#__PURE__*/ react.createElement("span", {
        className: "vkuiSimpleCell__badge"
    }, badgeAfterTitle)), subtitle && /*#__PURE__*/ react.createElement("div", {
        className: "vkuiSimpleCell__content"
    }, badgeBeforeSubtitle && /*#__PURE__*/ react.createElement("span", {
        className: "vkuiSimpleCell__badge"
    }, badgeBeforeSubtitle), /*#__PURE__*/ react.createElement(Footnote_Footnote, {
        normalize: false,
        className: clsx("vkuiSimpleCell__text", "vkuiSimpleCell__subtitle")
    }, subtitle), badgeAfterSubtitle && /*#__PURE__*/ react.createElement("span", {
        className: "vkuiSimpleCell__badge"
    }, badgeAfterSubtitle)), extraSubtitle && /*#__PURE__*/ react.createElement(Footnote_Footnote, {
        className: clsx("vkuiSimpleCell__text", "vkuiSimpleCell__extraSubtitle")
    }, extraSubtitle)), react_utils_hasReactNode(indicator) && /*#__PURE__*/ react.createElement(Headline_Headline, {
        Component: "span",
        weight: "3",
        className: "vkuiSimpleCell__indicator"
    }, indicator), hasAfter && /*#__PURE__*/ react.createElement("div", {
        className: clsx("vkuiSimpleCell__after", 'vkuiInternalSimpleCell__after')
    }, after, hasChevron && /*#__PURE__*/ react.createElement(Chevron, {
        size: chevronSize,
        className: "vkuiSimpleCell__chevronIcon"
    })));
};

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/20/check_box_on_20.js
'use client';

var Icon20CheckBoxOn = makeIcon('Icon20CheckBoxOn', 'check_box_on_20', '0 0 20 20', '<symbol xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20" id="check_box_on_20"><path fill="currentColor" fill-rule="evenodd" d="M2.436 4.184C2 5.04 2 6.16 2 8.4v3.2c0 2.24 0 3.36.436 4.216a4 4 0 0 0 1.748 1.748C5.04 18 6.16 18 8.4 18h3.2c2.24 0 3.36 0 4.216-.436a4 4 0 0 0 1.748-1.748C18 14.96 18 13.84 18 11.6V8.4c0-2.24 0-3.36-.436-4.216a4 4 0 0 0-1.748-1.748C14.96 2 13.84 2 11.6 2H8.4c-2.24 0-3.36 0-4.216.436a4 4 0 0 0-1.748 1.748m12.2 3.803a.9.9 0 1 0-1.272-1.274l-4.673 4.665-2.055-2.052A.9.9 0 0 0 5.364 10.6l2.691 2.687a.9.9 0 0 0 1.272 0z" clip-rule="evenodd" /></symbol>', 20, 20, false, undefined);

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/24/check_box_on_24.js
'use client';

var Icon24CheckBoxOn = makeIcon('Icon24CheckBoxOn', 'check_box_on_24', '0 0 24 24', '<symbol xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" id="check_box_on_24"><path fill="currentColor" fill-rule="evenodd" d="M2.436 4.184C2 5.04 2 6.16 2 8.4v7.2c0 2.24 0 3.36.436 4.216a4 4 0 0 0 1.748 1.748C5.04 22 6.16 22 8.4 22h7.2c2.24 0 3.36 0 4.216-.436a4 4 0 0 0 1.748-1.748C22 18.96 22 17.84 22 15.6V8.4c0-2.24 0-3.36-.436-4.216a4 4 0 0 0-1.748-1.748C18.96 2 17.84 2 15.6 2H8.4c-2.24 0-3.36 0-4.216.436a4 4 0 0 0-1.748 1.748m15.771 5.023a1 1 0 0 0-1.414-1.414L10 14.586l-2.793-2.793a1 1 0 0 0-1.414 1.414l3.5 3.5a1 1 0 0 0 1.414 0z" clip-rule="evenodd" /></symbol>', 24, 24, false, undefined);

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/20/check_box_off_20.js
'use client';

var Icon20CheckBoxOff = makeIcon('Icon20CheckBoxOff', 'check_box_off_20', '0 0 20 20', '<symbol xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20" id="check_box_off_20"><path fill="currentColor" fill-rule="evenodd" d="M4.046 2.534C4.788 2.138 5.517 2 7.128 2h5.744c1.61 0 2.34.138 3.082.534.65.348 1.164.862 1.512 1.512.396.742.534 1.471.534 3.082v5.744c0 1.61-.138 2.34-.534 3.082a3.64 3.64 0 0 1-1.512 1.512c-.742.396-1.472.534-3.082.534H7.128c-1.61 0-2.34-.138-3.082-.534a3.64 3.64 0 0 1-1.512-1.512C2.138 15.212 2 14.482 2 12.872V7.128c0-1.61.138-2.34.534-3.082a3.65 3.65 0 0 1 1.512-1.512m3.082.966c-1.531 0-1.962.136-2.374.357a2.15 2.15 0 0 0-.897.897c-.22.412-.357.843-.357 2.374v5.744c0 1.531.136 1.962.357 2.374q.313.585.897.897c.412.22.843.357 2.374.357h5.744c1.531 0 1.962-.136 2.374-.357q.585-.313.897-.897c.22-.412.357-.843.357-2.374V7.128c0-1.531-.136-1.962-.357-2.374a2.15 2.15 0 0 0-.897-.897c-.412-.22-.843-.357-2.374-.357z" clip-rule="evenodd" /></symbol>', 20, 20, false, undefined);

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/24/check_box_off_24.js
'use client';

var Icon24CheckBoxOff = makeIcon('Icon24CheckBoxOff', 'check_box_off_24', '0 0 24 24', '<symbol xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" id="check_box_off_24"><path fill="currentColor" d="M16.872 2c1.783 0 2.43.186 3.082.534s1.163.86 1.512 1.512S22 5.345 22 7.128v9.744c0 1.783-.186 2.43-.534 3.082a3.64 3.64 0 0 1-1.512 1.512c-.652.348-1.299.534-3.082.534H7.128c-1.783 0-2.43-.186-3.082-.534s-1.163-.86-1.512-1.512C2.186 19.302 2 18.655 2 16.872V7.128c0-1.783.186-2.43.534-3.082a3.64 3.64 0 0 1 1.512-1.512C4.698 2.186 5.345 2 7.128 2zm.564 2H6.564c-.892 0-1.215.093-1.54.267-.327.174-.583.43-.757.756S4 5.673 4 6.563v10.873c0 .892.093 1.215.267 1.54.174.327.43.583.756.757s.65.267 1.54.267h10.873c.892 0 1.215-.093 1.54-.267.327-.174.583-.43.757-.756s.267-.65.267-1.54V6.563c0-.892-.093-1.215-.267-1.54a1.8 1.8 0 0 0-.756-.757c-.326-.174-.65-.267-1.54-.267" /></symbol>', 24, 24, false, undefined);

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/20/check_circle_off_20.js
'use client';

var Icon20CheckCircleOff = makeIcon('Icon20CheckCircleOff', 'check_circle_off_20', '0 0 20 20', '<symbol xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="none" viewBox="0 0 20 20" id="check_circle_off_20"><defs><path id="check_circle_off_20_a" fill="currentColor" fill-rule="evenodd" d="M10 20c5.523 0 10-4.477 10-10S15.523 0 10 0 0 4.477 0 10s4.477 10 10 10m0-1a9 9 0 1 0 0-18 9 9 0 0 0 0 18" clip-rule="evenodd" /></defs><use xlink:href="#check_circle_off_20_a" fill-rule="evenodd" clip-rule="evenodd" /><use xlink:href="#check_circle_off_20_a" fill-rule="evenodd" clip-rule="evenodd" /></symbol>', 20, 20, false, undefined);

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/24/check_circle_off_24.js
'use client';

var Icon24CheckCircleOff = makeIcon('Icon24CheckCircleOff', 'check_circle_off_24', '0 0 24 24', '<symbol xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" id="check_circle_off_24"><path fill="currentColor" d="M12 0c6.629 0 12 5.373 12 12 0 6.629-5.373 12-12 12-6.629 0-12-5.373-12-12C0 5.371 5.373 0 12 0m0 1.5C6.2 1.5 1.5 6.2 1.5 12S6.2 22.5 12 22.5 22.5 17.8 22.5 12 17.8 1.5 12 1.5" /></symbol>', 24, 24, false, undefined);

;// CONCATENATED MODULE: ./src/components/Cell/CellCheckbox/CellCheckbox.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Cell/CellCheckbox/CellCheckbox.tsx
function CellCheckbox_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CellCheckbox_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CellCheckbox_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CellCheckbox_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function CellCheckbox_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        CellCheckbox_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function CellCheckbox_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CellCheckbox_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CellCheckbox_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}







var CheckBoxOn = function() {
    return /*#__PURE__*/ react.createElement(AdaptiveIconRenderer_AdaptiveIconRenderer, {
        IconCompact: Icon20CheckBoxOn,
        IconRegular: Icon24CheckBoxOn
    });
};
var CheckBoxOff = function() {
    return /*#__PURE__*/ react.createElement(AdaptiveIconRenderer_AdaptiveIconRenderer, {
        IconCompact: Icon20CheckBoxOff,
        IconRegular: Icon24CheckBoxOff
    });
};
var CheckCircleOn = function() {
    return /*#__PURE__*/ react.createElement(AdaptiveIconRenderer_AdaptiveIconRenderer, {
        IconCompact: Icon20CheckCircleOn,
        IconRegular: Icon24CheckCircleOn
    });
};
var CheckCircleOff = function() {
    return /*#__PURE__*/ react.createElement(AdaptiveIconRenderer_AdaptiveIconRenderer, {
        IconCompact: Icon20CheckCircleOff,
        IconRegular: Icon24CheckCircleOff
    });
};
function useTypeIcon(type) {
    var platform = usePlatform_usePlatform();
    if (type !== 'auto') {
        return type;
    }
    if (platform === 'ios' || platform === 'vkcom') {
        return 'circle';
    }
    return 'square';
}
var CellCheckbox = function(_param) {
    var getRootRef = _param.getRootRef, getRef = _param.getRef, className = _param.className, style = _param.style, _param_type = _param.type, type = _param_type === void 0 ? 'auto' : _param_type, restProps = CellCheckbox_object_without_properties(_param, [
        "getRootRef",
        "getRef",
        "className",
        "style",
        "type"
    ]);
    var typeIcon = useTypeIcon(type);
    var IconOff = typeIcon === 'circle' ? CheckCircleOff : CheckBoxOff;
    var IconOn = typeIcon === 'circle' ? CheckCircleOn : CheckBoxOn;
    return /*#__PURE__*/ react.createElement("span", {
        className: clsx("vkuiCellCheckbox", className),
        style: style,
        ref: getRootRef
    }, /*#__PURE__*/ react.createElement(VisuallyHidden_VisuallyHidden, CellCheckbox_object_spread_props(CellCheckbox_object_spread({}, restProps), {
        Component: "input",
        type: "checkbox",
        className: "vkuiCellCheckbox__input",
        getRootRef: getRef
    })), /*#__PURE__*/ react.createElement("span", {
        className: clsx("vkuiCellCheckbox__icon", "vkuiCellCheckbox__icon--off"),
        "aria-hidden": true
    }, /*#__PURE__*/ react.createElement(IconOff, null)), /*#__PURE__*/ react.createElement("span", {
        className: clsx("vkuiCellCheckbox__icon", "vkuiCellCheckbox__icon--on"),
        "aria-hidden": true
    }, /*#__PURE__*/ react.createElement(IconOn, null)));
};

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/24/reorder_ios_24.js
'use client';

var Icon24ReorderIos = makeIcon('Icon24ReorderIos', 'reorder_ios_24', '0 0 24 24', '<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="reorder_ios_24"><g fill="none" fill-rule="evenodd"><path d="M0 0h24v24H0z" opacity=".1" /><path fill="currentColor" fill-rule="nonzero" d="M2.75 7h18.5a.75.75 0 1 1 0 1.5H2.75a.75.75 0 0 1 0-1.5m0 4h18.5a.75.75 0 1 1 0 1.5H2.75a.75.75 0 1 1 0-1.5m0 4h18.5a.75.75 0 1 1 0 1.5H2.75a.75.75 0 1 1 0-1.5" /></g></symbol>', 24, 24, false, undefined);

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/24/reorder_24.js
'use client';

var Icon24Reorder = makeIcon('Icon24Reorder', 'reorder_24', '0 0 24 24', '<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="reorder_24"><g fill="none" fill-rule="evenodd"><path d="M0 0h24v24H0z" /><path fill="currentColor" fill-rule="nonzero" d="M21 18a1 1 0 0 1-1 1H4a1 1 0 0 1 0-2h16a1 1 0 0 1 1 1m0-4a1 1 0 0 1-1 1H4a1 1 0 0 1 0-2h16a1 1 0 0 1 1 1m0-4a1 1 0 0 1-1 1H4a1 1 0 0 1 0-2h16a1 1 0 0 1 1 1M3 6a1 1 0 0 1 1-1h16a1 1 0 0 1 0 2H4a1 1 0 0 1-1-1" /></g></symbol>', 24, 24, false, undefined);

;// CONCATENATED MODULE: ./src/components/Cell/CellDragger/CellDragger.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Cell/CellDragger/CellDragger.tsx
function CellDragger_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CellDragger_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CellDragger_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CellDragger_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CellDragger_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CellDragger_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}








var CellDragger = function(_param) {
    var elRef = _param.elRef, disabled = _param.disabled, className = _param.className, onDragStateChange = _param.onDragStateChange, onDragFinish = _param.onDragFinish, children = _param.children, restProps = CellDragger_object_without_properties(_param, [
        "elRef",
        "disabled",
        "className",
        "onDragStateChange",
        "onDragFinish",
        "children"
    ]);
    var platform = usePlatform_usePlatform();
    var Icon = platform === 'ios' ? Icon24ReorderIos : Icon24Reorder;
    var _useDraggableWithDomApi = useDraggableWithDomApi({
        elRef: elRef,
        onDragFinish: onDragFinish
    }), dragging = _useDraggableWithDomApi.dragging, onDragStart = _useDraggableWithDomApi.onDragStart, onDragMove = _useDraggableWithDomApi.onDragMove, onDragEnd = _useDraggableWithDomApi.onDragEnd;
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function() {
        if (onDragStateChange) {
            onDragStateChange(dragging);
        }
    }, [
        dragging,
        onDragStateChange
    ]);
    return /*#__PURE__*/ React.createElement(Touch_Touch, CellDragger_object_spread({
        className: clsx("vkuiCellDragger", className),
        onStart: disabled ? undefined : onDragStart,
        onMoveY: disabled ? undefined : onDragMove,
        onEnd: disabled ? undefined : onDragEnd
    }, restProps), children && /*#__PURE__*/ React.createElement(VisuallyHidden_VisuallyHidden, null, children), /*#__PURE__*/ React.createElement(Icon, {
        className: "vkuiCellDragger__icon"
    }));
};

;// CONCATENATED MODULE: ./src/components/Cell/constants.ts
var DEFAULT_DRAGGABLE_LABEL = 'Перенести ячейку';

;// CONCATENATED MODULE: ./src/components/Cell/Cell.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Cell/Cell.tsx
function Cell_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Cell_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Cell_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Cell_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Cell_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Cell_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Cell_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Cell_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Cell_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Cell_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Cell_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Cell_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Cell_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Cell_sliced_to_array(arr, i) {
    return Cell_array_with_holes(arr) || Cell_iterable_to_array_limit(arr, i) || Cell_unsupported_iterable_to_array(arr, i) || Cell_non_iterable_rest();
}
function Cell_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Cell_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Cell_array_like_to_array(o, minLen);
}










/**
 * @see https://vkcom.github.io/VKUI/#/Cell
 */ var Cell = function(_param) {
    var mode = _param.mode, onRemove = _param.onRemove, _param_removePlaceholder = _param.removePlaceholder, removePlaceholder = _param_removePlaceholder === void 0 ? 'Удалить' : _param_removePlaceholder, onDragFinish = _param.onDragFinish, before = _param.before, after = _param.after, disabled = _param.disabled, draggable = _param.draggable, ComponentProps = _param.Component, onChange = _param.onChange, name = _param.name, value = _param.value, checked = _param.checked, defaultChecked = _param.defaultChecked, getRootRef = _param.getRootRef, _param_draggerLabel = _param.draggerLabel, draggerLabel = _param_draggerLabel === void 0 ? DEFAULT_DRAGGABLE_LABEL : _param_draggerLabel, className = _param.className, style = _param.style, toggleButtonTestId = _param.toggleButtonTestId, removeButtonTestId = _param.removeButtonTestId, restProps = Cell_object_without_properties(_param, [
        "mode",
        "onRemove",
        "removePlaceholder",
        "onDragFinish",
        "before",
        "after",
        "disabled",
        "draggable",
        "Component",
        "onChange",
        "name",
        "value",
        "checked",
        "defaultChecked",
        "getRootRef",
        "draggerLabel",
        "className",
        "style",
        "toggleButtonTestId",
        "removeButtonTestId"
    ]);
    var _React_useState = Cell_sliced_to_array(react.useState(false), 2), dragging = _React_useState[0], setDragging = _React_useState[1];
    var selectable = mode === 'selectable';
    var removable = mode === 'removable';
    var Component = selectable ? 'label' : ComponentProps;
    var platform = usePlatform_usePlatform();
    var rootElRef = useExternRef_useExternRef(getRootRef);
    var dragger = draggable ? /*#__PURE__*/ react.createElement(CellDragger, {
        elRef: rootElRef,
        className: clsx("vkuiCell__dragger", !before && !selectable && "vkuiCell__control--noBefore"),
        onDragStateChange: setDragging,
        onDragFinish: onDragFinish
    }, draggerLabel) : null;
    var checkbox;
    if (selectable) {
        var checkboxProps = {
            name: name,
            value: value,
            defaultChecked: defaultChecked,
            checked: checked,
            disabled: disabled,
            onChange: onChange
        };
        checkbox = /*#__PURE__*/ react.createElement(CellCheckbox, Cell_object_spread({
            className: clsx("vkuiCell__checkbox", !before && "vkuiCell__control--noBefore")
        }, checkboxProps));
    }
    var hasActive = !disabled && !dragging;
    var cellClasses = clsx("vkuiCell", dragging && "vkuiCell--dragging", platform === 'ios' && "vkuiCell--ios", removable && "vkuiCell--removable", Component === 'label' && "vkuiCell--selectable");
    var simpleCellProps = Cell_object_spread_props(Cell_object_spread(Cell_object_spread_props(Cell_object_spread({
        hasActive: hasActive,
        hasHover: hasActive && !removable,
        disabled: disabled
    }, restProps), {
        className: "vkuiCell__content"
    }), Component && {
        Component: Component
    }), {
        before: /*#__PURE__*/ react.createElement(react.Fragment, null, draggable && platform !== 'ios' && dragger, selectable && checkbox, before),
        after: /*#__PURE__*/ react.createElement(react.Fragment, null, draggable && platform === 'ios' && dragger, after)
    });
    if (removable) {
        return /*#__PURE__*/ react.createElement(Removable_Removable, {
            className: clsx(cellClasses, className),
            style: style,
            getRootRef: rootElRef,
            removePlaceholder: removePlaceholder,
            onRemove: function(e) {
                return onRemove === null || onRemove === void 0 ? void 0 : onRemove(e, rootElRef.current);
            },
            toggleButtonTestId: toggleButtonTestId,
            removeButtonTestId: removeButtonTestId,
            disabled: disabled
        }, platform === 'ios' ? function(param) {
            var isRemoving = param.isRemoving;
            return /*#__PURE__*/ react.createElement(SimpleCell_SimpleCell, Cell_object_spread({}, simpleCellProps, isRemoving ? {
                onClick: undefined
            } : {}));
        } : /*#__PURE__*/ react.createElement(SimpleCell_SimpleCell, simpleCellProps));
    }
    return /*#__PURE__*/ react.createElement("div", {
        className: clsx(cellClasses, className),
        style: style,
        ref: rootElRef
    }, /*#__PURE__*/ react.createElement(SimpleCell_SimpleCell, simpleCellProps));
};
Cell.Checkbox = CellCheckbox;

;// CONCATENATED MODULE: ./src/components/RichCell/RichCellIcon/RichCellIcon.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/RichCell/RichCellIcon/RichCellIcon.tsx
function RichCellIcon_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function RichCellIcon_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            RichCellIcon_define_property(target, key, source[key]);
        });
    }
    return target;
}


var RichCellIcon = function(props) {
    return /*#__PURE__*/ React.createElement(RootComponent_RootComponent, RichCellIcon_object_spread({
        baseClassName: "vkuiRichCellIcon"
    }, props));
};

;// CONCATENATED MODULE: ./src/components/RichCell/RichCell.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/RichCell/RichCell.tsx
function RichCell_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function RichCell_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            RichCell_define_property(target, key, source[key]);
        });
    }
    return target;
}
function RichCell_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function RichCell_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        RichCell_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function RichCell_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = RichCell_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function RichCell_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}







var RichCell_sizeYClassNames = {
    none: "vkuiRichCell--sizeY-none",
    compact: "vkuiRichCell--sizeY-compact"
};
var alignAfterClassNames = {
    start: "vkuiRichCell__content-after--align-start",
    center: "vkuiRichCell__content-after--align-center",
    end: "vkuiRichCell__content-after--align-end"
};
/**
 * @see https://vkcom.github.io/VKUI/#/RichCell
 */ var RichCell = function(_param) {
    var subhead = _param.subhead, children = _param.children, text = _param.text, caption = _param.caption, before = _param.before, after = _param.after, afterCaption = _param.afterCaption, bottom = _param.bottom, actions = _param.actions, multiline = _param.multiline, className = _param.className, _param_afterAlign = _param.afterAlign, afterAlign = _param_afterAlign === void 0 ? 'start' : _param_afterAlign, restProps = RichCell_object_without_properties(_param, [
        "subhead",
        "children",
        "text",
        "caption",
        "before",
        "after",
        "afterCaption",
        "bottom",
        "actions",
        "multiline",
        "className",
        "afterAlign"
    ]);
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var afterRender = function() {
        if (!after && !afterCaption) {
            return;
        }
        return /*#__PURE__*/ react.createElement("div", {
            className: clsx("vkuiRichCell__content-after", alignAfterClassNames[afterAlign])
        }, after && /*#__PURE__*/ react.createElement("div", {
            className: "vkuiRichCell__after-children"
        }, after), afterCaption && /*#__PURE__*/ react.createElement("div", {
            className: "vkuiRichCell__after-caption"
        }, afterCaption));
    };
    return /*#__PURE__*/ react.createElement(Tappable_Tappable, RichCell_object_spread_props(RichCell_object_spread({}, restProps), {
        className: clsx("vkuiRichCell", !multiline && "vkuiRichCell--text-ellipsis", sizeY !== 'regular' && RichCell_sizeYClassNames[sizeY], className)
    }), before && /*#__PURE__*/ react.createElement("div", {
        className: "vkuiRichCell__before"
    }, before), /*#__PURE__*/ react.createElement("div", {
        className: "vkuiRichCell__in"
    }, /*#__PURE__*/ react.createElement("div", {
        className: "vkuiRichCell__content"
    }, /*#__PURE__*/ react.createElement("div", {
        className: "vkuiRichCell__content-before"
    }, subhead && /*#__PURE__*/ react.createElement(Subhead_Subhead, {
        Component: "div",
        className: "vkuiRichCell__subhead"
    }, subhead), /*#__PURE__*/ react.createElement("div", {
        className: "vkuiRichCell__children"
    }, children), text && /*#__PURE__*/ react.createElement("div", {
        className: "vkuiRichCell__text"
    }, text), caption && /*#__PURE__*/ react.createElement(Subhead_Subhead, {
        Component: "div",
        className: "vkuiRichCell__caption"
    }, caption)), afterAlign === 'start' && afterRender()), bottom && /*#__PURE__*/ react.createElement("div", {
        className: "vkuiRichCell__bottom"
    }, bottom), actions && /*#__PURE__*/ react.createElement("div", {
        className: "vkuiRichCell__actions"
    }, actions)), afterAlign !== 'start' && afterRender());
};
RichCell.Icon = RichCellIcon;

;// CONCATENATED MODULE: ./src/components/CellButton/CellButton.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/CellButton/CellButton.tsx
function CellButton_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CellButton_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CellButton_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CellButton_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function CellButton_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        CellButton_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function CellButton_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CellButton_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CellButton_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



/**
 * @see https://vkcom.github.io/VKUI/#/CellButton
 */ var CellButton = function(_param) {
    var _param_centered = _param.centered, centered = _param_centered === void 0 ? false : _param_centered, _param_mode = _param.mode, mode = _param_mode === void 0 ? 'primary' : _param_mode, className = _param.className, restProps = CellButton_object_without_properties(_param, [
        "centered",
        "mode",
        "className"
    ]);
    return /*#__PURE__*/ React.createElement(SimpleCell, CellButton_object_spread_props(CellButton_object_spread({}, restProps), {
        className: classNames("vkuiCellButton", mode === 'danger' && "vkuiCellButton--mode-danger", centered && "vkuiCellButton--centered", className)
    }));
};

;// CONCATENATED MODULE: ./src/components/Avatar/AvatarBadge/AvatarBadge.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Avatar/AvatarBadge/AvatarBadge.tsx
function AvatarBadge_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function AvatarBadge_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            AvatarBadge_define_property(target, key, source[key]);
        });
    }
    return target;
}
function AvatarBadge_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function AvatarBadge_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        AvatarBadge_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function AvatarBadge_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = AvatarBadge_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function AvatarBadge_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var AvatarBadge = function(_param) {
    var className = _param.className, restProps = AvatarBadge_object_without_properties(_param, [
        "className"
    ]);
    var size = react.useContext(context_ImageBaseContext).size;
    return /*#__PURE__*/ react.createElement(ImageBase.Badge, AvatarBadge_object_spread_props(AvatarBadge_object_spread({}, restProps), {
        className: clsx("vkuiAvatarBadge", size < 96 && "vkuiAvatarBadge--shifted", className)
    }));
};
AvatarBadge.displayName = 'Avatar.Badge';

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/12/circle_12.js
'use client';

var Icon12Circle = makeIcon('Icon12Circle', 'circle_12', '0 0 12 12', '<symbol xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 12 12" id="circle_12"><path fill="currentColor" d="M10 6a4 4 0 1 1-8 0 4 4 0 0 1 8 0" /></symbol>', 12, 12, false, undefined);

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/12/online_mobile_12.js
'use client';

var Icon12OnlineMobile = makeIcon('Icon12OnlineMobile', 'online_mobile_12', '0 0 8 12', '<symbol xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 8 12" id="online_mobile_12"><path fill="currentColor" d="M5.99 0C7.1 0 8 .9 8 2.01v7.98C8 11.1 7.1 12 5.99 12H2.01C.9 12 0 11.1 0 9.99V2.01C0 .9.9 0 2.01 0zm.008 3H2.003a.5.5 0 0 0-.503.502v4.996c0 .277.225.502.503.502h3.995a.5.5 0 0 0 .502-.502V3.503A.5.5 0 0 0 5.997 3" /></symbol>', 8, 12, false, undefined);

;// CONCATENATED MODULE: ./src/components/Avatar/AvatarBadge/icons.tsx
function icons_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function icons_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            icons_define_property(target, key, source[key]);
        });
    }
    return target;
}
function icons_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function icons_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        icons_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function icons_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = icons_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function icons_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}


var icons_Icon12Circle = function(_param) {
    var width = _param.width, height = _param.height, restProps = icons_object_without_properties(_param, [
        "width",
        "height"
    ]);
    return /*#__PURE__*/ react.createElement(Icon12Circle, icons_object_spread_props(icons_object_spread({}, restProps), {
        width: width >= 24 ? 15 : 12,
        height: height >= 24 ? 15 : 12
    }));
};
var icons_Icon12OnlineMobile = function(_param) {
    var width = _param.width, height = _param.height, restProps = icons_object_without_properties(_param, [
        "width",
        "height"
    ]);
    return /*#__PURE__*/ react.createElement(Icon12OnlineMobile, icons_object_spread_props(icons_object_spread({}, restProps), {
        width: width >= 24 ? 9 : 8,
        height: height >= 24 ? 15 : 12
    }));
};

;// CONCATENATED MODULE: ./src/components/Avatar/AvatarBadge/AvatarBadgeWithPreset.tsx
function AvatarBadgeWithPreset_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function AvatarBadgeWithPreset_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            AvatarBadgeWithPreset_define_property(target, key, source[key]);
        });
    }
    return target;
}
function AvatarBadgeWithPreset_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = AvatarBadgeWithPreset_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function AvatarBadgeWithPreset_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





var AvatarBadgeWithPreset = function(_param) {
    var _param_preset = _param.preset, preset = _param_preset === void 0 ? 'online' : _param_preset, className = _param.className, restProps = AvatarBadgeWithPreset_object_without_properties(_param, [
        "preset",
        "className"
    ]);
    var size = react.useContext(context_ImageBaseContext).size;
    var badgeSize = helpers_getBadgeIconSizeByImageBaseSize(size);
    var isOnlinePreset = preset === 'online';
    var presetClassName = isOnlinePreset ? "vkuiAvatarBadge--preset-online" : "vkuiAvatarBadge--preset-onlineMobile";
    var Icon = isOnlinePreset ? icons_Icon12Circle : icons_Icon12OnlineMobile;
    return /*#__PURE__*/ react.createElement(ImageBase.Badge, AvatarBadgeWithPreset_object_spread({
        background: "stroke",
        className: clsx("vkuiAvatarBadge", presetClassName, className)
    }, restProps), /*#__PURE__*/ react.createElement(Icon, {
        width: badgeSize,
        height: badgeSize
    }));
};
AvatarBadgeWithPreset.displayName = 'Avatar.BadgeWithPreset';

;// CONCATENATED MODULE: ./src/components/Avatar/helpers.ts
var MAX_FONT_SIZE = 30;
var MAX_IMAGE_BASE_SIZE = 96;
var RELATIVE_SIZE = MAX_FONT_SIZE / MAX_IMAGE_BASE_SIZE;
/**
 * По возможности выставляем размеры по дизайн-системе. Иначе высчитываем.
 */ function getInitialsFontSize(avatarSize) {
    if (avatarSize <= 16) {
        return 5;
    } else if (avatarSize <= 24) {
        return 8;
    } else if (avatarSize <= 32) {
        return 10;
    } else if (avatarSize <= 36) {
        return 13;
    } else if (avatarSize <= 44) {
        return 14;
    } else if (avatarSize <= 48) {
        return 17;
    } else if (avatarSize < 56) {
        return 18;
    } else if (avatarSize <= 64) {
        return 21;
    } else if (avatarSize <= 88) {
        return 26;
    } else if (avatarSize <= MAX_IMAGE_BASE_SIZE) {
        return MAX_FONT_SIZE;
    }
    var calculatedFontSize = Math.ceil(avatarSize * RELATIVE_SIZE);
    var evenFix = calculatedFontSize % 2;
    return calculatedFontSize + evenFix;
}

;// CONCATENATED MODULE: ./src/components/Avatar/Avatar.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Avatar/Avatar.tsx
function Avatar_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Avatar_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Avatar_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Avatar_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Avatar_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Avatar_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Avatar_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Avatar_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Avatar_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






var AVATAR_DEFAULT_SIZE = 48;
var COLORS_NUMBER_TO_TEXT_MAP = {
    1: 'red',
    2: 'orange',
    3: 'yellow',
    4: 'green',
    5: 'l-blue',
    6: 'violet'
};
var gradientStyles = {
    'red': "vkuiAvatar--gradient-red",
    'orange': "vkuiAvatar--gradient-orange",
    'yellow': "vkuiAvatar--gradient-yellow",
    'green': "vkuiAvatar--gradient-green",
    'blue': "vkuiAvatar--gradient-blue",
    'l-blue': "vkuiAvatar--gradient-l-blue",
    'violet': "vkuiAvatar--gradient-violet"
};
/**
 * @see https://vkcom.github.io/VKUI/#/Avatar
 */ var Avatar_Avatar = function(_param) {
    var _param_size = _param.size, size = _param_size === void 0 ? AVATAR_DEFAULT_SIZE : _param_size, className = _param.className, gradientColor = _param.gradientColor, initials = _param.initials, fallbackIconProp = _param.fallbackIcon, children = _param.children, restProps = Avatar_object_without_properties(_param, [
        "size",
        "className",
        "gradientColor",
        "initials",
        "fallbackIcon",
        "children"
    ]);
    var gradientName = typeof gradientColor === 'number' ? COLORS_NUMBER_TO_TEXT_MAP[gradientColor] : gradientColor;
    var isGradientNotCustom = gradientName && gradientName !== 'custom';
    var fallbackIcon = initials ? /*#__PURE__*/ React.createElement("div", {
        className: "vkuiAvatar__initials",
        style: {
            fontSize: getInitialsFontSize(size)
        }
    }, initials) : fallbackIconProp;
    return /*#__PURE__*/ React.createElement(ImageBase, Avatar_object_spread_props(Avatar_object_spread({}, restProps), {
        size: size,
        fallbackIcon: fallbackIcon,
        className: clsx("vkuiAvatar", gradientName && "vkuiAvatar--has-gradient", isGradientNotCustom && gradientStyles[gradientName], className)
    }), children);
};
Avatar_Avatar.displayName = 'Avatar';
Avatar_Avatar.Badge = AvatarBadge;
Avatar_Avatar.Badge.displayName = 'Avatar.Badge';
Avatar_Avatar.BadgeWithPreset = AvatarBadgeWithPreset;
Avatar_Avatar.BadgeWithPreset.displayName = 'Avatar.BadgeWithPreset';
Avatar_Avatar.Overlay = ImageBase.Overlay;
Avatar_Avatar.Overlay.displayName = 'Avatar.Overlay';
Avatar_Avatar.getInitialsFontSize = getInitialsFontSize;

;// CONCATENATED MODULE: ./src/components/HorizontalCell/HorizontalCell.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/HorizontalCell/HorizontalCell.tsx
function HorizontalCell_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function HorizontalCell_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            HorizontalCell_define_property(target, key, source[key]);
        });
    }
    return target;
}
function HorizontalCell_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = HorizontalCell_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function HorizontalCell_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}








var HorizontalCell_stylesSize = {
    s: "vkuiHorizontalCell--size-s",
    m: "vkuiHorizontalCell--size-m",
    l: "vkuiHorizontalCell--size-l"
};
var CellTypography = function(_param) {
    var size = _param.size, children = _param.children, restProps = HorizontalCell_object_without_properties(_param, [
        "size",
        "children"
    ]);
    return size === 's' ? /*#__PURE__*/ React.createElement(Caption, restProps, children) : /*#__PURE__*/ React.createElement(Subhead, restProps, children);
};
/**
 * @see https://vkcom.github.io/VKUI/#/HorizontalCell
 */ var HorizontalCell = function(_param) {
    var className = _param.className, header = _param.header, style = _param.style, subtitle = _param.subtitle, _param_size = _param.size, size = _param_size === void 0 ? 's' : _param_size, _param_children = _param.children, children = _param_children === void 0 ? /*#__PURE__*/ React.createElement(Avatar, {
        size: 56
    }) : _param_children, getRootRef = _param.getRootRef, getRef = _param.getRef, extraSubtitle = _param.extraSubtitle, restProps = HorizontalCell_object_without_properties(_param, [
        "className",
        "header",
        "style",
        "subtitle",
        "size",
        "children",
        "getRootRef",
        "getRef",
        "extraSubtitle"
    ]);
    return /*#__PURE__*/ React.createElement("div", {
        ref: getRootRef,
        style: style,
        className: classNames("vkuiHorizontalCell", HorizontalCell_stylesSize[size], className)
    }, /*#__PURE__*/ React.createElement(Tappable, HorizontalCell_object_spread({
        className: "vkuiHorizontalCell__body",
        getRootRef: getRef
    }, restProps), hasReactNode(children) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiHorizontalCell__image"
    }, children), (header || subtitle || extraSubtitle) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiHorizontalCell__content"
    }, hasReactNode(header) && /*#__PURE__*/ React.createElement(CellTypography, {
        size: size
    }, header), hasReactNode(subtitle) && /*#__PURE__*/ React.createElement(Footnote, {
        className: "vkuiHorizontalCell__subtitle"
    }, subtitle), hasReactNode(extraSubtitle) && /*#__PURE__*/ React.createElement(Footnote, {
        className: "vkuiHorizontalCell__subtitle"
    }, extraSubtitle))));
};

;// CONCATENATED MODULE: ./src/components/HorizontalScroll/HorizontalCellShowMore/HorizontalCellShowMore.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/HorizontalScroll/HorizontalCellShowMore/HorizontalCellShowMore.tsx
function HorizontalCellShowMore_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function HorizontalCellShowMore_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            HorizontalCellShowMore_define_property(target, key, source[key]);
        });
    }
    return target;
}
function HorizontalCellShowMore_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = HorizontalCellShowMore_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function HorizontalCellShowMore_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





var HorizontalCellShowMore_sizeClassNames = {
    s: "vkuiHorizontalCellShowMore--size-s",
    m: "vkuiHorizontalCellShowMore--size-m",
    l: "vkuiHorizontalCellShowMore--size-l"
};
var HorizontalCellShowMore = function(_param) {
    var className = _param.className, style = _param.style, getRef = _param.getRef, getRootRef = _param.getRootRef, compensateLastCellIndent = _param.compensateLastCellIndent, height = _param.height, _param_size = _param.size, size = _param_size === void 0 ? 's' : _param_size, _param_children = _param.children, children = _param_children === void 0 ? size === 's' ? 'Все' : 'Показать все' : _param_children, _param_centered = _param.centered, centered = _param_centered === void 0 ? false : _param_centered, restProps = HorizontalCellShowMore_object_without_properties(_param, [
        "className",
        "style",
        "getRef",
        "getRootRef",
        "compensateLastCellIndent",
        "height",
        "size",
        "children",
        "centered"
    ]);
    return /*#__PURE__*/ React.createElement("div", {
        style: style,
        className: classNames("vkuiHorizontalCellShowMore", compensateLastCellIndent && "vkuiHorizontalCellShowMore--compensate-last-cell-indent", centered && "vkuiHorizontalCellShowMore--centered", HorizontalCellShowMore_sizeClassNames[size], className),
        ref: getRootRef
    }, /*#__PURE__*/ React.createElement(Tappable, HorizontalCellShowMore_object_spread({
        style: size === 's' ? undefined : {
            height: height
        },
        className: "vkuiHorizontalCellShowMore__body",
        getRootRef: getRef,
        activeMode: "opacity",
        hoverMode: "opacity"
    }, restProps), /*#__PURE__*/ React.createElement(Icon28ChevronRightCircle, {
        className: "vkuiHorizontalCellShowMore__icon",
        fill: "currentColor"
    }), /*#__PURE__*/ React.createElement(Subhead, {
        className: "vkuiHorizontalCellShowMore__text",
        weight: "2"
    }, children)));
};

;// CONCATENATED MODULE: ./src/components/Footer/Footer.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Footer/Footer.tsx
function Footer_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Footer_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Footer_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Footer_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Footer_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Footer_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Footer_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Footer_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Footer_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




/**
 * @see https://vkcom.github.io/VKUI/#/Footer
 */ var Footer = function(_param) {
    var children = _param.children, className = _param.className, _param_Component = _param.Component, Component = _param_Component === void 0 ? 'footer' : _param_Component, roleProp = _param.role, restProps = Footer_object_without_properties(_param, [
        "children",
        "className",
        "Component",
        "role"
    ]);
    var role = roleProp !== null && roleProp !== void 0 ? roleProp : Component === 'footer' ? 'contentinfo' : undefined;
    return /*#__PURE__*/ React.createElement(Footnote, Footer_object_spread_props(Footer_object_spread({
        Component: Component,
        role: role
    }, restProps), {
        className: classNames("vkuiFooter", className)
    }), children);
};

;// CONCATENATED MODULE: ./src/components/InfoRow/InfoRow.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/InfoRow/InfoRow.tsx
function InfoRow_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function InfoRow_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            InfoRow_define_property(target, key, source[key]);
        });
    }
    return target;
}
function InfoRow_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function InfoRow_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        InfoRow_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function InfoRow_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = InfoRow_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function InfoRow_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






/**
 * @see https://vkcom.github.io/VKUI/#/InfoRow
 */ var InfoRow = function(_param) {
    var header = _param.header, children = _param.children, className = _param.className, restProps = InfoRow_object_without_properties(_param, [
        "header",
        "children",
        "className"
    ]);
    return /*#__PURE__*/ React.createElement(Headline, InfoRow_object_spread_props(InfoRow_object_spread({}, restProps), {
        Component: "span",
        className: classNames("vkuiInfoRow", className),
        weight: "3"
    }), hasReactNode(header) && /*#__PURE__*/ React.createElement(Subhead, {
        Component: "strong",
        className: "vkuiInfoRow__header"
    }, header, /*#__PURE__*/ React.createElement(VisuallyHidden, null, "\xa0")), children);
};

;// CONCATENATED MODULE: ./src/components/BaseGallery/helpers.ts
var helpers_calcMin = function(param) {
    var _param_containerWidth = param.containerWidth, containerWidth = _param_containerWidth === void 0 ? 0 : _param_containerWidth, _param_layerWidth = param.layerWidth, layerWidth = _param_layerWidth === void 0 ? 0 : _param_layerWidth, _param_slides = param.slides, slides = _param_slides === void 0 ? [] : _param_slides, _param_viewportOffsetWidth = param.viewportOffsetWidth, viewportOffsetWidth = _param_viewportOffsetWidth === void 0 ? 0 : _param_viewportOffsetWidth, align = param.align, isCenterWithCustomWidth = param.isCenterWithCustomWidth;
    switch(align){
        case 'left':
            return containerWidth - layerWidth;
        case 'right':
            return viewportOffsetWidth - layerWidth;
        case 'center':
            if (isCenterWithCustomWidth && slides.length) {
                var _slides_ = slides[slides.length - 1], coordX = _slides_.coordX, width = _slides_.width;
                return viewportOffsetWidth / 2 - coordX - width / 2;
            } else {
                return viewportOffsetWidth - (containerWidth - viewportOffsetWidth) / 2 - layerWidth;
            }
    }
};
var helpers_calcMax = function(param) {
    var _param_slides = param.slides, slides = _param_slides === void 0 ? [] : _param_slides, _param_viewportOffsetWidth = param.viewportOffsetWidth, viewportOffsetWidth = _param_viewportOffsetWidth === void 0 ? 0 : _param_viewportOffsetWidth, isCenterWithCustomWidth = param.isCenterWithCustomWidth;
    if (isCenterWithCustomWidth && slides.length) {
        var _slides_ = slides[0], width = _slides_.width, coordX = _slides_.coordX;
        return viewportOffsetWidth / 2 - coordX - width / 2;
    }
    return 0;
};

;// CONCATENATED MODULE: ./src/components/BaseGallery/BaseGallery.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/BaseGallery/BaseGallery.tsx
function BaseGallery_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function BaseGallery_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function BaseGallery_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function BaseGallery_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function BaseGallery_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function BaseGallery_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            BaseGallery_define_property(target, key, source[key]);
        });
    }
    return target;
}
function BaseGallery_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function BaseGallery_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        BaseGallery_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function BaseGallery_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = BaseGallery_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function BaseGallery_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function BaseGallery_sliced_to_array(arr, i) {
    return BaseGallery_array_with_holes(arr) || BaseGallery_iterable_to_array_limit(arr, i) || BaseGallery_unsupported_iterable_to_array(arr, i) || BaseGallery_non_iterable_rest();
}
function BaseGallery_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return BaseGallery_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return BaseGallery_array_like_to_array(o, minLen);
}












var BaseGallery_ANIMATION_DURATION = 0.24;
var LAYOUT_DEFAULT_STATE = {
    containerWidth: 0,
    viewportOffsetWidth: 0,
    layerWidth: 0,
    min: 0,
    max: 0,
    slides: [],
    isFullyVisible: true
};
var SHIFT_DEFAULT_STATE = {
    animation: undefined,
    shiftX: 0,
    dragging: false,
    deltaX: 0,
    indent: 0
};
var stylesBullets = {
    dark: "vkuiBaseGallery__bullets--dark",
    light: "vkuiBaseGallery__bullets--light"
};
var BaseGallery_BaseGallery = function(_param) {
    var _param_bullets = _param.bullets, bullets = _param_bullets === void 0 ? false : _param_bullets, getRootRef = _param.getRootRef, children = _param.children, _param_slideWidth = _param.slideWidth, slideWidth = _param_slideWidth === void 0 ? '100%' : _param_slideWidth, _param_slideIndex = _param.slideIndex, slideIndex = _param_slideIndex === void 0 ? 0 : _param_slideIndex, _param_dragDisabled = _param.dragDisabled, dragDisabled = _param_dragDisabled === void 0 ? false : _param_dragDisabled, onDragStart = _param.onDragStart, onDragEnd = _param.onDragEnd, onChange = _param.onChange, onPrevClick = _param.onPrevClick, onNextClick = _param.onNextClick, _param_align = _param.align, align = _param_align === void 0 ? 'left' : _param_align, showArrows = _param.showArrows, getRef = _param.getRef, _param_arrowSize = _param.arrowSize, arrowSize = _param_arrowSize === void 0 ? 'l' : _param_arrowSize, restProps = BaseGallery_object_without_properties(_param, [
        "bullets",
        "getRootRef",
        "children",
        "slideWidth",
        "slideIndex",
        "dragDisabled",
        "onDragStart",
        "onDragEnd",
        "onChange",
        "onPrevClick",
        "onNextClick",
        "align",
        "showArrows",
        "getRef",
        "arrowSize"
    ]);
    var slidesStore = React.useRef({});
    var layoutState = React.useRef(LAYOUT_DEFAULT_STATE);
    var _React_useState = BaseGallery_sliced_to_array(React.useState(SHIFT_DEFAULT_STATE), 2), shiftState = _React_useState[0], setShiftState = _React_useState[1];
    var rootRef = useExternRef(getRootRef);
    var viewportRef = useExternRef(getRef);
    var window = useDOM().window;
    var hasPointer = useAdaptivityHasPointer();
    var isCenterWithCustomWidth = slideWidth === 'custom' && align === 'center';
    var validateIndent = function(value) {
        var _layoutState_current_max;
        var localMax = (_layoutState_current_max = layoutState.current.max) !== null && _layoutState_current_max !== void 0 ? _layoutState_current_max : 0;
        var _layoutState_current_min;
        var localMin = (_layoutState_current_min = layoutState.current.min) !== null && _layoutState_current_min !== void 0 ? _layoutState_current_min : 0;
        if (value < localMin) {
            return localMin;
        } else if (value > localMax) {
            return localMax;
        }
        return value;
    };
    /*
   * Считает отступ слоя галереи
   */ var calculateIndent = function(targetIndex) {
        var _layoutState_current_slides;
        if (layoutState.current.isFullyVisible) {
            return 0;
        }
        var targetSlide = ((_layoutState_current_slides = layoutState.current.slides) === null || _layoutState_current_slides === void 0 ? void 0 : _layoutState_current_slides.length) ? layoutState.current.slides[targetIndex] : null;
        if (targetSlide) {
            var coordX = targetSlide.coordX, width = targetSlide.width;
            if (isCenterWithCustomWidth) {
                var _layoutState_current_viewportOffsetWidth;
                var viewportWidth = (_layoutState_current_viewportOffsetWidth = layoutState.current.viewportOffsetWidth) !== null && _layoutState_current_viewportOffsetWidth !== void 0 ? _layoutState_current_viewportOffsetWidth : 0;
                return viewportWidth / 2 - coordX - width / 2;
            }
            return validateIndent(-1 * coordX);
        }
        return 0;
    };
    /*
   * Считает отступ слоя галереи во время драга
   */ var calculateDragIndent = function() {
        var _layoutState_current_max;
        var localMax = (_layoutState_current_max = layoutState.current.max) !== null && _layoutState_current_max !== void 0 ? _layoutState_current_max : 0;
        var _layoutState_current_min;
        var localMin = (_layoutState_current_min = layoutState.current.min) !== null && _layoutState_current_min !== void 0 ? _layoutState_current_min : 0;
        var indent = shiftState.shiftX + shiftState.deltaX;
        if (indent > localMax) {
            return localMax + Number((indent - localMax) / 3);
        } else if (indent < localMin) {
            return localMin + Number((indent - localMin) / 3);
        }
        return indent;
    };
    var initializeSlides = function() {
        var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        var _rootRef_current, _viewportRef_current, _layoutState_current_slides_slideIndex, _localSlides_slideIndex;
        var _React_Children_map;
        var localSlides = (_React_Children_map = React.Children.map(children, function(_item, i) {
            var elem = slidesStore.current["slide-".concat(i)];
            var _elem_offsetLeft, _elem_offsetWidth;
            return {
                coordX: (_elem_offsetLeft = elem === null || elem === void 0 ? void 0 : elem.offsetLeft) !== null && _elem_offsetLeft !== void 0 ? _elem_offsetLeft : 0,
                width: (_elem_offsetWidth = elem === null || elem === void 0 ? void 0 : elem.offsetWidth) !== null && _elem_offsetWidth !== void 0 ? _elem_offsetWidth : 0
            };
        })) !== null && _React_Children_map !== void 0 ? _React_Children_map : [];
        var _rootRef_current_offsetWidth;
        var localContainerWidth = (_rootRef_current_offsetWidth = (_rootRef_current = rootRef.current) === null || _rootRef_current === void 0 ? void 0 : _rootRef_current.offsetWidth) !== null && _rootRef_current_offsetWidth !== void 0 ? _rootRef_current_offsetWidth : 0;
        var _viewportRef_current_offsetWidth;
        var localViewportOffsetWidth = (_viewportRef_current_offsetWidth = (_viewportRef_current = viewportRef.current) === null || _viewportRef_current === void 0 ? void 0 : _viewportRef_current.offsetWidth) !== null && _viewportRef_current_offsetWidth !== void 0 ? _viewportRef_current_offsetWidth : 0;
        var localLayerWidth = localSlides.reduce(function(val, slide) {
            return slide.width + val;
        }, 0);
        var adjustShiftX = localSlides.length <= layoutState.current.slides.length || ((_layoutState_current_slides_slideIndex = layoutState.current.slides[slideIndex]) === null || _layoutState_current_slides_slideIndex === void 0 ? void 0 : _layoutState_current_slides_slideIndex.coordX) !== ((_localSlides_slideIndex = localSlides[slideIndex]) === null || _localSlides_slideIndex === void 0 ? void 0 : _localSlides_slideIndex.coordX);
        layoutState.current = {
            containerWidth: localContainerWidth,
            viewportOffsetWidth: localViewportOffsetWidth,
            layerWidth: localLayerWidth,
            max: calcMax({
                slides: localSlides,
                viewportOffsetWidth: localViewportOffsetWidth,
                isCenterWithCustomWidth: isCenterWithCustomWidth
            }),
            min: calcMin({
                containerWidth: localContainerWidth,
                layerWidth: localLayerWidth,
                slides: localSlides,
                viewportOffsetWidth: localViewportOffsetWidth,
                isCenterWithCustomWidth: isCenterWithCustomWidth,
                align: align
            }),
            slides: localSlides,
            isFullyVisible: localLayerWidth <= localContainerWidth
        };
        setShiftState(function(prevState) {
            var _options_animation;
            return BaseGallery_object_spread_props(BaseGallery_object_spread({}, prevState), {
                shiftX: adjustShiftX ? calculateIndent(slideIndex) : prevState.shiftX,
                animation: (_options_animation = options.animation) !== null && _options_animation !== void 0 ? _options_animation : prevState.shiftX === validateIndent(prevState.shiftX)
            });
        });
    };
    var onResize = function() {
        if (shiftState.animation !== undefined) {
            initializeSlides({
                animation: false
            });
        }
    };
    useGlobalEventListener(window, 'resize', onResize);
    useIsomorphicLayoutEffect(function() {
        initializeSlides({
            animation: false
        });
    }, [
        children,
        align,
        slideWidth
    ]);
    useIsomorphicLayoutEffect(function() {
        if (shiftState.animation !== undefined) {
            setShiftState(function(prevState) {
                return BaseGallery_object_spread_props(BaseGallery_object_spread({}, prevState), {
                    animation: true,
                    deltaX: 0,
                    shiftX: calculateIndent(slideIndex !== null && slideIndex !== void 0 ? slideIndex : 0)
                });
            });
        }
    }, [
        slideIndex
    ]);
    var slideLeft = function(event) {
        onChange === null || onChange === void 0 ? void 0 : onChange(slideIndex - 1);
        onPrevClick === null || onPrevClick === void 0 ? void 0 : onPrevClick(event);
    };
    var slideRight = function(event) {
        onChange === null || onChange === void 0 ? void 0 : onChange(slideIndex + 1);
        onNextClick === null || onNextClick === void 0 ? void 0 : onNextClick(event);
    };
    /*
   * Получает индекс слайда, к которому будет осуществлен переход
   */ var getTarget = function(e) {
        var expectDeltaX = shiftState.deltaX / e.duration * 240 * 0.6;
        var _layoutState_current_max;
        var shift = shiftState.shiftX + shiftState.deltaX + expectDeltaX - ((_layoutState_current_max = layoutState.current.max) !== null && _layoutState_current_max !== void 0 ? _layoutState_current_max : 0);
        var direction = shiftState.deltaX < 0 ? 1 : -1;
        // Находим ближайшую границу слайда к текущему отступу
        var targetIndex = layoutState.current.slides.reduce(function(val, item, index) {
            var previousValue = Math.abs(layoutState.current.slides[val].coordX + shift);
            var currentValue = Math.abs(item.coordX + shift);
            return previousValue < currentValue ? val : index;
        }, slideIndex);
        if (targetIndex === slideIndex) {
            var targetSlide = slideIndex + direction;
            if (targetSlide >= 0 && targetSlide < layoutState.current.slides.length) {
                if (Math.abs(shiftState.deltaX) > layoutState.current.slides[targetSlide].width * 0.05) {
                    targetIndex = targetSlide;
                }
            }
        }
        return targetIndex;
    };
    var isDraggable = !dragDisabled && !layoutState.current.isFullyVisible;
    var onStart = function(e) {
        e.originalEvent.stopPropagation();
        if (isDraggable) {
            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(e);
            setShiftState(function(prevState) {
                return BaseGallery_object_spread_props(BaseGallery_object_spread({}, prevState), {
                    animation: false
                });
            });
        }
    };
    var onMoveX = function(e) {
        if (isDraggable) {
            e.originalEvent.preventDefault();
            if (e.isSlideX) {
                if (shiftState.deltaX !== e.shiftX) {
                    setShiftState(function(prevState) {
                        return BaseGallery_object_spread_props(BaseGallery_object_spread({}, prevState), {
                            deltaX: e.shiftX,
                            dragging: e.isSlideX
                        });
                    });
                }
            }
        }
    };
    var onEnd = function(e) {
        if (isDraggable) {
            var targetIndex = e.isSlide ? getTarget(e) : slideIndex !== null && slideIndex !== void 0 ? slideIndex : 0;
            onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(e, targetIndex);
            var nextShiftState = {
                animation: true,
                dragging: false,
                deltaX: 0
            };
            var shiftXStick = calculateDragIndent();
            if (targetIndex !== slideIndex) {
                // Сохраняем сдвиг слайда в том положении, в каком его оставили после драга (fix issue #2185)
                nextShiftState.shiftX = shiftXStick;
            }
            setShiftState(function(prevState) {
                return BaseGallery_object_spread({}, prevState, nextShiftState);
            });
            if (targetIndex !== slideIndex) {
                onChange === null || onChange === void 0 ? void 0 : onChange(targetIndex);
            }
        }
    };
    var indent = shiftState.dragging ? calculateDragIndent() : shiftState.shiftX;
    var layerStyle = {
        transform: "translateX(".concat(indent, "px)"),
        transition: shiftState.animation ? "transform ".concat(BaseGallery_ANIMATION_DURATION, "s cubic-bezier(.1, 0, .25, 1)") : 'none'
    };
    var setSlideRef = function(slideRef, slideIndex) {
        slidesStore.current["slide-".concat(slideIndex)] = slideRef;
    };
    // shiftX is negative number <= 0, we can swipe back only if it is < 0
    var canSlideLeft = !layoutState.current.isFullyVisible && shiftState.shiftX < 0;
    var _layoutState_current_layerWidth;
    var canSlideRight = !layoutState.current.isFullyVisible && // we can't move right when gallery layer fully scrolled right, if gallery aligned by left side
    (align === 'left' && layoutState.current.containerWidth - shiftState.shiftX < ((_layoutState_current_layerWidth = layoutState.current.layerWidth) !== null && _layoutState_current_layerWidth !== void 0 ? _layoutState_current_layerWidth : 0) || // otherwise we need to check current slide index (align = right or align = center)
    align !== 'left' && slideIndex < layoutState.current.slides.length - 1);
    return /*#__PURE__*/ React.createElement(RootComponent, BaseGallery_object_spread_props(BaseGallery_object_spread({}, restProps), {
        baseClassName: classNames("vkuiBaseGallery", align === 'center' && "vkuiBaseGallery--align-center", slideWidth === 'custom' && "vkuiBaseGallery--custom-width", isDraggable && "vkuiBaseGallery--draggable"),
        getRootRef: rootRef
    }), /*#__PURE__*/ React.createElement(Touch, {
        className: "vkuiBaseGallery__viewport",
        onStartX: onStart,
        onMoveX: onMoveX,
        onEnd: onEnd,
        style: {
            width: slideWidth === 'custom' ? '100%' : slideWidth
        },
        getRootRef: viewportRef,
        noSlideClick: true
    }, /*#__PURE__*/ React.createElement("div", {
        className: "vkuiBaseGallery__layer",
        style: layerStyle
    }, React.Children.map(children, function(item, i) {
        return /*#__PURE__*/ React.createElement("div", {
            className: "vkuiBaseGallery__slide",
            key: "slide-".concat(i),
            ref: function(el) {
                return setSlideRef(el, i);
            }
        }, item);
    }))), bullets && /*#__PURE__*/ React.createElement("div", {
        "aria-hidden": true,
        className: classNames("vkuiBaseGallery__bullets", stylesBullets[bullets])
    }, React.Children.map(children, function(_item, index) {
        return /*#__PURE__*/ React.createElement("div", {
            className: classNames("vkuiBaseGallery__bullet", index === slideIndex && "vkuiBaseGallery__bullet--active"),
            key: index
        });
    })), showArrows && hasPointer && canSlideLeft && /*#__PURE__*/ React.createElement(ScrollArrow, {
        className: "vkuiBaseGallery__arrow",
        direction: "left",
        onClick: slideLeft,
        size: arrowSize
    }), showArrows && hasPointer && canSlideRight && /*#__PURE__*/ React.createElement(ScrollArrow, {
        className: "vkuiBaseGallery__arrow",
        direction: "right",
        onClick: slideRight,
        size: arrowSize
    }));
};

;// CONCATENATED MODULE: ./src/components/BaseGallery/CarouselBase/constants.ts
var constants_ANIMATION_DURATION = 240;
var constants_SLIDE_THRESHOLD = 0.05;
var constants_CONTROL_ELEMENTS_STATE = {
    canSlideLeft: true,
    canSlideRight: true,
    isDraggable: true
};
var constants_SLIDES_MANAGER_STATE = {
    viewportOffsetWidth: 0,
    slides: [],
    isFullyVisible: true,
    loopPoints: [],
    contentSize: 0,
    snaps: []
};

;// CONCATENATED MODULE: ./src/components/BaseGallery/CarouselBase/helpers.ts
function helpers_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function helpers_array_without_holes(arr) {
    if (Array.isArray(arr)) return helpers_array_like_to_array(arr);
}
function helpers_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function helpers_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function helpers_to_consumable_array(arr) {
    return helpers_array_without_holes(arr) || helpers_iterable_to_array(arr) || helpers_unsupported_iterable_to_array(arr) || helpers_non_iterable_spread();
}
function helpers_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return helpers_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return helpers_array_like_to_array(o, minLen);
}

/*
 * Считает отступ слоя галереи
 */ function helpers_calculateIndent(targetIndex, slidesManager, isCenterWithCustomWidth) {
    if (slidesManager.isFullyVisible || !slidesManager.slides.length) {
        return 0;
    }
    var targetSlide = slidesManager.slides[targetIndex];
    if (targetSlide) {
        var coordX = targetSlide.coordX, width = targetSlide.width;
        if (isCenterWithCustomWidth) {
            return slidesManager.viewportOffsetWidth / 2 - coordX - width / 2;
        }
        return -1 * coordX;
    }
    return 0;
}
/**
 * Вычисляем индексы слайдов, которые необходимо смещать
 */ function getShiftedIndexes(direction, slides, availableWidth) {
    var gap = availableWidth;
    var shiftedSlideIndexes = [];
    var startIndex = direction === 1 ? 0 : slides.length - 1;
    var endIndex = direction === 1 ? slides.length - 1 : 0;
    for(var i = startIndex; (direction === 1 ? i <= endIndex : i >= endIndex) && gap > 0; i += direction){
        var slideWidth = slides[i].width;
        if (gap > 0) {
            shiftedSlideIndexes.push(i);
        }
        gap -= slideWidth;
    }
    return shiftedSlideIndexes;
}
function calculateLoopPoints(indexes, edge, slidesManager, containerWidth) {
    var contentSize = slidesManager.contentSize, slides = slidesManager.slides, snaps = slidesManager.snaps;
    var isStartEdge = edge === 'start';
    var offset = isStartEdge ? -contentSize : contentSize;
    return indexes.map(function(index) {
        var initial = isStartEdge ? 0 : -contentSize;
        var altered = isStartEdge ? contentSize : 0;
        var loopPoint = isStartEdge ? snaps[index] + containerWidth + offset : snaps[index] - slides[index].width + offset - snaps[0];
        return {
            index: index,
            target: function(currentLocation) {
                return currentLocation >= loopPoint ? initial : altered;
            }
        };
    });
}
/**
 * Вычисляем "ключевые" точки, на которых должно происходить смещение слайдов
 */ function helpers_getLoopPoints(slidesManager, containerWidth) {
    var slides = slidesManager.slides, snaps = slidesManager.snaps;
    var startShiftedIndexes = getShiftedIndexes(-1, slides, snaps[0]);
    var endShiftedIndexes = getShiftedIndexes(1, slides, containerWidth - snaps[0]);
    return helpers_to_consumable_array(calculateLoopPoints(endShiftedIndexes, 'start', slidesManager, containerWidth)).concat(helpers_to_consumable_array(calculateLoopPoints(startShiftedIndexes, 'end', slidesManager, containerWidth)));
}
/*
 * Получает индекс слайда, к которому будет осуществлен переход
 */ function helpers_getTargetIndex(slides, slideIndex, currentShiftX, currentShiftXDelta) {
    var shift = currentShiftX + currentShiftXDelta;
    var direction = currentShiftXDelta < 0 ? 1 : -1;
    // Находим ближайшую границу слайда к текущему отступу
    var targetIndex = slides.reduce(function(val, item, index) {
        var previousValue = Math.abs(slides[val].coordX + shift);
        var currentValue = Math.abs(item.coordX + shift);
        return previousValue < currentValue ? val : index;
    }, slideIndex);
    if (targetIndex === slideIndex) {
        var targetSlide = slideIndex + direction;
        if (targetSlide >= 0 && targetSlide < slides.length) {
            if (Math.abs(currentShiftXDelta) > slides[targetSlide].width * SLIDE_THRESHOLD) {
                return targetSlide;
            }
            return targetIndex;
        }
        return direction < 0 ? (targetSlide + slides.length) % slides.length : targetSlide % slides.length;
    }
    return targetIndex;
}

;// CONCATENATED MODULE: ./src/lib/animate.ts

function animate_animate(param) {
    var duration = param.duration, timing = param.timing, draw = param.draw, _param_animationQueue = param.animationQueue, animationQueue = _param_animationQueue === void 0 ? [] : _param_animationQueue;
    if (!canUseDOM) {
        return;
    }
    var start;
    requestAnimationFrame(function animate(time) {
        if (!start) {
            start = time;
        }
        var timeFraction = Math.min((time - start) / duration, 1);
        var progress = timing(timeFraction);
        draw(progress);
        if (timeFraction < 1) {
            requestAnimationFrame(animate);
            return;
        }
        animationQueue.shift();
        if (animationQueue.length > 0) {
            animationQueue[0]();
        }
    });
}

;// CONCATENATED MODULE: ./src/components/BaseGallery/CarouselBase/hooks.ts




var TIMING_FUNCTION = cubicBezier(0.8, 1);
function hooks_useSlideAnimation() {
    var animationQueue = React.useRef([]);
    function getAnimateFunction(drawFunction) {
        return function() {
            animate({
                duration: ANIMATION_DURATION,
                timing: TIMING_FUNCTION,
                animationQueue: animationQueue.current,
                draw: drawFunction
            });
        };
    }
    function addToAnimationQueue(func) {
        animationQueue.current.push(func);
    }
    function startAnimation() {
        if (animationQueue.current.length === 1) {
            animationQueue.current[0]();
        }
    }
    return {
        getAnimateFunction: getAnimateFunction,
        addToAnimationQueue: addToAnimationQueue,
        startAnimation: startAnimation
    };
}

;// CONCATENATED MODULE: ./src/components/BaseGallery/CarouselBase/CarouselBase.tsx
function CarouselBase_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function CarouselBase_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function CarouselBase_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CarouselBase_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function CarouselBase_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function CarouselBase_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CarouselBase_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CarouselBase_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function CarouselBase_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        CarouselBase_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function CarouselBase_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CarouselBase_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CarouselBase_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function CarouselBase_sliced_to_array(arr, i) {
    return CarouselBase_array_with_holes(arr) || CarouselBase_iterable_to_array_limit(arr, i) || CarouselBase_unsupported_iterable_to_array(arr, i) || CarouselBase_non_iterable_rest();
}
function CarouselBase_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return CarouselBase_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return CarouselBase_array_like_to_array(o, minLen);
}
















var CarouselBase_stylesBullets = {
    dark: "vkuiBaseGallery__bullets--dark",
    light: "vkuiBaseGallery__bullets--light"
};
var CarouselBase_warn = warnOnce('Gallery');
var CarouselBase_CarouselBase = function(_param) {
    var _param_bullets = _param.bullets, bullets = _param_bullets === void 0 ? false : _param_bullets, getRootRef = _param.getRootRef, children = _param.children, _param_slideWidth = _param.slideWidth, slideWidth = _param_slideWidth === void 0 ? '100%' : _param_slideWidth, _param_slideIndex = _param.slideIndex, slideIndex = _param_slideIndex === void 0 ? 0 : _param_slideIndex, _param_dragDisabled = _param.dragDisabled, dragDisabled = _param_dragDisabled === void 0 ? false : _param_dragDisabled, onDragStart = _param.onDragStart, onDragEnd = _param.onDragEnd, onChange = _param.onChange, onPrevClick = _param.onPrevClick, onNextClick = _param.onNextClick, _param_align = _param.align, align = _param_align === void 0 ? 'left' : _param_align, showArrows = _param.showArrows, getRef = _param.getRef, _param_arrowSize = _param.arrowSize, arrowSize = _param_arrowSize === void 0 ? 'l' : _param_arrowSize, restProps = CarouselBase_object_without_properties(_param, [
        "bullets",
        "getRootRef",
        "children",
        "slideWidth",
        "slideIndex",
        "dragDisabled",
        "onDragStart",
        "onDragEnd",
        "onChange",
        "onPrevClick",
        "onNextClick",
        "align",
        "showArrows",
        "getRef",
        "arrowSize"
    ]);
    var slidesStore = React.useRef({});
    var slidesManager = React.useRef(SLIDES_MANAGER_STATE);
    var rootRef = useExternRef(getRootRef);
    var viewportRef = useExternRef(getRef);
    var layerRef = React.useRef(null);
    var animationFrameRef = React.useRef(null);
    var shiftXCurrentRef = React.useRef(0);
    var shiftXDeltaRef = React.useRef(0);
    var initialized = React.useRef(false);
    var _useSlideAnimation = useSlideAnimation(), addToAnimationQueue = _useSlideAnimation.addToAnimationQueue, getAnimateFunction = _useSlideAnimation.getAnimateFunction, startAnimation = _useSlideAnimation.startAnimation;
    var _React_useState = CarouselBase_sliced_to_array(React.useState(CONTROL_ELEMENTS_STATE), 2), controlElementsState = _React_useState[0], setControlElementsState = _React_useState[1];
    var window = useDOM().window;
    var hasPointer = useAdaptivityHasPointer();
    var isCenterWithCustomWidth = slideWidth === 'custom' && align === 'center';
    var transformCssStyles = function(shiftX) {
        var animation = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        slidesManager.current.loopPoints.forEach(function(loopPoint) {
            var target = loopPoint.target, index = loopPoint.index;
            var slide = slidesStore.current[index];
            if (slide) {
                slide.style.transform = "translate3d(".concat(target(shiftX), "px, 0, 0)");
            }
        });
        if (layerRef.current) {
            layerRef.current.style.transform = "translate3d(".concat(shiftX, "px, 0, 0)");
            layerRef.current.style.transition = animation ? "transform ".concat(ANIMATION_DURATION, "ms cubic-bezier(.1, 0, .25, 1)") : '';
        }
    };
    var requestTransform = function(shiftX) {
        var animation = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        var _slidesManager_current = slidesManager.current, snaps = _slidesManager_current.snaps, contentSize = _slidesManager_current.contentSize, slides = _slidesManager_current.slides;
        if (animationFrameRef.current !== null) {
            cancelAnimationFrame(animationFrameRef.current);
        }
        animationFrameRef.current = requestAnimationFrame(function() {
            if (shiftX > snaps[0]) {
                shiftXCurrentRef.current = -contentSize + snaps[0];
                shiftX = shiftXCurrentRef.current + shiftXDeltaRef.current;
            }
            var lastPoint = slides[slides.length - 1].width + slides[slides.length - 1].coordX;
            if (shiftX <= -lastPoint) {
                shiftXCurrentRef.current = Math.abs(shiftXDeltaRef.current) + snaps[0];
            }
            transformCssStyles(shiftX, animation);
        });
    };
    var initializeSlides = function() {
        if (!rootRef.current || !viewportRef.current) {
            return;
        }
        var localSlides = React.Children.map(children, function(_item, i) {
            var elem = slidesStore.current[i] || {
                offsetLeft: 0,
                offsetWidth: 0
            };
            return {
                coordX: elem.offsetLeft,
                width: elem.offsetWidth
            };
        }) || [];
        var containerWidth = rootRef.current.offsetWidth;
        var viewportOffsetWidth = viewportRef.current.offsetWidth;
        var layerWidth = localSlides.reduce(function(val, slide) {
            return slide.width + val;
        }, 0);
        if (false) { var slideIndex1, remainingWidth; }
        if (align === 'center') {
            var firstSlideShift = (containerWidth - localSlides[0].width) / 2;
            localSlides = localSlides.map(function(item) {
                return {
                    width: item.width,
                    coordX: item.coordX - firstSlideShift
                };
            });
        }
        slidesManager.current = CarouselBase_object_spread_props(CarouselBase_object_spread({}, slidesManager.current), {
            viewportOffsetWidth: viewportOffsetWidth,
            slides: localSlides,
            isFullyVisible: layerWidth <= containerWidth
        });
        var snaps = localSlides.map(function(_, index) {
            return calculateIndent(index, slidesManager.current, isCenterWithCustomWidth);
        });
        var contentSize = -snaps[snaps.length - 1] + localSlides[localSlides.length - 1].width;
        if (align === 'center') {
            contentSize += snaps[0];
        }
        slidesManager.current.snaps = snaps;
        slidesManager.current.contentSize = contentSize;
        slidesManager.current.loopPoints = getLoopPoints(slidesManager.current, containerWidth);
        setControlElementsState({
            canSlideLeft: !slidesManager.current.isFullyVisible,
            canSlideRight: !slidesManager.current.isFullyVisible,
            isDraggable: !(dragDisabled || slidesManager.current.isFullyVisible)
        });
        shiftXCurrentRef.current = snaps[slideIndex];
        initialized.current = true;
        requestTransform(shiftXCurrentRef.current);
    };
    var onResize = function() {
        if (initialized.current) {
            initializeSlides();
        }
    };
    useGlobalEventListener(window, 'resize', onResize);
    useIsomorphicLayoutEffect(function performSlideChange() {
        if (!initialized.current) {
            return;
        }
        var _slidesManager_current = slidesManager.current, snaps = _slidesManager_current.snaps, slides = _slidesManager_current.slides;
        var indent = snaps[slideIndex];
        var startPoint = shiftXCurrentRef.current;
        /**
       * Переключаемся с последнего элемента на первый
       * Для корректной анимации мы прокручиваем последний слайд на всю длину (shiftX) "вперед"
       * В конце анимации при отрисовке следующего кадра задаем всем слайдам начальные значения
       */ if (indent === snaps[0] && shiftXCurrentRef.current <= snaps[snaps.length - 1]) {
            var distance = Math.abs(snaps[snaps.length - 1]) + slides[slides.length - 1].width + startPoint;
            addToAnimationQueue(getAnimateFunction(function(progress) {
                var shiftX = startPoint + progress * distance * -1;
                transformCssStyles(shiftX);
                if (shiftX <= snaps[snaps.length - 1] - slides[slides.length - 1].width) {
                    requestAnimationFrame(function() {
                        shiftXCurrentRef.current = indent;
                        transformCssStyles(snaps[0]);
                    });
                }
            }));
        /**
         * Переключаемся с первого слайда на последний
         * Для корректной анимации сначала задаем первым видимым слайдам смещение
         * В следующем кадре начинаем анимация прокрутки "назад"
         */ } else if (indent === snaps[snaps.length - 1] && shiftXCurrentRef.current === snaps[0]) {
            startPoint = indent - slides[slides.length - 1].width;
            addToAnimationQueue(function() {
                requestAnimationFrame(function() {
                    var shiftX = indent - slides[slides.length - 1].width;
                    transformCssStyles(shiftX);
                    getAnimateFunction(function(progress) {
                        transformCssStyles(startPoint + progress * slides[slides.length - 1].width);
                    })();
                });
            });
        /**
         * Если не обработаны `corner`-кейсы выше, то просто проигрываем анимацию смещения
         */ } else {
            addToAnimationQueue(function() {
                var distance = Math.abs(indent - startPoint);
                var direction = startPoint <= indent ? 1 : -1;
                getAnimateFunction(function(progress) {
                    var shiftX = startPoint + progress * distance * direction;
                    transformCssStyles(shiftX);
                })();
            });
        }
        startAnimation();
        shiftXCurrentRef.current = indent;
    }, [
        slideIndex
    ]);
    useMutationObserver(layerRef, initializeSlides);
    useIsomorphicLayoutEffect(initializeSlides, [
        align,
        slideWidth
    ]);
    var calculateMinDeltaXToSlide = function() {
        return slidesManager.current.slides[slideIndex].width * SLIDE_THRESHOLD;
    };
    var slideLeft = function(event) {
        if (slideIndex > 0) {
            shiftXCurrentRef.current += calculateMinDeltaXToSlide();
        }
        onChange === null || onChange === void 0 ? void 0 : onChange((slideIndex - 1 + slidesManager.current.slides.length) % slidesManager.current.slides.length);
        onPrevClick === null || onPrevClick === void 0 ? void 0 : onPrevClick(event);
    };
    var slideRight = function(event) {
        if (slideIndex < slidesManager.current.slides.length - 1) {
            shiftXCurrentRef.current -= calculateMinDeltaXToSlide();
        }
        onChange === null || onChange === void 0 ? void 0 : onChange((slideIndex + 1) % slidesManager.current.slides.length);
        onNextClick === null || onNextClick === void 0 ? void 0 : onNextClick(event);
    };
    var onStart = function(e) {
        e.originalEvent.stopPropagation();
        if (controlElementsState.isDraggable) {
            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(e);
            shiftXCurrentRef.current = slidesManager.current.snaps[slideIndex];
            shiftXDeltaRef.current = 0;
        }
    };
    var onMoveX = function(e) {
        if (controlElementsState.isDraggable) {
            e.originalEvent.preventDefault();
            if (e.isSlideX) {
                if (shiftXDeltaRef.current !== e.shiftX) {
                    shiftXDeltaRef.current = e.shiftX;
                    requestTransform(shiftXCurrentRef.current + shiftXDeltaRef.current);
                }
            }
        }
    };
    var onEnd = function(e) {
        if (controlElementsState.isDraggable) {
            var targetIndex = slideIndex;
            if (e.isSlide) {
                targetIndex = getTargetIndex(slidesManager.current.slides, slideIndex, shiftXCurrentRef.current, shiftXDeltaRef.current);
            }
            onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(e, targetIndex);
            if (targetIndex !== slideIndex) {
                shiftXCurrentRef.current = shiftXCurrentRef.current + shiftXDeltaRef.current;
                onChange === null || onChange === void 0 ? void 0 : onChange(targetIndex);
            } else {
                var initialShiftX = slidesManager.current.snaps[targetIndex];
                requestTransform(initialShiftX, true);
            }
        }
    };
    var setSlideRef = function(slideRef, slideIndex) {
        slidesStore.current[slideIndex] = slideRef;
    };
    var canSlideLeft = controlElementsState.canSlideLeft, canSlideRight = controlElementsState.canSlideRight, isDraggable = controlElementsState.isDraggable;
    return /*#__PURE__*/ React.createElement(RootComponent, CarouselBase_object_spread_props(CarouselBase_object_spread({}, restProps), {
        baseClassName: classNames("vkuiBaseGallery", slideWidth === 'custom' && "vkuiBaseGallery--custom-width", isDraggable && "vkuiBaseGallery--draggable"),
        getRootRef: rootRef
    }), /*#__PURE__*/ React.createElement(Touch, {
        className: "vkuiBaseGallery__viewport",
        onStartX: onStart,
        onMoveX: onMoveX,
        onEnd: onEnd,
        style: {
            width: slideWidth === 'custom' ? '100%' : slideWidth
        },
        getRootRef: viewportRef,
        noSlideClick: true
    }, /*#__PURE__*/ React.createElement("div", {
        className: "vkuiBaseGallery__layer",
        ref: layerRef
    }, React.Children.map(children, function(item, i) {
        return /*#__PURE__*/ React.createElement("div", {
            className: "vkuiBaseGallery__slide",
            key: "slide-".concat(i),
            ref: function(el) {
                return setSlideRef(el, i);
            }
        }, item);
    }))), bullets && /*#__PURE__*/ React.createElement("div", {
        "aria-hidden": true,
        className: classNames("vkuiBaseGallery__bullets", CarouselBase_stylesBullets[bullets])
    }, React.Children.map(children, function(_item, index) {
        return /*#__PURE__*/ React.createElement("div", {
            className: classNames("vkuiBaseGallery__bullet", index === slideIndex && "vkuiBaseGallery__bullet--active"),
            key: index
        });
    })), showArrows && hasPointer && canSlideLeft && /*#__PURE__*/ React.createElement(ScrollArrow, {
        className: "vkuiBaseGallery__arrow",
        direction: "left",
        onClick: slideLeft,
        size: arrowSize
    }), showArrows && hasPointer && canSlideRight && /*#__PURE__*/ React.createElement(ScrollArrow, {
        className: "vkuiBaseGallery__arrow",
        direction: "right",
        onClick: slideRight,
        size: arrowSize
    }));
};

;// CONCATENATED MODULE: ./src/components/Gallery/hooks.ts



function hooks_useAutoPlay(timeout, slideIndex, callbackFnProp) {
    var document = useDOM().document;
    var callbackFn = useStableCallback(callbackFnProp);
    React.useEffect(function initializeAutoPlay() {
        if (!document || !timeout) {
            return;
        }
        var timeoutId = null;
        var stop = function() {
            if (timeoutId) {
                clearTimeout(timeoutId);
                timeoutId = null;
            }
        };
        var start = function() {
            switch(document.visibilityState){
                case 'visible':
                    stop();
                    timeoutId = setTimeout(callbackFn, timeout);
                    break;
                case 'hidden':
                    stop();
            }
        };
        start();
        document.addEventListener('visibilitychange', start);
        return function() {
            stop();
            document.removeEventListener('visibilitychange', start);
        };
    }, [
        document,
        timeout,
        slideIndex,
        callbackFn
    ]);
}

;// CONCATENATED MODULE: ./src/components/Gallery/Gallery.tsx
function Gallery_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Gallery_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Gallery_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Gallery_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Gallery_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Gallery_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Gallery_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Gallery_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Gallery_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Gallery_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Gallery_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Gallery_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Gallery_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Gallery_sliced_to_array(arr, i) {
    return Gallery_array_with_holes(arr) || Gallery_iterable_to_array_limit(arr, i) || Gallery_unsupported_iterable_to_array(arr, i) || Gallery_non_iterable_rest();
}
function Gallery_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Gallery_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Gallery_array_like_to_array(o, minLen);
}






/**
 * @see https://vkcom.github.io/VKUI/#/Gallery
 */ var Gallery = function(_param) {
    var _param_initialSlideIndex = _param.initialSlideIndex, initialSlideIndex = _param_initialSlideIndex === void 0 ? 0 : _param_initialSlideIndex, children = _param.children, _param_timeout = _param.timeout, timeout = _param_timeout === void 0 ? 0 : _param_timeout, onChange = _param.onChange, bullets = _param.bullets, looped = _param.looped, props = Gallery_object_without_properties(_param, [
        "initialSlideIndex",
        "children",
        "timeout",
        "onChange",
        "bullets",
        "looped"
    ]);
    var _React_useState = Gallery_sliced_to_array(React.useState(initialSlideIndex), 2), localSlideIndex = _React_useState[0], setSlideIndex = _React_useState[1];
    var isControlled = typeof props.slideIndex === 'number';
    var _props_slideIndex;
    var slideIndex = isControlled ? (_props_slideIndex = props.slideIndex) !== null && _props_slideIndex !== void 0 ? _props_slideIndex : 0 : localSlideIndex;
    var slides = React.useMemo(function() {
        return React.Children.toArray(children).filter(function(item) {
            return Boolean(item);
        });
    }, [
        children
    ]);
    var childCount = slides.length;
    var isClient = useIsClient();
    var handleChange = React.useCallback(function(current) {
        if (current === slideIndex) {
            return;
        }
        !isControlled && setSlideIndex(current);
        onChange && onChange(current);
    }, [
        isControlled,
        onChange,
        slideIndex
    ]);
    useAutoPlay(timeout, slideIndex, function() {
        return handleChange((slideIndex + 1) % childCount);
    });
    // prevent invalid slideIndex
    // any slide index is invalid with no slides, just keep it as is
    var safeSlideIndex = childCount > 0 ? clamp(slideIndex, 0, childCount - 1) : slideIndex;
    // notify parent in controlled mode
    React.useEffect(function() {
        if (onChange && safeSlideIndex !== slideIndex) {
            onChange(safeSlideIndex);
        }
        setSlideIndex(safeSlideIndex);
    }, [
        onChange,
        safeSlideIndex,
        slideIndex
    ]);
    if (!isClient) {
        return null;
    }
    var Component = looped ? CarouselBase : BaseGallery;
    return /*#__PURE__*/ React.createElement(Component, Gallery_object_spread_props(Gallery_object_spread({
        dragDisabled: isControlled && !onChange
    }, props), {
        bullets: childCount > 0 && bullets,
        slideIndex: safeSlideIndex,
        onChange: handleChange
    }), slides);
};

;// CONCATENATED MODULE: ./src/components/GridAvatar/GridAvatarBadge/GridAvatarBadge.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/GridAvatar/GridAvatarBadge/GridAvatarBadge.tsx
function GridAvatarBadge_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function GridAvatarBadge_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            GridAvatarBadge_define_property(target, key, source[key]);
        });
    }
    return target;
}
function GridAvatarBadge_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function GridAvatarBadge_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        GridAvatarBadge_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function GridAvatarBadge_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = GridAvatarBadge_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function GridAvatarBadge_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var GridAvatarBadge = function(_param) {
    var className = _param.className, restProps = GridAvatarBadge_object_without_properties(_param, [
        "className"
    ]);
    var size = react.useContext(context_ImageBaseContext).size;
    return /*#__PURE__*/ react.createElement(ImageBase.Badge, GridAvatarBadge_object_spread_props(GridAvatarBadge_object_spread({}, restProps), {
        className: clsx("vkuiGridAvatarBadge", size < 96 && "vkuiGridAvatarBadge--shifted", className)
    }));
};

;// CONCATENATED MODULE: ./src/components/GridAvatar/GridAvatar.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/GridAvatar/GridAvatar.tsx
function GridAvatar_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function GridAvatar_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            GridAvatar_define_property(target, key, source[key]);
        });
    }
    return target;
}
function GridAvatar_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function GridAvatar_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        GridAvatar_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function GridAvatar_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = GridAvatar_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function GridAvatar_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





var GRID_AVATAR_DEFAULT_SIZE = 48;
var MAX_GRID_LENGTH = 4;
var GridAvatar_warn = warnOnce('GridAvatar');
/**
 * @see https://vkcom.github.io/VKUI/#/GridAvatar
 */ var GridAvatar = function(_param) {
    var _param_src = _param.src, src = _param_src === void 0 ? [] : _param_src, _param_size = _param.size, size = _param_size === void 0 ? GRID_AVATAR_DEFAULT_SIZE : _param_size, className = _param.className, children = _param.children, restProps = GridAvatar_object_without_properties(_param, [
        "src",
        "size",
        "className",
        "children"
    ]);
    if (false) {}
    return /*#__PURE__*/ React.createElement(ImageBase, GridAvatar_object_spread_props(GridAvatar_object_spread({}, restProps), {
        size: size,
        className: clsx("vkuiGridAvatar", className)
    }), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiGridAvatar__in",
        "aria-hidden": true
    }, src.map(function(url, index) {
        return index < MAX_GRID_LENGTH ? /*#__PURE__*/ React.createElement("div", {
            key: index,
            className: "vkuiGridAvatar__item",
            style: {
                backgroundImage: "url(".concat(url, ")")
            }
        }) : null;
    })), children);
};
GridAvatar.Badge = GridAvatarBadge;

;// CONCATENATED MODULE: ./src/components/Image/ImageBadge/ImageBadge.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Image/ImageBadge/ImageBadge.tsx
function ImageBadge_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ImageBadge_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ImageBadge_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ImageBadge_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ImageBadge_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ImageBadge_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ImageBadge_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ImageBadge_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ImageBadge_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var ImageBadge = function(_param) {
    var className = _param.className, restProps = ImageBadge_object_without_properties(_param, [
        "className"
    ]);
    var size = react.useContext(context_ImageBaseContext).size;
    return /*#__PURE__*/ react.createElement(ImageBase.Badge, ImageBadge_object_spread_props(ImageBadge_object_spread({}, restProps), {
        className: clsx("vkuiImageBadge", size < 96 && "vkuiImageBadge--shifted", className)
    }));
};
ImageBadge.displayName = 'ImageBadge';

;// CONCATENATED MODULE: ./src/components/Image/Image.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Image/Image.tsx
function Image_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Image_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Image_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Image_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Image_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Image_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Image_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Image_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Image_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





var IMAGE_DEFAULT_SIZE = 48;
var getBorderRadiusBySize = function(size, borderRadius) {
    switch(borderRadius){
        case 's':
            {
                if (size <= 32) {
                    return 2;
                }
                if (size <= 56) {
                    return 3;
                }
                return 4;
            }
        case 'm':
            {
                if (size <= 32) {
                    return 3;
                }
                if (size <= 48) {
                    return 4;
                }
                if (size <= 72) {
                    return 6;
                }
                if (size <= 80) {
                    return 8;
                }
                return 10;
            }
        case 'l':
            {
                if (size <= 16) {
                    return 4;
                }
                if (size <= 20) {
                    return 5;
                }
                if (size <= 32) {
                    return 6;
                }
                if (size <= 40) {
                    return 8;
                }
                if (size <= 48) {
                    return 10;
                }
                if (size <= 56) {
                    return 12;
                }
                if (size <= 64) {
                    return 14;
                }
                return 16;
            }
    }
};
var getBorderRadiusBySizeInPx = function(size, borderRadius) {
    if (!borderRadius) {
        return undefined;
    }
    return "".concat(getBorderRadiusBySize(size, borderRadius), "px");
};
/**
 * @see https://vkcom.github.io/VKUI/#/Image
 */ var Image = function(_param) {
    var _param_size = _param.size, size = _param_size === void 0 ? IMAGE_DEFAULT_SIZE : _param_size, _param_borderRadius = _param.borderRadius, borderRadius = _param_borderRadius === void 0 ? 'm' : _param_borderRadius, borderStartStartRadius = _param.borderStartStartRadius, borderStartEndRadius = _param.borderStartEndRadius, borderEndStartRadius = _param.borderEndStartRadius, borderEndEndRadius = _param.borderEndEndRadius, style = _param.style, className = _param.className, _param_objectFit = _param.objectFit, objectFit = _param_objectFit === void 0 ? 'cover' : _param_objectFit, restProps = Image_object_without_properties(_param, [
        "size",
        "borderRadius",
        "borderStartStartRadius",
        "borderStartEndRadius",
        "borderEndStartRadius",
        "borderEndEndRadius",
        "style",
        "className",
        "objectFit"
    ]);
    var borderStyles = react.useMemo(function() {
        return {
            '--vkui_internal--Image_border_radius': getBorderRadiusBySizeInPx(size, borderRadius),
            '--vkui_internal--Image_border_start_start_radius': getBorderRadiusBySizeInPx(size, borderStartStartRadius),
            '--vkui_internal--Image_border_start_end_radius': getBorderRadiusBySizeInPx(size, borderStartEndRadius),
            '--vkui_internal--Image_border_end_start_radius': getBorderRadiusBySizeInPx(size, borderEndStartRadius),
            '--vkui_internal--Image_border_end_end_radius': getBorderRadiusBySizeInPx(size, borderEndEndRadius)
        };
    }, [
        borderRadius,
        borderStartStartRadius,
        borderStartEndRadius,
        borderEndStartRadius,
        borderEndEndRadius,
        size
    ]);
    return /*#__PURE__*/ react.createElement(ImageBase, Image_object_spread_props(Image_object_spread({}, restProps), {
        objectFit: objectFit,
        size: size,
        style: Image_object_spread({}, borderStyles, style),
        className: clsx(className, "vkuiImage", borderStartStartRadius && "vkuiImage--borderStartStartRadius", borderStartEndRadius && "vkuiImage--borderStartEndRadius", borderEndStartRadius && "vkuiImage--borderEndStartRadius", borderEndEndRadius && "vkuiImage--borderEndEndRadius")
    }));
};
Image.displayName = 'Image';
Image.Badge = ImageBadge;
Image.Badge.displayName = 'Image.Badge';
Image.Overlay = ImageBase.Overlay;
Image.Overlay.displayName = 'Image.Overlay';

;// CONCATENATED MODULE: ./src/components/Progress/Progress.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Progress/Progress.tsx
function Progress_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Progress_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Progress_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Progress_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Progress_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Progress_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Progress_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Progress_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Progress_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





var Progress_stylesAppearance = {
    accent: "vkuiProgress--appearance-accent",
    positive: "vkuiProgress--appearance-positive",
    negative: "vkuiProgress--appearance-negative"
};
function progressCustomHeightStyle(height) {
    return height ? {
        height: height,
        borderRadius: height / 2
    } : undefined;
}
function progressStyle(height, styleProps) {
    var styleHeight = progressCustomHeightStyle(height);
    var style = styleHeight ? Progress_object_spread({}, styleProps, styleHeight) : styleProps;
    return style;
}
var PROGRESS_MIN_VALUE = 0;
var PROGRESS_MAX_VALUE = 100;
/**
 * @see https://vkcom.github.io/VKUI/#/Progress
 */ var Progress = function(_param) {
    var _param_value = _param.value, value = _param_value === void 0 ? 0 : _param_value, _param_appearance = _param.appearance, appearance = _param_appearance === void 0 ? 'accent' : _param_appearance, height = _param.height, styleProps = _param.style, restProps = Progress_object_without_properties(_param, [
        "value",
        "appearance",
        "height",
        "style"
    ]);
    var progress = clamp(value, PROGRESS_MIN_VALUE, PROGRESS_MAX_VALUE);
    var title = "".concat(progress, " / ").concat(PROGRESS_MAX_VALUE);
    var style = progressStyle(height, styleProps);
    return /*#__PURE__*/ React.createElement(RootComponent, Progress_object_spread_props(Progress_object_spread({
        "aria-valuenow": value,
        title: title,
        style: style
    }, restProps), {
        role: "progressbar",
        "aria-valuemin": PROGRESS_MIN_VALUE,
        "aria-valuemax": PROGRESS_MAX_VALUE,
        baseClassName: classNames("vkuiProgress", Progress_stylesAppearance[appearance])
    }), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiProgress__in",
        style: {
            width: "".concat(progress, "%")
        }
    }));
};

;// CONCATENATED MODULE: ./src/hooks/useBooleanState.ts
function useBooleanState_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useBooleanState_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useBooleanState_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useBooleanState_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useBooleanState_sliced_to_array(arr, i) {
    return useBooleanState_array_with_holes(arr) || useBooleanState_iterable_to_array_limit(arr, i) || useBooleanState_unsupported_iterable_to_array(arr, i) || useBooleanState_non_iterable_rest();
}
function useBooleanState_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useBooleanState_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useBooleanState_array_like_to_array(o, minLen);
}

var useBooleanState_useBooleanState = function() {
    var defaultValue = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
    var _React_useState = useBooleanState_sliced_to_array(React.useState(defaultValue), 2), value = _React_useState[0], setValue = _React_useState[1];
    var setTrue = React.useCallback(function() {
        setValue(true);
    }, []);
    var setFalse = React.useCallback(function() {
        setValue(false);
    }, []);
    var toggle = React.useCallback(function() {
        setValue(!value);
    }, [
        value
    ]);
    return {
        value: value,
        setTrue: setTrue,
        setFalse: setFalse,
        toggle: toggle
    };
};

;// CONCATENATED MODULE: ./src/hooks/useNativeFormResetListener.ts

var useNativeFormResetListener_useNativeFormResetListener = function(ref, handler) {
    useIsomorphicLayoutEffect(function() {
        if (!ref.current) {
            return;
        }
        // eslint-disable-next-line no-restricted-properties
        var formEl = ref.current.closest('form');
        if (!formEl) {
            return;
        }
        formEl.addEventListener('reset', handler);
        return function() {
            formEl.removeEventListener('reset', handler);
        };
    }, [
        ref,
        handler
    ]);
};

;// CONCATENATED MODULE: ./src/components/Search/Search.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Search/Search.tsx
function Search_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Search_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Search_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Search_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Search_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Search_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Search_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Search_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Search_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Search_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Search_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Search_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Search_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Search_sliced_to_array(arr, i) {
    return Search_array_with_holes(arr) || Search_iterable_to_array_limit(arr, i) || Search_unsupported_iterable_to_array(arr, i) || Search_non_iterable_rest();
}
function Search_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Search_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Search_array_like_to_array(o, minLen);
}

















/**
 * @see https://vkcom.github.io/VKUI/#/Search
 */ var Search = function(_param) {
    var idProp = _param.id, _param_before = _param.before, before = _param_before === void 0 ? /*#__PURE__*/ React.createElement(Icon16SearchOutline, null) : _param_before, className = _param.className, _param_placeholder = _param.placeholder, placeholder = _param_placeholder === void 0 ? 'Поиск' : _param_placeholder, _param_after = _param.after, after = _param_after === void 0 ? 'Отмена' : _param_after, getRef = _param.getRef, iconProp = _param.icon, onIconClick = _param.onIconClick, style = _param.style, _param_autoComplete = _param.autoComplete, autoComplete = _param_autoComplete === void 0 ? 'off' : _param_autoComplete, onChange = _param.onChange, iconLabel = _param.iconLabel, _param_clearLabel = _param.clearLabel, clearLabel = _param_clearLabel === void 0 ? 'Очистить' : _param_clearLabel, noPadding = _param.noPadding, getRootRef = _param.getRootRef, _param_findButtonText = _param.findButtonText, findButtonText = _param_findButtonText === void 0 ? 'Найти' : _param_findButtonText, onFindButtonClick = _param.onFindButtonClick, inputProps = Search_object_without_properties(_param, [
        "id",
        "before",
        "className",
        "placeholder",
        "after",
        "getRef",
        "icon",
        "onIconClick",
        "style",
        "autoComplete",
        "onChange",
        "iconLabel",
        "clearLabel",
        "noPadding",
        "getRootRef",
        "findButtonText",
        "onFindButtonClick"
    ]);
    var inputRef = useExternRef(getRef);
    var _useBooleanState = useBooleanState(false), isFocused = _useBooleanState.value, setFocusedTrue = _useBooleanState.setTrue, setFocusedFalse = _useBooleanState.setFalse;
    var generatedId = React.useId();
    var inputId = idProp ? idProp : "search-".concat(generatedId);
    var _React_useState = Search_sliced_to_array(React.useState(function() {
        return Boolean(inputProps.value || inputProps.defaultValue);
    }), 2), hasValue = _React_useState[0], setHasValue = _React_useState[1];
    var checkHasValue = function(e) {
        return setHasValue(Boolean(e.currentTarget.value));
    };
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var _useAdaptivityConditionalRender = useAdaptivityConditionalRender(), adaptiveSizeY = _useAdaptivityConditionalRender.sizeY;
    var platform = usePlatform();
    var hasAfter = platform === 'ios' && hasReactNode(after);
    var onFocus = function(e) {
        setFocusedTrue();
        inputProps.onFocus && inputProps.onFocus(e);
    };
    var onBlur = function(e) {
        setFocusedFalse();
        inputProps.onBlur && inputProps.onBlur(e);
    };
    var onCancel = React.useCallback(function() {
        var _Object_getOwnPropertyDescriptor, _inputRef_current;
        // eslint-disable-next-line @typescript-eslint/unbound-method
        var nativeInputValueSetter = (_Object_getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, 'value')) === null || _Object_getOwnPropertyDescriptor === void 0 ? void 0 : _Object_getOwnPropertyDescriptor.set;
        nativeInputValueSetter === null || nativeInputValueSetter === void 0 ? void 0 : nativeInputValueSetter.call(inputRef.current, '');
        var ev2 = new Event('input', {
            bubbles: true
        });
        (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.dispatchEvent(ev2);
    }, [
        inputRef
    ]);
    var onIconClickStart = React.useCallback(function(e) {
        return onIconClick === null || onIconClick === void 0 ? void 0 : onIconClick(e);
    }, [
        onIconClick
    ]);
    var onIconCancelClickStart = React.useCallback(function(e) {
        var _inputRef_current;
        e.preventDefault();
        (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();
        if (touchEnabled()) {
            onCancel();
        }
    }, [
        inputRef,
        onCancel
    ]);
    useIsomorphicLayoutEffect(function() {
        if (inputProps.value !== undefined) {
            setHasValue(Boolean(inputProps.value));
        }
    }, [
        inputProps.value
    ]);
    useNativeFormResetListener(inputRef, function() {
        setHasValue(Boolean(inputProps.defaultValue));
    });
    var renderIconButton = function(icon) {
        var props = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        return /*#__PURE__*/ React.createElement(IconButton, Search_object_spread({
            hoverMode: "opacity",
            onPointerDown: onIconClickStart,
            className: "vkuiSearch__icon",
            onFocus: setFocusedTrue,
            onBlur: setFocusedFalse,
            onClick: noop
        }, props), /*#__PURE__*/ React.createElement(VisuallyHidden, null, iconLabel), icon);
    };
    return /*#__PURE__*/ React.createElement("div", {
        className: classNames('vkuiInternalSearch', "vkuiSearch", sizeY === 'none' && "vkuiSearch--sizeY-none", sizeY === 'compact' && "vkuiSearch--sizeY-compact", isFocused && "vkuiSearch--focused", hasValue && "vkuiSearch--has-value", hasAfter && "vkuiSearch--has-after", iconProp && "vkuiSearch--has-icon", inputProps.disabled && "vkuiSearch--disabled", !noPadding && "vkuiSearch--withPadding", className),
        ref: getRootRef,
        style: style
    }, /*#__PURE__*/ React.createElement("div", {
        className: "vkuiSearch__field"
    }, /*#__PURE__*/ React.createElement("label", {
        htmlFor: inputId,
        className: "vkuiSearch__label"
    }, placeholder), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiSearch__input"
    }, before, /*#__PURE__*/ React.createElement(Headline, Search_object_spread_props(Search_object_spread({
        Component: "input",
        type: "search",
        level: "1",
        weight: "3"
    }, inputProps), {
        id: inputId,
        placeholder: placeholder,
        autoComplete: autoComplete,
        getRootRef: inputRef,
        className: "vkuiSearch__nativeInput",
        onFocus: onFocus,
        onBlur: onBlur,
        onChange: callMultiple(onChange, checkHasValue)
    }))), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiSearch__controls"
    }, iconProp && (typeof iconProp === 'function' ? iconProp(renderIconButton) : renderIconButton(iconProp)), /*#__PURE__*/ React.createElement(IconButton, {
        hoverMode: "opacity",
        onPointerDown: onIconCancelClickStart,
        onClick: onCancel,
        className: "vkuiSearch__icon",
        tabIndex: hasValue ? undefined : -1,
        disabled: inputProps.disabled
    }, /*#__PURE__*/ React.createElement(VisuallyHidden, null, clearLabel), platform === 'ios' ? /*#__PURE__*/ React.createElement(Icon16Clear, null) : /*#__PURE__*/ React.createElement(Icon24Cancel, null)), adaptiveSizeY.compact && onFindButtonClick && /*#__PURE__*/ React.createElement(Button, {
        mode: "primary",
        size: "m",
        className: classNames("vkuiSearch__findButton", adaptiveSizeY.compact.className),
        focusVisibleMode: "inside",
        onClick: onFindButtonClick,
        tabIndex: hasValue ? undefined : -1
    }, findButtonText))), hasAfter && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiSearch__after"
    }, /*#__PURE__*/ React.createElement(Button, {
        mode: "tertiary",
        size: "m",
        focusVisibleMode: "inside",
        hoverMode: "opacity",
        activeMode: "opacity",
        onClick: onCancel,
        onFocus: setFocusedTrue,
        onBlur: setFocusedFalse
    }, /*#__PURE__*/ React.createElement("span", {
        className: "vkuiSearch__afterTextClip"
    }, after))));
};

;// CONCATENATED MODULE: ./src/components/Tabs/Tabs.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Tabs/Tabs.tsx
function Tabs_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Tabs_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Tabs_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Tabs_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Tabs_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Tabs_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Tabs_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Tabs_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Tabs_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}








var Tabs_TabsModeContext = /*#__PURE__*/ react.createContext({
    mode: 'default',
    withGaps: false,
    layoutFillMode: 'auto',
    withScrollToSelectedTab: false,
    scrollBehaviorToSelectedTab: 'nearest'
});
/**
 * @see https://vkcom.github.io/VKUI/#/Tabs
 */ var Tabs = function(_param) {
    var children = _param.children, _param_mode = _param.mode, mode = _param_mode === void 0 ? 'default' : _param_mode, _param_role = _param.role, role = _param_role === void 0 ? 'tablist' : _param_role, withScrollToSelectedTab = _param.withScrollToSelectedTab, _param_scrollBehaviorToSelectedTab = _param.scrollBehaviorToSelectedTab, scrollBehaviorToSelectedTab = _param_scrollBehaviorToSelectedTab === void 0 ? 'nearest' : _param_scrollBehaviorToSelectedTab, _param_layoutFillMode = _param.layoutFillMode, layoutFillMode = _param_layoutFillMode === void 0 ? 'auto' : _param_layoutFillMode, restProps = Tabs_object_without_properties(_param, [
        "children",
        "mode",
        "role",
        "withScrollToSelectedTab",
        "scrollBehaviorToSelectedTab",
        "layoutFillMode"
    ]);
    var platform = usePlatform();
    var document = useDOM().document;
    var isTabFlow = role === 'tablist';
    var tabsRef = React.useRef(null);
    var withGaps = mode === 'accent' || mode === 'secondary';
    var getTabEls = function() {
        if (!tabsRef.current) {
            return [];
        }
        return Array.from(// eslint-disable-next-line no-restricted-properties
        tabsRef.current.querySelectorAll('[role=tab]:not([disabled])'));
    };
    var handleDocumentKeydown = function(event) {
        if (!document || !tabsRef.current || !isTabFlow) {
            return;
        }
        var key = pressedKey(event);
        switch(key){
            case 'ArrowLeft':
            case 'ArrowRight':
            case 'End':
            case 'Home':
                {
                    var tabEls = getTabEls();
                    var currentFocusedElIndex = tabEls.findIndex(function(el) {
                        return document.activeElement === el;
                    });
                    if (currentFocusedElIndex === -1) {
                        return;
                    }
                    var nextIndex = 0;
                    if (key === 'Home') {
                        nextIndex = 0;
                    } else if (key === 'End') {
                        nextIndex = tabEls.length - 1;
                    } else {
                        var offset = key === 'ArrowRight' ? 1 : -1;
                        nextIndex = currentFocusedElIndex + offset;
                    }
                    var nextTabEl = tabEls[nextIndex];
                    if (nextTabEl) {
                        event.preventDefault();
                        nextTabEl.focus();
                    }
                    break;
                }
            /*
       В JAWS и NVDA стрелка вниз активирует контент.
       Это не прописано в стандартах, но по ссылке ниже это рекомендуется делать.
       https://inclusive-components.design/tabbed-interfaces/
      */ case 'ArrowDown':
                {
                    var tabEls1 = getTabEls();
                    var currentFocusedEl = tabEls1.find(function(el) {
                        return document.activeElement === el;
                    });
                    if (!currentFocusedEl || currentFocusedEl.getAttribute('aria-selected') !== 'true') {
                        return;
                    }
                    var relatedContentElId = currentFocusedEl.getAttribute('aria-controls');
                    if (!relatedContentElId) {
                        return;
                    }
                    // eslint-disable-next-line no-restricted-properties
                    var relatedContentEl = document.getElementById(relatedContentElId);
                    if (!relatedContentEl) {
                        return;
                    }
                    event.preventDefault();
                    relatedContentEl.focus();
                    break;
                }
            case 'Space':
            case 'Enter':
                {
                    var tabEls2 = getTabEls();
                    var currentFocusedEl1 = tabEls2.find(function(el) {
                        return document.activeElement === el;
                    });
                    if (currentFocusedEl1) {
                        currentFocusedEl1.click();
                    }
                }
        }
    };
    useGlobalEventListener(document, 'keydown', handleDocumentKeydown, {
        capture: true
    });
    return /*#__PURE__*/ React.createElement(RootComponent, Tabs_object_spread_props(Tabs_object_spread({}, restProps), {
        baseClassName: classNames("vkuiTabs", 'vkuiInternalTabs', platform === 'vkcom' && 'vkuiInternalTabs--vkcom', withGaps && classNames("vkuiTabs--withGaps", 'vkuiInternalTabs--withGaps'), mode === 'default' && "vkuiTabs--mode-default"),
        role: role
    }), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiTabs__in",
        ref: tabsRef
    }, /*#__PURE__*/ React.createElement(Tabs_TabsModeContext.Provider, {
        value: {
            mode: mode,
            withGaps: withGaps,
            layoutFillMode: layoutFillMode,
            withScrollToSelectedTab: withScrollToSelectedTab,
            scrollBehaviorToSelectedTab: scrollBehaviorToSelectedTab
        }
    }, children)));
};

;// CONCATENATED MODULE: ./src/components/TabsItem/TabsItem.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/TabsItem/TabsItem.tsx
function TabsItem_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function TabsItem_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            TabsItem_define_property(target, key, source[key]);
        });
    }
    return target;
}
function TabsItem_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function TabsItem_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        TabsItem_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function TabsItem_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = TabsItem_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function TabsItem_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}













var TabsItem_sizeYClassNames = {
    none: "vkuiTabsItem--sizeY-none",
    compact: "vkuiTabsItem--sizeY-compact"
};
var TabsItem_stylesMode = {
    default: "vkuiTabsItem--mode-default",
    accent: "vkuiTabsItem--mode-accent",
    secondary: "vkuiTabsItem--mode-secondary"
};
var fillModeClassNames = {
    stretched: "vkuiTabsItem--stretched",
    shrinked: "vkuiTabsItem--shrinked"
};
var TabsItem_warn = warnOnce('TabsItem');
/**
 * @see https://vkcom.github.io/VKUI/#/TabsItem
 */ var TabsItem = function(_param) {
    var before = _param.before, children = _param.children, status = _param.status, after = _param.after, _param_selected = _param.selected, selected = _param_selected === void 0 ? false : _param_selected, className = _param.className, _param_role = _param.role, role = _param_role === void 0 ? 'tab' : _param_role, tabIndexProp = _param.tabIndex, getRootRef = _param.getRootRef, _param_hoverMode = _param.hoverMode, hoverMode = _param_hoverMode === void 0 ? "vkuiTabsItem--hover" : _param_hoverMode, _param_activeMode = _param.activeMode, activeMode = _param_activeMode === void 0 ? '' : _param_activeMode, hovered = _param.hovered, activated = _param.activated, hasHover = _param.hasHover, _param_hasActive = _param.hasActive, hasActive = _param_hasActive === void 0 ? false : _param_hasActive, _param_focusVisibleMode = _param.focusVisibleMode, focusVisibleMode = _param_focusVisibleMode === void 0 ? 'inside' : _param_focusVisibleMode, restProps = TabsItem_object_without_properties(_param, [
        "before",
        "children",
        "status",
        "after",
        "selected",
        "className",
        "role",
        "tabIndex",
        "getRootRef",
        "hoverMode",
        "activeMode",
        "hovered",
        "activated",
        "hasHover",
        "hasActive",
        "focusVisibleMode"
    ]);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var _React_useContext = React.useContext(TabsModeContext), mode = _React_useContext.mode, withGaps = _React_useContext.withGaps, layoutFillMode = _React_useContext.layoutFillMode, scrollBehaviorToSelectedTab = _React_useContext.scrollBehaviorToSelectedTab, withScrollToSelectedTab = _React_useContext.withScrollToSelectedTab;
    var statusComponent = null;
    var isTabFlow = role === 'tab';
    if (hasReactNode(status)) {
        statusComponent = typeof status === 'number' ? /*#__PURE__*/ React.createElement(Subhead, {
            Component: "span",
            className: classNames("vkuiTabsItem__status", "vkuiTabsItem__status--count"),
            weight: "2"
        }, /*#__PURE__*/ React.createElement(VisuallyHidden, null, "\xa0"), status) : /*#__PURE__*/ React.createElement("span", {
            className: "vkuiTabsItem__status"
        }, /*#__PURE__*/ React.createElement(VisuallyHidden, null, "\xa0"), status);
    }
    if (false) {}
    var tabIndex = tabIndexProp;
    if (isTabFlow && tabIndex === undefined) {
        tabIndex = selected ? 0 : -1;
    }
    var rootRef = useExternRef(getRootRef);
    var prevSelected = usePrevious(selected);
    var isInitialRender = prevSelected === undefined;
    var shouldScrollToSelected = withScrollToSelectedTab && !isInitialRender && prevSelected !== selected && selected;
    var document = useDOM().document;
    React.useEffect(function scrollToSelectedItem() {
        if (!shouldScrollToSelected || !rootRef.current || !document) {
            return;
        }
        var tabDOMRect = rootRef.current.getBoundingClientRect();
        var isTabVerticallyOutsideOfViewport = tabDOMRect.top < 0 || tabDOMRect.bottom > document.documentElement.clientHeight;
        /* проверяем, возможен ли вертикальный скролл, а он возможен для scrollIntoView если
       * элемент вертикально вне зоны видимости */ if (isTabVerticallyOutsideOfViewport) {
            return;
        }
        /* Не все браузеры поддерживают используемые нами опции. */ try {
            rootRef.current.scrollIntoView({
                inline: scrollBehaviorToSelectedTab,
                block: 'nearest',
                behavior: 'smooth'
            });
        } catch (e) {
        /* Вызывать scrollIntoView с булевым аргументом не следует, потому что это повлечёт
         * вертикальный скролл.
         **/ }
    }, [
        rootRef,
        document,
        shouldScrollToSelected,
        scrollBehaviorToSelectedTab
    ]);
    return /*#__PURE__*/ React.createElement(Tappable, TabsItem_object_spread_props(TabsItem_object_spread({}, restProps), {
        getRootRef: rootRef,
        className: classNames("vkuiTabsItem", mode && TabsItem_stylesMode[mode], selected && "vkuiTabsItem--selected", sizeY !== 'regular' && TabsItem_sizeYClassNames[sizeY], withGaps && "vkuiTabsItem--withGaps", layoutFillMode !== 'auto' && fillModeClassNames[layoutFillMode], className),
        hoverMode: hoverMode,
        activeMode: activeMode,
        hasHover: hasHover,
        hasActive: hasActive,
        hovered: hovered,
        activated: activated,
        focusVisibleMode: focusVisibleMode,
        role: role,
        "aria-selected": selected,
        tabIndex: tabIndex
    }), before && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiTabsItem__before"
    }, before), /*#__PURE__*/ React.createElement(Headline, {
        Component: "span",
        className: "vkuiTabsItem__label",
        level: mode === 'default' ? '1' : '2',
        weight: "2"
    }, children), statusComponent, after && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiTabsItem__after"
    }, after), mode === 'default' && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiTabsItem__underline",
        "aria-hidden": true,
        "data-selected": selected
    }));
};

;// CONCATENATED MODULE: ./src/components/PullToRefresh/PullToRefresh.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/PullToRefresh/PullToRefreshSpinner.tsx
function PullToRefreshSpinner_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function PullToRefreshSpinner_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            PullToRefreshSpinner_define_property(target, key, source[key]);
        });
    }
    return target;
}
function PullToRefreshSpinner_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = PullToRefreshSpinner_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function PullToRefreshSpinner_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




function calcStrokeDashOffset(value, radius) {
    var progress = value / 100;
    return 2 * Math.PI * radius * (1 - progress);
}
var PullToRefreshSpinner_PullToRefreshSpinner = function(_param) {
    var _param_on = _param.on, on = _param_on === void 0 ? true : _param_on, _param_size = _param.size, size = _param_size === void 0 ? 24 : _param_size, _param_strokeWidth = _param.strokeWidth, strokeWidth = _param_strokeWidth === void 0 ? 2.5 : _param_strokeWidth, _param_progress = _param.progress, progress = _param_progress === void 0 ? 0 : _param_progress, _param_children = _param.children, children = _param_children === void 0 ? 'Пожалуйста, подождите...' : _param_children, restProps = PullToRefreshSpinner_object_without_properties(_param, [
        "on",
        "size",
        "strokeWidth",
        "progress",
        "children"
    ]);
    var radius = 0.5 * size - 0.5 * strokeWidth;
    var dasharray = 2 * Math.PI * radius;
    var circleCenter = 0.5 * size;
    var dashoffset = calcStrokeDashOffset(on ? 80 : progress, radius);
    return /*#__PURE__*/ React.createElement(RootComponent, PullToRefreshSpinner_object_spread({
        baseClassName: classNames("vkuiPullToRefresh__spinner", on && "vkuiPullToRefresh__spinner--on")
    }, restProps), on && /*#__PURE__*/ React.createElement(VisuallyHidden, null, children), /*#__PURE__*/ React.createElement("svg", {
        role: "presentation",
        className: "vkuiPullToRefresh__spinner-self",
        style: {
            width: size,
            height: size
        },
        viewBox: "0 0 ".concat(size, " ").concat(size),
        xmlns: "http://www.w3.org/2000/svg"
    }, /*#__PURE__*/ React.createElement("g", {
        style: {
            width: size,
            height: size,
            transformOrigin: "".concat(circleCenter, "px ").concat(circleCenter, "px")
        }
    }, /*#__PURE__*/ React.createElement("circle", {
        className: "vkuiPullToRefresh__spinner-path",
        fill: "none",
        strokeDasharray: dasharray,
        strokeDashoffset: dashoffset,
        strokeWidth: strokeWidth,
        strokeLinecap: "round",
        cx: circleCenter,
        cy: circleCenter,
        r: radius
    }))));
};

;// CONCATENATED MODULE: ./src/components/PullToRefresh/PullToRefresh.tsx
function PullToRefresh_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function PullToRefresh_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function PullToRefresh_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function PullToRefresh_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function PullToRefresh_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function PullToRefresh_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            PullToRefresh_define_property(target, key, source[key]);
        });
    }
    return target;
}
function PullToRefresh_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function PullToRefresh_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        PullToRefresh_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function PullToRefresh_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = PullToRefresh_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function PullToRefresh_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function PullToRefresh_sliced_to_array(arr, i) {
    return PullToRefresh_array_with_holes(arr) || PullToRefresh_iterable_to_array_limit(arr, i) || PullToRefresh_unsupported_iterable_to_array(arr, i) || PullToRefresh_non_iterable_rest();
}
function PullToRefresh_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return PullToRefresh_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return PullToRefresh_array_like_to_array(o, minLen);
}













var WAIT_FETCHING_TIMEOUT_MS = 1000;
function cancelEvent(event) {
    /* istanbul ignore if: неясно в какой ситуации `event` из `Touch` может быть не определён */ if (!event) {
        return false;
    }
    if ('preventDefault' in event.originalEvent && event.originalEvent.cancelable) {
        event.originalEvent.preventDefault();
    }
    if ('stopPropagation' in event.originalEvent) {
        event.originalEvent.stopPropagation();
    }
    return false;
}
/**
 * @see https://vkcom.github.io/VKUI/#/PullToRefresh
 */ var PullToRefresh = function(_param) {
    var children = _param.children, isFetching = _param.isFetching, onRefresh = _param.onRefresh, className = _param.className, restProps = PullToRefresh_object_without_properties(_param, [
        "children",
        "isFetching",
        "onRefresh",
        "className"
    ]);
    var platform = usePlatform();
    var scroll = useScroll();
    var window = useDOM().window;
    var prevIsFetching = usePrevious(isFetching);
    var initParams = React.useMemo(function() {
        return {
            start: platform === 'ios' ? -10 : -45,
            max: platform === 'ios' ? 50 : 80,
            maxY: platform === 'ios' ? 400 : 80,
            refreshing: platform === 'ios' ? 36 : 50,
            positionMultiplier: platform === 'ios' ? 0.21 : 1
        };
    }, [
        platform
    ]);
    var _React_useState = PullToRefresh_sliced_to_array(React.useState(initParams.start), 2), spinnerY = _React_useState[0], setSpinnerY = _React_useState[1];
    var _React_useState1 = PullToRefresh_sliced_to_array(React.useState(false), 2), watching = _React_useState1[0], setWatching = _React_useState1[1];
    var _React_useState2 = PullToRefresh_sliced_to_array(React.useState(false), 2), refreshing = _React_useState2[0], setRefreshing = _React_useState2[1];
    var _React_useState3 = PullToRefresh_sliced_to_array(React.useState(false), 2), canRefresh = _React_useState3[0], setCanRefresh = _React_useState3[1];
    var _React_useState4 = PullToRefresh_sliced_to_array(React.useState(false), 2), touchDown = _React_useState4[0], setTouchDown = _React_useState4[1];
    var prevTouchDown = usePrevious(touchDown);
    var touchY = React.useRef(0);
    var _React_useState5 = PullToRefresh_sliced_to_array(React.useState(0), 2), contentShift = _React_useState5[0], setContentShift = _React_useState5[1];
    var _React_useState6 = PullToRefresh_sliced_to_array(React.useState(0), 2), spinnerProgress = _React_useState6[0], setSpinnerProgress = _React_useState6[1];
    var resetRefreshingState = React.useCallback(function() {
        setWatching(false);
        setCanRefresh(false);
        setRefreshing(false);
        setSpinnerY(initParams.start);
        setSpinnerProgress(0);
        setContentShift(0);
    }, [
        initParams
    ]);
    var onRefreshingFinish = React.useCallback(function() {
        if (!touchDown) {
            resetRefreshingState();
        }
    }, [
        touchDown,
        resetRefreshingState
    ]);
    var waitFetchingTimeoutId = React.useRef();
    useIsomorphicLayoutEffect(function() {
        if (prevIsFetching !== undefined && prevIsFetching && !isFetching) {
            onRefreshingFinish();
        }
    }, [
        prevIsFetching,
        isFetching,
        onRefreshingFinish
    ]);
    useIsomorphicLayoutEffect(function() {
        if (prevIsFetching !== undefined && !prevIsFetching && isFetching) {
            clearTimeout(waitFetchingTimeoutId.current);
        }
    }, [
        isFetching,
        prevIsFetching
    ]);
    var runRefreshing = React.useCallback(function() {
        if (!refreshing && onRefresh) {
            // cleanup if the consumer does not start fetching in 1s
            clearTimeout(waitFetchingTimeoutId.current);
            waitFetchingTimeoutId.current = setTimeout(onRefreshingFinish, WAIT_FETCHING_TIMEOUT_MS);
            setRefreshing(true);
            setSpinnerY(function(prevSpinnerY) {
                return platform === 'ios' ? prevSpinnerY : initParams.refreshing;
            });
            onRefresh();
        }
    }, [
        refreshing,
        onRefresh,
        onRefreshingFinish,
        platform,
        initParams.refreshing
    ]);
    useIsomorphicLayoutEffect(function() {
        if (prevTouchDown !== undefined && prevTouchDown && !touchDown) {
            if (!refreshing && canRefresh) {
                runRefreshing();
            } else if (refreshing && !isFetching) {
                // only iOS can start refresh before gesture end
                resetRefreshingState();
            /* istanbul ignore if: TODO написать тест */ } else {
                // refreshing && isFetching: refresh in progress
                // OR !refreshing && !canRefresh: pull was not strong enough
                setSpinnerY(refreshing ? initParams.refreshing : initParams.start);
                setSpinnerProgress(0);
                setContentShift(0);
            }
        }
    }, [
        initParams,
        prevIsFetching,
        isFetching,
        onRefreshingFinish,
        prevTouchDown,
        touchDown,
        refreshing,
        canRefresh,
        runRefreshing
    ]);
    useIsomorphicLayoutEffect(function toggleDocumentOverscrollBehavior() {
        return window && (watching || refreshing) ? initializeBrowserGesturePreventionEffect(window) : undefined;
    }, [
        window,
        watching,
        refreshing
    ]);
    var startYRef = React.useRef(0);
    var onTouchStart = function(event) {
        if (refreshing) {
            cancelEvent(event);
            return;
        }
        setTouchDown(true);
        startYRef.current = event.startY;
    };
    var iosRefreshStartedRef = React.useRef(false);
    var onTouchMove = function(event) {
        var isY = event.isY, shiftY = event.shiftY;
        var start = initParams.start, max = initParams.max;
        var pageYOffset = scroll === null || scroll === void 0 ? void 0 : scroll.getScroll().y;
        if (watching && touchDown) {
            cancelEvent(event);
            var positionMultiplier = initParams.positionMultiplier, maxY = initParams.maxY;
            var shift = Math.max(0, shiftY - touchY.current);
            var currentY = clamp(start + shift * positionMultiplier, start, maxY);
            var progress = currentY > -10 ? Math.abs((currentY + 10) / max) * 80 : 0;
            setSpinnerY(currentY);
            setSpinnerProgress(clamp(progress, 0, 80));
            setCanRefresh(progress > 80);
            setContentShift((currentY + 10) * 2.3);
            var iosCanStartRefreshDuringGesture = platform === 'ios' && progress > 85 && !refreshing && !iosRefreshStartedRef.current;
            if (iosCanStartRefreshDuringGesture) {
                iosRefreshStartedRef.current = true;
                runRefreshing();
            }
        } else if (isY && pageYOffset === 0 && shiftY > 0 && !refreshing && touchDown) {
            cancelEvent(event);
            touchY.current = shiftY;
            setWatching(true);
            setSpinnerY(start);
            setSpinnerProgress(0);
        }
    };
    var onTouchEnd = function() {
        setWatching(false);
        setTouchDown(false);
        iosRefreshStartedRef.current = false;
    };
    var spinnerTransform = "translate3d(0, ".concat(spinnerY, "px, 0)");
    var contentTransform = '';
    if (platform === 'ios' && refreshing && !touchDown) {
        contentTransform = 'translate3d(0, 100px, 0)';
    } else if (platform === 'ios' && (contentShift || refreshing)) {
        contentTransform = "translate3d(0, ".concat(contentShift, "px, 0)");
    }
    return /*#__PURE__*/ React.createElement(TouchRootContext.Provider, {
        value: true
    }, /*#__PURE__*/ React.createElement(Touch, PullToRefresh_object_spread_props(PullToRefresh_object_spread({
        "aria-live": "polite",
        "aria-busy": !!isFetching
    }, restProps), {
        onStart: onTouchStart,
        onMove: onTouchMove,
        onEnd: onTouchEnd,
        className: classNames("vkuiPullToRefresh", platform === 'ios' && "vkuiPullToRefresh--ios", watching && "vkuiPullToRefresh--watching", refreshing && "vkuiPullToRefresh--refreshing", className)
    }), /*#__PURE__*/ React.createElement(FixedLayout, {
        className: "vkuiPullToRefresh__controls",
        useParentWidth: true
    }, /*#__PURE__*/ React.createElement(PullToRefreshSpinner, {
        style: {
            transform: spinnerTransform,
            opacity: watching || refreshing || canRefresh ? 1 : 0
        },
        on: refreshing,
        progress: refreshing ? undefined : spinnerProgress
    })), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiPullToRefresh__content",
        style: {
            transform: contentTransform
        }
    }, children)));
};

;// CONCATENATED MODULE: ./src/components/Link/Link.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Link/Link.tsx
function Link_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Link_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Link_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Link_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Link_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Link_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Link_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Link_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Link_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



/**
 * @see https://vkcom.github.io/VKUI/#/Link
 */ var Link = function(_param) {
    var hasVisited = _param.hasVisited, children = _param.children, className = _param.className, restProps = Link_object_without_properties(_param, [
        "hasVisited",
        "children",
        "className"
    ]);
    return /*#__PURE__*/ React.createElement(Tappable, Link_object_spread_props(Link_object_spread({
        Component: restProps.href ? 'a' : 'button'
    }, restProps), {
        className: classNames("vkuiLink", hasVisited && "vkuiLink--has-visited", className),
        hasHover: false,
        activeMode: "opacity",
        hoverMode: "none",
        focusVisibleMode: "outside"
    }), children);
};

;// CONCATENATED MODULE: ./src/components/Mark/Mark.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Mark/Mark.tsx
function Mark_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Mark_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Mark_define_property(target, key, source[key]);
        });
    }
    return target;
}



/**
 * Компонент используется для выделения фрагментов текста,
 * например при поиске определенных слов или выделения текста в цитате.
 *
 * @since 6.1.0
 * @see https://vkcom.github.io/VKUI/#/Mark
 */ var Mark = function(props) {
    return /*#__PURE__*/ React.createElement(RootComponent, Mark_object_spread({
        baseClassName: "vkuiMark",
        Component: "mark"
    }, props));
};

;// CONCATENATED MODULE: ./src/components/OnboardingTooltip/OnboardingTooltip.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/OnboardingTooltip/OnboardingTooltip.tsx
function OnboardingTooltip_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function OnboardingTooltip_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function OnboardingTooltip_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function OnboardingTooltip_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function OnboardingTooltip_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function OnboardingTooltip_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            OnboardingTooltip_define_property(target, key, source[key]);
        });
    }
    return target;
}
function OnboardingTooltip_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function OnboardingTooltip_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        OnboardingTooltip_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function OnboardingTooltip_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = OnboardingTooltip_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function OnboardingTooltip_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function OnboardingTooltip_sliced_to_array(arr, i) {
    return OnboardingTooltip_array_with_holes(arr) || OnboardingTooltip_iterable_to_array_limit(arr, i) || OnboardingTooltip_unsupported_iterable_to_array(arr, i) || OnboardingTooltip_non_iterable_rest();
}
function OnboardingTooltip_type_of(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}
function OnboardingTooltip_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return OnboardingTooltip_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return OnboardingTooltip_array_like_to_array(o, minLen);
}













var OnboardingTooltip_warn = warnOnce('OnboardingTooltip');
/**
 * @see https://vkcom.github.io/VKUI/#/Tooltip
 */ var OnboardingTooltip = function(_param) {
    var idProp = _param.id, children = _param.children, tmp = _param.shown, shownProp = tmp === void 0 ? true : tmp, _param_arrowPadding = _param.arrowPadding, arrowPadding = _param_arrowPadding === void 0 ? DEFAULT_ARROW_PADDING : _param_arrowPadding, _param_arrowHeight = _param.arrowHeight, arrowHeight = _param_arrowHeight === void 0 ? DEFAULT_ARROW_HEIGHT : _param_arrowHeight, _param_offsetByMainAxis = _param.offsetByMainAxis, offsetByMainAxis = _param_offsetByMainAxis === void 0 ? 0 : _param_offsetByMainAxis, _param_offsetByCrossAxis = _param.offsetByCrossAxis, offsetByCrossAxis = _param_offsetByCrossAxis === void 0 ? 0 : _param_offsetByCrossAxis, _param_arrowOffset = _param.arrowOffset, arrowOffset = _param_arrowOffset === void 0 ? 0 : _param_arrowOffset, _param_isStaticArrowOffset = _param.isStaticArrowOffset, isStaticArrowOffset = _param_isStaticArrowOffset === void 0 ? false : _param_isStaticArrowOffset, onClose = _param.onClose, tmp1 = _param.placement, placementProp = tmp1 === void 0 ? 'bottom-start' : tmp1, _param_maxWidth = _param.maxWidth, maxWidth = _param_maxWidth === void 0 ? TOOLTIP_MAX_WIDTH : _param_maxWidth, styleProp = _param.style, getRootRef = _param.getRootRef, _param_disableArrow = _param.disableArrow, disableArrow = _param_disableArrow === void 0 ? false : _param_disableArrow, onPlacementChange = _param.onPlacementChange, _param_disableFlipMiddleware = _param.disableFlipMiddleware, disableFlipMiddleware = _param_disableFlipMiddleware === void 0 ? false : _param_disableFlipMiddleware, restProps = OnboardingTooltip_object_without_properties(_param, [
        "id",
        "children",
        "shown",
        "arrowPadding",
        "arrowHeight",
        "offsetByMainAxis",
        "offsetByCrossAxis",
        "arrowOffset",
        "isStaticArrowOffset",
        "onClose",
        "placement",
        "maxWidth",
        "style",
        "getRootRef",
        "disableArrow",
        "onPlacementChange",
        "disableFlipMiddleware"
    ]);
    var generatedId = React.useId();
    var tooltipId = idProp || generatedId;
    var entering = useNavTransition().entering;
    var _React_useState = OnboardingTooltip_sliced_to_array(React.useState(null), 2), arrowRef = _React_useState[0], setArrowRef = _React_useState[1];
    var _React_useState1 = OnboardingTooltip_sliced_to_array(React.useState(null), 2), tooltipContainer = _React_useState1[0], setTooltipContainer = _React_useState1[1];
    var _React_useState2 = OnboardingTooltip_sliced_to_array(React.useState('absolute'), 2), positionStrategy = _React_useState2[0], setPositionStrategy = _React_useState2[1];
    var shown = shownProp && tooltipContainer && !entering;
    var _useFloatingMiddlewaresBootstrap = useFloatingMiddlewaresBootstrap({
        placement: placementProp,
        offsetByMainAxis: offsetByMainAxis,
        offsetByCrossAxis: offsetByCrossAxis,
        arrowRef: arrowRef,
        arrow: !disableArrow,
        arrowHeight: arrowHeight,
        arrowPadding: arrowPadding,
        disableFlipMiddleware: disableFlipMiddleware
    }), middlewares = _useFloatingMiddlewaresBootstrap.middlewares, strictPlacement = _useFloatingMiddlewaresBootstrap.strictPlacement;
    var _useFloating = useFloating({
        strategy: positionStrategy,
        placement: strictPlacement,
        middleware: middlewares,
        whileElementsMounted: autoUpdateFloatingElement
    }), floatingDataX = _useFloating.x, floatingDataY = _useFloating.y, refs = _useFloating.refs, resolvedPlacement = _useFloating.placement, _useFloating_middlewareData = _useFloating.middlewareData, arrowCoords = _useFloating_middlewareData.arrow;
    var tooltipRef = useExternRef(getRootRef, refs.setFloating);
    var _usePatchChildren = OnboardingTooltip_sliced_to_array(usePatchChildren(children, {
        'aria-describedby': shown ? tooltipId : undefined
    }), 2), childRef = _usePatchChildren[0], child = _usePatchChildren[1];
    usePlacementChangeCallback(placementProp, resolvedPlacement, onPlacementChange);
    var tooltip = null;
    if (shown) {
        var floatingStyle = convertFloatingDataToReactCSSProperties(positionStrategy, floatingDataX, floatingDataY);
        if (styleProp) {
            Object.assign(floatingStyle, styleProp);
        }
        tooltip = createPortal(/*#__PURE__*/ React.createElement(React.Fragment, null, /*#__PURE__*/ React.createElement(TooltipBase, OnboardingTooltip_object_spread_props(OnboardingTooltip_object_spread({}, restProps), {
            id: tooltipId,
            getRootRef: tooltipRef,
            style: floatingStyle,
            maxWidth: maxWidth,
            arrowProps: disableArrow ? undefined : {
                offset: arrowOffset,
                isStaticOffset: isStaticArrowOffset,
                coords: arrowCoords,
                placement: resolvedPlacement,
                getRootRef: setArrowRef
            }
        })), /*#__PURE__*/ React.createElement("div", {
            className: "vkuiOnboardingTooltip__overlay",
            onClickCapture: onClose
        })), tooltipContainer);
    }
    useIsomorphicLayoutEffect(function initialize() {
        var referenceEl = childRef.current;
        if (referenceEl) {
            setTooltipContainer(referenceEl.closest("[".concat(onboardingTooltipContainerAttr, "]")));
            setPositionStrategy(referenceEl.style.position === 'fixed' ? 'fixed' : 'absolute');
            refs.setReference(referenceEl);
        }
    }, [
        childRef
    ]);
    if (false) { var primitiveChild, multiChildren; }
    return /*#__PURE__*/ React.createElement(React.Fragment, null, child, tooltip);
};

;// CONCATENATED MODULE: ./src/components/Counter/Counter.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Counter/Counter.tsx
function Counter_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Counter_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Counter_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Counter_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Counter_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Counter_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Counter_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Counter_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Counter_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





var Counter_modeClassNames = {
    secondary: "vkuiCounter--mode-secondary",
    primary: "vkuiCounter--mode-primary",
    prominent: "vkuiCounter--mode-prominent",
    contrast: "vkuiCounter--mode-contrast",
    inherit: "vkuiCounter--mode-inherit"
};
var Counter_sizeClassNames = {
    s: "vkuiCounter--size-s",
    m: "vkuiCounter--size-m"
};
/**
 * @see https://vkcom.github.io/VKUI/#/Counter
 */ var Counter_Counter = function(_param) {
    var _param_mode = _param.mode, mode = _param_mode === void 0 ? 'inherit' : _param_mode, _param_size = _param.size, size = _param_size === void 0 ? 'm' : _param_size, children = _param.children, className = _param.className, restProps = Counter_object_without_properties(_param, [
        "mode",
        "size",
        "children",
        "className"
    ]);
    if (React.Children.count(children) === 0) {
        return null;
    }
    var CounterTypography = size === 's' ? Caption : Headline;
    var counterLevel = size === 's' ? '1' : '2';
    return /*#__PURE__*/ React.createElement(CounterTypography, Counter_object_spread_props(Counter_object_spread({}, restProps), {
        Component: "span",
        className: classNames('vkuiInternalCounter', "vkuiCounter", Counter_modeClassNames[mode], Counter_sizeClassNames[size], className),
        level: counterLevel
    }), children);
};

;// CONCATENATED MODULE: ./src/components/UsersStack/UsersStack.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/UsersStack/UsersStack.tsx
function UsersStack_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function UsersStack_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            UsersStack_define_property(target, key, source[key]);
        });
    }
    return target;
}
function UsersStack_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function UsersStack_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        UsersStack_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function UsersStack_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = UsersStack_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function UsersStack_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function UsersStack_type_of(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}






var UsersStack_stylesSize = {
    s: "vkuiUsersStack--size-s",
    m: "vkuiUsersStack--size-m",
    l: "vkuiUsersStack--size-l"
};
var UsersStack_stylesDirection = {
    'row': "vkuiUsersStack--direction-row",
    'row-reverse': "vkuiUsersStack--direction-row-reverse",
    'column': "vkuiUsersStack--direction-column"
};
function PathElement(_param) {
    var photoSize = _param.photoSize, direction = _param.direction, props = UsersStack_object_without_properties(_param, [
        "photoSize",
        "direction"
    ]);
    switch(direction){
        case 'circle':
            var radius = photoSize / 2;
            return /*#__PURE__*/ React.createElement("circle", UsersStack_object_spread({
                cx: radius,
                cy: radius,
                r: radius
            }, props));
        case 'right':
            switch(photoSize){
                case 24:
                    return /*#__PURE__*/ React.createElement("path", UsersStack_object_spread({
                        d: "M22,18.625A12 12 0 0 1 12 24A12 12 0 0 1 12 0A12 12 0 0 1 22 5.375A12 12 0 0 0 22,18.625"
                    }, props));
                default:
                    return /*#__PURE__*/ React.createElement("path", UsersStack_object_spread({
                        d: "M30,23.75A16 16 0 0 1 16 32A16 16 0 0 1 16 0A16 16 0 0 1 30 8.25A16 16 0 0 0 30,23.75"
                    }, props));
            }
        default:
            switch(photoSize){
                case 16:
                    return /*#__PURE__*/ React.createElement("path", UsersStack_object_spread({
                        d: "M2,13.285A8 8 0 0 0 8 16A8 8 0 0 0 8 0A8 8 0 0 0 2 2.715A8 8 0 0 1 2,13.285"
                    }, props));
                case 24:
                    return /*#__PURE__*/ React.createElement("path", UsersStack_object_spread({
                        d: "M2,18.625A12 12 0 0 0 12 24A12 12 0 0 0 12 0A12 12 0 0 0 2 5.375A12 12 0 0 1 2,18.625"
                    }, props));
                default:
                    return /*#__PURE__*/ React.createElement("path", UsersStack_object_spread({
                        d: "M2,23.75A16 16 0 0 0 16 32A16 16 0 0 0 16 0A16 16 0 0 0 2 8.25A16 16 0 0 1 2,23.75"
                    }, props));
            }
    }
}
var photoSizes = {
    s: 16,
    m: 24,
    l: 32
};
/**
 * @see https://vkcom.github.io/VKUI/#/UsersStack
 */ var UsersStack = function(_param) {
    var _param_photos = _param.photos, photos = _param_photos === void 0 ? [] : _param_photos, _param_visibleCount = _param.visibleCount, visibleCount = _param_visibleCount === void 0 ? 3 : _param_visibleCount, _param_count = _param.count, count = _param_count === void 0 ? Math.max(0, photos.length - visibleCount) : _param_count, _param_size = _param.size, size = _param_size === void 0 ? 'm' : _param_size, children = _param.children, _param_direction = _param.direction, direction = _param_direction === void 0 ? 'row' : _param_direction, restProps = UsersStack_object_without_properties(_param, [
        "photos",
        "visibleCount",
        "count",
        "size",
        "children",
        "direction"
    ]);
    var cmpId = React.useId();
    var canShowOthers = count > 0 && count < 100 && size !== 's';
    var CounterTypography = size === 'l' ? Footnote : Caption;
    var photoSize = photoSizes[size];
    var directionClip = canShowOthers ? 'right' : 'left';
    var photosElements = photos.slice(0, visibleCount).map(function(photo, i) {
        var direction = i === 0 && !canShowOthers ? 'circle' : directionClip;
        var id = "UsersStackDefs".concat(cmpId).concat(i);
        var hrefID = "#".concat(id);
        var maskID = "UsersStackMask".concat(cmpId).concat(i);
        var isPhotoType = (typeof photo === "undefined" ? "undefined" : UsersStack_type_of(photo)) === 'object';
        var photoSrc = isPhotoType ? photo.src : photo;
        var photoElement = /*#__PURE__*/ React.createElement("svg", {
            xmlns: "http://www.w3.org/2000/svg",
            className: "vkuiUsersStack__photo",
            "aria-hidden": true,
            display: "block"
        }, /*#__PURE__*/ React.createElement("defs", null, /*#__PURE__*/ React.createElement(PathElement, {
            id: id,
            direction: direction,
            photoSize: photoSize
        })), /*#__PURE__*/ React.createElement("clipPath", {
            id: maskID
        }, /*#__PURE__*/ React.createElement("use", {
            href: hrefID
        })), /*#__PURE__*/ React.createElement("g", {
            clipPath: "url(#".concat(maskID, ")")
        }, /*#__PURE__*/ React.createElement("use", {
            href: hrefID,
            className: "vkuiUsersStack__fill"
        }), /*#__PURE__*/ React.createElement("image", {
            href: photoSrc,
            width: photoSize,
            height: photoSize
        }), /*#__PURE__*/ React.createElement("use", {
            href: hrefID,
            fill: "none",
            stroke: "rgba(0, 0, 0, 0.08)"
        })));
        if (isPhotoType && photo.renderWrapper) {
            photoElement = photo.renderWrapper({
                'children': photoElement,
                'data-src': photoSrc
            });
        }
        return /*#__PURE__*/ React.createElement("div", {
            className: "vkuiUsersStack__photoWrapper",
            key: i
        }, photoElement);
    });
    var othersElement = canShowOthers ? /*#__PURE__*/ React.createElement("div", {
        className: "vkuiUsersStack__photoWrapper"
    }, /*#__PURE__*/ React.createElement(CounterTypography, {
        caps: true,
        weight: "1",
        className: classNames("vkuiUsersStack__photo", "vkuiUsersStack__photo--others")
    }, "+", count)) : null;
    return /*#__PURE__*/ React.createElement(RootComponent, UsersStack_object_spread_props(UsersStack_object_spread({}, restProps), {
        baseClassName: classNames("vkuiUsersStack", UsersStack_stylesSize[size], UsersStack_stylesDirection[direction])
    }), (photosElements.length > 0 || othersElement) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiUsersStack__photos",
        "aria-hidden": true
    }, photosElements, othersElement), hasReactNode(children) && /*#__PURE__*/ React.createElement(Footnote, {
        className: "vkuiUsersStack__text"
    }, children));
};

;// CONCATENATED MODULE: ./src/components/Placeholder/Placeholder.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Placeholder/Placeholder.tsx
function Placeholder_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Placeholder_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Placeholder_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Placeholder_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Placeholder_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Placeholder_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






var PlaceholderContainer = function(_param) {
    var stretched = _param.stretched, _param_noPadding = _param.noPadding, noPadding = _param_noPadding === void 0 ? false : _param_noPadding, restProps = Placeholder_object_without_properties(_param, [
        "stretched",
        "noPadding"
    ]);
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, Placeholder_object_spread({
        baseClassName: clsx("vkuiPlaceholder", stretched && "vkuiPlaceholder--stretched", !noPadding && "vkuiPlaceholder--withPadding")
    }, restProps));
};
var PlaceholderIcon = function(props) {
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, Placeholder_object_spread({
        baseClassName: "vkuiPlaceholder__icon"
    }, props));
};
var PlaceholderHeader = function(_param) {
    var className = _param.className, restProps = Placeholder_object_without_properties(_param, [
        "className"
    ]);
    return /*#__PURE__*/ react.createElement(Title_Title, Placeholder_object_spread({
        level: "2",
        weight: "2",
        className: clsx(className, "vkuiPlaceholder__header")
    }, restProps));
};
var PlaceholderText = function(_param) {
    var className = _param.className, restProps = Placeholder_object_without_properties(_param, [
        "className"
    ]);
    return /*#__PURE__*/ react.createElement(Headline_Headline, Placeholder_object_spread({
        weight: "3",
        className: clsx(className, "vkuiPlaceholder__text")
    }, restProps));
};
var PlaceholderActions = function(props) {
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, Placeholder_object_spread({
        baseClassName: "vkuiPlaceholder__action"
    }, props));
};
/**
 * @see https://vkcom.github.io/VKUI/#/Placeholder
 */ var Placeholder = function(_param) {
    var icon = _param.icon, header = _param.header, children = _param.children, action = _param.action, _param_noPadding = _param.noPadding, noPadding = _param_noPadding === void 0 ? false : _param_noPadding, restProps = Placeholder_object_without_properties(_param, [
        "icon",
        "header",
        "children",
        "action",
        "noPadding"
    ]);
    return /*#__PURE__*/ react.createElement(PlaceholderContainer, Placeholder_object_spread({
        noPadding: noPadding
    }, restProps), react_utils_hasReactNode(icon) && /*#__PURE__*/ react.createElement(PlaceholderIcon, null, icon), react_utils_hasReactNode(header) && /*#__PURE__*/ react.createElement(PlaceholderHeader, null, header), react_utils_hasReactNode(children) && /*#__PURE__*/ react.createElement(PlaceholderText, null, children), react_utils_hasReactNode(action) && /*#__PURE__*/ react.createElement(PlaceholderActions, null, action));
};
Placeholder.Container = PlaceholderContainer;
Placeholder.Icon = PlaceholderIcon;
Placeholder.Header = PlaceholderHeader;
Placeholder.Text = PlaceholderText;
Placeholder.Actions = PlaceholderActions;

;// CONCATENATED MODULE: ./src/components/Banner/Banner.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Banner/Banner.tsx
function Banner_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Banner_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Banner_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Banner_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Banner_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Banner_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Banner_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Banner_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Banner_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}












/**
 * @see https://vkcom.github.io/VKUI/#/Banner
 */ var Banner_Banner = function(_param) {
    var _param_mode = _param.mode, mode = _param_mode === void 0 ? 'tint' : _param_mode, _param_imageTheme = _param.imageTheme, imageTheme = _param_imageTheme === void 0 ? 'dark' : _param_imageTheme, _param_size = _param.size, size = _param_size === void 0 ? 's' : _param_size, before = _param.before, asideMode = _param.asideMode, header = _param.header, subheader = _param.subheader, text = _param.text, children = _param.children, background = _param.background, actions = _param.actions, onDismiss = _param.onDismiss, _param_dismissLabel = _param.dismissLabel, dismissLabel = _param_dismissLabel === void 0 ? 'Скрыть' : _param_dismissLabel, restProps = Banner_object_without_properties(_param, [
        "mode",
        "imageTheme",
        "size",
        "before",
        "asideMode",
        "header",
        "subheader",
        "text",
        "children",
        "background",
        "actions",
        "onDismiss",
        "dismissLabel"
    ]);
    var platform = usePlatform();
    var HeaderTypography = size === 'm' ? Title : Headline;
    var SubheaderTypography = size === 'm' ? Text : Subhead;
    var IconDismissIOS = mode === 'image' ? Icon24DismissDark : Icon24Dismiss;
    var content = /*#__PURE__*/ React.createElement(React.Fragment, null, mode === 'image' && background && /*#__PURE__*/ React.createElement("div", {
        "aria-hidden": true,
        className: "vkuiBanner__bg"
    }, background), before && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiBanner__before"
    }, before), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiBanner__content"
    }, hasReactNode(header) && /*#__PURE__*/ React.createElement(HeaderTypography, {
        Component: "div",
        weight: "2",
        level: size === 'm' ? '2' : '1'
    }, header), hasReactNode(subheader) && /*#__PURE__*/ React.createElement(SubheaderTypography, {
        Component: "div",
        className: "vkuiBanner__subheader"
    }, subheader), hasReactNode(text) && /*#__PURE__*/ React.createElement(Text, {
        Component: "div",
        className: "vkuiBanner__text"
    }, text), hasReactNode(actions) && React.Children.count(actions) > 0 && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiBanner__actions"
    }, actions)));
    return /*#__PURE__*/ React.createElement(RootComponent, Banner_object_spread_props(Banner_object_spread({
        Component: "section"
    }, restProps), {
        baseClassName: classNames("vkuiBanner", platform === 'ios' && "vkuiBanner--ios", mode === 'image' && "vkuiBanner--mode-image", size === 'm' && "vkuiBanner--size-m", mode === 'image' && imageTheme === 'dark' && "vkuiBanner--inverted")
    }), asideMode === 'expand' ? /*#__PURE__*/ React.createElement(Tappable, {
        className: "vkuiBanner__in",
        activeMode: platform === 'ios' ? 'opacity' : 'background',
        onClick: noop
    }, content, /*#__PURE__*/ React.createElement("div", {
        className: "vkuiBanner__aside"
    }, /*#__PURE__*/ React.createElement(Icon24Chevron, {
        className: "vkuiBanner__expand"
    }))) : /*#__PURE__*/ React.createElement("div", {
        className: "vkuiBanner__in"
    }, content, asideMode === 'dismiss' && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiBanner__aside"
    }, /*#__PURE__*/ React.createElement(IconButton, {
        label: dismissLabel,
        className: "vkuiBanner__dismiss",
        onClick: onDismiss,
        hoverMode: "opacity",
        hasActive: false
    }, platform === 'ios' ? /*#__PURE__*/ React.createElement(IconDismissIOS, null) : /*#__PURE__*/ React.createElement(Icon24Cancel, null)))));
};

;// CONCATENATED MODULE: ./src/components/MiniInfoCell/MiniInfoCell.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/MiniInfoCell/MiniInfoCell.tsx
function MiniInfoCell_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function MiniInfoCell_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            MiniInfoCell_define_property(target, key, source[key]);
        });
    }
    return target;
}
function MiniInfoCell_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function MiniInfoCell_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        MiniInfoCell_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function MiniInfoCell_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = MiniInfoCell_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function MiniInfoCell_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}







var MiniInfoCell_stylesMode = {
    add: "vkuiMiniInfoCell--mode-add",
    accent: "vkuiMiniInfoCell--mode-accent",
    more: "vkuiMiniInfoCell--mode-more"
};
var stylesTextWrap = {
    nowrap: "vkuiMiniInfoCell--textWrap-nowrap",
    full: "vkuiMiniInfoCell--textWrap-full",
    short: "vkuiMiniInfoCell--textWrap-short"
};
/**
 * @see https://vkcom.github.io/VKUI/#/MiniInfoCell
 */ var MiniInfoCell = function(_param) {
    var before = _param.before, after = _param.after, children = _param.children, _param_mode = _param.mode, mode = _param_mode === void 0 ? 'base' : _param_mode, _param_textWrap = _param.textWrap, textWrap = _param_textWrap === void 0 ? 'nowrap' : _param_textWrap, _param_expandable = _param.expandable, expandable = _param_expandable === void 0 ? false : _param_expandable, className = _param.className, restProps = MiniInfoCell_object_without_properties(_param, [
        "before",
        "after",
        "children",
        "mode",
        "textWrap",
        "expandable",
        "className"
    ]);
    var cellClasses = classNames("vkuiMiniInfoCell", stylesTextWrap[textWrap], mode !== 'base' && MiniInfoCell_stylesMode[mode], className);
    var cellContent = /*#__PURE__*/ React.createElement(React.Fragment, null, hasReactNode(before) && /*#__PURE__*/ React.createElement("span", {
        className: "vkuiMiniInfoCell__before"
    }, before), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiMiniInfoCell__middle"
    }, /*#__PURE__*/ React.createElement(Paragraph, {
        className: "vkuiMiniInfoCell__content",
        weight: mode === 'more' ? '2' : undefined
    }, children), expandable && /*#__PURE__*/ React.createElement(Icon16Chevron, null)), hasReactNode(after) && /*#__PURE__*/ React.createElement("span", {
        className: "vkuiMiniInfoCell__after"
    }, after));
    return restProps.onClick ? /*#__PURE__*/ React.createElement(Tappable, MiniInfoCell_object_spread_props(MiniInfoCell_object_spread({
        Component: "div",
        role: "button"
    }, restProps), {
        className: cellClasses
    }), cellContent) : /*#__PURE__*/ React.createElement(RootComponent, MiniInfoCell_object_spread_props(MiniInfoCell_object_spread({}, restProps), {
        baseClassName: cellClasses
    }), cellContent);
};

;// CONCATENATED MODULE: ./src/components/Textarea/useResizeTextarea.ts

function useResizeTextarea_useResizeTextarea(onResize, grow) {
    var elementRef = React.useRef(null);
    var currentScrollHeight = React.useRef();
    var resizeElement = React.useCallback(function(el) {
        if (grow && el.offsetParent) {
            el.style.height = '';
            el.style.height = "".concat(el.scrollHeight, "px");
            if (el.scrollHeight !== currentScrollHeight.current && onResize) {
                onResize(el);
                currentScrollHeight.current = el.scrollHeight;
            }
        }
    }, [
        grow,
        onResize
    ]);
    var resize = React.useCallback(function() {
        var el = elementRef.current;
        if (!el) {
            /* istanbul ignore next: нет возможности воспроизвести */ return;
        }
        resizeElement(el);
    }, [
        elementRef,
        resizeElement
    ]);
    return [
        elementRef,
        resize
    ];
}

;// CONCATENATED MODULE: ./src/components/WriteBar/WriteBar.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/WriteBar/WriteBar.tsx
function WriteBar_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function WriteBar_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function WriteBar_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function WriteBar_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function WriteBar_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function WriteBar_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            WriteBar_define_property(target, key, source[key]);
        });
    }
    return target;
}
function WriteBar_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function WriteBar_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        WriteBar_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function WriteBar_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = WriteBar_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function WriteBar_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function WriteBar_sliced_to_array(arr, i) {
    return WriteBar_array_with_holes(arr) || WriteBar_iterable_to_array_limit(arr, i) || WriteBar_unsupported_iterable_to_array(arr, i) || WriteBar_non_iterable_rest();
}
function WriteBar_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return WriteBar_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return WriteBar_array_like_to_array(o, minLen);
}









var WriteBarTypography = function(props) {
    var platform = usePlatform();
    if (platform === 'ios') {
        return /*#__PURE__*/ React.createElement(Title, WriteBar_object_spread_props(WriteBar_object_spread({}, props), {
            level: "3",
            weight: "3"
        }));
    }
    return /*#__PURE__*/ React.createElement(Headline, WriteBar_object_spread({
        weight: "3"
    }, props));
};
/**
 * @see https://vkcom.github.io/VKUI/#/WriteBar
 */ var WriteBar = function(_param) {
    var className = _param.className, style = _param.style, before = _param.before, inlineAfter = _param.inlineAfter, after = _param.after, getRootRef = _param.getRootRef, getRef = _param.getRef, onHeightChange = _param.onHeightChange, _param_shadow = _param.shadow, shadow = _param_shadow === void 0 ? false : _param_shadow, onChange = _param.onChange, restProps = WriteBar_object_without_properties(_param, [
        "className",
        "style",
        "before",
        "inlineAfter",
        "after",
        "getRootRef",
        "getRef",
        "onHeightChange",
        "shadow",
        "onChange"
    ]);
    var platform = usePlatform();
    var _useResizeTextarea = WriteBar_sliced_to_array(useResizeTextarea(onHeightChange, true), 2), refResizeTextarea = _useResizeTextarea[0], resize = _useResizeTextarea[1];
    var textareaRef = useExternRef(getRef, refResizeTextarea);
    React.useEffect(resize, [
        resize,
        platform
    ]);
    return /*#__PURE__*/ React.createElement("div", {
        ref: getRootRef,
        className: classNames("vkuiWriteBar", platform === 'ios' && "vkuiWriteBar--ios", shadow && "vkuiWriteBar--shadow", className),
        style: style
    }, /*#__PURE__*/ React.createElement("div", {
        className: "vkuiWriteBar__form"
    }, hasReactNode(before) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiWriteBar__before"
    }, before), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiWriteBar__formIn"
    }, /*#__PURE__*/ React.createElement(WriteBarTypography, WriteBar_object_spread_props(WriteBar_object_spread({}, restProps), {
        Component: "textarea",
        className: "vkuiWriteBar__textarea",
        onChange: callMultiple(onChange, resize),
        getRootRef: textareaRef
    })), hasReactNode(inlineAfter) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiWriteBar__inlineAfter"
    }, inlineAfter)), hasReactNode(after) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiWriteBar__after"
    }, after)));
};

;// CONCATENATED MODULE: ./src/components/WriteBarIcon/WriteBarIcon.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/WriteBarIcon/WriteBarIcon.tsx
function WriteBarIcon_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function WriteBarIcon_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            WriteBarIcon_define_property(target, key, source[key]);
        });
    }
    return target;
}
function WriteBarIcon_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function WriteBarIcon_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        WriteBarIcon_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function WriteBarIcon_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = WriteBarIcon_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function WriteBarIcon_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}











var predefinedLabel = {
    attach: 'Прикрепить файл',
    send: 'Отправить',
    done: 'Готово'
};
var WriteBarIcon_warn = warnOnce('WriteBarIcon');
/**
 * @see https://vkcom.github.io/VKUI/#/WriteBarIcon
 */ var WriteBarIcon = function(_param) {
    var mode = _param.mode, children = _param.children, count = _param.count, className = _param.className, labelProp = _param.label, restProps = WriteBarIcon_object_without_properties(_param, [
        "mode",
        "children",
        "count",
        "className",
        "label"
    ]);
    var platform = usePlatform();
    var predefinedIcons;
    switch(mode){
        case 'attach':
            predefinedIcons = {
                IconCompact: platform === 'ios' ? Icon28AddCircleOutline : Icon24Attach,
                IconRegular: platform === 'ios' ? Icon28AddCircleOutline : Icon28AttachOutline
            };
            break;
        case 'send':
            predefinedIcons = {
                IconCompact: platform === 'ios' ? Icon48WritebarSend : Icon24Send,
                IconRegular: platform === 'ios' ? Icon48WritebarSend : Icon28Send
            };
            break;
        case 'done':
            predefinedIcons = {
                IconCompact: platform === 'ios' ? Icon48WritebarDone : Icon24CheckCircleOutline,
                IconRegular: platform === 'ios' ? Icon48WritebarDone : Icon28CheckCircleOutline
            };
            break;
        default:
            break;
    }
    var label = labelProp !== null && labelProp !== void 0 ? labelProp : mode && predefinedLabel[mode];
    if (false) { var isAccessible; }
    return /*#__PURE__*/ React.createElement(Tappable, WriteBarIcon_object_spread_props(WriteBarIcon_object_spread({}, restProps), {
        Component: "button",
        hasHover: false,
        activeMode: "vkuiWriteBarIcon__active",
        className: classNames("vkuiWriteBarIcon", platform === 'ios' && "vkuiWriteBarIcon--ios", mode === 'send' && "vkuiWriteBarIcon--mode-send", mode === 'done' && "vkuiWriteBarIcon--mode-done", className)
    }), /*#__PURE__*/ React.createElement("span", {
        className: "vkuiWriteBarIcon__in"
    }, label && /*#__PURE__*/ React.createElement(VisuallyHidden, null, label), predefinedIcons ? /*#__PURE__*/ React.createElement(AdaptiveIconRenderer, predefinedIcons) : children), hasReactNode(count) && /*#__PURE__*/ React.createElement(Counter, {
        className: "vkuiWriteBarIcon__counter",
        size: "s"
    }, count));
};

;// CONCATENATED MODULE: ./src/components/SubnavigationBar/SubnavigationBar.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/SubnavigationBar/SubnavigationBar.tsx
function SubnavigationBar_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function SubnavigationBar_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            SubnavigationBar_define_property(target, key, source[key]);
        });
    }
    return target;
}
function SubnavigationBar_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = SubnavigationBar_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function SubnavigationBar_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





var defaultScrollToLeft = function(x) {
    return x - 240;
};
var defaultScrollToRight = function(x) {
    return x + 240;
};
/**
 * @see https://vkcom.github.io/VKUI/#/SubnavigationBar
 */ var SubnavigationBar = function(_param) {
    var _param_mode = _param.mode, mode = _param_mode === void 0 ? 'overflow' : _param_mode, children = _param.children, _param_showArrows = _param.showArrows, showArrows = _param_showArrows === void 0 ? true : _param_showArrows, _param_getScrollToLeft = _param.getScrollToLeft, getScrollToLeft = _param_getScrollToLeft === void 0 ? defaultScrollToLeft : _param_getScrollToLeft, _param_getScrollToRight = _param.getScrollToRight, getScrollToRight = _param_getScrollToRight === void 0 ? defaultScrollToRight : _param_getScrollToRight, scrollAnimationDuration = _param.scrollAnimationDuration, restProps = SubnavigationBar_object_without_properties(_param, [
        "mode",
        "children",
        "showArrows",
        "getScrollToLeft",
        "getScrollToRight",
        "scrollAnimationDuration"
    ]);
    var ScrollWrapper;
    var scrollWrapperProps = {};
    if (mode === 'fixed') {
        ScrollWrapper = 'div';
    } else {
        ScrollWrapper = HorizontalScroll;
        scrollWrapperProps = {
            showArrows: showArrows,
            getScrollToLeft: getScrollToLeft,
            getScrollToRight: getScrollToRight,
            scrollAnimationDuration: scrollAnimationDuration
        };
    }
    return /*#__PURE__*/ React.createElement(RootComponent, SubnavigationBar_object_spread({
        baseClassName: mode === 'fixed' && "vkuiSubnavigationBar--mode-fixed"
    }, restProps), /*#__PURE__*/ React.createElement(ScrollWrapper, SubnavigationBar_object_spread({
        className: "vkuiSubnavigationBar__in"
    }, scrollWrapperProps), /*#__PURE__*/ React.createElement("ul", {
        className: "vkuiSubnavigationBar__scrollIn"
    }, React.Children.map(children, function(child, idx) {
        return hasReactNode(child) ? /*#__PURE__*/ React.createElement("li", {
            key: idx,
            className: "vkuiSubnavigationBar__item"
        }, child) : null;
    }))));
};

;// CONCATENATED MODULE: ./src/components/SubnavigationButton/SubnavigationButton.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/SubnavigationButton/SubnavigationButton.tsx
function SubnavigationButton_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function SubnavigationButton_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            SubnavigationButton_define_property(target, key, source[key]);
        });
    }
    return target;
}
function SubnavigationButton_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function SubnavigationButton_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        SubnavigationButton_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function SubnavigationButton_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = SubnavigationButton_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function SubnavigationButton_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}








var appearanceStyles = {
    accent: "vkuiSubnavigationButton--appearance-accent",
    neutral: "vkuiSubnavigationButton--appearance-neutral"
};
var SubnavigationButton_modeStyles = {
    primary: "vkuiSubnavigationButton--mode-primary",
    outline: "vkuiSubnavigationButton--mode-outline",
    tertiary: "vkuiSubnavigationButton--mode-tertiary"
};
var sizeStyles = {
    s: "vkuiSubnavigationButton--size-s",
    m: "vkuiSubnavigationButton--size-m",
    l: "vkuiSubnavigationButton--size-l"
};
var SubnavigationButton_sizeYClassNames = {
    none: "vkuiSubnavigationButton--sizeY-none",
    compact: "vkuiSubnavigationButton--sizeY-compact"
};
var SubnavigationButtonTypography = function(_param) {
    var textLevel = _param.textLevel, restProps = SubnavigationButton_object_without_properties(_param, [
        "textLevel"
    ]);
    if (textLevel === '1') {
        return /*#__PURE__*/ React.createElement(Subhead, restProps);
    }
    return /*#__PURE__*/ React.createElement(Caption, SubnavigationButton_object_spread({
        level: textLevel === '2' ? '1' : '2'
    }, restProps));
};
/**
 * @see https://vkcom.github.io/VKUI/#/SubnavigationButton
 */ var SubnavigationButton = function(_param) {
    var _param_mode = _param.mode, mode = _param_mode === void 0 ? 'primary' : _param_mode, _param_appearance = _param.appearance, appearance = _param_appearance === void 0 ? 'accent' : _param_appearance, _param_size = _param.size, size = _param_size === void 0 ? 'm' : _param_size, selected = _param.selected, _param_textLevel = _param.textLevel, textLevel = _param_textLevel === void 0 ? '1' : _param_textLevel, before = _param.before, after = _param.after, expandable = _param.expandable, children = _param.children, className = _param.className, restProps = SubnavigationButton_object_without_properties(_param, [
        "mode",
        "appearance",
        "size",
        "selected",
        "textLevel",
        "before",
        "after",
        "expandable",
        "children",
        "className"
    ]);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    return /*#__PURE__*/ React.createElement(Tappable, SubnavigationButton_object_spread_props(SubnavigationButton_object_spread({}, restProps), {
        hasActive: false,
        focusVisibleMode: "outside",
        className: classNames("vkuiSubnavigationButton", sizeStyles[size], SubnavigationButton_modeStyles[mode], appearanceStyles[appearance], selected && "vkuiSubnavigationButton--selected", sizeY !== 'regular' && SubnavigationButton_sizeYClassNames[sizeY], className)
    }), /*#__PURE__*/ React.createElement("span", {
        className: "vkuiSubnavigationButton__in"
    }, before && /*#__PURE__*/ React.createElement("span", {
        className: "vkuiSubnavigationButton__before"
    }, before), /*#__PURE__*/ React.createElement(SubnavigationButtonTypography, {
        textLevel: textLevel,
        className: "vkuiSubnavigationButton__label",
        Component: "span"
    }, children), after && /*#__PURE__*/ React.createElement("span", {
        className: "vkuiSubnavigationButton__after"
    }, after), expandable && /*#__PURE__*/ React.createElement(Icon16Dropdown, {
        className: "vkuiSubnavigationButton__expandableIcon"
    })));
};

;// CONCATENATED MODULE: ./src/helpers/range.ts
/**
 * Генерирует массив с диапазоном чисел.
 */ function range_range(from, to) {
    var step = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
    var direction = from < to ? 1 : -1;
    var distance = Math.abs(from - to) + 1;
    var arrayLength = Math.ceil(distance / step);
    var arr = Array(arrayLength);
    for(var index = 0; index < arr.length; index++){
        arr[index] = from + index * step * direction;
    }
    return arr;
}
/**
 * Генерирует массив с диапазоном чисел в порядке возрастания.
 * Если `from` меньше `to`, вернется пустой массив.
 */ function range_rangeIncrement(from, to) {
    var step = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
    if (from > to) {
        return [];
    }
    return range_range(from, to, step);
}

;// CONCATENATED MODULE: ./src/hooks/usePagination.ts
function usePagination_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function usePagination_array_without_holes(arr) {
    if (Array.isArray(arr)) return usePagination_array_like_to_array(arr);
}
function usePagination_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function usePagination_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function usePagination_to_consumable_array(arr) {
    return usePagination_array_without_holes(arr) || usePagination_iterable_to_array(arr) || usePagination_unsupported_iterable_to_array(arr) || usePagination_non_iterable_spread();
}
function usePagination_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return usePagination_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return usePagination_array_like_to_array(o, minLen);
}



/**
 * Хук позаимствован у @mui с некоторыми изменениями.
 *  [usePagination.js](https://github.com/mui/material-ui/blob/master/packages/mui-material/src/usePagination/usePagination.js).
 *
 * Примеры вывода:
 *           v
 * [1, 2, 3, 4, 5, 'end-ellipsis', 10]
 *                          v
 * [1, 'start-ellipsis', 4, 5, 6, 'end-ellipsis', 10]
 *                          v
 * [1, 'start-ellipsis', 6, 7, 8, 9, 10]
 */ var usePagination_usePagination = function() {
    var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref_currentPage = _ref.currentPage, currentPage = _ref_currentPage === void 0 ? 1 : _ref_currentPage, _ref_siblingCount = _ref.siblingCount, siblingCount = _ref_siblingCount === void 0 ? 1 : _ref_siblingCount, _ref_boundaryCount = _ref.boundaryCount, boundaryCount = _ref_boundaryCount === void 0 ? 1 : _ref_boundaryCount, tmp = _ref.totalPages, endPage = tmp === void 0 ? 1 : tmp;
    return React.useMemo(function() {
        var _pages, _pages1;
        var startPages = rangeIncrement(1, Math.min(boundaryCount, endPage));
        var endPages = rangeIncrement(Math.max(endPage - boundaryCount + 1, boundaryCount + 1), endPage);
        var lowerBoundaryWhenCurrentPageHigh = endPage - boundaryCount - 1 - 2 * siblingCount;
        var siblingsStart = clamp(currentPage - siblingCount, boundaryCount + 2, lowerBoundaryWhenCurrentPageHigh);
        var upperBoundaryWhenCurrentPageLow = boundaryCount + 2 + 2 * siblingCount;
        var siblingsEnd = Math.min(Math.max(currentPage + siblingCount, upperBoundaryWhenCurrentPageLow), endPages.length > 0 ? endPages[0] - 2 : endPage - 1);
        var pages = startPages;
        if (siblingsStart > boundaryCount + 2) {
            pages.push('start-ellipsis');
        } else if (boundaryCount + 1 < endPage - boundaryCount) {
            pages.push(boundaryCount + 1);
        }
        (_pages = pages).push.apply(_pages, usePagination_to_consumable_array(rangeIncrement(siblingsStart, siblingsEnd)));
        if (siblingsEnd < endPage - boundaryCount - 1) {
            pages.push('end-ellipsis');
        } else if (endPage - boundaryCount > boundaryCount) {
            pages.push(endPage - boundaryCount);
        }
        (_pages1 = pages).push.apply(_pages1, usePagination_to_consumable_array(endPages));
        return pages;
    }, [
        currentPage,
        endPage,
        siblingCount,
        boundaryCount
    ]);
};

;// CONCATENATED MODULE: ./src/components/Pagination/PaginationNavigationButton/PaginationNavigationButton.tsx
function PaginationNavigationButton_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = PaginationNavigationButton_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function PaginationNavigationButton_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



/**
 * @private
 */ var getButtonPropsFromPaginationNavigationButton = function(opts) {
    var icon = opts.style !== 'caption' ? /*#__PURE__*/ React.createElement(React.Fragment, null, /*#__PURE__*/ React.createElement(VisuallyHidden, null, opts.a11yLabel), /*#__PURE__*/ React.createElement(opts.Icon, null)) : null;
    var caption = opts.style === 'caption' ? /*#__PURE__*/ React.createElement(React.Fragment, null, /*#__PURE__*/ React.createElement(VisuallyHidden, null, opts.a11yLabel), /*#__PURE__*/ React.createElement("span", {
        "aria-hidden": "true"
    }, opts.caption)) : opts.style !== 'icon' ? /*#__PURE__*/ React.createElement("span", {
        "aria-hidden": "true"
    }, opts.caption) : null;
    return {
        'size': 'l',
        'before': opts.type === 'prev' ? icon : null,
        'after': opts.type === 'next' ? icon : null,
        'appearance': opts.style === 'caption' ? 'neutral' : 'accent',
        'mode': 'tertiary',
        'disabled': opts.disabled,
        'onClick': opts.onClick,
        'children': caption,
        'data-page': opts['data-page']
    };
};
/**
 * @private
 */ var PaginationNavigationButton_PaginationNavigationButton = function(_param) {
    var renderNavigationButton = _param.renderNavigationButton, restProps = PaginationNavigationButton_object_without_properties(_param, [
        "renderNavigationButton"
    ]);
    var buttonProps = getButtonPropsFromPaginationNavigationButton(restProps);
    if (typeof renderNavigationButton === 'function') {
        return renderNavigationButton(buttonProps);
    }
    return /*#__PURE__*/ React.createElement(Button, buttonProps);
};

;// CONCATENATED MODULE: ./src/components/Pagination/utils.ts
function utils_getPageLabelDefault(isCurrent) {
    return isCurrent ? "Страница" : "Перейти на страницу";
}

;// CONCATENATED MODULE: ./src/components/Pagination/PaginationPage/PaginationPage.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Pagination/PaginationPage/usePaginationPageClasses.ts



var usePaginationPageClasses_getPaginationPageClassNames = function(opts) {
    return classNames("vkuiPaginationPage", opts.sizeY == null && "vkuiPaginationPage--sizeY-none", opts.sizeY === 'compact' && "vkuiPaginationPage--sizeY-compact", opts.isCurrent && "vkuiPaginationPage--current", opts.disabled && "vkuiPaginationPage--disabled");
};
function usePaginationPageClasses_usePaginationPageClassNames(param) {
    var isCurrent = param.isCurrent, disabled = param.disabled;
    var sizeY = useAdaptivity().sizeY;
    return usePaginationPageClasses_getPaginationPageClassNames({
        isCurrent: isCurrent,
        disabled: disabled,
        sizeY: sizeY
    });
}

;// CONCATENATED MODULE: ./src/components/Pagination/PaginationPage/PaginationPageButton.tsx
function PaginationPageButton_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function PaginationPageButton_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            PaginationPageButton_define_property(target, key, source[key]);
        });
    }
    return target;
}
function PaginationPageButton_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = PaginationPageButton_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function PaginationPageButton_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}








var getTappablePropsFromPaginationPage = function(opts) {
    var _opts_isCurrent = opts.isCurrent, isCurrent = _opts_isCurrent === void 0 ? false : _opts_isCurrent, _opts_getPageLabel = opts.getPageLabel, getPageLabel = _opts_getPageLabel === void 0 ? getPageLabelDefault : _opts_getPageLabel, children = opts.children, className = opts.className, disabled = opts.disabled, sizeY = opts.sizeY, restProps = PaginationPageButton_object_without_properties(opts, [
        "isCurrent",
        "getPageLabel",
        "children",
        "className",
        "disabled",
        "sizeY"
    ]);
    var pageClassNames = getPaginationPageClassNames({
        isCurrent: isCurrent,
        disabled: disabled,
        sizeY: sizeY
    });
    return PaginationPageButton_object_spread({
        'className': classNames(pageClassNames, className),
        'activeMode': "vkuiPaginationPage--state-active",
        'hoverMode': "vkuiPaginationPage--state-hover",
        'focusVisibleMode': 'outside',
        'aria-current': isCurrent ? true : undefined,
        'disabled': disabled,
        'children': /*#__PURE__*/ React.createElement(Text, {
            normalize: false
        }, /*#__PURE__*/ React.createElement(VisuallyHidden, null, getPageLabel(isCurrent), " "), children),
        'data-page': children
    }, restProps);
};
var PaginationPageButton_PaginationPageButton = function(_param) {
    var renderPageButton = _param.renderPageButton, restProps = PaginationPageButton_object_without_properties(_param, [
        "renderPageButton"
    ]);
    var tappableProps = getTappablePropsFromPaginationPage(restProps);
    if (typeof renderPageButton === 'function') {
        return renderPageButton(tappableProps);
    }
    return /*#__PURE__*/ React.createElement(Tappable, tappableProps);
};

;// CONCATENATED MODULE: ./src/components/Pagination/PaginationPage/PaginationPageEllipsis.tsx
function PaginationPageEllipsis_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function PaginationPageEllipsis_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            PaginationPageEllipsis_define_property(target, key, source[key]);
        });
    }
    return target;
}
function PaginationPageEllipsis_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = PaginationPageEllipsis_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function PaginationPageEllipsis_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





var PaginationPageEllipsis_PaginationPageEllipsis = function(_param) {
    var className = _param.className, disabled = _param.disabled, restProps = PaginationPageEllipsis_object_without_properties(_param, [
        "className",
        "disabled"
    ]);
    var paginationClassNames = usePaginationPageClassNames({
        isCurrent: false,
        disabled: disabled
    });
    return /*#__PURE__*/ React.createElement(Text, PaginationPageEllipsis_object_spread({
        className: classNames(paginationClassNames, "vkuiPaginationPage--type-ellipsis", className)
    }, restProps), "…");
};

;// CONCATENATED MODULE: ./src/components/Pagination/Pagination.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Pagination/Pagination.tsx
function Pagination_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Pagination_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Pagination_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Pagination_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Pagination_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Pagination_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}











/**
 * @see https://vkcom.github.io/VKUI/#/Pagination
 */ var Pagination = function(_param) {
    var _param_currentPage = _param.currentPage, currentPage = _param_currentPage === void 0 ? 1 : _param_currentPage, _param_siblingCount = _param.siblingCount, siblingCount = _param_siblingCount === void 0 ? 1 : _param_siblingCount, _param_boundaryCount = _param.boundaryCount, boundaryCount = _param_boundaryCount === void 0 ? 1 : _param_boundaryCount, _param_totalPages = _param.totalPages, totalPages = _param_totalPages === void 0 ? 1 : _param_totalPages, disabled = _param.disabled, _param_prevButtonCaption = _param.prevButtonCaption, prevButtonCaption = _param_prevButtonCaption === void 0 ? 'Назад' : _param_prevButtonCaption, _param_nextButtonCaption = _param.nextButtonCaption, nextButtonCaption = _param_nextButtonCaption === void 0 ? 'Вперёд' : _param_nextButtonCaption, _param_navigationButtonsStyle = _param.navigationButtonsStyle, navigationButtonsStyle = _param_navigationButtonsStyle === void 0 ? 'icon' : _param_navigationButtonsStyle, _param_getPageLabel = _param.getPageLabel, getPageLabel = _param_getPageLabel === void 0 ? getPageLabelDefault : _param_getPageLabel, _param_navigationLabel = _param.navigationLabel, navigationLabel = _param_navigationLabel === void 0 ? 'Навигация по страницам' : _param_navigationLabel, _param_navigationLabelComponent = _param.navigationLabelComponent, navigationLabelComponent = _param_navigationLabelComponent === void 0 ? 'h2' : _param_navigationLabelComponent, _param_prevButtonLabel = _param.prevButtonLabel, prevButtonLabel = _param_prevButtonLabel === void 0 ? 'Перейти на предыдущую страницу' : _param_prevButtonLabel, _param_nextButtonLabel = _param.nextButtonLabel, nextButtonLabel = _param_nextButtonLabel === void 0 ? 'Перейти на следующую страницу' : _param_nextButtonLabel, onChange = _param.onChange, renderPageButton = _param.renderPageButton, renderNavigationButton = _param.renderNavigationButton, resetProps = Pagination_object_without_properties(_param, [
        "currentPage",
        "siblingCount",
        "boundaryCount",
        "totalPages",
        "disabled",
        "prevButtonCaption",
        "nextButtonCaption",
        "navigationButtonsStyle",
        "getPageLabel",
        "navigationLabel",
        "navigationLabelComponent",
        "prevButtonLabel",
        "nextButtonLabel",
        "onChange",
        "renderPageButton",
        "renderNavigationButton"
    ]);
    var pages = usePagination({
        currentPage: currentPage,
        totalPages: totalPages,
        siblingCount: siblingCount,
        boundaryCount: boundaryCount
    });
    var isFirstPage = currentPage === 1;
    var isLastPage = currentPage === totalPages;
    var prevPage = isFirstPage ? undefined : currentPage - 1;
    var nextPage = isLastPage ? undefined : currentPage + 1;
    var handlePrevClick = React.useCallback(function(event) {
        if (onChange && prevPage !== undefined) {
            onChange(prevPage, event);
        }
    }, [
        prevPage,
        onChange
    ]);
    var handleClick = React.useCallback(function(event) {
        var page = event.currentTarget.dataset.page || '1';
        onChange === null || onChange === void 0 ? void 0 : onChange(Number(page), event);
    }, [
        onChange
    ]);
    var handleNextClick = React.useCallback(function(event) {
        if (onChange && nextPage !== undefined) {
            onChange(nextPage, event);
        }
    }, [
        nextPage,
        onChange
    ]);
    var sizeY = useAdaptivity().sizeY;
    var renderPages = React.useCallback(function(page) {
        switch(page){
            case 'start-ellipsis':
            case 'end-ellipsis':
                return /*#__PURE__*/ React.createElement("li", {
                    key: page
                }, /*#__PURE__*/ React.createElement(PaginationPageEllipsis, {
                    disabled: disabled
                }));
            default:
                {
                    var isCurrent = page === currentPage;
                    return /*#__PURE__*/ React.createElement("li", {
                        key: page
                    }, /*#__PURE__*/ React.createElement(PaginationPageButton, {
                        getPageLabel: getPageLabel,
                        isCurrent: isCurrent,
                        onClick: handleClick,
                        disabled: disabled,
                        sizeY: sizeY,
                        renderPageButton: renderPageButton
                    }, page));
                }
        }
    }, [
        currentPage,
        disabled,
        getPageLabel,
        handleClick,
        renderPageButton,
        sizeY
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, Pagination_object_spread({
        Component: "nav",
        role: "navigation"
    }, resetProps), /*#__PURE__*/ React.createElement(VisuallyHidden, {
        Component: navigationLabelComponent
    }, navigationLabel), /*#__PURE__*/ React.createElement("ul", {
        className: "vkuiPagination__list"
    }, /*#__PURE__*/ React.createElement("li", {
        className: "vkuiPagination__prevButtonContainer"
    }, /*#__PURE__*/ React.createElement(PaginationNavigationButton, {
        type: "prev",
        style: navigationButtonsStyle,
        caption: prevButtonCaption,
        Icon: Icon24ChevronCompactLeft,
        a11yLabel: prevButtonLabel,
        disabled: isFirstPage || disabled,
        onClick: handlePrevClick,
        "data-page": prevPage,
        renderNavigationButton: renderNavigationButton
    })), pages.map(renderPages), /*#__PURE__*/ React.createElement("li", {
        className: "vkuiPagination__nextButtonContainer"
    }, /*#__PURE__*/ React.createElement(PaginationNavigationButton, {
        type: "next",
        style: navigationButtonsStyle,
        caption: nextButtonCaption,
        Icon: Icon24ChevronCompactRight,
        a11yLabel: nextButtonLabel,
        disabled: isLastPage || disabled,
        onClick: handleNextClick,
        "data-page": nextPage,
        renderNavigationButton: renderNavigationButton
    }))));
};

;// CONCATENATED MODULE: ./src/components/Accordion/AccordionContext.tsx


var AccordionContext = /*#__PURE__*/ react.createContext({
    labelId: '',
    contentId: '',
    expanded: false,
    onChange: functions_noop
});

;// CONCATENATED MODULE: ./src/components/Accordion/Accordion.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Accordion/AccordionContent.tsx
function AccordionContent_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function AccordionContent_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function AccordionContent_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function AccordionContent_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function AccordionContent_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function AccordionContent_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            AccordionContent_define_property(target, key, source[key]);
        });
    }
    return target;
}
function AccordionContent_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = AccordionContent_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function AccordionContent_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function AccordionContent_sliced_to_array(arr, i) {
    return AccordionContent_array_with_holes(arr) || AccordionContent_iterable_to_array_limit(arr, i) || AccordionContent_unsupported_iterable_to_array(arr, i) || AccordionContent_non_iterable_rest();
}
function AccordionContent_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return AccordionContent_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return AccordionContent_array_like_to_array(o, minLen);
}







var CUSTOM_PROPERTY_ACCORDION_CONTENT_HEIGHT = '--vkui_internal--AccordionContent_height';
var AccordionContent_stateClassNames = {
    enter: "vkuiAccordionContent__in--enter",
    entering: "vkuiAccordionContent__in--enter",
    entered: "vkuiAccordionContent__in--entered",
    exit: "vkuiAccordionContent__in--exit",
    exiting: "vkuiAccordionContent__in--exit",
    exited: "vkuiAccordionContent__in--exited"
};
var AccordionContent = function(_param) {
    var getRootRef = _param.getRootRef, getRef = _param.getRef, className = _param.className, children = _param.children, restProps = AccordionContent_object_without_properties(_param, [
        "getRootRef",
        "getRef",
        "className",
        "children"
    ]);
    var _React_useContext = react.useContext(AccordionContext), expanded = _React_useContext.expanded, labelId = _React_useContext.labelId, contentId = _React_useContext.contentId;
    var inRef = useExternRef_useExternRef(getRef);
    var _useCSSKeyframesAnimationController = AccordionContent_sliced_to_array(useCSSKeyframesAnimationController_useCSSKeyframesAnimationController(expanded ? 'enter' : 'exit', undefined, true), 2), animationState = _useCSSKeyframesAnimationController[0], animationHandlers = _useCSSKeyframesAnimationController[1];
    useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(function() {
        var inEl = inRef.current;
        /* istanbul ignore if: невозможный кейс (в SSR вызова этой функции не будет) */ if (!inEl) {
            return;
        }
        switch(animationState){
            case 'enter':
            case 'exit':
                inEl.style.setProperty(CUSTOM_PROPERTY_ACCORDION_CONTENT_HEIGHT, "".concat(inEl.scrollHeight, "px"));
                break;
            case 'entered':
            case 'exited':
                inEl.style.removeProperty(CUSTOM_PROPERTY_ACCORDION_CONTENT_HEIGHT);
                break;
        }
    }, [
        animationState,
        inRef
    ]);
    return /*#__PURE__*/ react.createElement("div", AccordionContent_object_spread({
        ref: getRootRef,
        id: contentId,
        role: "region",
        "aria-labelledby": labelId,
        "aria-hidden": !expanded,
        className: clsx("vkuiAccordionContent", className)
    }, restProps), /*#__PURE__*/ react.createElement("div", AccordionContent_object_spread({
        ref: inRef,
        className: clsx("vkuiAccordionContent__in", AccordionContent_stateClassNames[animationState])
    }, animationHandlers), children));
};
AccordionContent.displayName = 'AccordionContent';

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/24/chevron_down_24.js
'use client';

var chevron_down_24_Icon24ChevronDown = makeIcon('Icon24ChevronDown', 'chevron_down_24', '0 0 24 24', '<symbol xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24" id="chevron_down_24"><path d="M12 13.698 6.64 9.232a1 1 0 0 0-1.28 1.536l6 5a1 1 0 0 0 1.28 0l6-5a1 1 0 1 0-1.28-1.536z" /></symbol>', 24, 24, false, undefined);

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/24/chevron_up_24.js
'use client';

var chevron_up_24_Icon24ChevronUp = makeIcon('Icon24ChevronUp', 'chevron_up_24', '0 0 24 24', '<symbol xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24" id="chevron_up_24"><path d="m12 10.302-5.36 4.466a1 1 0 1 1-1.28-1.536l6-5a1 1 0 0 1 1.28 0l6 5a1 1 0 1 1-1.28 1.536z" /></symbol>', 24, 24, false, undefined);

;// CONCATENATED MODULE: ./src/components/Accordion/AccordionSummary.tsx
function AccordionSummary_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function AccordionSummary_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            AccordionSummary_define_property(target, key, source[key]);
        });
    }
    return target;
}
function AccordionSummary_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = AccordionSummary_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function AccordionSummary_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






var AccordionSummary = function(_param) {
    var after = _param.after, before = _param.before, _param_ExpandIcon = _param.ExpandIcon, ExpandIcon = _param_ExpandIcon === void 0 ? chevron_down_24_Icon24ChevronDown : _param_ExpandIcon, _param_CollapseIcon = _param.CollapseIcon, CollapseIcon = _param_CollapseIcon === void 0 ? chevron_up_24_Icon24ChevronUp : _param_CollapseIcon, _param_iconPosition = _param.iconPosition, iconPosition = _param_iconPosition === void 0 ? 'after' : _param_iconPosition, onClick = _param.onClick, children = _param.children, restProps = AccordionSummary_object_without_properties(_param, [
        "after",
        "before",
        "ExpandIcon",
        "CollapseIcon",
        "iconPosition",
        "onClick",
        "children"
    ]);
    var _React_useContext = react.useContext(AccordionContext), expanded = _React_useContext.expanded, labelId = _React_useContext.labelId, contentId = _React_useContext.contentId, onChange = _React_useContext.onChange;
    var Icon = expanded ? CollapseIcon : ExpandIcon;
    var icon = // Обертка нужна для правильной работы с отступами в SimpleCell
    /*#__PURE__*/ react.createElement("span", {
        className: "vkuiIcon"
    }, /*#__PURE__*/ react.createElement(Icon, {
        className: "vkuiAccordionSummary__icon"
    }));
    var toggle = function() {
        return onChange(!expanded);
    };
    return /*#__PURE__*/ react.createElement(SimpleCell_SimpleCell, AccordionSummary_object_spread({
        id: labelId,
        "aria-expanded": expanded,
        "aria-controls": contentId,
        onClick: callMultiple_callMultiple(toggle, onClick),
        before: /*#__PURE__*/ react.createElement(react.Fragment, null, iconPosition === 'before' && icon, before),
        after: /*#__PURE__*/ react.createElement(react.Fragment, null, after, iconPosition === 'after' && icon)
    }, restProps), children);
};
AccordionSummary.displayName = 'AccordionSummary';

;// CONCATENATED MODULE: ./src/components/Accordion/Accordion.tsx
function Accordion_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Accordion_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Accordion_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Accordion_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Accordion_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Accordion_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Accordion_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Accordion_sliced_to_array(arr, i) {
    return Accordion_array_with_holes(arr) || Accordion_iterable_to_array_limit(arr, i) || Accordion_unsupported_iterable_to_array(arr, i) || Accordion_non_iterable_rest();
}
function Accordion_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Accordion_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Accordion_array_like_to_array(o, minLen);
}






function useAccordionId(id) {
    var generatedId = react.useId();
    var labelId = id !== null && id !== void 0 ? id : "Accordion".concat(generatedId);
    var contentId = "AccordionContent".concat(id !== null && id !== void 0 ? id : generatedId);
    return {
        labelId: labelId,
        contentId: contentId
    };
}
var Accordion = function(_param) {
    var id = _param.id, expandedProp = _param.expanded, _param_defaultExpanded = _param.defaultExpanded, defaultExpanded = _param_defaultExpanded === void 0 ? false : _param_defaultExpanded, onChangeProp = _param.onChange, children = _param.children, restProps = Accordion_object_without_properties(_param, [
        "id",
        "expanded",
        "defaultExpanded",
        "onChange",
        "children"
    ]);
    var _useAccordionId = useAccordionId(id), labelId = _useAccordionId.labelId, contentId = _useAccordionId.contentId;
    var _useCustomEnsuredControl = Accordion_sliced_to_array(useEnsuredControl_useCustomEnsuredControl({
        value: expandedProp,
        defaultValue: defaultExpanded,
        onChange: onChangeProp,
        disabled: restProps.disabled
    }), 2), expanded = _useCustomEnsuredControl[0], onChange = _useCustomEnsuredControl[1];
    var context = useObjectMemo_useObjectMemo({
        labelId: labelId,
        contentId: contentId,
        expanded: expanded || false,
        onChange: onChange
    });
    return /*#__PURE__*/ react.createElement(AccordionContext.Provider, {
        value: context
    }, children);
};
Accordion.displayName = 'Accordion';
Accordion.Summary = AccordionSummary;
Accordion.Summary.displayName = 'Accordion.Summary';
Accordion.Content = AccordionContent;
Accordion.Content.displayName = 'Accordion.Content';

;// CONCATENATED MODULE: ./src/components/FormItem/FormItem.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/FormItem/FormItemTop/FormItemTop.tsx
function FormItemTop_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function FormItemTop_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            FormItemTop_define_property(target, key, source[key]);
        });
    }
    return target;
}
function FormItemTop_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function FormItemTop_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        FormItemTop_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}


/**
 * Служит оберткой для составной шапки поля, отвечая за выравнивание контента и расстановку отступов.
 *
 * @since 6.1.0
 *
 */ var FormItemTop = function(props) {
    return /*#__PURE__*/ React.createElement(RootComponent_RootComponent, FormItemTop_object_spread_props(FormItemTop_object_spread({}, props), {
        baseClassName: "vkuiFormItem__top"
    }));
};
FormItemTop.displayName = 'FormItemTop';

;// CONCATENATED MODULE: ./src/components/FormItem/FormItemTop/FormItemTopAside.tsx
function FormItemTopAside_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function FormItemTopAside_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            FormItemTopAside_define_property(target, key, source[key]);
        });
    }
    return target;
}
function FormItemTopAside_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = FormItemTopAside_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function FormItemTopAside_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



/**
 * Отвечает за отрисовку дополнительного контента справа от заголовка поля.
 *
 * @since 6.1.0
 *
 */ var FormItemTopAside = function(_param) {
    var children = _param.children, restProps = FormItemTopAside_object_without_properties(_param, [
        "children"
    ]);
    return /*#__PURE__*/ react.createElement(Subhead_Subhead, FormItemTopAside_object_spread({
        className: "vkuiFormItemTop__aside"
    }, restProps), children);
};
FormItemTopAside.displayName = 'FormItemTopAside';

;// CONCATENATED MODULE: ./src/components/FormItem/context.ts

var FormItemContext = react.createContext({
    required: false,
    topMultiline: false
});

;// CONCATENATED MODULE: ./src/components/FormItem/FormItemTop/FormItemTopLabel.tsx
function FormItemTopLabel_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function FormItemTopLabel_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            FormItemTopLabel_define_property(target, key, source[key]);
        });
    }
    return target;
}
function FormItemTopLabel_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = FormItemTopLabel_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function FormItemTopLabel_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





/**
 * Отвечает за отрисовку заголовка поля. По умолчанию компонент представлен тегом `label`, если передано свойство `htmlFor`.
 * Можно переопределить через свойство `Component`.
 *
 * @since 6.1.0
 *
 */ var FormItemTopLabel = function(_param) {
    var children = _param.children, componentProp = _param.Component, htmlFor = _param.htmlFor, multiline = _param.multiline, restProps = FormItemTopLabel_object_without_properties(_param, [
        "children",
        "Component",
        "htmlFor",
        "multiline"
    ]);
    var component = componentProp || htmlFor && 'label' || 'span';
    var _React_useContext = react.useContext(FormItemContext), required = _React_useContext.required, multilineContext = _React_useContext.topMultiline;
    return /*#__PURE__*/ react.createElement(Subhead_Subhead, FormItemTopLabel_object_spread({
        className: clsx("vkuiFormItemTop__label", (multiline !== null && multiline !== void 0 ? multiline : multilineContext) && "vkuiFormItemTop__label--multiline"),
        Component: component,
        htmlFor: htmlFor
    }, restProps), children, required && /*#__PURE__*/ react.createElement("span", {
        className: "vkuiFormItemTop__label--required",
        "aria-hidden": true
    }, "*"));
};
FormItemTopLabel.displayName = 'FormItemTopLabel';

;// CONCATENATED MODULE: ./src/components/FormItem/FormItem.tsx
function FormItem_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function FormItem_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            FormItem_define_property(target, key, source[key]);
        });
    }
    return target;
}
function FormItem_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function FormItem_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        FormItem_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function FormItem_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = FormItem_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function FormItem_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}













var FormItem_sizeYClassNames = {
    none: clsx("vkuiFormItem--sizeY-none", 'vkuiInternalFormItem--sizeY-none'),
    compact: clsx("vkuiFormItem--sizeY-compact", 'vkuiInternalFormItem--sizeY-compact')
};
var stylesStatus = {
    error: clsx("vkuiFormItem--status-error", 'vkuiInternalFormItem--status-error'),
    valid: clsx("vkuiFormItem--status-valid", 'vkuiInternalFormItem--status-valid')
};
/**
 * @see https://vkcom.github.io/VKUI/#/FormItem
 */ var FormItem = function(_param) {
    var children = _param.children, top = _param.top, topId = _param.topId, topMultiline = _param.topMultiline, topComponentProp = _param.topComponent, bottom = _param.bottom, _param_status = _param.status, status = _param_status === void 0 ? 'default' : _param_status, removable = _param.removable, onRemove = _param.onRemove, _param_removePlaceholder = _param.removePlaceholder, removePlaceholder = _param_removePlaceholder === void 0 ? 'Удалить' : _param_removePlaceholder, getRootRef = _param.getRootRef, htmlFor = _param.htmlFor, bottomId = _param.bottomId, noPadding = _param.noPadding, topNode = _param.topNode, _param_required = _param.required, required = _param_required === void 0 ? false : _param_required, restProps = FormItem_object_without_properties(_param, [
        "children",
        "top",
        "topId",
        "topMultiline",
        "topComponent",
        "bottom",
        "status",
        "removable",
        "onRemove",
        "removePlaceholder",
        "getRootRef",
        "htmlFor",
        "bottomId",
        "noPadding",
        "topNode",
        "required"
    ]);
    var rootEl = useExternRef_useExternRef(getRootRef);
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var wrappedChildren = /*#__PURE__*/ react.createElement(react.Fragment, null, react_utils_hasReactNode(topNode) ? topNode : react_utils_hasReactNode(top) ? /*#__PURE__*/ react.createElement(FormItemTop, null, /*#__PURE__*/ react.createElement(FormItemTopLabel, {
        htmlFor: htmlFor,
        Component: topComponentProp,
        multiline: topMultiline,
        id: topId
    }, top)) : null, children, react_utils_hasReactNode(bottom) && /*#__PURE__*/ react.createElement(Footnote_Footnote, {
        className: "vkuiFormItem__bottom",
        id: bottomId,
        role: status === 'error' ? 'alert' : undefined
    }, bottom));
    var context = useObjectMemo_useObjectMemo({
        required: required,
        topMultiline: topMultiline
    });
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, FormItem_object_spread_props(FormItem_object_spread({}, restProps), {
        getRootRef: rootEl,
        baseClassName: clsx("vkuiFormItem", !noPadding && "vkuiFormItem--withPadding", 'vkuiInternalFormItem', status !== 'default' && stylesStatus[status], sizeY !== 'regular' && FormItem_sizeYClassNames[sizeY], react_utils_hasReactNode(top) && clsx("vkuiFormItem--withTop", 'vkuiInternalFormItem--withTop'), removable && clsx("vkuiFormItem--removable", 'vkuiInternalFormItem--removable'))
    }), /*#__PURE__*/ react.createElement(FormItemContext.Provider, {
        value: context
    }, removable ? /*#__PURE__*/ react.createElement(Removable_Removable, {
        align: "start",
        onRemove: function(e) {
            if (rootEl === null || rootEl === void 0 ? void 0 : rootEl.current) {
                onRemove === null || onRemove === void 0 ? void 0 : onRemove(e, rootEl.current);
            }
        },
        removePlaceholder: removePlaceholder,
        indent: removable === 'indent'
    }, /*#__PURE__*/ react.createElement("div", {
        className: clsx("vkuiFormItem__removable", 'vkuiInternalFormItem__removable')
    }, wrappedChildren)) : wrappedChildren));
};
FormItem.displayName = 'FormItem';
FormItem.Top = FormItemTop;
FormItem.Top.displayName = 'FormItem.Top';
FormItem.TopLabel = FormItemTopLabel;
FormItem.TopLabel.displayName = 'FormItem.TopLabel';
FormItem.TopAside = FormItemTopAside;
FormItem.TopAside.displayName = 'FormItem.TopAside';

;// CONCATENATED MODULE: ./src/components/FormField/FormField.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/FormField/FormField.tsx
function FormField_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function FormField_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function FormField_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function FormField_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function FormField_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function FormField_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            FormField_define_property(target, key, source[key]);
        });
    }
    return target;
}
function FormField_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function FormField_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        FormField_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function FormField_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = FormField_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function FormField_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function FormField_sliced_to_array(arr, i) {
    return FormField_array_with_holes(arr) || FormField_iterable_to_array_limit(arr, i) || FormField_unsupported_iterable_to_array(arr, i) || FormField_non_iterable_rest();
}
function FormField_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return FormField_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return FormField_array_like_to_array(o, minLen);
}







var FormField_sizeYClassNames = {
    none: "vkuiFormField--sizeY-none",
    compact: "vkuiFormField--sizeY-compact"
};
var FormField_stylesStatus = {
    error: "vkuiFormField--status-error",
    valid: "vkuiFormField--status-valid"
};
var iconAlignClassNames = {
    center: undefined,
    start: "vkuiFormField__icon--align-start",
    end: "vkuiFormField__icon--align-end"
};
var renderIcon = function(icon, align, className) {
    return /*#__PURE__*/ React.createElement("div", {
        className: "vkuiFormField__iconWrapper"
    }, /*#__PURE__*/ React.createElement("span", {
        className: classNames(iconAlignClassNames[align], className)
    }, icon));
};
/**
 * @see https://vkcom.github.io/VKUI/#/FormField
 */ var FormField_FormField = function(_param) {
    var _param_Component = _param.Component, Component = _param_Component === void 0 ? 'span' : _param_Component, _param_status = _param.status, status = _param_status === void 0 ? 'default' : _param_status, children = _param.children, getRootRef = _param.getRootRef, before = _param.before, after = _param.after, _param_beforeAlign = _param.beforeAlign, beforeAlign = _param_beforeAlign === void 0 ? 'center' : _param_beforeAlign, _param_afterAlign = _param.afterAlign, afterAlign = _param_afterAlign === void 0 ? 'center' : _param_afterAlign, disabled = _param.disabled, _param_mode = _param.mode, mode = _param_mode === void 0 ? 'default' : _param_mode, className = _param.className, maxHeight = _param.maxHeight, style = _param.style, restProps = FormField_object_without_properties(_param, [
        "Component",
        "status",
        "children",
        "getRootRef",
        "before",
        "after",
        "beforeAlign",
        "afterAlign",
        "disabled",
        "mode",
        "className",
        "maxHeight",
        "style"
    ]);
    var elRef = useExternRef(getRootRef);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var _React_useState = FormField_sliced_to_array(React.useState(false), 2), hover = _React_useState[0], setHover = _React_useState[1];
    var focusWithin = useFocusWithin(elRef);
    var focusVisibleClassNames = useFocusVisibleClassName({
        focusVisible: focusWithin,
        mode: "vkuiFormField--focus-visible"
    });
    var handleMouseEnter = function(e) {
        e.stopPropagation();
        setHover(true);
    };
    var handleMouseLeave = function(e) {
        e.stopPropagation();
        setHover(false);
    };
    return /*#__PURE__*/ React.createElement(Component, FormField_object_spread_props(FormField_object_spread({}, restProps), {
        ref: elRef,
        style: maxHeight !== undefined ? FormField_object_spread_props(FormField_object_spread({}, style), {
            maxHeight: maxHeight
        }) : style,
        onMouseEnter: handleMouseEnter,
        onMouseLeave: handleMouseLeave,
        className: classNames("vkuiFormField", mode === 'default' && "vkuiFormField--mode-default", status !== 'default' && FormField_stylesStatus[status], sizeY !== 'regular' && FormField_sizeYClassNames[sizeY], disabled && "vkuiFormField--disabled", !disabled && hover && "vkuiFormField--hover", focusVisibleClassNames, className)
    }), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiFormField_scrollContainer"
    }, before && renderIcon(before, beforeAlign, "vkuiFormField__before"), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiFormField__content"
    }, children), after && renderIcon(after, afterAlign, classNames("vkuiFormField__after", 'vkuiInternalFormField__after'))), /*#__PURE__*/ React.createElement("span", {
        "aria-hidden": true,
        className: "vkuiFormField__border"
    }));
};

;// CONCATENATED MODULE: ./src/components/FormLayoutGroup/FormLayoutGroup.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/FormLayoutGroup/FormLayoutGroup.tsx
function FormLayoutGroup_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function FormLayoutGroup_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            FormLayoutGroup_define_property(target, key, source[key]);
        });
    }
    return target;
}
function FormLayoutGroup_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = FormLayoutGroup_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function FormLayoutGroup_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}







var FormLayoutGroup_sizeYClassNames = {
    none: clsx("vkuiFormLayoutGroup--sizeY-none", 'vkuiInternalFormLayoutGroup--sizeY-none'),
    compact: clsx("vkuiFormLayoutGroup--sizeY-compact", 'vkuiInternalFormLayoutGroup--sizeY-compact')
};
/**
 * @see https://vkcom.github.io/VKUI/#/FormLayoutGroup
 */ var FormLayoutGroup = function(_param) {
    var children = _param.children, _param_mode = _param.mode, mode = _param_mode === void 0 ? 'vertical' : _param_mode, removable = _param.removable, segmented = _param.segmented, _param_removePlaceholder = _param.removePlaceholder, removePlaceholder = _param_removePlaceholder === void 0 ? 'Удалить' : _param_removePlaceholder, onRemove = _param.onRemove, getRootRef = _param.getRootRef, restProps = FormLayoutGroup_object_without_properties(_param, [
        "children",
        "mode",
        "removable",
        "segmented",
        "removePlaceholder",
        "onRemove",
        "getRootRef"
    ]);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var isRemovable = removable && mode === 'horizontal';
    var rootEl = useExternRef(getRootRef);
    return /*#__PURE__*/ React.createElement(RootComponent, FormLayoutGroup_object_spread({
        getRootRef: rootEl,
        Component: "fieldset",
        baseClassName: classNames("vkuiFormLayoutGroup", sizeY !== 'regular' && FormLayoutGroup_sizeYClassNames[sizeY], mode === 'horizontal' && classNames("vkuiFormLayoutGroup--mode-horizontal", 'vkuiInternalFormLayoutGroup--mode-horizontal'), mode === 'vertical' && 'vkuiInternalFormLayoutGroup--mode-vertical', isRemovable && classNames("vkuiFormLayoutGroup--removable", 'vkuiInternalFormLayoutGroup--removable'), segmented && classNames("vkuiFormLayoutGroup--segmented", 'vkuiInternalFormLayoutGroup--segmented'))
    }, restProps), isRemovable ? /*#__PURE__*/ React.createElement(Removable, {
        className: "vkuiFormLayoutGroup__removable",
        align: "start",
        removePlaceholder: removePlaceholder,
        onRemove: function(e) {
            if (rootEl === null || rootEl === void 0 ? void 0 : rootEl.current) {
                onRemove === null || onRemove === void 0 ? void 0 : onRemove(e, rootEl.current);
            }
        },
        indent: removable === 'indent'
    }, children) : /*#__PURE__*/ React.createElement(React.Fragment, null, children, /*#__PURE__*/ React.createElement("span", {
        className: "vkuiFormLayoutGroup__offset",
        "aria-hidden": true
    })));
};

;// CONCATENATED MODULE: ./src/components/FormStatus/FormStatus.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/FormStatus/FormStatus.tsx
function FormStatus_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function FormStatus_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            FormStatus_define_property(target, key, source[key]);
        });
    }
    return target;
}
function FormStatus_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function FormStatus_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        FormStatus_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function FormStatus_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = FormStatus_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function FormStatus_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




/**
 * @see https://vkcom.github.io/VKUI/#/FormStatus
 */ var FormStatus = function(_param) {
    var mode = _param.mode, children = _param.children, className = _param.className, _param_role = _param.role, role = _param_role === void 0 ? mode === 'error' ? 'alert' : 'status' : _param_role, restProps = FormStatus_object_without_properties(_param, [
        "mode",
        "children",
        "className",
        "role"
    ]);
    return /*#__PURE__*/ React.createElement(Banner, FormStatus_object_spread_props(FormStatus_object_spread({}, restProps), {
        role: role,
        subheader: children,
        className: classNames('vkuiInternalFormStatus', mode === 'error' && classNames("vkuiFormStatus--mode-error", 'vkuiInternalFormStatus--mode-error'), className)
    }));
};

;// CONCATENATED MODULE: ./src/components/Switch/Switch.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Switch/Switch.tsx
function Switch_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Switch_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Switch_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Switch_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Switch_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Switch_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Switch_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Switch_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Switch_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Switch_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Switch_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Switch_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Switch_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Switch_sliced_to_array(arr, i) {
    return Switch_array_with_holes(arr) || Switch_iterable_to_array_limit(arr, i) || Switch_unsupported_iterable_to_array(arr, i) || Switch_non_iterable_rest();
}
function Switch_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Switch_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Switch_array_like_to_array(o, minLen);
}









var Switch_sizeYClassNames = {
    none: "vkuiSwitch--sizeY-none",
    compact: "vkuiSwitch--sizeY-compact"
};
/**
 * @see https://vkcom.github.io/VKUI/#/Switch
 */ var Switch = function(_param) {
    var style = _param.style, className = _param.className, getRootRef = _param.getRootRef, getRef = _param.getRef, checkedProp = _param.checked, disabled = _param.disabled, onBlurProp = _param.onBlur, onFocusProp = _param.onFocus, onClick = _param.onClick, restProps = Switch_object_without_properties(_param, [
        "style",
        "className",
        "getRootRef",
        "getRef",
        "checked",
        "disabled",
        "onBlur",
        "onFocus",
        "onClick"
    ]);
    var platform = usePlatform();
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var _useFocusVisible = useFocusVisible(), focusVisible = _useFocusVisible.focusVisible, onBlur = _useFocusVisible.onBlur, onFocus = _useFocusVisible.onFocus;
    var focusVisibleClassNames = useFocusVisibleClassName({
        focusVisible: focusVisible,
        mode: 'outside'
    });
    var handleBlur = callMultiple(onBlur, onBlurProp);
    var handleFocus = callMultiple(onFocus, onFocusProp);
    var _React_useState = Switch_sliced_to_array(React.useState(Boolean(restProps.defaultChecked)), 2), localUncontrolledChecked = _React_useState[0], setLocalUncontrolledChecked = _React_useState[1];
    var isControlled = checkedProp !== undefined;
    var syncUncontrolledCheckedStateOnClick = React.useCallback(function(e) {
        if (isControlled) {
            return;
        }
        var switchTarget = e.target;
        setLocalUncontrolledChecked(switchTarget.checked);
    }, [
        isControlled
    ]);
    var inputProps = Switch_object_spread_props(Switch_object_spread({}, restProps), {
        Component: 'input',
        getRootRef: getRef,
        type: 'checkbox',
        role: 'switch',
        disabled: disabled,
        onBlur: onBlurProp,
        onFocus: onFocusProp,
        onClick: callMultiple(syncUncontrolledCheckedStateOnClick, onClick)
    });
    if (isControlled) {
        inputProps.checked = checkedProp;
        inputProps['aria-checked'] = checkedProp ? 'true' : 'false';
    } else {
        inputProps['aria-checked'] = localUncontrolledChecked ? 'true' : 'false';
    }
    return /*#__PURE__*/ React.createElement("label", {
        className: classNames("vkuiSwitch", sizeY !== 'regular' && Switch_sizeYClassNames[sizeY], platform === 'ios' ? "vkuiSwitch--ios" : "vkuiSwitch--default", disabled && "vkuiSwitch--disabled", focusVisibleClassNames, className),
        style: style,
        ref: getRootRef
    }, /*#__PURE__*/ React.createElement(VisuallyHidden, Switch_object_spread_props(Switch_object_spread({}, inputProps), {
        className: "vkuiSwitch__inputNative",
        onBlur: handleBlur,
        onFocus: handleFocus
    })), /*#__PURE__*/ React.createElement("span", {
        "aria-hidden": true,
        className: "vkuiSwitch__inputFake"
    }, /*#__PURE__*/ React.createElement("span", {
        className: "vkuiSwitch__track"
    }), /*#__PURE__*/ React.createElement("span", {
        "aria-hidden": true,
        className: classNames("vkuiSwitch__handle", platform !== 'ios' && !disabled && "vkuiSwitch__handle--withRipple")
    })));
};

;// CONCATENATED MODULE: ./src/components/File/File.tsx
function File_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function File_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            File_define_property(target, key, source[key]);
        });
    }
    return target;
}
function File_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function File_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        File_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function File_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = File_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function File_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



/**
 * @see https://vkcom.github.io/VKUI/#/File
 */ var File = function(_param) {
    var _param_children = _param.children, children = _param_children === void 0 ? 'Выберите файл' : _param_children, _param_align = _param.align, align = _param_align === void 0 ? 'left' : _param_align, size = _param.size, mode = _param.mode, stretched = _param.stretched, before = _param.before, after = _param.after, loading = _param.loading, className = _param.className, style = _param.style, getRef = _param.getRef, getRootRef = _param.getRootRef, appearance = _param.appearance, restProps = File_object_without_properties(_param, [
        "children",
        "align",
        "size",
        "mode",
        "stretched",
        "before",
        "after",
        "loading",
        "className",
        "style",
        "getRef",
        "getRootRef",
        "appearance"
    ]);
    return /*#__PURE__*/ React.createElement(Button, {
        Component: "label",
        align: align,
        className: className,
        stretched: stretched,
        mode: mode,
        appearance: appearance,
        size: size,
        before: before,
        after: after,
        loading: loading,
        style: style,
        getRootRef: getRootRef,
        disabled: restProps.disabled
    }, /*#__PURE__*/ React.createElement(VisuallyHidden, File_object_spread_props(File_object_spread({
        title: ""
    }, restProps), {
        Component: "input",
        type: "file",
        getRootRef: getRef
    })), children);
};

;// CONCATENATED MODULE: ./src/components/DropZone/components/DropZoneGrid.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/DropZone/components/DropZoneGrid.tsx
function DropZoneGrid_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function DropZoneGrid_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            DropZoneGrid_define_property(target, key, source[key]);
        });
    }
    return target;
}
function DropZoneGrid_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = DropZoneGrid_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function DropZoneGrid_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



var directionStyle = {
    row: "vkuiDropZoneGrid--row",
    column: "vkuiDropZoneGrid--column"
};
var DropZoneGrid = function(_param) {
    var _param_direction = _param.direction, direction = _param_direction === void 0 ? 'column' : _param_direction, props = DropZoneGrid_object_without_properties(_param, [
        "direction"
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent_RootComponent, DropZoneGrid_object_spread({
        baseClassName: clsx("vkuiDropZoneGrid", directionStyle[direction])
    }, props));
};
DropZoneGrid.displayName = 'DropZoneGrid';

;// CONCATENATED MODULE: ./src/components/DropZone/DropZone.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/DropZone/DropZone.tsx
function DropZone_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function DropZone_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function DropZone_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function DropZone_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function DropZone_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function DropZone_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            DropZone_define_property(target, key, source[key]);
        });
    }
    return target;
}
function DropZone_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = DropZone_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function DropZone_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function DropZone_sliced_to_array(arr, i) {
    return DropZone_array_with_holes(arr) || DropZone_iterable_to_array_limit(arr, i) || DropZone_unsupported_iterable_to_array(arr, i) || DropZone_non_iterable_rest();
}
function DropZone_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return DropZone_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return DropZone_array_like_to_array(o, minLen);
}






/**
 * Компонент позволяет пользователям загружать файлы, перетаскивая файлы в
 * область на странице.
 *
 * @since 6.1.0
 * @see https://vkcom.github.io/VKUI/#/DropZone
 */ var DropZone = function(_param) {
    var onDragOver = _param.onDragOver, onDragLeave = _param.onDragLeave, onDrop = _param.onDrop, children = _param.children, props = DropZone_object_without_properties(_param, [
        "onDragOver",
        "onDragLeave",
        "onDrop",
        "children"
    ]);
    var _React_useState = DropZone_sliced_to_array(react.useState(false), 2), active = _React_useState[0], setActive = _React_useState[1];
    var onActive = function(event) {
        if (event.isPropagationStopped()) {
            return;
        }
        setActive(true);
    };
    var offActive = function() {
        setActive(false);
    };
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, DropZone_object_spread({
        baseClassName: clsx("vkuiDropZone", active && "vkuiDropZone--active"),
        onDragOver: callMultiple_callMultiple(onDragOver, onActive),
        onDragLeave: callMultiple_callMultiple(onDragLeave, offActive),
        onDrop: callMultiple_callMultiple(onDrop, offActive)
    }, props), typeof children === 'function' ? children({
        active: active
    }) : children);
};
DropZone.displayName = 'DropZone';
DropZone.Grid = DropZoneGrid;
DropZone.Grid.displayName = 'DropZone.Grid';

;// CONCATENATED MODULE: ./src/components/Input/Input.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Input/Input.tsx
function Input_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Input_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Input_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Input_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Input_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Input_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Input_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Input_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Input_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






var Input_sizeYClassNames = {
    none: "vkuiInput--sizeY-none",
    compact: "vkuiInput--sizeY-compact"
};
/**
 * @see https://vkcom.github.io/VKUI/#/Input
 */ var Input_Input = function(_param) {
    var _param_type = _param.type, type = _param_type === void 0 ? 'text' : _param_type, _param_align = _param.align, align = _param_align === void 0 ? 'left' : _param_align, getRef = _param.getRef, className = _param.className, getRootRef = _param.getRootRef, style = _param.style, before = _param.before, after = _param.after, status = _param.status, mode = _param.mode, restProps = Input_object_without_properties(_param, [
        "type",
        "align",
        "getRef",
        "className",
        "getRootRef",
        "style",
        "before",
        "after",
        "status",
        "mode"
    ]);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    return /*#__PURE__*/ React.createElement(FormField, {
        style: style,
        className: classNames("vkuiInput", align === 'right' && "vkuiInput--align-right", align === 'center' && "vkuiInput--align-center", sizeY !== 'regular' && Input_sizeYClassNames[sizeY], before && "vkuiInput--hasBefore", after && "vkuiInput--hasAfter", className),
        getRootRef: getRootRef,
        before: before,
        after: after,
        disabled: restProps.disabled,
        mode: mode,
        status: status
    }, /*#__PURE__*/ React.createElement(UnstyledTextField, Input_object_spread_props(Input_object_spread({}, restProps), {
        as: "input",
        type: type,
        className: "vkuiInput__el",
        getRootRef: getRef
    })));
};

;// CONCATENATED MODULE: ./src/components/ChipsInputBase/Chip/Chip.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ChipsInputBase/Chip/Chip.tsx
function Chip_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Chip_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Chip_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Chip_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Chip_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Chip_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Chip_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Chip_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Chip_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}










var Chip_sizeYClassNames = {
    none: "vkuiChip--sizeY-none",
    compact: "vkuiChip--sizeY-compact"
};
/**
 * @see https://vkcom.github.io/VKUI/#/Chip
 */ var Chip_Chip = function(_param) {
    var _param_Component = _param.Component, Component = _param_Component === void 0 ? 'span' : _param_Component, _param_value = _param.value, value = _param_value === void 0 ? '' : _param_value, _param_removable = _param.removable, removable = _param_removable === void 0 ? true : _param_removable, onRemove = _param.onRemove, _param_removeLabel = _param.removeLabel, removeLabel = _param_removeLabel === void 0 ? 'Удалить' : _param_removeLabel, before = _param.before, after = _param.after, disabled = _param.disabled, readOnly = _param.readOnly, children = _param.children, className = _param.className, onFocusProp = _param.onFocus, onBlurProp = _param.onBlur, restProps = Chip_object_without_properties(_param, [
        "Component",
        "value",
        "removable",
        "onRemove",
        "removeLabel",
        "before",
        "after",
        "disabled",
        "readOnly",
        "children",
        "className",
        "onFocus",
        "onBlur"
    ]);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var _useFocusVisible = useFocusVisible(), focusVisible = _useFocusVisible.focusVisible, onFocus = _useFocusVisible.onFocus, onBlur = _useFocusVisible.onBlur;
    var focusVisibleClassName = useFocusVisibleClassName({
        focusVisible: focusVisible
    });
    var handleFocus = function(event) {
        if (onFocusProp) {
            onFocusProp(event);
        }
        onFocus(event);
    };
    var handleBlur = function(event) {
        if (onBlurProp) {
            onBlurProp(event);
        }
        onBlur(event);
    };
    var onRemoveWrapper = React.useCallback(function(event) {
        onRemove === null || onRemove === void 0 ? void 0 : onRemove(event, value);
    }, [
        onRemove,
        value
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, Chip_object_spread_props(Chip_object_spread({}, restProps), {
        Component: Component,
        className: classNames("vkuiChip", sizeY !== 'regular' && Chip_sizeYClassNames[sizeY], focusVisibleClassName, className),
        "aria-readonly": readOnly,
        "aria-disabled": disabled,
        onFocus: disabled ? undefined : handleFocus,
        onBlur: disabled ? undefined : handleBlur
    }), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiChip__in"
    }, hasReactNode(before) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiChip__before"
    }, before), /*#__PURE__*/ React.createElement(Footnote, {
        className: "vkuiChip__content"
    }, children), hasReactNode(after) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiChip__after"
    }, after)), !readOnly && removable && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiChip__removable"
    }, /*#__PURE__*/ React.createElement("button", {
        tabIndex: -1,
        disabled: disabled,
        className: "vkuiChip__remove",
        onClick: disabled ? undefined : onRemoveWrapper
    }, /*#__PURE__*/ React.createElement(VisuallyHidden, null, "\xa0 ", removeLabel, " ", children), /*#__PURE__*/ React.createElement(Icon16Cancel, null))));
};

;// CONCATENATED MODULE: ./src/components/FormFieldClearButton/FormFieldClearButton.tsx
function FormFieldClearButton_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function FormFieldClearButton_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            FormFieldClearButton_define_property(target, key, source[key]);
        });
    }
    return target;
}
function FormFieldClearButton_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function FormFieldClearButton_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        FormFieldClearButton_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function FormFieldClearButton_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = FormFieldClearButton_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function FormFieldClearButton_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var FormFieldClearButton_FormFieldClearButton = function(_param) {
    var className = _param.className, onClick = _param.onClick, restProps = FormFieldClearButton_object_without_properties(_param, [
        "className",
        "onClick"
    ]);
    return /*#__PURE__*/ React.createElement(IconButton, FormFieldClearButton_object_spread_props(FormFieldClearButton_object_spread({
        Component: "button",
        label: "Очистить поле",
        onKeyDown: stopPropagation,
        type: "button",
        activeMode: "opacity",
        hoverMode: "opacity"
    }, restProps), {
        className: className,
        onClick: function(e) {
            stopPropagation(e);
            e.preventDefault();
            onClick();
        }
    }), /*#__PURE__*/ React.createElement(Icon16Cancel, null));
};

;// CONCATENATED MODULE: ./src/components/ChipsInputBase/constants.tsx
function ChipsInputBase_constants_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function constants_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ChipsInputBase_constants_define_property(target, key, source[key]);
        });
    }
    return target;
}
function constants_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = constants_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function constants_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}


var constants_DEFAULT_VALUE = (/* unused pure expression or super */ null && ([]));
var constants_DEFAULT_INPUT_VALUE = '';
function constants_getOptionValueDefault(option) {
    return option.value;
}
function constants_getOptionLabelDefault(option) {
    return option.label;
}
function constants_getNewOptionDataDefault(value, label) {
    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
    return {
        value: value,
        label: label
    };
}
function constants_renderChipDefault(props) {
    var label = props.label, rest = constants_object_without_properties(props, [
        "label"
    ]);
    return /*#__PURE__*/ React.createElement(Chip, constants_object_spread({
        removable: !props.disabled
    }, rest), label);
}

;// CONCATENATED MODULE: ./src/components/ChipsInputBase/helpers.ts
function helpers_type_of(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}

/**
 * @private
 */ var helpers_isValueLikeChipOptionObject = function(v) {
    return (typeof v === "undefined" ? "undefined" : helpers_type_of(v)) === 'object' && 'value' in v;
};
/**
 * @private
 */ var helpers_isInputValueEmpty = function(input) {
    return input ? input.value === DEFAULT_INPUT_VALUE : true;
};
/**
 * @private
 */ var helpers_getChipOptionIndexByValueProp = function(optionProp, valueProp) {
    var value = helpers_isValueLikeChipOptionObject(optionProp) ? optionProp.value : optionProp;
    return valueProp.findIndex(function(option) {
        return option.value === value;
    });
};
/**
 * @private
 */ var helpers_getChipOptionIndexByHTMLElement = function(el) {
    var value = el && el.dataset.index;
    return typeof value === 'string' ? Number(value) : -1;
};
/**
 * @private
 */ var helpers_getChipOptionValueByHTMLElement = function(el) {
    var value = el && el.dataset.value;
    return typeof value === 'string' ? value : -1;
};
/**
 * @private
 */ var helpers_getNextChipOptionIndexByNavigateToProp = function(currentIndex, navigateTo, length) {
    var LAST_INDEX = length - 1;
    switch(navigateTo){
        case 'prev':
            var prevIndex = currentIndex - 1;
            return prevIndex < 0 ? LAST_INDEX : prevIndex;
        case 'next':
            var nextIndex = currentIndex + 1;
            return nextIndex > LAST_INDEX ? 0 : nextIndex;
        case 'last':
            return LAST_INDEX;
        default:
            /* istanbul ignore next */ return -1;
    }
};

;// CONCATENATED MODULE: ./src/components/ChipsInputBase/ChipsInputBase.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ChipsInputBase/ChipsInputBase.tsx
function ChipsInputBase_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function ChipsInputBase_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function ChipsInputBase_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ChipsInputBase_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function ChipsInputBase_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function ChipsInputBase_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ChipsInputBase_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ChipsInputBase_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ChipsInputBase_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ChipsInputBase_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ChipsInputBase_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ChipsInputBase_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ChipsInputBase_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function ChipsInputBase_sliced_to_array(arr, i) {
    return ChipsInputBase_array_with_holes(arr) || ChipsInputBase_iterable_to_array_limit(arr, i) || ChipsInputBase_unsupported_iterable_to_array(arr, i) || ChipsInputBase_non_iterable_rest();
}
function ChipsInputBase_type_of(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}
function ChipsInputBase_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return ChipsInputBase_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ChipsInputBase_array_like_to_array(o, minLen);
}













var ChipsInputBase_sizeYClassNames = {
    none: "vkuiChipsInputBase--sizeY-none",
    compact: "vkuiChipsInputBase--sizeY-compact"
};
var ChipsInputBase_ChipsInputBase = function(_param) {
    var // FormFieldProps
    getRootRef = _param.getRootRef, style = _param.style, className = _param.className, before = _param.before, after = _param.after, status = _param.status, mode = _param.mode, maxHeight = _param.maxHeight, _param_value = _param.// option
    value, value = _param_value === void 0 ? DEFAULT_VALUE : _param_value, onAddChipOption = _param.onAddChipOption, onRemoveChipOptionProp = _param.onRemoveChipOption, _param_renderChip = _param.renderChip, renderChip = _param_renderChip === void 0 ? renderChipDefault : _param_renderChip, // input
    getRef = _param.getRef, idProp = _param.id, _param_inputValue = _param.inputValue, inputValue = _param_inputValue === void 0 ? DEFAULT_INPUT_VALUE : _param_inputValue, placeholder = _param.placeholder, disabled = _param.disabled, readOnly = _param.readOnly, addOnBlur = _param.addOnBlur, onBlur = _param.onBlur, onInputChange = _param.onInputChange, _param_ClearButton = _param.// clear
    ClearButton, ClearButton = _param_ClearButton === void 0 ? FormFieldClearButton : _param_ClearButton, clearButtonShown = _param.clearButtonShown, clearButtonTestId = _param.clearButtonTestId, onClear = _param.onClear, restProps = ChipsInputBase_object_without_properties(_param, [
        "getRootRef",
        "style",
        "className",
        "before",
        "after",
        "status",
        "mode",
        "maxHeight",
        "value",
        "onAddChipOption",
        "onRemoveChipOption",
        "renderChip",
        "getRef",
        "id",
        "inputValue",
        "placeholder",
        "disabled",
        "readOnly",
        "addOnBlur",
        "onBlur",
        "onInputChange",
        "ClearButton",
        "clearButtonShown",
        "clearButtonTestId",
        "onClear"
    ]);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var idGenerated = React.useId();
    var inputRef = useExternRef(getRef);
    var listboxRef = React.useRef(null);
    var valueLength = value.length;
    var withPlaceholder = valueLength === 0;
    var _React_useState = ChipsInputBase_sliced_to_array(React.useState(0), 2), lastFocusedChipOptionIndex = _React_useState[0], setLastFocusedChipOptionIndex = _React_useState[1];
    var resetChipOptionFocusToInputEl = function(inputEl) {
        setLastFocusedChipOptionIndex(0);
        inputEl.focus();
    };
    var moveFocusToChipOption = function(currentIndex, navigateTo, listboxEl) {
        var index = getNextChipOptionIndexByNavigateToProp(currentIndex, navigateTo, valueLength);
        // eslint-disable-next-line no-restricted-properties
        var foundEl = listboxEl.querySelector('[data-index="'.concat(index, '"]'));
        if (foundEl) {
            setLastFocusedChipOptionIndex(index);
            foundEl.focus();
        }
    };
    var removeChipOption = function(o, index) {
        /* istanbul ignore if: невозможный кейс (в SSR вызова этой функции не будет) */ if (!inputRef.current || !listboxRef.current) {
            return;
        }
        if (valueLength > 1) {
            if (index === valueLength - 1) {
                moveFocusToChipOption(index, 'prev', listboxRef.current);
            } else {
                moveFocusToChipOption(index, 'next', listboxRef.current);
            }
        } else {
            resetChipOptionFocusToInputEl(inputRef.current);
        }
        onRemoveChipOptionProp(o);
    };
    var handleListboxKeyDown = function(event) {
        var targetEl = event.target;
        /* istanbul ignore if: невозможный кейс (в SSR вызова этой функции не будет) */ if (event.defaultPrevented || !listboxRef.current || !isHTMLElement(targetEl)) {
            return;
        }
        switch(event.key){
            case Keys.ENTER:
                {
                    if (!readOnly && checkTargetIsInputEl(targetEl, inputRef.current) && inputRef.current && !isInputValueEmpty(inputRef.current)) {
                        event.preventDefault();
                        onAddChipOption(inputRef.current.value);
                    }
                    break;
                }
            case Keys.DELETE:
            case Keys.BACKSPACE:
                {
                    if (!readOnly && valueLength > 0) {
                        if (!checkTargetIsInputEl(targetEl, inputRef.current)) {
                            event.preventDefault();
                            removeChipOption(getChipOptionValueByHTMLElement(targetEl), getChipOptionIndexByHTMLElement(targetEl));
                        } else if (event.key === Keys.BACKSPACE && isInputValueEmpty(inputRef.current)) {
                            event.preventDefault();
                            moveFocusToChipOption(getChipOptionIndexByHTMLElement(targetEl), 'last', listboxRef.current);
                        }
                    }
                    break;
                }
            case Keys.ARROW_UP:
            case Keys.ARROW_LEFT:
            case Keys.ARROW_DOWN:
            case Keys.ARROW_RIGHT:
                {
                    if (valueLength !== 0 && !checkTargetIsInputEl(targetEl, inputRef.current)) {
                        event.preventDefault();
                        moveFocusToChipOption(getChipOptionIndexByHTMLElement(targetEl), getHorizontalFocusGoTo(event.key), listboxRef.current);
                    }
                    break;
                }
        }
    };
    var handleInputBlur = function(event) {
        if (onBlur) {
            onBlur(event);
        }
        if (addOnBlur && !event.defaultPrevented && inputRef.current) {
            onAddChipOption(inputRef.current.value);
        }
    };
    var handleChipRemove = function(event, v) {
        event.preventDefault();
        event.stopPropagation();
        removeChipOption(v, getChipOptionIndexByValueProp(v, value));
    };
    var handleRootClick = function(event) {
        if (event.defaultPrevented || contains(event.currentTarget, getActiveElementByAnotherElement(event.currentTarget))) {
            return;
        }
        if (inputRef.current) {
            inputRef.current.focus();
        }
    };
    var clearButton = React.useMemo(function() {
        if (clearButtonShown) {
            return /*#__PURE__*/ React.createElement(ClearButton, {
                onClick: onClear,
                disabled: disabled,
                "data-testid": clearButtonTestId
            });
        }
        return undefined;
    }, [
        ClearButton,
        clearButtonShown,
        clearButtonTestId,
        disabled,
        onClear
    ]);
    var afterItems = React.useMemo(function() {
        if (clearButton || after) {
            return /*#__PURE__*/ React.createElement(React.Fragment, null, clearButton, after);
        }
        return undefined;
    }, [
        after,
        clearButton
    ]);
    return /*#__PURE__*/ React.createElement(FormField, {
        Component: "div",
        getRootRef: getRootRef,
        style: style,
        disabled: disabled,
        before: before,
        after: afterItems,
        status: status,
        mode: mode,
        className: className,
        maxHeight: maxHeight,
        onClick: disabled ? undefined : handleRootClick
    }, /*#__PURE__*/ React.createElement("div", {
        className: classNames("vkuiChipsInputBase", sizeY !== 'regular' && ChipsInputBase_sizeYClassNames[sizeY], withPlaceholder && "vkuiChipsInputBase--hasPlaceholder"),
        // для a11y
        ref: listboxRef,
        role: "listbox",
        "aria-orientation": "horizontal",
        "aria-disabled": disabled,
        "aria-readonly": readOnly,
        onKeyDown: disabled ? undefined : handleListboxKeyDown
    }, value.map(function(option, index) {
        return /*#__PURE__*/ React.createElement(React.Fragment, {
            key: "".concat(ChipsInputBase_type_of(option.value), "-").concat(option.value)
        }, renderChip({
            'Component': 'div',
            'value': option.value,
            'label': option.label,
            'disabled': option.disabled || disabled,
            'readOnly': option.readOnly || readOnly,
            'className': "vkuiChipsInputBase__chip",
            'onRemove': handleChipRemove,
            // чтобы можно было легче найти этот чип в DOM
            'data-index': index,
            'data-value': option.value,
            // для a11y
            'tabIndex': lastFocusedChipOptionIndex === index ? 0 : -1,
            'role': 'option',
            'aria-selected': true,
            'aria-posinset': index + 1,
            'aria-setsize': valueLength
        }, option));
    }), /*#__PURE__*/ React.createElement(Text, ChipsInputBase_object_spread_props(ChipsInputBase_object_spread({
        autoCapitalize: "none",
        autoComplete: "off",
        autoCorrect: "off",
        spellCheck: false
    }, restProps), {
        Component: "input",
        type: "text",
        id: idProp || "chips-input-base-generated-id-".concat(idGenerated),
        getRootRef: inputRef,
        className: "vkuiChipsInputBase__el",
        disabled: disabled,
        readOnly: readOnly,
        placeholder: withPlaceholder ? placeholder : undefined,
        value: inputValue,
        onChange: onInputChange,
        onBlur: handleInputBlur
    }))));
};

;// CONCATENATED MODULE: ./src/lib/react/simulateReactInput.ts
/* istanbul ignore file */ /**
 * @see https://github.com/facebook/react/issues/11488#issuecomment-347775628
 *
 * @private
 */ var simulateReactInput_simulateReactInput = function(target) {
    var nextValue = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : '';
    try {
        var prevValue = target.value;
        target.value = nextValue;
        var tracker = target._valueTracker;
        if (tracker) {
            tracker.setValue(prevValue);
        }
        var event = new Event('input', {
            bubbles: true
        });
        target.dispatchEvent(event);
    } catch (error) {
        // Чтобы в будущем узнать, что это решение уже не работает.
        if (false) {}
    }
};

;// CONCATENATED MODULE: ./src/lib/react/index.ts


;// CONCATENATED MODULE: ./src/components/ChipsInput/useChipsInput.ts
function useChipsInput_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useChipsInput_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useChipsInput_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function useChipsInput_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useChipsInput_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useChipsInput_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            useChipsInput_define_property(target, key, source[key]);
        });
    }
    return target;
}
function useChipsInput_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function useChipsInput_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        useChipsInput_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function useChipsInput_sliced_to_array(arr, i) {
    return useChipsInput_array_with_holes(arr) || useChipsInput_iterable_to_array_limit(arr, i) || useChipsInput_unsupported_iterable_to_array(arr, i) || useChipsInput_non_iterable_rest();
}
function useChipsInput_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useChipsInput_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useChipsInput_array_like_to_array(o, minLen);
}






var useChipsInput_transformValue = function(value, getOptionValue, getOptionLabel) {
    return value.map(function(option) {
        return useChipsInput_object_spread_props(useChipsInput_object_spread({}, option), {
            label: getOptionLabel(option),
            value: getOptionValue(option)
        });
    });
};
var useChipsInput_useChipsInput = function(param) {
    var // option
    valueProp = param.value, _param_defaultValue = param.defaultValue, defaultValue = _param_defaultValue === void 0 ? DEFAULT_VALUE : _param_defaultValue, onChange = param.onChange, _param_getOptionLabel = param.getOptionLabel, getOptionLabel = _param_getOptionLabel === void 0 ? getOptionLabelDefault : _param_getOptionLabel, _param_getOptionValue = param.getOptionValue, getOptionValue = _param_getOptionValue === void 0 ? getOptionValueDefault : _param_getOptionValue, _param_getNewOptionData = param.getNewOptionData, getNewOptionData = _param_getNewOptionData === void 0 ? getNewOptionDataDefault : _param_getNewOptionData, // input
    inputValueProp = param.inputValue, _param_defaultInputValue = param.defaultInputValue, defaultInputValue = _param_defaultInputValue === void 0 ? DEFAULT_INPUT_VALUE : _param_defaultInputValue, onInputChange = param.onInputChange, // other
    disabled = param.disabled;
    var _useCustomEnsuredControl = useChipsInput_sliced_to_array(useCustomEnsuredControl({
        disabled: disabled,
        value: valueProp ? useChipsInput_transformValue(valueProp, getOptionValue, getOptionLabel) : undefined,
        defaultValue: useChipsInput_transformValue(defaultValue, getOptionValue, getOptionLabel),
        onChange: onChange
    }), 2), value = _useCustomEnsuredControl[0], setValue = _useCustomEnsuredControl[1];
    var inputRef = React.useRef(null);
    var _useEnsuredControl = useChipsInput_sliced_to_array(useEnsuredControl({
        disabled: disabled,
        value: inputValueProp,
        defaultValue: defaultInputValue,
        onChange: onInputChange
    }), 2), inputValue = _useEnsuredControl[0], setInputChange = _useEnsuredControl[1];
    var toggleOption = React.useCallback(function(nextValueProp, isNewValue) {
        setValue(function(prevValue) {
            var isLikeObjectOption = isValueLikeChipOptionObject(nextValueProp);
            var resolvedOption = isLikeObjectOption ? getNewOptionData(nextValueProp.value, nextValueProp.label) : getNewOptionData(nextValueProp, typeof nextValueProp === 'string' ? nextValueProp : '');
            var nextValue = prevValue.filter(function(option) {
                return resolvedOption.value !== option.value;
            });
            if (isNewValue === true) {
                nextValue.push(isLikeObjectOption ? useChipsInput_object_spread({}, nextValueProp, resolvedOption) : resolvedOption);
            }
            return nextValue;
        });
    }, [
        setValue,
        getNewOptionData
    ]);
    var clearInput = React.useCallback(function() {
        /* istanbul ignore if */ if (!inputRef.current) {
            return;
        }
        simulateReactInput(inputRef.current, '');
    }, [
        inputRef
    ]);
    var addOption = React.useCallback(function(newValue) {
        return toggleOption(newValue, true);
    }, [
        toggleOption
    ]);
    var removeOption = React.useCallback(function(newValue) {
        return toggleOption(newValue, false);
    }, [
        toggleOption
    ]);
    var addOptionFromInput = React.useCallback(function(inputValue) {
        var label = inputValue.trim();
        if (label) {
            addOption(label);
            clearInput();
        }
    }, [
        addOption,
        clearInput
    ]);
    var reset = React.useCallback(function() {
        setValue(defaultValue);
    }, [
        defaultValue,
        setValue
    ]);
    var clearOptions = React.useCallback(function() {
        setValue(DEFAULT_VALUE);
        clearInput();
    }, [
        clearInput,
        setValue
    ]);
    useNativeFormResetListener(inputRef, reset);
    return {
        value: value,
        addOption: addOption,
        addOptionFromInput: addOptionFromInput,
        removeOption: removeOption,
        inputRef: inputRef,
        inputValue: inputValue,
        onInputChange: setInputChange,
        clearInput: clearInput,
        clearOptions: clearOptions
    };
};

;// CONCATENATED MODULE: ./src/components/ChipsInput/ChipsInput.tsx
function ChipsInput_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ChipsInput_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ChipsInput_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ChipsInput_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ChipsInput_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ChipsInput_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ChipsInput_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ChipsInput_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ChipsInput_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



/**
 * @see https://vkcom.github.io/VKUI/#/ChipsInput
 */ var ChipsInput = function(_param) {
    var // option
    valueProp = _param.value, defaultValue = _param.defaultValue, onChange = _param.onChange, // input
    getRef = _param.getRef, inputValueProp = _param.inputValue, inputDefaultValueProp = _param.defaultInputValue, onInputChangeProp = _param.onInputChange, getOptionValue = _param.getOptionValue, getOptionLabel = _param.getOptionLabel, getNewOptionData = _param.getNewOptionData, // other
    disabled = _param.disabled, allowClearButton = _param.allowClearButton, restProps = ChipsInput_object_without_properties(_param, [
        "value",
        "defaultValue",
        "onChange",
        "getRef",
        "inputValue",
        "defaultInputValue",
        "onInputChange",
        "getOptionValue",
        "getOptionLabel",
        "getNewOptionData",
        "disabled",
        "allowClearButton"
    ]);
    var _useChipsInput = useChipsInput({
        // option
        value: valueProp,
        defaultValue: defaultValue,
        onChange: onChange,
        getOptionLabel: getOptionLabel,
        getOptionValue: getOptionValue,
        getNewOptionData: getNewOptionData,
        // input
        inputValue: inputValueProp,
        defaultInputValue: inputDefaultValueProp,
        onInputChange: onInputChangeProp,
        // other
        disabled: disabled
    }), value = _useChipsInput.value, addOptionFromInput = _useChipsInput.addOptionFromInput, removeOption = _useChipsInput.removeOption, clearOptions = _useChipsInput.clearOptions, // input
    inputRefHook = _useChipsInput.inputRef, inputValue = _useChipsInput.inputValue, onInputChange = _useChipsInput.onInputChange;
    var inputRef = useExternRef(getRef, inputRefHook);
    return /*#__PURE__*/ React.createElement(ChipsInputBase, ChipsInput_object_spread_props(ChipsInput_object_spread({}, restProps), {
        disabled: disabled,
        value: value,
        clearButtonShown: allowClearButton && (!!value.length || !!inputValue.length),
        onAddChipOption: addOptionFromInput,
        onRemoveChipOption: removeOption,
        onClear: clearOptions,
        getRef: inputRef,
        inputValue: inputValue,
        onInputChange: onInputChange
    }));
};

;// CONCATENATED MODULE: ./src/lib/select.ts
function select_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function select_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function select_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function select_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function select_sliced_to_array(arr, i) {
    return select_array_with_holes(arr) || select_iterable_to_array_limit(arr, i) || select_unsupported_iterable_to_array(arr, i) || select_non_iterable_rest();
}
function select_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return select_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return select_array_like_to_array(o, minLen);
}

function select_getOptionLabelDefault(option) {
    return option.label;
}
function select_defaultFilterFn() {
    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
        args[_key] = arguments[_key];
    }
    var _args = select_sliced_to_array(args, 3), tmp = _args[0], rawSearchQuery = tmp === void 0 ? '' : tmp, option = _args[1], getOptionLabel = _args[2];
    var foundRawLabel = getOptionLabel ? getOptionLabel(option) : select_getOptionLabelDefault(option);
    if (foundRawLabel === undefined) {
        return false;
    }
    var searchQuery = rawSearchQuery.toLocaleLowerCase();
    var label = getTextFromChildren(foundRawLabel).toLocaleLowerCase();
    if (label.startsWith(searchQuery)) {
        return true;
    }
    var findAllIncludes = function() {
        var target = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : '', search = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : '';
        var includes = [];
        var i = target.indexOf(search);
        while(i !== -1){
            includes.push(i);
            i = target.indexOf(search, i + 1);
        }
        return includes;
    };
    var includes = findAllIncludes(label, searchQuery);
    if (includes.length) {
        // Ищем вхождение перед началом которого не буква
        var letterRegexp = new RegExp('\\p{L}', 'u');
        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;
        try {
            for(var _iterator = includes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){
                var index = _step.value;
                if (!letterRegexp.test(label[index - 1])) {
                    return true;
                }
            }
        } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
        } finally{
            try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                }
            } finally{
                if (_didIteratorError) {
                    throw _iteratorError;
                }
            }
        }
    }
    return false;
}
var select_getFormFieldModeFromSelectType = function() {
    var selectType = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 'default';
    return selectType === 'default' ? 'default' : 'plain';
};

;// CONCATENATED MODULE: ./src/components/CustomScrollView/useDragAndDrop.tsx
function useDragAndDrop_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useDragAndDrop_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useDragAndDrop_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useDragAndDrop_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useDragAndDrop_sliced_to_array(arr, i) {
    return useDragAndDrop_array_with_holes(arr) || useDragAndDrop_iterable_to_array_limit(arr, i) || useDragAndDrop_unsupported_iterable_to_array(arr, i) || useDragAndDrop_non_iterable_rest();
}
function useDragAndDrop_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useDragAndDrop_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useDragAndDrop_array_like_to_array(o, minLen);
}



var useDragAndDrop_useDragAndDrop = function(onDragStart, onDragMove, onDragEnd) {
    var subscribe = function subscribe(el) {
        if (el) {
            listeners.forEach(function(l) {
                return l.add(el);
            });
        }
    };
    var unsubscribe = function unsubscribe() {
        listeners.forEach(function(l) {
            return l.remove();
        });
    };
    var document = useDOM().document;
    var _React_useState = useDragAndDrop_sliced_to_array(React.useState(false), 2), isPressed = _React_useState[0], setIsPressed = _React_useState[1];
    var onDragEndImpl = function(e) {
        if (!isPressed) {
            return;
        }
        e.preventDefault();
        onDragEnd(e);
        unsubscribe();
    };
    var onDragMoveImpl = function(e) {
        if (!isPressed) {
            return;
        }
        e.preventDefault();
        onDragMove(e);
    };
    var listeners = [
        // @ts-expect-error: TS2769 ругается на тип event
        useEventListener('mousemove', onDragMoveImpl),
        // @ts-expect-error: TS2769 ругается на тип event
        useEventListener('mouseup', onDragEndImpl)
    ];
    return {
        onDragStart: function(e) {
            e.preventDefault();
            setIsPressed(true);
            onDragStart(e);
            subscribe(document);
        }
    };
};

;// CONCATENATED MODULE: ./src/components/CustomScrollView/useTrackerVisibility.ts
function useTrackerVisibility_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useTrackerVisibility_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useTrackerVisibility_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useTrackerVisibility_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useTrackerVisibility_sliced_to_array(arr, i) {
    return useTrackerVisibility_array_with_holes(arr) || useTrackerVisibility_iterable_to_array_limit(arr, i) || useTrackerVisibility_unsupported_iterable_to_array(arr, i) || useTrackerVisibility_non_iterable_rest();
}
function useTrackerVisibility_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useTrackerVisibility_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useTrackerVisibility_array_like_to_array(o, minLen);
}

/**
 * Хук, который позволяет управлять видимостью ползунка скроллбара.
 * @param autoHideScrollbar - скрывать ли ползунок скроллбара
 * @param autoHideScrollbarDelay - через какое кол-во миллисекунд ползунок скроллбара скрывается
 * @returns Объект, содержащий параметры, которые позволяют управлять видимостью ползунка
 */ var useTrackerVisibility_useTrackerVisibility = function() {
    var autoHideScrollbar = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false, autoHideScrollbarDelay = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 500;
    var _React_useState = useTrackerVisibility_sliced_to_array(React.useState(autoHideScrollbar ? 'hidden' : 'visible'), 2), visibility = _React_useState[0], setVisibility = _React_useState[1];
    var isMouseOver = React.useRef(false);
    var isTrackerDragging = React.useRef(false);
    React.useEffect(function() {
        setVisibility(autoHideScrollbar ? 'hidden' : 'visible');
    }, [
        autoHideScrollbar
    ]);
    var onTrackerDragStart = React.useCallback(function() {
        isTrackerDragging.current = true;
        setVisibility('visible');
    }, []);
    var onTrackerDragStop = React.useCallback(function() {
        isTrackerDragging.current = false;
        if (!isMouseOver.current) {
            setVisibility('temporary-visible');
        }
    }, []);
    var onTrackerMouseEnter = React.useCallback(function() {
        isMouseOver.current = true;
        setVisibility('visible');
    }, []);
    var onTrackerMouseLeave = React.useCallback(function() {
        isMouseOver.current = false;
        if (!isTrackerDragging.current) {
            setVisibility('temporary-visible');
        }
    }, []);
    var onTargetScroll = React.useCallback(function() {
        if (isMouseOver.current || isTrackerDragging.current) {
            return;
        }
        setVisibility('temporary-visible');
    }, []);
    React.useEffect(function hideAfterDelay() {
        var timeoutId = null;
        if (visibility === 'temporary-visible') {
            timeoutId = setTimeout(function() {
                setVisibility('hidden');
            }, autoHideScrollbarDelay);
        }
        return function clearHideAfterDelay() {
            if (timeoutId) {
                clearTimeout(timeoutId);
            }
        };
    }, [
        visibility,
        autoHideScrollbarDelay
    ]);
    return {
        trackerVisible: visibility !== 'hidden',
        onTrackerDragStart: onTrackerDragStart,
        onTrackerDragStop: onTrackerDragStop,
        onTrackerMouseEnter: onTrackerMouseEnter,
        onTrackerMouseLeave: onTrackerMouseLeave,
        onTargetScroll: onTargetScroll
    };
};

;// CONCATENATED MODULE: ./src/components/CustomScrollView/useHorizontalScrollController.tsx


var useHorizontalScrollController_useHorizontalScrollController = function(boxRef, autoHideScrollbar, autoHideScrollbarDelay) {
    var barX = React.useRef(null);
    var horizontalRatio = React.useRef(NaN);
    var lastTrackerLeft = React.useRef(0);
    var clientWidth = React.useRef(0);
    var trackerWidth = React.useRef(0);
    var scrollWidth = React.useRef(0);
    var startX = React.useRef(0);
    var trackerLeft = React.useRef(0);
    var trackerX = React.useRef(null);
    var _useTrackerVisibility = useTrackerVisibility(autoHideScrollbar, autoHideScrollbarDelay), trackerVisible = _useTrackerVisibility.trackerVisible, onTargetScroll = _useTrackerVisibility.onTargetScroll, onTrackerDragStart = _useTrackerVisibility.onTrackerDragStart, onTrackerDragStop = _useTrackerVisibility.onTrackerDragStop, onTrackerMouseEnter = _useTrackerVisibility.onTrackerMouseEnter, onTrackerMouseLeave = _useTrackerVisibility.onTrackerMouseLeave;
    var setHorizontalTrackerPosition = function(scrollLeft) {
        lastTrackerLeft.current = scrollLeft;
        if (trackerX.current !== null) {
            trackerX.current.style.transform = "translate(".concat(scrollLeft, "px, 0)");
        }
    };
    var setTrackerPositionFromScroll = function(scrollLeft) {
        var progress = scrollLeft / (scrollWidth.current - clientWidth.current);
        setHorizontalTrackerPosition((clientWidth.current - trackerWidth.current) * progress);
    };
    var resize = function() {
        if (!boxRef.current || !barX.current || !trackerX.current) {
            return;
        }
        var localClientWidth = boxRef.current.clientWidth;
        var localScrollWidth = boxRef.current.scrollWidth;
        var localVerticalRatio = localClientWidth / localScrollWidth;
        var localTrackerWidth = Math.max(localClientWidth * localVerticalRatio, 40);
        horizontalRatio.current = localVerticalRatio;
        clientWidth.current = localClientWidth;
        scrollWidth.current = localScrollWidth;
        trackerWidth.current = localTrackerWidth;
        var currentScrollLeft = boxRef.current.scrollLeft;
        if (localVerticalRatio >= 1) {
            barX.current.style.display = 'none';
        } else {
            barX.current.style.display = '';
            trackerX.current.style.width = "".concat(localTrackerWidth, "px");
            setTrackerPositionFromScroll(currentScrollLeft);
        }
    };
    var setScrollPositionFromTracker = function(trackerLeft) {
        var progress = trackerLeft / (clientWidth.current - trackerWidth.current);
        if (boxRef.current !== null) {
            boxRef.current.scroll({
                left: (scrollWidth.current - clientWidth.current) * progress
            });
        }
    };
    var dragging = function(e) {
        var diff = e.clientX - startX.current;
        var position = Math.min(Math.max(trackerLeft.current + diff, 0), clientWidth.current - trackerWidth.current);
        setScrollPositionFromTracker(position);
    };
    var dragEnd = function() {
        if (autoHideScrollbar) {
            onTrackerDragStop();
        }
    };
    var scroll = function() {
        if (!boxRef.current) {
            return;
        }
        if (autoHideScrollbar) {
            onTargetScroll();
        }
        setTrackerPositionFromScroll(boxRef.current.scrollLeft);
    };
    var dragStart = function(e) {
        startX.current = e.clientX;
        trackerLeft.current = lastTrackerLeft.current;
        if (autoHideScrollbar) {
            onTrackerDragStart();
        }
    };
    return {
        barRef: barX,
        trackerVisible: trackerVisible,
        trackerRef: trackerX,
        resize: resize,
        dragging: dragging,
        dragEnd: dragEnd,
        scroll: scroll,
        dragStart: dragStart,
        trackerMouseEnter: onTrackerMouseEnter,
        trackerMouseLeave: onTrackerMouseLeave
    };
};

;// CONCATENATED MODULE: ./src/components/CustomScrollView/CustomScrollView.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/CustomScrollView/ScrollX.tsx






var ScrollX_ScrollX = function(param) {
    var barHandlers = param.barHandlers, boxRef = param.boxRef, autoHideScrollbar = param.autoHideScrollbar, autoHideScrollbarDelay = param.autoHideScrollbarDelay;
    var _useHorizontalScrollController = useHorizontalScrollController(boxRef, autoHideScrollbar, autoHideScrollbarDelay), barX = _useHorizontalScrollController.barRef, horizontalTrackerVisible = _useHorizontalScrollController.trackerVisible, trackerX = _useHorizontalScrollController.trackerRef, horizontalScrollResize = _useHorizontalScrollController.resize, horizontalScroll = _useHorizontalScrollController.scroll, onHorizontalDragStart = _useHorizontalScrollController.dragStart, onHorizontalDragging = _useHorizontalScrollController.dragging, onHorizontalDragEnd = _useHorizontalScrollController.dragEnd, onHorizontalTrackerMouseEnter = _useHorizontalScrollController.trackerMouseEnter, onHorizontalTrackerMouseLeave = _useHorizontalScrollController.trackerMouseLeave;
    var _useDragAndDrop = useDragAndDrop(onHorizontalDragStart, onHorizontalDragging, onHorizontalDragEnd), onMouseDown = _useDragAndDrop.onDragStart;
    React.useImperativeHandle(barHandlers, function() {
        return {
            resize: horizontalScrollResize,
            scroll: horizontalScroll
        };
    }, [
        horizontalScrollResize,
        horizontalScroll
    ]);
    return /*#__PURE__*/ React.createElement("div", {
        className: "vkuiCustomScrollView__barX",
        ref: barX,
        onClick: stopPropagation
    }, /*#__PURE__*/ React.createElement("div", {
        className: classNames("vkuiCustomScrollView__trackerX", !horizontalTrackerVisible && "vkuiCustomScrollView__trackerX--hidden"),
        onMouseEnter: autoHideScrollbar ? onHorizontalTrackerMouseEnter : undefined,
        onMouseLeave: autoHideScrollbar ? onHorizontalTrackerMouseLeave : undefined,
        ref: trackerX,
        onMouseDown: onMouseDown
    }));
};

;// CONCATENATED MODULE: ./src/components/CustomScrollView/useVerticalScrollController.tsx


var useVerticalScrollController_useVerticalScrollController = function(boxRef, autoHideScrollbar, autoHideScrollbarDelay) {
    var barY = React.useRef(null);
    var verticalRatio = React.useRef(NaN);
    var lastTrackerTop = React.useRef(0);
    var clientHeight = React.useRef(0);
    var trackerHeight = React.useRef(0);
    var scrollHeight = React.useRef(0);
    var startY = React.useRef(0);
    var trackerTop = React.useRef(0);
    var trackerY = React.useRef(null);
    var _useTrackerVisibility = useTrackerVisibility(autoHideScrollbar, autoHideScrollbarDelay), trackerVisible = _useTrackerVisibility.trackerVisible, onTargetScroll = _useTrackerVisibility.onTargetScroll, onTrackerDragStart = _useTrackerVisibility.onTrackerDragStart, onTrackerDragStop = _useTrackerVisibility.onTrackerDragStop, onTrackerMouseEnter = _useTrackerVisibility.onTrackerMouseEnter, onTrackerMouseLeave = _useTrackerVisibility.onTrackerMouseLeave;
    var setVerticalTrackerPosition = function(scrollTop) {
        lastTrackerTop.current = scrollTop;
        if (trackerY.current !== null) {
            trackerY.current.style.transform = "translate(0, ".concat(scrollTop, "px)");
        }
    };
    var setTrackerPositionFromScroll = function(scrollTop) {
        var progress = scrollTop / (scrollHeight.current - clientHeight.current);
        setVerticalTrackerPosition((clientHeight.current - trackerHeight.current) * progress);
    };
    var resize = function() {
        if (!boxRef.current || !barY.current || !trackerY.current) {
            return;
        }
        var localClientHeight = boxRef.current.clientHeight;
        var localScrollHeight = boxRef.current.scrollHeight;
        var localVerticalRatio = localClientHeight / localScrollHeight;
        var localTrackerHeight = Math.max(localClientHeight * localVerticalRatio, 40);
        verticalRatio.current = localVerticalRatio;
        clientHeight.current = localClientHeight;
        scrollHeight.current = localScrollHeight;
        trackerHeight.current = localTrackerHeight;
        var currentScrollTop = boxRef.current.scrollTop;
        if (localVerticalRatio >= 1) {
            barY.current.style.display = 'none';
        } else {
            barY.current.style.display = '';
            trackerY.current.style.height = "".concat(localTrackerHeight, "px");
            setTrackerPositionFromScroll(currentScrollTop);
        }
    };
    var setScrollPositionFromTracker = function(trackerTop) {
        var progress = trackerTop / (clientHeight.current - trackerHeight.current);
        if (boxRef.current !== null) {
            boxRef.current.scroll({
                top: (scrollHeight.current - clientHeight.current) * progress
            });
        }
    };
    var dragging = function(e) {
        var diff = e.clientY - startY.current;
        var position = Math.min(Math.max(trackerTop.current + diff, 0), clientHeight.current - trackerHeight.current);
        setScrollPositionFromTracker(position);
    };
    var dragEnd = function() {
        if (autoHideScrollbar) {
            onTrackerDragStop();
        }
    };
    var scroll = function() {
        if (!boxRef.current) {
            return;
        }
        if (autoHideScrollbar) {
            onTargetScroll();
        }
        setTrackerPositionFromScroll(boxRef.current.scrollTop);
    };
    var dragStart = function(e) {
        startY.current = e.clientY;
        trackerTop.current = lastTrackerTop.current;
        if (autoHideScrollbar) {
            onTrackerDragStart();
        }
    };
    return {
        barRef: barY,
        trackerVisible: trackerVisible,
        trackerRef: trackerY,
        resize: resize,
        dragging: dragging,
        dragEnd: dragEnd,
        scroll: scroll,
        dragStart: dragStart,
        trackerMouseEnter: onTrackerMouseEnter,
        trackerMouseLeave: onTrackerMouseLeave
    };
};

;// CONCATENATED MODULE: ./src/components/CustomScrollView/ScrollY.tsx






var ScrollY_ScrollY = function(param) {
    var barHandlers = param.barHandlers, boxRef = param.boxRef, autoHideScrollbar = param.autoHideScrollbar, autoHideScrollbarDelay = param.autoHideScrollbarDelay;
    var _useVerticalScrollController = useVerticalScrollController(boxRef, autoHideScrollbar, autoHideScrollbarDelay), barY = _useVerticalScrollController.barRef, verticalTrackerVisible = _useVerticalScrollController.trackerVisible, trackerY = _useVerticalScrollController.trackerRef, verticalScrollResize = _useVerticalScrollController.resize, verticalScroll = _useVerticalScrollController.scroll, onVerticalDragStart = _useVerticalScrollController.dragStart, onVerticalDragging = _useVerticalScrollController.dragging, onVerticalDragEnd = _useVerticalScrollController.dragEnd, onVerticalTrackerMouseEnter = _useVerticalScrollController.trackerMouseEnter, onVerticalTrackerMouseLeave = _useVerticalScrollController.trackerMouseLeave;
    var _useDragAndDrop = useDragAndDrop(onVerticalDragStart, onVerticalDragging, onVerticalDragEnd), onMouseDown = _useDragAndDrop.onDragStart;
    React.useImperativeHandle(barHandlers, function() {
        return {
            resize: verticalScrollResize,
            scroll: verticalScroll
        };
    }, [
        verticalScrollResize,
        verticalScroll
    ]);
    return /*#__PURE__*/ React.createElement("div", {
        className: "vkuiCustomScrollView__barY",
        ref: barY,
        onClick: stopPropagation
    }, /*#__PURE__*/ React.createElement("div", {
        className: classNames("vkuiCustomScrollView__trackerY", !verticalTrackerVisible && "vkuiCustomScrollView__trackerY--hidden"),
        onMouseEnter: autoHideScrollbar ? onVerticalTrackerMouseEnter : undefined,
        onMouseLeave: autoHideScrollbar ? onVerticalTrackerMouseLeave : undefined,
        ref: trackerY,
        onMouseDown: onMouseDown
    }));
};

;// CONCATENATED MODULE: ./src/components/CustomScrollView/useCustomScrollViewResize.ts





var useCustomScrollViewResize_useCustomScrollViewResize = function(param) {
    var windowResize = param.windowResize, onResize = param.onResize, boxContentRef = param.boxContentRef;
    var window = useDOM().window;
    var resizeCb = useStableCallback(onResize);
    var resizeHandler = useEventListener('resize', resizeCb);
    useIsomorphicLayoutEffect(function() {
        if (windowResize && window) {
            resizeHandler.add(window);
        }
    }, [
        windowResize,
        window
    ]);
    useResizeObserver(boxContentRef, resizeCb);
    useIsomorphicLayoutEffect(resizeCb, []);
};

;// CONCATENATED MODULE: ./src/components/CustomScrollView/useDetectScrollDirection.ts

/**
 * Хук определяет в каком измерении происходит скролл(в горизонтальном или вертикальном)
 */ var useDetectScrollDirection_useDetectScrollDirection = function() {
    var lastScrollLeft = React.useRef(0);
    var lastScrollTop = React.useRef(0);
    return React.useCallback(function(event) {
        var _event_currentTarget = event.currentTarget, scrollTop = _event_currentTarget.scrollTop, scrollLeft = _event_currentTarget.scrollLeft;
        if (scrollTop !== lastScrollTop.current) {
            lastScrollTop.current = scrollTop;
            return 'vertical';
        } else if (scrollLeft !== lastScrollLeft.current) {
            lastScrollLeft.current = scrollLeft;
            return 'horizontal';
        }
        return null;
    }, []);
};

;// CONCATENATED MODULE: ./src/components/CustomScrollView/CustomScrollView.tsx
function CustomScrollView_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CustomScrollView_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CustomScrollView_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CustomScrollView_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CustomScrollView_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CustomScrollView_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}









function CustomScrollView_hasPointerClassName(hasPointer) {
    switch(hasPointer){
        case true:
            return "vkuiCustomScrollView--hasPointer-true";
        case false:
            return "vkuiCustomScrollView--hasPointer-false";
        case undefined:
        default:
            return "vkuiCustomScrollView--hasPointer-none";
    }
}
var overscrollBehaviorClassNames = {
    auto: undefined,
    contain: "vkuiCustomScrollView__box--overscrollBehavior-contain",
    none: "vkuiCustomScrollView__box--overscrollBehavior-none"
};
/**
 * @see https://vkcom.github.io/VKUI/#/CustomScrollView
 */ var CustomScrollView_CustomScrollView = function(_param) {
    var className = _param.className, children = _param.children, externalBoxRef = _param.boxRef, windowResize = _param.windowResize, _param_autoHideScrollbar = _param.autoHideScrollbar, autoHideScrollbar = _param_autoHideScrollbar === void 0 ? false : _param_autoHideScrollbar, autoHideScrollbarDelay = _param.autoHideScrollbarDelay, _param_enableHorizontalScroll = _param.enableHorizontalScroll, enableHorizontalScroll = _param_enableHorizontalScroll === void 0 ? false : _param_enableHorizontalScroll, onScrollProp = _param.onScroll, getRootRef = _param.getRootRef, _param_overscrollBehavior = _param.overscrollBehavior, overscrollBehavior = _param_overscrollBehavior === void 0 ? 'auto' : _param_overscrollBehavior, restProps = CustomScrollView_object_without_properties(_param, [
        "className",
        "children",
        "boxRef",
        "windowResize",
        "autoHideScrollbar",
        "autoHideScrollbarDelay",
        "enableHorizontalScroll",
        "onScroll",
        "getRootRef",
        "overscrollBehavior"
    ]);
    var hasPointer = useAdaptivity().hasPointer;
    var boxRef = useExternRef(externalBoxRef);
    var boxContentRef = React.useRef(null);
    var detectScrollDirection = useDetectScrollDirection();
    var barYHandlers = React.useRef(null);
    var barXHandlers = React.useRef(null);
    useCustomScrollViewResize({
        windowResize: windowResize,
        boxContentRef: boxContentRef,
        onResize: function() {
            var _barYHandlers_current, _barXHandlers_current;
            (_barYHandlers_current = barYHandlers.current) === null || _barYHandlers_current === void 0 ? void 0 : _barYHandlers_current.resize();
            (_barXHandlers_current = barXHandlers.current) === null || _barXHandlers_current === void 0 ? void 0 : _barXHandlers_current.resize();
        }
    });
    var onScroll = function(event) {
        var scrollDirection = detectScrollDirection(event);
        switch(scrollDirection){
            case 'horizontal':
                var _barXHandlers_current;
                (_barXHandlers_current = barXHandlers.current) === null || _barXHandlers_current === void 0 ? void 0 : _barXHandlers_current.scroll();
                break;
            case 'vertical':
                var _barYHandlers_current;
                (_barYHandlers_current = barYHandlers.current) === null || _barYHandlers_current === void 0 ? void 0 : _barYHandlers_current.scroll();
                break;
        }
        onScrollProp === null || onScrollProp === void 0 ? void 0 : onScrollProp(event);
    };
    return /*#__PURE__*/ React.createElement("div", CustomScrollView_object_spread({
        className: classNames(className, "vkuiCustomScrollView", CustomScrollView_hasPointerClassName(hasPointer)),
        ref: getRootRef
    }, restProps), /*#__PURE__*/ React.createElement("div", {
        className: classNames("vkuiCustomScrollView__box", enableHorizontalScroll && "vkuiCustomScrollView__box--horizontalEnabled", overscrollBehaviorClassNames[overscrollBehavior]),
        tabIndex: -1,
        ref: boxRef,
        onScroll: onScroll
    }, /*#__PURE__*/ React.createElement("div", {
        ref: boxContentRef,
        className: "vkuiCustomScrollView__box-content"
    }, children)), /*#__PURE__*/ React.createElement(ScrollY, {
        barHandlers: barYHandlers,
        boxRef: boxRef,
        autoHideScrollbar: autoHideScrollbar,
        autoHideScrollbarDelay: autoHideScrollbarDelay
    }), enableHorizontalScroll && /*#__PURE__*/ React.createElement(ScrollX, {
        barHandlers: barXHandlers,
        boxRef: boxRef,
        autoHideScrollbar: autoHideScrollbar,
        autoHideScrollbarDelay: autoHideScrollbarDelay
    }));
};

;// CONCATENATED MODULE: ./src/components/CustomSelectDropdown/CustomSelectDropdown.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/CustomSelectDropdown/CustomSelectDropdown.tsx
function CustomSelectDropdown_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CustomSelectDropdown_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CustomSelectDropdown_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CustomSelectDropdown_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CustomSelectDropdown_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CustomSelectDropdown_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






var CustomSelectDropdown_CustomSelectDropdown = function(_param) {
    var children = _param.children, targetRef = _param.targetRef, scrollBoxRef = _param.scrollBoxRef, _param_placement = _param.placement, placement = _param_placement === void 0 ? 'bottom' : _param_placement, fetching = _param.fetching, _param_offsetDistance = _param.offsetDistance, offsetDistance = _param_offsetDistance === void 0 ? 0 : _param_offsetDistance, _param_autoWidth = _param.autoWidth, autoWidth = _param_autoWidth === void 0 ? false : _param_autoWidth, _param_forcePortal = _param.forcePortal, forcePortal = _param_forcePortal === void 0 ? true : _param_forcePortal, autoHideScrollbar = _param.autoHideScrollbar, autoHideScrollbarDelay = _param.autoHideScrollbarDelay, className = _param.className, _param_noMaxHeight = _param.noMaxHeight, noMaxHeight = _param_noMaxHeight === void 0 ? false : _param_noMaxHeight, // CustomScrollView
    overscrollBehavior = _param.overscrollBehavior, restProps = CustomSelectDropdown_object_without_properties(_param, [
        "children",
        "targetRef",
        "scrollBoxRef",
        "placement",
        "fetching",
        "offsetDistance",
        "autoWidth",
        "forcePortal",
        "autoHideScrollbar",
        "autoHideScrollbarDelay",
        "className",
        "noMaxHeight",
        "overscrollBehavior"
    ]);
    return /*#__PURE__*/ React.createElement(Popper, CustomSelectDropdown_object_spread({
        targetRef: targetRef,
        offsetByMainAxis: offsetDistance,
        sameWidth: !autoWidth,
        placement: placement,
        className: classNames("vkuiCustomSelectDropdown", 'vkuiInternalCustomSelectDropdown', offsetDistance === 0 && (placement.includes('top') ? "vkuiCustomSelectDropdown--top" : "vkuiCustomSelectDropdown--bottom"), autoWidth && classNames("vkuiCustomSelectDropdown--wide", 'vkuiInternalCustomSelectDropdown--wide'), className),
        usePortal: forcePortal,
        autoUpdateOnTargetResize: true
    }, restProps), /*#__PURE__*/ React.createElement(CustomScrollView, {
        boxRef: scrollBoxRef,
        className: noMaxHeight ? undefined : "vkuiCustomSelectDropdown__in--withMaxHeight",
        autoHideScrollbar: autoHideScrollbar,
        autoHideScrollbarDelay: autoHideScrollbarDelay,
        overscrollBehavior: overscrollBehavior
    }, fetching ? /*#__PURE__*/ React.createElement("div", {
        className: "vkuiCustomSelectDropdown__fetching"
    }, /*#__PURE__*/ React.createElement(Spinner, {
        size: "small"
    })) : children));
};

;// CONCATENATED MODULE: ./src/components/CustomSelectOption/CustomSelectOption.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/CustomSelectOption/CustomSelectOption.tsx
function CustomSelectOption_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CustomSelectOption_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CustomSelectOption_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CustomSelectOption_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function CustomSelectOption_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        CustomSelectOption_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function CustomSelectOption_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CustomSelectOption_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CustomSelectOption_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}








var CustomSelectOption_sizeYClassNames = {
    none: "vkuiCustomSelectOption--sizeY-none",
    regular: "vkuiCustomSelectOption--sizeY-regular"
};
/**
 * @see https://vkcom.github.io/VKUI/#/CustomSelectOption
 */ var CustomSelectOption_CustomSelectOption = function(_param) {
    var children = _param.children, _param_hierarchy = _param.hierarchy, hierarchy = _param_hierarchy === void 0 ? 0 : _param_hierarchy, hoveredProp = _param.hovered, selected = _param.selected, before = _param.before, after = _param.after, description = _param.description, disabled = _param.disabled, styleProp = _param.style, className = _param.className, onClick = _param.onClick, restProps = CustomSelectOption_object_without_properties(_param, [
        "children",
        "hierarchy",
        "hovered",
        "selected",
        "before",
        "after",
        "description",
        "disabled",
        "style",
        "className",
        "onClick"
    ]);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var style = React.useMemo(function() {
        return hierarchy > 0 ? CustomSelectOption_object_spread({
            '--vkui_internal--custom_select_option_hierarchy_level': hierarchy
        }, styleProp) : styleProp;
    }, [
        hierarchy,
        styleProp
    ]);
    var hovered = hoveredProp && !disabled ? true : false;
    return /*#__PURE__*/ React.createElement(Paragraph, CustomSelectOption_object_spread_props(CustomSelectOption_object_spread({}, restProps), {
        onClick: disabled ? undefined : onClick,
        Component: "div",
        role: "option",
        "aria-disabled": disabled,
        "aria-selected": selected,
        "data-hovered": hovered,
        className: classNames("vkuiCustomSelectOption", sizeY !== 'compact' && CustomSelectOption_sizeYClassNames[sizeY], hovered && "vkuiCustomSelectOption--hover", disabled && "vkuiCustomSelectOption--disabled", hierarchy > 0 && "vkuiCustomSelectOption--hierarchy", className),
        style: style
    }), hasReactNode(before) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiCustomSelectOption__before"
    }, before), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiCustomSelectOption__main"
    }, /*#__PURE__*/ React.createElement("div", {
        className: "vkuiCustomSelectOption__children"
    }, children), hasReactNode(description) && /*#__PURE__*/ React.createElement(Footnote, {
        className: "vkuiCustomSelectOption__description"
    }, /*#__PURE__*/ React.createElement(VisuallyHidden, null, "\xa0"), description)), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiCustomSelectOption__after"
    }, hasReactNode(after) && /*#__PURE__*/ React.createElement("div", null, after), selected && /*#__PURE__*/ React.createElement(Icon16Done, {
        className: "vkuiCustomSelectOption__selectedIcon"
    })));
};

;// CONCATENATED MODULE: ./src/components/DropdownIcon/DropdownIcon.tsx
function DropdownIcon_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function DropdownIcon_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            DropdownIcon_define_property(target, key, source[key]);
        });
    }
    return target;
}
function DropdownIcon_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = DropdownIcon_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function DropdownIcon_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var DropdownIcon_DropdownIcon = function(_param) {
    var _param_opened = _param.opened, opened = _param_opened === void 0 ? false : _param_opened, className = _param.className, restProps = DropdownIcon_object_without_properties(_param, [
        "opened",
        "className"
    ]);
    var sizeY = useAdaptivityConditionalRender().sizeY;
    var IconCompact = opened ? Icon20ChevronUp : Icon20Dropdown;
    var IconRegular = opened ? Icon24ChevronUp : Icon24ChevronDown;
    return /*#__PURE__*/ React.createElement(React.Fragment, null, sizeY.compact && /*#__PURE__*/ React.createElement(IconCompact, DropdownIcon_object_spread({
        className: classNames(sizeY.compact.className, className)
    }, restProps)), sizeY.regular && /*#__PURE__*/ React.createElement(IconRegular, DropdownIcon_object_spread({
        className: classNames(sizeY.regular.className, className)
    }, restProps)));
};

;// CONCATENATED MODULE: ./src/components/ChipsSelect/constants.tsx

var constants_DEFAULT_SELECTED_BEHAVIOR = 'highlight';
var constants_DEFAULT_EMPTY_TEXT = 'Ничего не найдено';
var constants_FOCUS_ACTION_NEXT = 'next';
var constants_FOCUS_ACTION_PREV = 'prev';
var constants_renderOptionDefault = function(props) {
    return /*#__PURE__*/ React.createElement(CustomSelectOption, props);
};
var constants_isCreateNewOptionPreset = function(option) {
    return option && 'actionText' in option;
};
var constants_isEmptyOptionPreset = function(option) {
    return option && 'placeholder' in option;
};
var constants_isNotServicePreset = function(option) {
    return !constants_isCreateNewOptionPreset(option) && !constants_isEmptyOptionPreset(option);
};

;// CONCATENATED MODULE: ./src/components/ChipsSelect/useChipsSelect.ts
function useChipsSelect_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useChipsSelect_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useChipsSelect_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function useChipsSelect_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useChipsSelect_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useChipsSelect_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            useChipsSelect_define_property(target, key, source[key]);
        });
    }
    return target;
}
function useChipsSelect_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function useChipsSelect_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        useChipsSelect_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function useChipsSelect_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = useChipsSelect_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function useChipsSelect_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function useChipsSelect_sliced_to_array(arr, i) {
    return useChipsSelect_array_with_holes(arr) || useChipsSelect_iterable_to_array_limit(arr, i) || useChipsSelect_unsupported_iterable_to_array(arr, i) || useChipsSelect_non_iterable_rest();
}
function useChipsSelect_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useChipsSelect_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useChipsSelect_array_like_to_array(o, minLen);
}







var useChipsSelect_useChipsSelect = function(param) {
    var // common
    disabled = param.disabled, // option
    valueProp = param.value, defaultValue = param.defaultValue, onChange = param.onChange, _param_getOptionLabel = param.getOptionLabel, getOptionLabel = _param_getOptionLabel === void 0 ? getOptionLabelDefault : _param_getOptionLabel, _param_getOptionValue = param.getOptionValue, getOptionValue = _param_getOptionValue === void 0 ? getOptionValueDefault : _param_getOptionValue, _param_getNewOptionData = param.getNewOptionData, getNewOptionData = _param_getNewOptionData === void 0 ? getNewOptionDataDefault : _param_getNewOptionData, // input
    inputValueProp = param.inputValue, _param_defaultInputValue = param.defaultInputValue, defaultInputValue = _param_defaultInputValue === void 0 ? DEFAULT_INPUT_VALUE : _param_defaultInputValue, onInputChangeProp = param.onInputChange, _param_creatable = param.// dropdown
    creatable, creatable = _param_creatable === void 0 ? false : _param_creatable, _param_emptyText = param.emptyText, emptyText = _param_emptyText === void 0 ? DEFAULT_EMPTY_TEXT : _param_emptyText, _param_filterFn = param.filterFn, filterFn = _param_filterFn === void 0 ? defaultFilterFn : _param_filterFn, _param_selectedBehavior = param.selectedBehavior, selectedBehavior = _param_selectedBehavior === void 0 ? DEFAULT_SELECTED_BEHAVIOR : _param_selectedBehavior, tmp = param.options, optionsProp = tmp === void 0 ? DEFAULT_VALUE : tmp, onClose = param.onClose, onOpen = param.onOpen;
    var _useChipsInput = useChipsInput({
        // option
        value: valueProp,
        defaultValue: defaultValue,
        onChange: onChange,
        getOptionValue: getOptionValue,
        getOptionLabel: getOptionLabel,
        getNewOptionData: getNewOptionData,
        // input
        inputValue: inputValueProp,
        defaultInputValue: defaultInputValue,
        onInputChange: onInputChangeProp,
        // other
        disabled: disabled
    }), value = _useChipsInput.value, inputValue = _useChipsInput.inputValue, onInputChange = _useChipsInput.onInputChange, restChipsInputProps = useChipsSelect_object_without_properties(_useChipsInput, [
        "value",
        "inputValue",
        "onInputChange"
    ]);
    // dropdown
    var _React_useState = useChipsSelect_sliced_to_array(React.useState(false), 2), opened = _React_useState[0], setOpened = _React_useState[1];
    var _React_useState1 = useChipsSelect_sliced_to_array(React.useState(function() {
        return opened ? transformOptions({
            value: value,
            getOptionValue: getOptionValue,
            getOptionLabel: getOptionLabel,
            inputValue: inputValue,
            emptyText: emptyText,
            creatable: creatable,
            filterFn: filterFn,
            options: optionsProp,
            selectedBehavior: selectedBehavior
        }) : [];
    }), 2), options = _React_useState1[0], setOptions = _React_useState1[1];
    var _React_useState2 = useChipsSelect_sliced_to_array(React.useState(0), 2), focusedOptionIndex = _React_useState2[0], setFocusedOptionIndex = _React_useState2[1];
    var _React_useState3 = useChipsSelect_sliced_to_array(React.useState(null), 2), focusedOption = _React_useState3[0], setFocusedOption = _React_useState3[1];
    var handleOpened = React.useCallback(function(isOpened) {
        isOpened ? onOpen === null || onOpen === void 0 ? void 0 : onOpen() : onClose === null || onClose === void 0 ? void 0 : onClose();
        setOpened(isOpened);
    }, [
        onOpen,
        onClose
    ]);
    var handleInputChange = React.useCallback(function(event) {
        onInputChange(event);
        if (!opened) {
            handleOpened(true);
            setFocusedOptionIndex(0);
        }
    }, [
        onInputChange,
        opened,
        handleOpened
    ]);
    useIsomorphicLayoutEffect(function handleDropdownOpen() {
        if (!opened) {
            return;
        }
        setOptions(function(prevOptions) {
            var nextOptions = transformOptions({
                value: value,
                getOptionValue: getOptionValue,
                getOptionLabel: getOptionLabel,
                inputValue: inputValue,
                emptyText: emptyText,
                creatable: creatable,
                filterFn: filterFn,
                options: optionsProp,
                selectedBehavior: selectedBehavior
            });
            if (isEqual(prevOptions, nextOptions)) {
                return prevOptions;
            }
            return nextOptions;
        });
    }, [
        opened,
        value,
        getOptionLabel,
        getOptionValue,
        inputValue,
        optionsProp,
        creatable,
        selectedBehavior,
        filterFn
    ]);
    return useChipsSelect_object_spread_props(useChipsSelect_object_spread({}, restChipsInputProps), {
        // options
        value: value,
        // input
        inputValue: inputValue,
        onInputChange: handleInputChange,
        // dropdown states
        options: options,
        opened: opened,
        setOpened: handleOpened,
        focusedOption: focusedOption,
        focusedOptionIndex: focusedOptionIndex,
        setFocusedOption: setFocusedOption,
        setFocusedOptionIndex: setFocusedOptionIndex
    });
};
function transformOptions(param) {
    var value = param.value, _param_getOptionValue = param.getOptionValue, getOptionValue = _param_getOptionValue === void 0 ? getOptionValueDefault : _param_getOptionValue, _param_getOptionLabel = param.getOptionLabel, getOptionLabel = _param_getOptionLabel === void 0 ? getOptionLabelDefault : _param_getOptionLabel, _param_inputValue = param.inputValue, inputValue = _param_inputValue === void 0 ? DEFAULT_INPUT_VALUE : _param_inputValue, _param_emptyText = param.emptyText, emptyText = _param_emptyText === void 0 ? DEFAULT_EMPTY_TEXT : _param_emptyText, _param_creatable = param.creatable, creatable = _param_creatable === void 0 ? false : _param_creatable, _param_filterFn = param.filterFn, filterFn = _param_filterFn === void 0 ? defaultFilterFn : _param_filterFn, tmp = param.options, optionsProp = tmp === void 0 ? DEFAULT_VALUE : tmp, _param_selectedBehavior = param.selectedBehavior, selectedBehavior = _param_selectedBehavior === void 0 ? DEFAULT_SELECTED_BEHAVIOR : _param_selectedBehavior;
    var filteredOptionsProp = filterFn ? optionsProp.filter(function(option) {
        return filterFn(inputValue, option, getOptionLabel);
    }) : optionsProp;
    if (filteredOptionsProp.length === 0) {
        if (inputValue !== DEFAULT_INPUT_VALUE && typeof creatable === 'string') {
            return [
                {
                    actionText: creatable
                }
            ];
        }
        return [
            {
                placeholder: emptyText
            }
        ];
    }
    var parsedOptions = transformValue(filteredOptionsProp, getOptionValue, getOptionLabel);
    if (selectedBehavior === 'hide') {
        var selected = value.map(function(item) {
            return item.value;
        });
        return parsedOptions.filter(function(item) {
            return isNotServicePreset(item) ? !selected.includes(item.value) : false;
        });
    }
    return parsedOptions;
}

;// CONCATENATED MODULE: ./src/components/ChipsSelect/ChipsSelect.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/ChipsSelect/ChipsSelect.tsx
function ChipsSelect_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function ChipsSelect_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function ChipsSelect_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ChipsSelect_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function ChipsSelect_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function ChipsSelect_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ChipsSelect_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ChipsSelect_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ChipsSelect_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ChipsSelect_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ChipsSelect_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ChipsSelect_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ChipsSelect_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function ChipsSelect_sliced_to_array(arr, i) {
    return ChipsSelect_array_with_holes(arr) || ChipsSelect_iterable_to_array_limit(arr, i) || ChipsSelect_unsupported_iterable_to_array(arr, i) || ChipsSelect_non_iterable_rest();
}
function ChipsSelect_type_of(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}
function ChipsSelect_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return ChipsSelect_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ChipsSelect_array_like_to_array(o, minLen);
}















var findIndexAfter = function() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], startIndex = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1;
    if (startIndex >= options.length - 1) {
        return -1;
    }
    return options.findIndex(function(option, i) {
        return i > startIndex && (!isNotServicePreset(option) || !option.disabled);
    });
};
var findIndexBefore = function() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], endIndex = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : options.length;
    var result = -1;
    if (endIndex <= 0) {
        return result;
    }
    for(var i = endIndex - 1; i >= 0; i--){
        var option = options[i];
        if (!isNotServicePreset(option) || !option.disabled) {
            result = i;
            break;
        }
    }
    return result;
};
/**
 * @see https://vkcom.github.io/VKUI/#/ChipsSelect
 */ var ChipsSelect = function(_param) {
    var // FormFieldProps
    labelledbyId = _param.id, getRootRef = _param.getRootRef, className = _param.className, _param_status = _param.status, status = _param_status === void 0 ? 'default' : _param_status, dropdownIconProp = _param.icon, onChangeStart = _param.onChangeStart, // CustomSelectDropdownProps
    optionsProp = _param.options, tmp = _param.placement, placementProp = tmp === void 0 ? 'bottom' : tmp, _param_closeAfterSelect = _param.closeAfterSelect, closeAfterSelect = _param_closeAfterSelect === void 0 ? true : _param_closeAfterSelect, _param_selectedBehavior = _param.selectedBehavior, selectedBehavior = _param_selectedBehavior === void 0 ? DEFAULT_SELECTED_BEHAVIOR : _param_selectedBehavior, _param_emptyText = _param.emptyText, emptyText = _param_emptyText === void 0 ? DEFAULT_EMPTY_TEXT : _param_emptyText, _param_creatable = _param.creatable, creatable = _param_creatable === void 0 ? false : _param_creatable, _param_fetching = _param.fetching, fetching = _param_fetching === void 0 ? false : _param_fetching, dropdownAutoWidth = _param.dropdownAutoWidth, forceDropdownPortal = _param.forceDropdownPortal, _param_noMaxHeight = _param.noMaxHeight, noMaxHeight = _param_noMaxHeight === void 0 ? false : _param_noMaxHeight, _param_filterFn = _param.filterFn, filterFn = _param_filterFn === void 0 ? defaultFilterFn : _param_filterFn, dropdownTestId = _param.dropdownTestId, onClose = _param.onClose, onOpen = _param.onOpen, overscrollBehavior = _param.overscrollBehavior, renderDropdown = _param.renderDropdown, // ChipsInputProps
    getRef = _param.getRef, valueProp = _param.value, defaultValue = _param.defaultValue, inputValueProp = _param.inputValue, defaultInputValue = _param.defaultInputValue, disabled = _param.disabled, readOnly = _param.readOnly, _param_getOptionValue = _param.getOptionValue, getOptionValue = _param_getOptionValue === void 0 ? getOptionValueDefault : _param_getOptionValue, _param_getOptionLabel = _param.getOptionLabel, getOptionLabel = _param_getOptionLabel === void 0 ? getOptionLabelDefault : _param_getOptionLabel, _param_getNewOptionData = _param.getNewOptionData, getNewOptionData = _param_getNewOptionData === void 0 ? getNewOptionDataDefault : _param_getNewOptionData, _param_renderChip = _param.renderChip, renderChip = _param_renderChip === void 0 ? renderChipDefault : _param_renderChip, _param_renderOption = _param.renderOption, renderOption = _param_renderOption === void 0 ? renderOptionDefault : _param_renderOption, onChange = _param.onChange, onFocusProp = _param.onFocus, onInputChangeProp = _param.onInputChange, onBlurProp = _param.onBlur, onKeyDownProp = _param.onKeyDown, _param_dropdownOffsetDistance = _param.dropdownOffsetDistance, dropdownOffsetDistance = _param_dropdownOffsetDistance === void 0 ? 0 : _param_dropdownOffsetDistance, allowClearButton = _param.allowClearButton, clearButtonTestId = _param.clearButtonTestId, restProps = ChipsSelect_object_without_properties(_param, [
        "id",
        "getRootRef",
        "className",
        "status",
        "icon",
        "onChangeStart",
        "options",
        "placement",
        "closeAfterSelect",
        "selectedBehavior",
        "emptyText",
        "creatable",
        "fetching",
        "dropdownAutoWidth",
        "forceDropdownPortal",
        "noMaxHeight",
        "filterFn",
        "dropdownTestId",
        "onClose",
        "onOpen",
        "overscrollBehavior",
        "renderDropdown",
        "getRef",
        "value",
        "defaultValue",
        "inputValue",
        "defaultInputValue",
        "disabled",
        "readOnly",
        "getOptionValue",
        "getOptionLabel",
        "getNewOptionData",
        "renderChip",
        "renderOption",
        "onChange",
        "onFocus",
        "onInputChange",
        "onBlur",
        "onKeyDown",
        "dropdownOffsetDistance",
        "allowClearButton",
        "clearButtonTestId"
    ]);
    var _useChipsSelect = useChipsSelect({
        // option
        value: valueProp,
        defaultValue: defaultValue,
        onChange: onChange,
        getOptionValue: getOptionValue,
        getOptionLabel: getOptionLabel,
        getNewOptionData: getNewOptionData,
        // input
        inputValue: inputValueProp,
        defaultInputValue: defaultInputValue,
        onInputChange: onInputChangeProp,
        // dropdown
        options: optionsProp,
        emptyText: emptyText,
        creatable: creatable,
        filterFn: filterFn,
        selectedBehavior: selectedBehavior,
        onClose: onClose,
        onOpen: onOpen,
        // other
        disabled: disabled
    }), // Связано с ChipsInputProps
    // option
    value = _useChipsSelect.value, addOptionFromInput = _useChipsSelect.addOptionFromInput, addOption = _useChipsSelect.addOption, removeOption = _useChipsSelect.removeOption, clearOptions = _useChipsSelect.clearOptions, // input
    inputRefHook = _useChipsSelect.inputRef, inputValue = _useChipsSelect.inputValue, clearInput = _useChipsSelect.clearInput, onInputChange = _useChipsSelect.onInputChange, // Связано с CustomSelectDropdownProps
    options = _useChipsSelect.options, opened = _useChipsSelect.opened, setOpened = _useChipsSelect.setOpened, focusedOption = _useChipsSelect.focusedOption, focusedOptionIndex = _useChipsSelect.focusedOptionIndex, setFocusedOption = _useChipsSelect.setFocusedOption, setFocusedOptionIndex = _useChipsSelect.setFocusedOptionIndex;
    // Связано с ChipsInputProps
    var rootRef = useExternRef(getRootRef);
    var inputRef = useExternRef(getRef, inputRefHook);
    // Связано с CustomSelectDropdownProps
    var _React_useState = ChipsSelect_sliced_to_array(React.useState(placementProp), 2), dropdownVerticalPlacement = _React_useState[0], setDropdownVerticalPlacement = _React_useState[1];
    var onDropdownPlacementChange = React.useCallback(function(placement) {
        if (placement.startsWith('top')) {
            setDropdownVerticalPlacement('top');
        } else if (placement.startsWith('bottom')) {
            setDropdownVerticalPlacement('bottom');
        }
    }, []);
    var dropdownId = React.useId();
    var dropdownCurrentItemId = focusedOptionIndex !== null ? "".concat(dropdownId, "-").concat(focusedOptionIndex) : undefined;
    var dropdownScrollBoxRef = React.useRef(null);
    var handleFocus = function(event) {
        if (onFocusProp) {
            onFocusProp(event);
        }
        if (!readOnly) {
            setOpened(true);
            setFocusedOptionIndex(null);
        }
    };
    var handleBlur = function(event) {
        if (onBlurProp) {
            onBlurProp(event);
        }
        // Не добавляем значение, если его нужно выбрать строго из списка
        if (!readOnly && !event.defaultPrevented && !creatable) {
            event.preventDefault();
        }
    };
    var chipsSelectOptions = React.useRef([]).current;
    var scrollToElement = function(index) {
        var center = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        var dropdown = dropdownScrollBoxRef.current;
        var item = chipsSelectOptions[index];
        /* istanbul ignore if: невозможный кейс (в SSR вызова этой функции не будет) */ if (!item || !dropdown) {
            return;
        }
        var dropdownHeight = dropdown.offsetHeight;
        var scrollTop = dropdown.scrollTop;
        var itemTop = item.offsetTop;
        var itemHeight = item.offsetHeight;
        /* istanbul ignore next: нет представления как воспроизвести */ if (center) {
            dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;
        } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {
            dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;
        } else if (itemTop < scrollTop) {
            dropdown.scrollTop = itemTop;
        }
    };
    var focusOptionByIndex = function(index, oldIndex) {
        if (index === oldIndex) {
            /* istanbul ignore next: нет представления как воспроизвести */ return;
        }
        var option = options[index];
        if (isNotServicePreset(option) && option.disabled) {
            return;
        }
        scrollToElement(index);
        setFocusedOptionIndex(index);
    };
    var focusOption = function(nextIndex, type) {
        var index = nextIndex === null ? -1 : nextIndex;
        if (type === FOCUS_ACTION_NEXT) {
            var _$nextIndex = findIndexAfter(options, index);
            index = _$nextIndex === -1 ? findIndexAfter(options) : _$nextIndex; // Следующий за index или первый валидный до index
        } else if (type === FOCUS_ACTION_PREV) {
            var beforeIndex = findIndexBefore(options, index);
            index = beforeIndex === -1 ? findIndexBefore(options) : beforeIndex; // Предшествующий index или последний валидный после index
        }
        focusOptionByIndex(index, focusedOptionIndex);
    };
    var handleKeyDown = function(event) {
        if (onKeyDownProp) {
            onKeyDownProp(event);
        }
        if (event.defaultPrevented || readOnly) {
            return;
        }
        switch(event.key){
            case Keys.ARROW_UP:
            case Keys.ARROW_DOWN:
                event.preventDefault();
                if (!opened) {
                    setOpened(true);
                    focusOption(null, FOCUS_ACTION_NEXT);
                } else {
                    focusOption(focusedOptionIndex, event.key === Keys.ARROW_UP ? FOCUS_ACTION_PREV : FOCUS_ACTION_NEXT);
                }
                break;
            case Keys.ENTER:
                {
                    if (!opened) {
                        break;
                    }
                    if (focusedOptionIndex != null) {
                        var foundOption = options[focusedOptionIndex];
                        if (foundOption && isNotServicePreset(foundOption)) {
                            event.preventDefault();
                            if (onChangeStart) {
                                onChangeStart(event, foundOption);
                            }
                            addOption(foundOption);
                            setFocusedOptionIndex(null);
                            clearInput();
                            if (closeAfterSelect) {
                                setOpened(false);
                            }
                            break;
                        }
                    }
                    if (!creatable) {
                        event.preventDefault();
                    }
                    break;
                }
            case Keys.ESCAPE:
            case Keys.TAB:
                if (opened) {
                    setOpened(false);
                }
        }
    };
    React.useEffect(function() {
        if (focusedOptionIndex === null) {
            setFocusedOption(null);
        } else {
            var foundFocusedOptionIndex = options[focusedOptionIndex];
            if (foundFocusedOptionIndex && isNotServicePreset(foundFocusedOptionIndex)) {
                setFocusedOption(foundFocusedOptionIndex);
            }
        }
    }, [
        options,
        focusedOptionIndex,
        setFocusedOption
    ]);
    var onDropdownMouseLeave = React.useCallback(function() {
        setFocusedOptionIndex(null);
    }, [
        setFocusedOptionIndex
    ]);
    var handleClickOutside = React.useCallback(function() {
        setOpened(false);
    }, [
        setOpened
    ]);
    useGlobalOnClickOutside(handleClickOutside, opened ? rootRef : null, opened ? dropdownScrollBoxRef : null);
    var onDropdownIconClick = React.useCallback(function(e) {
        if (opened) {
            e.preventDefault();
            setOpened(false);
        }
    }, [
        opened,
        setOpened
    ]);
    var dropdownContent = React.useMemo(function() {
        var defaultDropdownContent = options.map(function(option, index) {
            var dropdownItemId = "".concat(dropdownId, "-").concat(index);
            if (isEmptyOptionPreset(option)) {
                return /*#__PURE__*/ React.createElement(Footnote, {
                    key: "empty-text",
                    className: "vkuiChipsSelect__empty"
                }, option.placeholder);
            }
            if (isCreateNewOptionPreset(option)) {
                return /*#__PURE__*/ React.createElement(CustomSelectOption, {
                    key: "create-new-option",
                    id: dropdownItemId,
                    hovered: focusedOptionIndex === index,
                    onMouseDown: function() {
                        return addOptionFromInput(inputValue);
                    },
                    onMouseEnter: function() {
                        return setFocusedOptionIndex(index);
                    }
                }, option.actionText);
            }
            return /*#__PURE__*/ React.createElement(React.Fragment, {
                key: "".concat(ChipsSelect_type_of(option.value), "-").concat(option.value)
            }, renderOption({
                id: dropdownItemId,
                disabled: option.disabled,
                hovered: focusedOption ? getOptionValue(option) === getOptionValue(focusedOption) : false,
                children: option.label,
                selected: !!value.find(function(selectedOption) {
                    return getOptionValue(selectedOption) === getOptionValue(option);
                }),
                getRootRef: function getRootRef(node) {
                    if (node) {
                        chipsSelectOptions[index] = node;
                    }
                },
                onMouseDown: function onMouseDown(event) {
                    if (option.disabled) {
                        return;
                    }
                    if (onChangeStart) {
                        onChangeStart(event, option);
                    }
                    if (!event.defaultPrevented) {
                        closeAfterSelect && setOpened(false);
                        addOption(option);
                        clearInput();
                    }
                },
                onMouseEnter: function onMouseEnter() {
                    setFocusedOptionIndex(index);
                }
            }, option));
        });
        if (renderDropdown) {
            return renderDropdown({
                defaultDropdownContent: defaultDropdownContent
            });
        }
        return defaultDropdownContent;
    }, [
        addOption,
        addOptionFromInput,
        chipsSelectOptions,
        clearInput,
        closeAfterSelect,
        dropdownId,
        focusedOption,
        focusedOptionIndex,
        getOptionValue,
        inputValue,
        onChangeStart,
        options,
        renderDropdown,
        renderOption,
        setFocusedOptionIndex,
        setOpened,
        value
    ]);
    var openedClassNames = React.useMemo(function() {
        return opened && dropdownOffsetDistance === 0 && (dropdownVerticalPlacement.includes('top') ? "vkuiChipsSelect--pop-up" : "vkuiChipsSelect--pop-down") || undefined;
    }, [
        dropdownOffsetDistance,
        opened,
        dropdownVerticalPlacement
    ]);
    var clearButtonShown = allowClearButton && (!!value.length || !!inputValue.length);
    return /*#__PURE__*/ React.createElement(React.Fragment, null, /*#__PURE__*/ React.createElement(ChipsInputBase, ChipsSelect_object_spread_props(ChipsSelect_object_spread({}, restProps), {
        disabled: disabled,
        readOnly: readOnly,
        clearButtonShown: clearButtonShown,
        clearButtonTestId: clearButtonTestId,
        // FormFieldProps
        id: labelledbyId,
        getRootRef: rootRef,
        className: classNames("vkuiChipsSelect", openedClassNames, className),
        status: status,
        after: dropdownIconProp || /*#__PURE__*/ React.createElement(DropdownIcon, {
            opened: opened,
            onClick: onDropdownIconClick,
            className: classNames("vkuiChipsSelect__dropdown-icon", clearButtonShown && "vkuiChipsSelect__dropdown-icon--withOffset")
        }),
        // option
        value: value,
        onAddChipOption: addOptionFromInput,
        onRemoveChipOption: removeOption,
        renderChip: renderChip,
        onClear: clearOptions,
        // input
        getRef: inputRef,
        inputValue: inputValue,
        onInputChange: onInputChange,
        onFocus: handleFocus,
        onBlur: handleBlur,
        onKeyDown: handleKeyDown,
        // a11y
        role: "combobox",
        "aria-expanded": opened,
        "aria-autocomplete": "list",
        "aria-controls": opened ? dropdownId : undefined,
        "aria-activedescendant": opened ? dropdownCurrentItemId : undefined,
        "aria-haspopup": "listbox"
    })), opened && /*#__PURE__*/ React.createElement(CustomSelectDropdown, {
        "data-testid": dropdownTestId,
        targetRef: rootRef,
        placement: dropdownVerticalPlacement,
        scrollBoxRef: dropdownScrollBoxRef,
        onPlacementChange: onDropdownPlacementChange,
        onMouseLeave: onDropdownMouseLeave,
        fetching: fetching,
        autoWidth: dropdownAutoWidth,
        forcePortal: forceDropdownPortal,
        noMaxHeight: noMaxHeight,
        offsetDistance: dropdownOffsetDistance,
        overscrollBehavior: overscrollBehavior,
        // a11y
        id: dropdownId,
        role: "listbox",
        "aria-labelledby": labelledbyId
    }, dropdownContent));
};

;// CONCATENATED MODULE: ./src/components/Slider/SliderThumb/SliderThumb.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Slider/SliderThumb/SliderThumb.tsx
function SliderThumb_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function SliderThumb_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function SliderThumb_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function SliderThumb_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function SliderThumb_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function SliderThumb_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            SliderThumb_define_property(target, key, source[key]);
        });
    }
    return target;
}
function SliderThumb_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function SliderThumb_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        SliderThumb_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function SliderThumb_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = SliderThumb_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function SliderThumb_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function SliderThumb_sliced_to_array(arr, i) {
    return SliderThumb_array_with_holes(arr) || SliderThumb_iterable_to_array_limit(arr, i) || SliderThumb_unsupported_iterable_to_array(arr, i) || SliderThumb_non_iterable_rest();
}
function SliderThumb_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return SliderThumb_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return SliderThumb_array_like_to_array(o, minLen);
}









var SliderThumb_SliderThumb = function(_param) {
    var className = _param.className, getRootRef = _param.getRootRef, inputProps = _param.inputProps, withTooltip = _param.withTooltip, isActive = _param.isActive, restProps = SliderThumb_object_without_properties(_param, [
        "className",
        "getRootRef",
        "inputProps",
        "withTooltip",
        "isActive"
    ]);
    var _useFocusVisible = useFocusVisible(), focusVisible = _useFocusVisible.focusVisible, onBlur = _useFocusVisible.onBlur, onFocus = _useFocusVisible.onFocus;
    var focusVisibleClassNames = useFocusVisibleClassName({
        focusVisible: focusVisible,
        mode: "vkuiSliderThumb--focus-visible"
    });
    var _React_useState = SliderThumb_sliced_to_array(React.useState(null), 2), arrowRef = _React_useState[0], setArrowRef = _React_useState[1];
    var memoizedMiddlewares = React.useMemo(function() {
        return [
            offsetMiddleware({
                crossAxis: 0,
                mainAxis: 15
            }),
            flipMiddleware(),
            shiftMiddleware({
                padding: 8
            }),
            arrowMiddleware({
                element: arrowRef
            })
        ];
    }, [
        arrowRef
    ]);
    var _useFloating = useFloating({
        placement: 'top',
        middleware: memoizedMiddlewares
    }), floatingDataX = _useFloating.x, floatingDataY = _useFloating.y, resolvedPlacement = _useFloating.placement, refs = _useFloating.refs, floatingPositionStrategy = _useFloating.strategy, _useFloating_middlewareData = _useFloating.middlewareData, arrowCoords = _useFloating_middlewareData.arrow, updateTooltipPosition = _useFloating.update;
    var _useBooleanState = useBooleanState(false), isHovered = _useBooleanState.value, setHoveredTrue = _useBooleanState.setTrue, setHoveredFalse = _useBooleanState.setFalse;
    var handleRootRef = useExternRef(getRootRef, refs.setReference);
    var shouldShowTooltip = withTooltip && (focusVisible || isHovered || isActive);
    var inputValue = inputProps && inputProps.value;
    React.useEffect(function udpateTooltipPositionOnValueChange() {
        if (shouldShowTooltip && inputValue !== 'undefined') {
            updateTooltipPosition();
        }
    }, [
        inputValue,
        updateTooltipPosition,
        shouldShowTooltip
    ]);
    return /*#__PURE__*/ React.createElement(React.Fragment, null, /*#__PURE__*/ React.createElement("span", SliderThumb_object_spread_props(SliderThumb_object_spread({}, restProps), {
        ref: handleRootRef,
        onMouseEnter: setHoveredTrue,
        onMouseLeave: setHoveredFalse,
        className: classNames("vkuiSliderThumb", focusVisibleClassNames, isActive && "vkuiSliderThumb--active", isHovered && "vkuiSliderThumb--hover", className)
    }), /*#__PURE__*/ React.createElement("input", SliderThumb_object_spread_props(SliderThumb_object_spread({}, inputProps), {
        type: "range",
        className: "vkuiSliderThumb__nativeInput",
        "aria-orientation": "horizontal",
        onBlur: onBlur,
        onFocus: onFocus
    }))), shouldShowTooltip && /*#__PURE__*/ React.createElement(TooltipBase, {
        appearance: "neutral",
        getRootRef: refs.setFloating,
        style: convertFloatingDataToReactCSSProperties(floatingPositionStrategy, floatingDataX, floatingDataY),
        arrowProps: {
            coords: arrowCoords,
            placement: resolvedPlacement,
            getRootRef: setArrowRef
        },
        text: inputValue
    }));
};

;// CONCATENATED MODULE: ./src/components/Slider/helpers.ts
function Slider_helpers_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function helpers_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function helpers_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function helpers_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function helpers_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function helpers_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            helpers_define_property(target, key, source[key]);
        });
    }
    return target;
}
function helpers_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function helpers_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        helpers_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function helpers_sliced_to_array(arr, i) {
    return helpers_array_with_holes(arr) || helpers_iterable_to_array_limit(arr, i) || Slider_helpers_unsupported_iterable_to_array(arr, i) || helpers_non_iterable_rest();
}
function Slider_helpers_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Slider_helpers_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Slider_helpers_array_like_to_array(o, minLen);
}

var helpers_toPercent = function(v, min, max) {
    return (v - min) / (max - min) * 100;
};
var helpers_offsetToValue = function(startX, width, min, max, step) {
    return rescale(startX, [
        0,
        width
    ], [
        min,
        max
    ], {
        step: step
    });
};
var restrictValueByMinMax = function(value, min, max) {
    if (value < min) {
        return min;
    }
    if (value > max) {
        return max;
    }
    return value;
};
var helpers_updateInternalStateValue = function(prevValue, nextValue, min, max, dragging) {
    var _prevValue = helpers_sliced_to_array(prevValue, 2), prevStartValue = _prevValue[0], prevEndValue = _prevValue[1];
    if (prevEndValue === null) {
        return [
            restrictValueByMinMax(nextValue, min, max),
            null
        ];
    }
    switch(dragging){
        case 'start':
            return nextValue > prevEndValue ? [
                prevEndValue,
                prevEndValue
            ] : [
                restrictValueByMinMax(nextValue, min, max),
                prevEndValue
            ];
        case 'end':
            return nextValue < prevStartValue ? [
                prevStartValue,
                prevStartValue
            ] : [
                prevStartValue,
                restrictValueByMinMax(nextValue, min, max)
            ];
        case null:
        default:
            return prevValue;
    }
};
var helpers_updateInternalStateValueByNativeChange = function(prevValue, nextValue, dragging) {
    var _prevValue = helpers_sliced_to_array(prevValue, 2), prevStartValue = _prevValue[0], prevEndValue = _prevValue[1];
    switch(dragging){
        case 'start':
            return [
                nextValue,
                prevEndValue
            ];
        case 'end':
            return [
                prevStartValue,
                nextValue
            ];
        case null:
        default:
            return prevValue;
    }
};
function helpers_isMultipleValues(value) {
    return value[1] !== null;
}
var helpers_snapDirection = function(prevValue, nextValue, type) {
    if (type === 'start') {
        return 'start';
    }
    if (type === 'end') {
        return 'end';
    }
    var _prevValue = helpers_sliced_to_array(prevValue, 2), startRaw = _prevValue[0], endRaw = _prevValue[1];
    /* startRaw и endRaw могут быть равны, поэтому насильно добавляем разницу. */ var FORCE_DIFF_VALUE = 0.1;
    var start = endRaw !== null ? startRaw - FORCE_DIFF_VALUE : startRaw;
    var end = endRaw !== null ? endRaw + FORCE_DIFF_VALUE : 0;
    return Math.abs(start - nextValue) <= Math.abs(end - nextValue) ? 'start' : 'end';
};
var helpers_getDraggingTypeByTargetDataset = function(target) {
    if (target) {
        if (target.dataset.type === 'start') {
            return 'start';
        }
        if (target.dataset.type === 'end') {
            return 'end';
        }
    }
    return null;
};
var resetProps = {
    'aria-label': undefined,
    'aria-valuetext': undefined,
    'aria-labelledby': undefined
};
var helpers_extractSliderAriaAttributesFromRestProps = function(restProps) {
    var ariaLabel = restProps['aria-label'];
    var ariaValueText = restProps['aria-valuetext'];
    var ariaLabelledBy = restProps['aria-labelledby'];
    return helpers_object_spread_props(helpers_object_spread({}, restProps, resetProps), {
        ariaLabel: ariaLabel,
        ariaValueText: ariaValueText,
        ariaLabelledBy: ariaLabelledBy
    });
};

;// CONCATENATED MODULE: ./src/components/Slider/Slider.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Slider/Slider.tsx
function Slider_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Slider_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Slider_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Slider_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Slider_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Slider_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Slider_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Slider_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Slider_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Slider_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Slider_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Slider_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Slider_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Slider_sliced_to_array(arr, i) {
    return Slider_array_with_holes(arr) || Slider_iterable_to_array_limit(arr, i) || Slider_unsupported_iterable_to_array(arr, i) || Slider_non_iterable_rest();
}
function Slider_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Slider_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Slider_array_like_to_array(o, minLen);
}









var Slider_sizeYClassNames = {
    none: "vkuiSlider--sizeY-none",
    compact: "vkuiSlider--sizeY-compact"
};
var Slider_sizeClassNames = {
    l: "vkuiSlider--size-l",
    m: "vkuiSlider--size-m",
    s: "vkuiSlider--size-s"
};
/**
 * @see https://vkcom.github.io/VKUI/#/Slider
 */ var Slider = function(_param) {
    var _param_step = _param.step, step = _param_step === void 0 ? 1 : _param_step, _param_min = _param.min, min = _param_min === void 0 ? 0 : _param_min, _param_max = _param.max, max = _param_max === void 0 ? 100 : _param_max, valueProp = _param.value, multipleProp = _param.multiple, _param_defaultValue = _param.defaultValue, defaultValue = _param_defaultValue === void 0 ? multipleProp ? [
        min,
        max
    ] : min : _param_defaultValue, disabled = _param.disabled, className = _param.className, getRootRef = _param.getRootRef, getAriaLabel = _param.getAriaLabel, getAriaValueText = _param.getAriaValueText, onChange = _param.onChange, withTooltip = _param.withTooltip, _param_size = _param.size, size = _param_size === void 0 ? 'l' : _param_size, restProps = Slider_object_without_properties(_param, [
        "step",
        "min",
        "max",
        "value",
        "multiple",
        "defaultValue",
        "disabled",
        "className",
        "getRootRef",
        "getAriaLabel",
        "getAriaValueText",
        "onChange",
        "withTooltip",
        "size"
    ]);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var isControlled = valueProp !== undefined;
    var _React_useState = Slider_sliced_to_array(React.useState(defaultValue), 2), localValue = _React_useState[0], setValue = _React_useState[1];
    var value = React.useMemo(function() {
        var resolvedValue = isControlled ? valueProp : localValue;
        return Array.isArray(resolvedValue) ? [
            clamp(resolvedValue[0], min, max),
            clamp(resolvedValue[1], min, max)
        ] : [
            clamp(resolvedValue, min, max),
            null
        ];
    }, [
        isControlled,
        valueProp,
        localValue,
        min,
        max
    ]);
    var _value = Slider_sliced_to_array(value, 2), startValue = _value[0], endValue = _value[1];
    var multiple = multipleProp && endValue !== null;
    var startValueInPercent = toPercent(startValue, min, max);
    var endReversedValueInPercent = multiple ? toPercent(endValue, min, max) : 0;
    var _React_useState1 = Slider_sliced_to_array(React.useState(null), 2), activeThumb = _React_useState1[0], setActiveThumb = _React_useState1[1];
    var gesture = React.useRef({
        dragging: null,
        startX: 0,
        containerWidth: 0
    }).current;
    var thumbsContainerRef = useExternRef(getRootRef);
    var thumbStartInputRef = React.useRef(null);
    var thumbEndInputRef = React.useRef(null);
    var _extractSliderAriaAttributesFromRestProps = extractSliderAriaAttributesFromRestProps(restProps), ariaLabel = _extractSliderAriaAttributesFromRestProps.ariaLabel, ariaValueText = _extractSliderAriaAttributesFromRestProps.ariaValueText, ariaLabelledBy = _extractSliderAriaAttributesFromRestProps.ariaLabelledBy, restPropsWithoutAriaAttributes = Slider_object_without_properties(_extractSliderAriaAttributesFromRestProps, [
        "ariaLabel",
        "ariaValueText",
        "ariaLabelledBy"
    ]);
    var changeValue = function(nextValue, event) {
        if (disabled || value[0] === nextValue[0] && value[1] === nextValue[1]) {
            return;
        }
        if (multipleProp) {
            if (isMultipleValues(nextValue)) {
                !isControlled && setValue(nextValue);
                onChange && onChange(nextValue, event);
            }
        } else {
            !isControlled && setValue(nextValue[0]);
            onChange && onChange(nextValue[0], event);
        }
    };
    var handlePointerStart = function(event) {
        if (!thumbsContainerRef.current) {
            return;
        }
        var _thumbsContainerRef_current_getBoundingClientRect = thumbsContainerRef.current.getBoundingClientRect(), nextContainerX = _thumbsContainerRef_current_getBoundingClientRect.left, nextContainerWidth = _thumbsContainerRef_current_getBoundingClientRect.width;
        // @ts-expect-error: TS2345 в VKUITouchEvent плохо описаны типы. `target` это просто `EventTarget`.
        var foundDraggingType = getDraggingTypeByTargetDataset(event.originalEvent.target);
        var nextStartX = event.startX - nextContainerX;
        var nextValue = offsetToValue(nextStartX, nextContainerWidth, min, max, step);
        var nextDragging = snapDirection(value, nextValue, foundDraggingType);
        gesture.dragging = nextDragging;
        gesture.containerWidth = nextContainerWidth;
        gesture.startX = nextStartX;
        var updatedInternalStateValue = updateInternalStateValue(value, nextValue, min, max, nextDragging);
        var _updatedInternalStateValue = Slider_sliced_to_array(updatedInternalStateValue, 2), nextStartValue = _updatedInternalStateValue[0], nextEndValue = _updatedInternalStateValue[1];
        if (thumbStartInputRef.current && (foundDraggingType === 'start' || nextStartValue !== startValue && nextEndValue === endValue)) {
            thumbStartInputRef.current.focus();
            event.originalEvent.preventDefault();
        } else if (thumbEndInputRef.current && (foundDraggingType === 'end' || nextEndValue !== endValue && nextStartValue === startValue)) {
            thumbEndInputRef.current.focus();
            event.originalEvent.preventDefault();
        }
        changeValue(updatedInternalStateValue, event);
        event.originalEvent.stopPropagation();
        setActiveThumb(gesture.dragging);
    };
    var handlePointerMove = function(event) {
        var startX = gesture.startX, containerWidth = gesture.containerWidth, dragging = gesture.dragging;
        var _event_shiftX = event.shiftX, shiftX = _event_shiftX === void 0 ? 0 : _event_shiftX;
        var nextStartX = startX + shiftX;
        var nextValue = offsetToValue(nextStartX, containerWidth, min, max, step);
        changeValue(updateInternalStateValue(value, nextValue, min, max, dragging), event);
        event.originalEvent.stopPropagation();
        event.originalEvent.preventDefault();
    };
    var handlePointerEnd = function(event) {
        gesture.dragging = null;
        event.originalEvent.stopPropagation();
        setActiveThumb(null);
    };
    var handleChangeByNativeInput = function(event) {
        changeValue(updateInternalStateValueByNativeChange(value, Number(event.target.value), getDraggingTypeByTargetDataset(event.target)), event);
    };
    return /*#__PURE__*/ React.createElement(Touch, Slider_object_spread_props(Slider_object_spread({
        "data-value": multiple ? "".concat(startValue, ",").concat(endValue) : startValue
    }, restPropsWithoutAriaAttributes), {
        className: classNames("vkuiSlider", disabled && "vkuiSlider--disabled", sizeY !== 'regular' && Slider_sizeYClassNames[sizeY], Slider_sizeClassNames[size], className),
        onStart: disabled ? undefined : handlePointerStart,
        onMove: disabled ? undefined : handlePointerMove,
        onEnd: disabled ? undefined : handlePointerEnd
    }), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiSlider__track"
    }), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiSlider__track-fill",
        style: multiple ? {
            left: "".concat(startValueInPercent, "%"),
            right: "".concat(100 - endReversedValueInPercent, "%")
        } : {
            width: "".concat(startValueInPercent, "%")
        }
    }), /*#__PURE__*/ React.createElement("div", {
        ref: thumbsContainerRef,
        className: "vkuiSlider__thumbs"
    }, /*#__PURE__*/ React.createElement(SliderThumb, {
        "data-type": "start",
        className: "vkuiSlider__thumb",
        style: {
            left: "".concat(startValueInPercent, "%"),
            // Меняем местами порядок слоёв, иначе, при достижении `start` и `end` 100%, `end` будет перекрывать `start`.
            zIndex: multiple && startValueInPercent >= 50 ? 2 : undefined
        },
        withTooltip: withTooltip,
        inputProps: {
            'data-type': 'start',
            'ref': thumbStartInputRef,
            'step': step,
            'min': min,
            'value': startValue,
            'max': multiple ? endValue : max,
            'disabled': disabled,
            'aria-label': getAriaLabel ? getAriaLabel(0) : ariaLabel,
            'aria-valuetext': getAriaValueText ? getAriaValueText(startValue, 0) : ariaValueText,
            'aria-labelledby': ariaLabelledBy,
            'onChange': handleChangeByNativeInput
        },
        isActive: activeThumb === 'start'
    }), multiple && /*#__PURE__*/ React.createElement(SliderThumb, {
        "data-type": "end",
        className: "vkuiSlider__thumb",
        style: {
            left: "".concat(endReversedValueInPercent, "%")
        },
        withTooltip: withTooltip,
        inputProps: {
            'data-type': 'end',
            'ref': thumbEndInputRef,
            'step': step,
            'min': startValue,
            'value': endValue,
            'max': max,
            'disabled': disabled,
            'aria-label': getAriaLabel ? getAriaLabel(1) : ariaLabel,
            'aria-valuetext': getAriaValueText ? getAriaValueText(endValue, 1) : ariaValueText,
            'aria-labelledby': ariaLabelledBy,
            'onChange': handleChangeByNativeInput
        },
        isActive: activeThumb === 'end'
    })));
};

;// CONCATENATED MODULE: ./src/components/Textarea/Textarea.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Textarea/Textarea.tsx
function Textarea_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Textarea_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Textarea_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Textarea_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Textarea_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Textarea_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Textarea_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Textarea_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Textarea_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Textarea_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Textarea_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Textarea_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Textarea_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Textarea_sliced_to_array(arr, i) {
    return Textarea_array_with_holes(arr) || Textarea_iterable_to_array_limit(arr, i) || Textarea_unsupported_iterable_to_array(arr, i) || Textarea_non_iterable_rest();
}
function Textarea_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Textarea_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Textarea_array_like_to_array(o, minLen);
}












var Textarea_sizeYClassNames = {
    none: "vkuiTextarea--sizeY-none",
    compact: "vkuiTextarea--sizeY-compact"
};
/**
 * @see https://vkcom.github.io/VKUI/#/Textarea
 */ var Textarea = function(_param) {
    var _param_grow = _param.grow, grow = _param_grow === void 0 ? true : _param_grow, style = _param.style, onResize = _param.onResize, className = _param.className, getRootRef = _param.getRootRef, getRef = _param.getRef, _param_rows = _param.rows, rows = _param_rows === void 0 ? 2 : _param_rows, maxHeight = _param.maxHeight, status = _param.status, onChange = _param.onChange, align = _param.align, mode = _param.mode, after = _param.after, before = _param.before, afterAlign = _param.afterAlign, beforeAlign = _param.beforeAlign, value = _param.value, restProps = Textarea_object_without_properties(_param, [
        "grow",
        "style",
        "onResize",
        "className",
        "getRootRef",
        "getRef",
        "rows",
        "maxHeight",
        "status",
        "onChange",
        "align",
        "mode",
        "after",
        "before",
        "afterAlign",
        "beforeAlign",
        "value"
    ]);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var platform = usePlatform();
    var window = useDOM().window;
    var _useResizeTextarea = Textarea_sliced_to_array(useResizeTextarea(onResize, grow), 2), refResizeTextarea = _useResizeTextarea[0], resize = _useResizeTextarea[1];
    var elementRef = useExternRef(getRef, refResizeTextarea);
    React.useEffect(resize, [
        resize,
        sizeY,
        platform,
        value
    ]);
    useGlobalEventListener(window, 'resize', resize);
    return /*#__PURE__*/ React.createElement(FormField, {
        className: classNames("vkuiTextarea", sizeY !== 'regular' && Textarea_sizeYClassNames[sizeY], align === 'right' && "vkuiTextarea--align-right", align === 'center' && "vkuiTextarea--align-center", className),
        style: style,
        getRootRef: getRootRef,
        disabled: restProps.disabled,
        status: status,
        mode: mode,
        after: after,
        before: before,
        afterAlign: afterAlign,
        beforeAlign: beforeAlign,
        maxHeight: maxHeight
    }, /*#__PURE__*/ React.createElement(UnstyledTextField, Textarea_object_spread_props(Textarea_object_spread({}, restProps), {
        value: value,
        as: "textarea",
        rows: rows,
        className: "vkuiTextarea__el",
        onChange: callMultiple(onChange, resize),
        getRootRef: elementRef
    })));
};

;// CONCATENATED MODULE: ./src/components/SelectionControl/SelectionControlLabel/SelectionControlLabel.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/SelectionControl/SelectionControlLabel/SelectionControlLabel.tsx
function SelectionControlLabel_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function SelectionControlLabel_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            SelectionControlLabel_define_property(target, key, source[key]);
        });
    }
    return target;
}
function SelectionControlLabel_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = SelectionControlLabel_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function SelectionControlLabel_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






var SelectionControlLabel_sizeYClassNames = {
    none: "vkuiSelectionControlLabel--sizeY-none",
    compact: "vkuiSelectionControlLabel--sizeY-compact"
};
function SelectionControlLabel(_param) {
    var children = _param.children, titleAfter = _param.titleAfter, description = _param.description, restProps = SelectionControlLabel_object_without_properties(_param, [
        "children",
        "titleAfter",
        "description"
    ]);
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    return /*#__PURE__*/ React.createElement(RootComponent_RootComponent, SelectionControlLabel_object_spread({
        baseClassName: clsx("vkuiSelectionControlLabel", sizeY !== 'regular' && SelectionControlLabel_sizeYClassNames[sizeY])
    }, restProps), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiSelectionControlLabel__titleLayout"
    }, /*#__PURE__*/ React.createElement(Text_Text, {
        className: "vkuiSelectionControlLabel__title"
    }, children), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiSelectionControlLabel__titleAfter"
    }, titleAfter)), react_utils_hasReactNode(description) && /*#__PURE__*/ React.createElement(Footnote_Footnote, {
        className: "vkuiSelectionControlLabel__description"
    }, description));
}

;// CONCATENATED MODULE: ./src/components/SelectionControl/SelectionControl.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/SelectionControl/SelectionControl.tsx
function SelectionControl_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function SelectionControl_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            SelectionControl_define_property(target, key, source[key]);
        });
    }
    return target;
}








var SelectionControl_sizeYClassNames = {
    none: "vkuiSelectionControl--sizeY-none",
    compact: "vkuiSelectionControl--sizeY-compact"
};
/**
 * @see https://vkcom.github.io/VKUI/#/SelectionControl
 */ var SelectionControl = function(restProps) {
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var platform = usePlatform_usePlatform();
    return /*#__PURE__*/ react.createElement(Tappable_Tappable, SelectionControl_object_spread({
        Component: "label",
        baseClassName: clsx("vkuiSelectionControl", sizeY !== 'regular' && SelectionControl_sizeYClassNames[sizeY]),
        activeEffectDelay: platform === 'ios' ? 100 : DEFAULT_ACTIVE_EFFECT_DELAY
    }, restProps));
};
SelectionControl.Label = SelectionControlLabel;

;// CONCATENATED MODULE: ./src/components/Radio/RadioInput/RadioInput.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Radio/RadioInput/RadioInput.tsx
function RadioInput_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function RadioInput_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            RadioInput_define_property(target, key, source[key]);
        });
    }
    return target;
}
function RadioInput_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function RadioInput_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        RadioInput_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function RadioInput_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = RadioInput_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function RadioInput_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





function RadioIcon24(props) {
    return /*#__PURE__*/ react.createElement("svg", RadioInput_object_spread({
        xmlns: "http://www.w3.org/2000/svg",
        width: "24",
        height: "24",
        "aria-hidden": true
    }, props), /*#__PURE__*/ react.createElement("circle", {
        cx: "12",
        cy: "12",
        r: "10",
        stroke: "currentColor",
        strokeWidth: "2",
        fill: "none"
    }), /*#__PURE__*/ react.createElement("circle", {
        cx: "12",
        cy: "12",
        r: "7",
        className: "vkuiRadioInput__pin",
        fill: "currentColor"
    }));
}
function RadioIcon20(props) {
    return /*#__PURE__*/ react.createElement("svg", RadioInput_object_spread({
        xmlns: "http://www.w3.org/2000/svg",
        width: "20",
        height: "20",
        "aria-hidden": true
    }, props), /*#__PURE__*/ react.createElement("circle", {
        cx: "10",
        cy: "10",
        r: "7.75",
        stroke: "currentColor",
        strokeWidth: "1.5",
        fill: "none"
    }), /*#__PURE__*/ react.createElement("circle", {
        cx: "10",
        cy: "10",
        r: "5.5",
        className: "vkuiRadioInput__pin",
        fill: "currentColor"
    }));
}
function RadioIcon() {
    return /*#__PURE__*/ react.createElement("div", {
        className: "vkuiRadioInput__icon"
    }, /*#__PURE__*/ react.createElement(AdaptiveIconRenderer_AdaptiveIconRenderer, {
        IconCompact: RadioIcon20,
        IconRegular: RadioIcon24
    }));
}
function RadioInput(_param) {
    var className = _param.className, style = _param.style, getRootRef = _param.getRootRef, getRef = _param.getRef, restProps = RadioInput_object_without_properties(_param, [
        "className",
        "style",
        "getRootRef",
        "getRef"
    ]);
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, {
        className: className,
        style: style,
        getRootRef: getRootRef
    }, /*#__PURE__*/ react.createElement(VisuallyHidden_VisuallyHidden, RadioInput_object_spread_props(RadioInput_object_spread({}, restProps), {
        Component: "input",
        type: "radio",
        baseClassName: "vkuiRadioInput__input",
        getRootRef: getRef
    })), /*#__PURE__*/ react.createElement(RadioIcon, null));
}

;// CONCATENATED MODULE: ./src/components/Radio/Radio.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Radio/Radio.tsx
function Radio_Radio_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Radio_Radio_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Radio_Radio_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Radio_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Radio_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Radio_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Radio_Radio_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Radio_Radio_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Radio_Radio_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






/**
 * @see https://vkcom.github.io/VKUI/#/Radio
 */ var Radio_Radio_Radio = function(_param) {
    var children = _param.children, description = _param.description, style = _param.style, className = _param.className, getRootRef = _param.getRootRef, titleAfter = _param.titleAfter, getRef = _param.getRef, labelProps = _param.labelProps, hoverMode = _param.hoverMode, activeMode = _param.activeMode, hasHover = _param.hasHover, hasActive = _param.hasActive, focusVisibleMode = _param.focusVisibleMode, restProps = Radio_Radio_object_without_properties(_param, [
        "children",
        "description",
        "style",
        "className",
        "getRootRef",
        "titleAfter",
        "getRef",
        "labelProps",
        "hoverMode",
        "activeMode",
        "hasHover",
        "hasActive",
        "focusVisibleMode"
    ]);
    return /*#__PURE__*/ react.createElement(SelectionControl, Radio_Radio_object_spread({
        style: style,
        className: clsx("vkuiRadio", className),
        disabled: restProps.disabled,
        getRootRef: getRootRef,
        hoverMode: hoverMode,
        activeMode: activeMode,
        hasHover: hasHover,
        hasActive: hasActive,
        focusVisibleMode: focusVisibleMode
    }, labelProps), /*#__PURE__*/ react.createElement(RadioInput, Radio_object_spread_props(Radio_Radio_object_spread({}, restProps), {
        getRef: getRef
    })), /*#__PURE__*/ react.createElement(SelectionControlLabel, {
        titleAfter: titleAfter,
        description: description
    }, children));
};
Radio_Radio_Radio.Input = RadioInput;

;// CONCATENATED MODULE: ./src/components/RadioGroup/RadioGroup.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/RadioGroup/RadioGroup.tsx
function RadioGroup_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function RadioGroup_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            RadioGroup_define_property(target, key, source[key]);
        });
    }
    return target;
}
function RadioGroup_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = RadioGroup_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function RadioGroup_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




/**
 * @see https://vkcom.github.io/VKUI/#/RadioGroup
 */ var RadioGroup = function(_param) {
    var _param_mode = _param.mode, mode = _param_mode === void 0 ? 'vertical' : _param_mode, restProps = RadioGroup_object_without_properties(_param, [
        "mode"
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, RadioGroup_object_spread({
        baseClassName: classNames("vkuiRadioGroup", 'vkuiInternalRadioGroup', mode === 'horizontal' && "vkuiRadioGroup--mode-horizontal"),
        role: "radiogroup"
    }, restProps));
};

;// CONCATENATED MODULE: ../../node_modules/@vkontakte/icons/dist_es6/20/check_box_indetermanate_20.js
'use client';

var Icon20CheckBoxIndetermanate = makeIcon('Icon20CheckBoxIndetermanate', 'check_box_indetermanate_20', '0 0 20 20', '<symbol xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20" id="check_box_indetermanate_20"><path fill="currentColor" fill-rule="evenodd" d="M2 8.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C5.04 2 6.16 2 8.4 2h3.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C18 5.04 18 6.16 18 8.4v3.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C14.96 18 13.84 18 11.6 18H8.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C2 14.96 2 13.84 2 11.6zm4.4.7a.9.9 0 1 0 0 1.8h7.2a.9.9 0 1 0 0-1.8z" clip-rule="evenodd" /></symbol>', 20, 20, false, undefined);

;// CONCATENATED MODULE: ./src/components/Checkbox/CheckboxInput/CheckboxInput.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Checkbox/CheckboxInput/CheckboxInput.tsx
function CheckboxInput_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CheckboxInput_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CheckboxInput_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CheckboxInput_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function CheckboxInput_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        CheckboxInput_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function CheckboxInput_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CheckboxInput_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CheckboxInput_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}










function setIndeterminate(el, indeterminate) {
    el.indeterminate = indeterminate;
}
var CheckboxInput_warn = warnOnce('Checkbox');
function CheckboxInput(_param) {
    var className = _param.className, style = _param.style, getRootRef = _param.getRootRef, getRef = _param.getRef, indeterminate = _param.indeterminate, defaultIndeterminate = _param.defaultIndeterminate, onChange = _param.onChange, restProps = CheckboxInput_object_without_properties(_param, [
        "className",
        "style",
        "getRootRef",
        "getRef",
        "indeterminate",
        "defaultIndeterminate",
        "onChange"
    ]);
    var inputRef = useExternRef_useExternRef(getRef);
    var platform = usePlatform_usePlatform();
    var _useAdaptivityConditionalRender = useAdaptivityConditionalRender_useAdaptivityConditionalRender(), adaptiveSizeY = _useAdaptivityConditionalRender.sizeY;
    react.useEffect(function() {
        var indeterminateValue = indeterminate === undefined ? defaultIndeterminate : indeterminate;
        if (inputRef.current) {
            setIndeterminate(inputRef.current, Boolean(indeterminateValue));
        }
    }, [
        defaultIndeterminate,
        indeterminate,
        inputRef
    ]);
    var handleChange = react.useCallback(function(event) {
        if (defaultIndeterminate !== undefined && indeterminate === undefined && restProps.checked === undefined && inputRef.current) {
            setIndeterminate(inputRef.current, false);
        }
        if (indeterminate !== undefined && inputRef.current) {
            setIndeterminate(inputRef.current, Boolean(indeterminate));
        }
        onChange && onChange(event);
    }, [
        defaultIndeterminate,
        indeterminate,
        restProps.checked,
        onChange,
        inputRef
    ]);
    if (false) {}
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, {
        baseClassName: "vkuiCheckboxInput",
        className: className,
        style: style,
        getRootRef: getRootRef
    }, /*#__PURE__*/ react.createElement(VisuallyHidden_VisuallyHidden, CheckboxInput_object_spread_props(CheckboxInput_object_spread({}, restProps), {
        Component: "input",
        type: "checkbox",
        onChange: handleChange,
        className: "vkuiCheckboxInput__input",
        getRootRef: inputRef
    })), platform === 'vkcom' ? /*#__PURE__*/ react.createElement(Icon20CheckBoxOn, {
        className: "vkuiCheckboxInput__icon--on"
    }) : /*#__PURE__*/ react.createElement(react.Fragment, null, adaptiveSizeY.compact && /*#__PURE__*/ react.createElement(Icon20CheckBoxOn, {
        className: clsx("vkuiCheckboxInput__icon--on", adaptiveSizeY.compact.className)
    }), adaptiveSizeY.regular && /*#__PURE__*/ react.createElement(Icon24CheckBoxOn, {
        className: clsx("vkuiCheckboxInput__icon--on", adaptiveSizeY.regular.className)
    })), platform === 'vkcom' ? /*#__PURE__*/ react.createElement(Icon20CheckBoxOff, {
        className: "vkuiCheckboxInput__icon--off"
    }) : /*#__PURE__*/ react.createElement(react.Fragment, null, adaptiveSizeY.compact && /*#__PURE__*/ react.createElement(Icon20CheckBoxOff, {
        className: clsx("vkuiCheckboxInput__icon--off", adaptiveSizeY.compact.className)
    }), adaptiveSizeY.regular && /*#__PURE__*/ react.createElement(Icon24CheckBoxOff, {
        className: clsx("vkuiCheckboxInput__icon--off", adaptiveSizeY.regular.className)
    })), platform === 'vkcom' ? /*#__PURE__*/ react.createElement(Icon20CheckBoxIndetermanate, {
        width: 20,
        height: 20,
        className: "vkuiCheckboxInput__icon--indeterminate"
    }) : /*#__PURE__*/ react.createElement(react.Fragment, null, adaptiveSizeY.compact && /*#__PURE__*/ react.createElement(Icon20CheckBoxIndetermanate, {
        className: clsx("vkuiCheckboxInput__icon--indeterminate", adaptiveSizeY.compact.className),
        width: 20,
        height: 20
    }), adaptiveSizeY.regular && /*#__PURE__*/ react.createElement(Icon20CheckBoxIndetermanate, {
        className: clsx("vkuiCheckboxInput__icon--indeterminate", adaptiveSizeY.regular.className),
        width: 24,
        height: 24
    })));
}

;// CONCATENATED MODULE: ./src/components/Checkbox/CheckboxSimple/CheckboxSimple.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Checkbox/CheckboxSimple/CheckboxSimple.tsx
function CheckboxSimple_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CheckboxSimple_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CheckboxSimple_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





var CheckboxSimple_sizeYClassNames = {
    none: "vkuiCheckboxSimple--sizeY-none",
    compact: "vkuiCheckboxSimple--sizeY-compact"
};
function CheckboxSimple(_param) {
    var children = _param.children, className = _param.className, style = _param.style, getRootRef = _param.getRootRef, description = _param.description, hoverMode = _param.hoverMode, activeMode = _param.activeMode, hasHover = _param.hasHover, hasActive = _param.hasActive, focusVisibleMode = _param.focusVisibleMode, titleAfter = _param.titleAfter, restProps = CheckboxSimple_object_without_properties(_param, [
        "children",
        "className",
        "style",
        "getRootRef",
        "description",
        "hoverMode",
        "activeMode",
        "hasHover",
        "hasActive",
        "focusVisibleMode",
        "titleAfter"
    ]);
    var _useAdaptivity = useAdaptivity_useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    return /*#__PURE__*/ React.createElement(Tappable_Tappable, {
        className: clsx(className, "vkuiCheckboxSimple", sizeY !== 'regular' && CheckboxSimple_sizeYClassNames[sizeY]),
        style: style,
        disabled: restProps.disabled,
        getRootRef: getRootRef,
        hoverMode: hoverMode,
        activeMode: activeMode,
        hasHover: hasHover,
        hasActive: hasActive,
        focusVisibleMode: focusVisibleMode,
        Component: "label"
    }, /*#__PURE__*/ React.createElement(CheckboxInput, restProps));
}

;// CONCATENATED MODULE: ./src/components/Checkbox/Checkbox.tsx
function Checkbox_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Checkbox_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Checkbox_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






var CheckboxComponent = function(_param) {
    var children = _param.children, className = _param.className, style = _param.style, getRootRef = _param.getRootRef, description = _param.description, hoverMode = _param.hoverMode, activeMode = _param.activeMode, hasHover = _param.hasHover, hasActive = _param.hasActive, focusVisibleMode = _param.focusVisibleMode, titleAfter = _param.titleAfter, restProps = Checkbox_object_without_properties(_param, [
        "children",
        "className",
        "style",
        "getRootRef",
        "description",
        "hoverMode",
        "activeMode",
        "hasHover",
        "hasActive",
        "focusVisibleMode",
        "titleAfter"
    ]);
    return /*#__PURE__*/ react.createElement(SelectionControl, {
        className: className,
        style: style,
        disabled: restProps.disabled,
        getRootRef: getRootRef,
        hoverMode: hoverMode,
        activeMode: activeMode,
        hasHover: hasHover,
        hasActive: hasActive,
        focusVisibleMode: focusVisibleMode
    }, /*#__PURE__*/ react.createElement(CheckboxInput, restProps), /*#__PURE__*/ react.createElement(SelectionControlLabel, {
        titleAfter: titleAfter,
        description: description
    }, children));
};
/**
 * @see https://vkcom.github.io/VKUI/#/Checkbox
 */ var Checkbox = function(props) {
    var simple = !(react_utils_hasReactNode(props.children) || react_utils_hasReactNode(props.description));
    if (simple) {
        return /*#__PURE__*/ react.createElement(CheckboxSimple, props);
    }
    return /*#__PURE__*/ react.createElement(CheckboxComponent, props);
};
Checkbox.Input = CheckboxInput;

;// CONCATENATED MODULE: ./src/components/CustomSelect/CustomSelectClearButton.tsx
function CustomSelectClearButton_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CustomSelectClearButton_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CustomSelectClearButton_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CustomSelectClearButton_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function CustomSelectClearButton_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        CustomSelectClearButton_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function CustomSelectClearButton_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CustomSelectClearButton_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CustomSelectClearButton_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}




var CustomSelectClearButton_CustomSelectClearButton = function(_param) {
    var className = _param.className, onClick = _param.onClick, restProps = CustomSelectClearButton_object_without_properties(_param, [
        "className",
        "onClick"
    ]);
    return /*#__PURE__*/ React.createElement(IconButton, CustomSelectClearButton_object_spread_props(CustomSelectClearButton_object_spread({
        Component: "button",
        label: "Очистить поле",
        onKeyDown: stopPropagation,
        type: "button",
        activeMode: "opacity",
        hoverMode: "opacity"
    }, restProps), {
        className: className,
        onClick: function(e) {
            stopPropagation(e);
            e.preventDefault();
            onClick();
        }
    }), /*#__PURE__*/ React.createElement(Icon16Cancel, null));
};

;// CONCATENATED MODULE: ./src/components/SelectTypography/SelectTypography.tsx
function SelectTypography_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function SelectTypography_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            SelectTypography_define_property(target, key, source[key]);
        });
    }
    return target;
}
function SelectTypography_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = SelectTypography_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function SelectTypography_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}

/**
 * @private
 */ var SelectTypography_SelectTypography = function(_param) {
    var _param_selectType = _param.selectType, selectType = _param_selectType === void 0 ? 'default' : _param_selectType, children = _param.children, restProps = SelectTypography_object_without_properties(_param, [
        "selectType",
        "children"
    ]);
    return /*#__PURE__*/ React.createElement(Text, SelectTypography_object_spread({
        weight: selectType === 'accent' ? '2' : '3'
    }, restProps), children);
};

;// CONCATENATED MODULE: ./src/components/CustomSelect/CustomSelectInput.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/CustomSelect/CustomSelectInput.tsx
function CustomSelectInput_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CustomSelectInput_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CustomSelectInput_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CustomSelectInput_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function CustomSelectInput_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        CustomSelectInput_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function CustomSelectInput_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CustomSelectInput_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CustomSelectInput_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}












var CustomSelectInput_sizeYClassNames = {
    none: "vkuiCustomSelectInput--sizeY-none",
    compact: "vkuiCustomSelectInput--sizeY-compact"
};
/**
 * @since 5.10.0
 * @private
 */ var CustomSelectInput_CustomSelectInput = function(_param) {
    var _param_align = _param.align, align = _param_align === void 0 ? 'left' : _param_align, getRef = _param.getRef, className = _param.className, getRootRef = _param.getRootRef, style = _param.style, before = _param.before, after = _param.after, status = _param.status, children = _param.children, placeholder = _param.placeholder, _param_selectType = _param.selectType, selectType = _param_selectType === void 0 ? 'default' : _param_selectType, multiline = _param.multiline, disabled = _param.disabled, fetching = _param.fetching, labelTextTestId = _param.labelTextTestId, restProps = CustomSelectInput_object_without_properties(_param, [
        "align",
        "getRef",
        "className",
        "getRootRef",
        "style",
        "before",
        "after",
        "status",
        "children",
        "placeholder",
        "selectType",
        "multiline",
        "disabled",
        "fetching",
        "labelTextTestId"
    ]);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var title = children || placeholder;
    var showLabelOrPlaceholder = !Boolean(restProps.value);
    var handleRootRef = useExternRef(getRootRef);
    var focusWithin = useFocusWithin(handleRootRef);
    var input = /*#__PURE__*/ React.createElement(Text, CustomSelectInput_object_spread_props(CustomSelectInput_object_spread({
        type: "text"
    }, restProps), {
        disabled: disabled && !fetching,
        readOnly: restProps.readOnly || disabled && fetching,
        Component: "input",
        normalize: false,
        className: classNames("vkuiCustomSelectInput__el", (restProps.readOnly || showLabelOrPlaceholder && !focusWithin) && "vkuiCustomSelectInput__el--cursor-pointer"),
        getRootRef: getRef,
        placeholder: children ? '' : placeholder
    }));
    var platform = usePlatform();
    return /*#__PURE__*/ React.createElement(FormField, {
        Component: "div",
        style: style,
        className: classNames("vkuiCustomSelectInput", align === 'right' && "vkuiCustomSelectInput--align-right", align === 'center' && "vkuiCustomSelectInput--align-center", !children && "vkuiCustomSelectInput--empty", multiline && "vkuiCustomSelectInput--multiline", sizeY !== 'regular' && CustomSelectInput_sizeYClassNames[sizeY], before && "vkuiCustomSelectInput--hasBefore", after && "vkuiCustomSelectInput--hasAfter", className),
        getRootRef: handleRootRef,
        before: before,
        after: after,
        disabled: disabled,
        mode: getFormFieldModeFromSelectType(selectType),
        status: status
    }, /*#__PURE__*/ React.createElement("div", {
        className: "vkuiCustomSelectInput__input-group"
    }, /*#__PURE__*/ React.createElement("div", {
        className: classNames("vkuiCustomSelectInput__container", className),
        tabIndex: -1,
        "aria-hidden": true,
        "data-testid": labelTextTestId
    }, /*#__PURE__*/ React.createElement(SelectTypography, {
        selectType: selectType,
        className: "vkuiCustomSelectInput__title"
    }, showLabelOrPlaceholder && title)), restProps.readOnly && platform === 'ios' ? /*#__PURE__*/ React.createElement(VisuallyHidden, null, input) : input));
};

;// CONCATENATED MODULE: ./src/components/CustomSelect/CustomSelect.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/CustomSelect/CustomSelect.tsx
function CustomSelect_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function CustomSelect_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function CustomSelect_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CustomSelect_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function CustomSelect_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function CustomSelect_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CustomSelect_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CustomSelect_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function CustomSelect_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        CustomSelect_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function CustomSelect_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CustomSelect_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CustomSelect_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function CustomSelect_sliced_to_array(arr, i) {
    return CustomSelect_array_with_holes(arr) || CustomSelect_iterable_to_array_limit(arr, i) || CustomSelect_unsupported_iterable_to_array(arr, i) || CustomSelect_non_iterable_rest();
}
function CustomSelect_type_of(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}
function CustomSelect_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return CustomSelect_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return CustomSelect_array_like_to_array(o, minLen);
}

















var CustomSelect_sizeYClassNames = {
    none: "vkuiCustomSelect--sizeY-none",
    compact: "vkuiCustomSelect--sizeY-compact"
};
var CustomSelect_findIndexAfter = function() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], startIndex = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1;
    if (startIndex >= options.length - 1) {
        return -1;
    }
    return options.findIndex(function(option, i) {
        return i > startIndex && !option.disabled;
    });
};
var CustomSelect_findIndexBefore = function() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], endIndex = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : options.length;
    var result = -1;
    if (endIndex <= 0) {
        return result;
    }
    for(var i = endIndex - 1; i >= 0; i--){
        var option = options[i];
        if (!option.disabled) {
            result = i;
            break;
        }
    }
    return result;
};
var CustomSelect_warn = warnOnce('CustomSelect');
var checkOptionsValueType = function(options) {
    if (new Set(options.map(function(item) {
        return CustomSelect_type_of(item.value);
    })).size > 1) {
        CustomSelect_warn('Некоторые значения ваших опций имеют разные типы. onChange всегда возвращает строковый тип.', 'error');
    }
};
function defaultRenderOptionFn(_param) {
    var option = _param.option, props = CustomSelect_object_without_properties(_param, [
        "option"
    ]);
    return /*#__PURE__*/ React.createElement(CustomSelectOption, props);
}
var handleOptionDown = function(e) {
    e.preventDefault();
};
function findSelectedIndex() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], value = arguments.length > 1 ? arguments[1] : void 0, withClear = arguments.length > 2 ? arguments[2] : void 0;
    if (withClear && value === '') {
        return -1;
    }
    var _options_findIndex;
    return (_options_findIndex = options.findIndex(function(item) {
        value = typeof item.value === 'number' ? Number(value) : value;
        return item.value === value;
    })) !== null && _options_findIndex !== void 0 ? _options_findIndex : -1;
}
var filter = function(options, inputValue, filterFn) {
    return typeof filterFn === 'function' ? options.filter(function(option) {
        return filterFn(inputValue, option);
    }) : options;
};
/**
 * @see https://vkcom.github.io/VKUI/#/CustomSelect
 */ function CustomSelect_CustomSelect(props) {
    var _React_useState = CustomSelect_sliced_to_array(React.useState(false), 2), opened = _React_useState[0], setOpened = _React_useState[1];
    var before = props.before, name = props.name, className = props.className, getRef = props.getRef, getRootRef = props.getRootRef, _props_popupDirection = props.popupDirection, popupDirection = _props_popupDirection === void 0 ? 'bottom' : _props_popupDirection, style = props.style, onChange = props.onChange, children = props.children, onInputChangeProp = props['onInputChange'], renderDropdown = props.renderDropdown, onOpen = props.onOpen, onClose = props.onClose, fetching = props.fetching, forceDropdownPortal = props.forceDropdownPortal, _props_selectType = props.selectType, selectType = _props_selectType === void 0 ? 'default' : _props_selectType, autoHideScrollbar = props.autoHideScrollbar, autoHideScrollbarDelay = props.autoHideScrollbarDelay, _props_searchable = props.searchable, searchable = _props_searchable === void 0 ? false : _props_searchable, tmp = props['renderOption'], renderOptionProp = tmp === void 0 ? defaultRenderOptionFn : tmp, optionsProp = props['options'], _props_emptyText = props.emptyText, emptyText = _props_emptyText === void 0 ? 'Ничего не найдено' : _props_emptyText, _props_filterFn = props.filterFn, filterFn = _props_filterFn === void 0 ? defaultFilterFn : _props_filterFn, iconProp = props['icon'], _props_ClearButton = props.ClearButton, ClearButton = _props_ClearButton === void 0 ? CustomSelectClearButton : _props_ClearButton, _props_allowClearButton = props.allowClearButton, allowClearButton = _props_allowClearButton === void 0 ? false : _props_allowClearButton, _props_dropdownOffsetDistance = props.dropdownOffsetDistance, dropdownOffsetDistance = _props_dropdownOffsetDistance === void 0 ? 0 : _props_dropdownOffsetDistance, _props_dropdownAutoWidth = props.dropdownAutoWidth, dropdownAutoWidth = _props_dropdownAutoWidth === void 0 ? false : _props_dropdownAutoWidth, _props_noMaxHeight = props.noMaxHeight, noMaxHeight = _props_noMaxHeight === void 0 ? false : _props_noMaxHeight, ariaLabelledBy = props['aria-labelledby'], clearButtonTestId = props.clearButtonTestId, nativeSelectTestId = props.nativeSelectTestId, defaultValue = props.defaultValue, required = props.required, getSelectInputRef = props.getSelectInputRef, overscrollBehavior = props.overscrollBehavior, restProps = CustomSelect_object_without_properties(props, [
        "before",
        "name",
        "className",
        "getRef",
        "getRootRef",
        "popupDirection",
        "style",
        "onChange",
        "children",
        'onInputChange',
        "renderDropdown",
        "onOpen",
        "onClose",
        "fetching",
        "forceDropdownPortal",
        "selectType",
        "autoHideScrollbar",
        "autoHideScrollbarDelay",
        "searchable",
        'renderOption',
        'options',
        "emptyText",
        "filterFn",
        'icon',
        "ClearButton",
        "allowClearButton",
        "dropdownOffsetDistance",
        "dropdownAutoWidth",
        "noMaxHeight",
        'aria-labelledby',
        "clearButtonTestId",
        "nativeSelectTestId",
        "defaultValue",
        "required",
        "getSelectInputRef",
        "overscrollBehavior"
    ]);
    if (false) {}
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var containerRef = React.useRef(null);
    var handleRootRef = useExternRef(containerRef, getRootRef);
    var scrollBoxRef = React.useRef(null);
    var selectElRef = useExternRef(getRef);
    var optionsWrapperRef = React.useRef(null);
    var _React_useState1 = CustomSelect_sliced_to_array(React.useState(-1), 2), focusedOptionIndex = _React_useState1[0], setFocusedOptionIndex = _React_useState1[1];
    var _React_useState2 = CustomSelect_sliced_to_array(React.useState(props.value !== undefined), 2), isControlledOutside = _React_useState2[0], setIsControlledOutside = _React_useState2[1];
    var _React_useState3 = CustomSelect_sliced_to_array(React.useState(''), 2), inputValue = _React_useState3[0], setInputValue = _React_useState3[1];
    var _React_useState4 = CustomSelect_sliced_to_array(React.useState(function() {
        var _props_value, _ref;
        return (_ref = (_props_value = props.value) !== null && _props_value !== void 0 ? _props_value : defaultValue) !== null && _ref !== void 0 ? _ref : allowClearButton ? '' : undefined;
    }), 2), nativeSelectValue = _React_useState4[0], setNativeSelectValue = _React_useState4[1];
    var _React_useState5 = CustomSelect_sliced_to_array(React.useState(popupDirection), 2), popperPlacement = _React_useState5[0], setPopperPlacement = _React_useState5[1];
    var _React_useState6 = CustomSelect_sliced_to_array(React.useState(optionsProp), 2), options = _React_useState6[0], setOptions = _React_useState6[1];
    var _props_value;
    var _React_useState7 = CustomSelect_sliced_to_array(React.useState(findSelectedIndex(optionsProp, (_props_value = props.value) !== null && _props_value !== void 0 ? _props_value : defaultValue, allowClearButton)), 2), selectedOptionIndex = _React_useState7[0], setSelectedOptionIndex = _React_useState7[1];
    React.useEffect(function() {
        setIsControlledOutside(props.value !== undefined);
        setNativeSelectValue(function(nativeSelectValue) {
            var _props_value;
            return (_props_value = props.value) !== null && _props_value !== void 0 ? _props_value : nativeSelectValue;
        });
    }, [
        props.value
    ]);
    useIsomorphicLayoutEffect(function() {
        if (options.some(function(param) {
            var value = param.value;
            return nativeSelectValue === value;
        }) || allowClearButton && nativeSelectValue === '') {
            var _selectElRef_current;
            var event = new Event('change', {
                bubbles: true
            });
            (_selectElRef_current = selectElRef.current) === null || _selectElRef_current === void 0 ? void 0 : _selectElRef_current.dispatchEvent(event);
        }
    }, [
        nativeSelectValue
    ]);
    var selected = React.useMemo(function() {
        if (!options.length) {
            return null;
        }
        return selectedOptionIndex !== undefined ? options[selectedOptionIndex] : undefined;
    }, [
        options,
        selectedOptionIndex
    ]);
    var openedClassNames = React.useMemo(function() {
        return opened && dropdownOffsetDistance === 0 && (popperPlacement.includes('top') ? "vkuiCustomSelect--pop-up" : "vkuiCustomSelect--pop-down") || undefined;
    }, [
        dropdownOffsetDistance,
        opened,
        popperPlacement
    ]);
    var scrollToElement = React.useCallback(function(index) {
        var center = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        var dropdown = scrollBoxRef.current;
        var optionsWrapper = optionsWrapperRef.current;
        var item = dropdown && optionsWrapper ? optionsWrapper.children[index] : null;
        if (!item || !dropdown) {
            return;
        }
        var dropdownHeight = dropdown.offsetHeight;
        var scrollTop = dropdown.scrollTop;
        var itemTop = item.offsetTop;
        var itemHeight = item.offsetHeight;
        if (center) {
            dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;
        } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {
            dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;
        } else if (itemTop < scrollTop) {
            dropdown.scrollTop = itemTop;
        }
    }, []);
    var focusOptionByIndex = React.useCallback(function(index) {
        var scrollTo = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
        var _options_length;
        if (index === undefined || index < 0 || index > ((_options_length = options.length) !== null && _options_length !== void 0 ? _options_length : 0) - 1) {
            return;
        }
        var option = options[index];
        if (option === null || option === void 0 ? void 0 : option.disabled) {
            return;
        }
        if (scrollTo) {
            scrollToElement(index);
        }
        // Это оптимизация, прежде всего, под `onMouseMove`
        setFocusedOptionIndex(function(focusedOptionIndex) {
            return focusedOptionIndex !== index ? index : focusedOptionIndex;
        });
    }, [
        options,
        scrollToElement
    ]);
    var isValidIndex = React.useCallback(function(index) {
        var _options_length;
        return index >= 0 && index < ((_options_length = options.length) !== null && _options_length !== void 0 ? _options_length : 0);
    }, [
        options.length
    ]);
    var setScrollBoxRef = React.useCallback(function(ref) {
        scrollBoxRef.current = ref;
        if (ref && selectedOptionIndex !== undefined && isValidIndex(selectedOptionIndex)) {
            {
                scrollToElement(selectedOptionIndex, true);
            }
        }
    }, [
        isValidIndex,
        scrollToElement,
        selectedOptionIndex
    ]);
    var _React_useState8 = CustomSelect_sliced_to_array(React.useState(''), 2), keyboardInput = _React_useState8[0], setKeyboardInput = _React_useState8[1];
    var resetKeyboardInput = React.useCallback(function() {
        setKeyboardInput('');
    }, []);
    var resetFocusedOption = React.useCallback(function() {
        setFocusedOptionIndex(-1);
    }, []);
    var onKeyboardInput = React.useCallback(function(key) {
        if (!opened) {
            setOpened(true);
        }
        resetFocusedOption();
        var fullInput = keyboardInput + key;
        setKeyboardInput(fullInput);
    }, [
        keyboardInput,
        opened,
        resetFocusedOption
    ]);
    /**
   * Note: сбрасывать `options` через `setOptions(optionsProp)` не нужно.
   *  Сброс происходит в одном из эффекте `updateOptionsAndSelectedOptionIndex()`.
   */ var close = React.useCallback(function() {
        resetKeyboardInput();
        setInputValue('');
        setOpened(false);
        resetFocusedOption();
        onClose === null || onClose === void 0 ? void 0 : onClose();
    }, [
        onClose,
        resetKeyboardInput,
        resetFocusedOption
    ]);
    var selectOption = React.useCallback(function(index) {
        var item = options[index];
        setNativeSelectValue(item === null || item === void 0 ? void 0 : item.value);
        close();
        var shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync = isControlledOutside && props.value !== nativeSelectValue && nativeSelectValue === (item === null || item === void 0 ? void 0 : item.value);
        if (shouldTriggerOnChangeWhenControlledAndInnerValueIsOutOfSync) {
            var _selectElRef_current;
            var event = new Event('change', {
                bubbles: true
            });
            (_selectElRef_current = selectElRef.current) === null || _selectElRef_current === void 0 ? void 0 : _selectElRef_current.dispatchEvent(event);
        }
    }, [
        close,
        options,
        selectElRef,
        isControlledOutside,
        props.value,
        nativeSelectValue
    ]);
    var selectFocused = React.useCallback(function() {
        if (focusedOptionIndex === undefined || !isValidIndex(focusedOptionIndex)) {
            return;
        }
        selectOption(focusedOptionIndex);
    }, [
        focusedOptionIndex,
        isValidIndex,
        selectOption
    ]);
    var open = React.useCallback(function() {
        setOpened(true);
        setFocusedOptionIndex(selectedOptionIndex);
        if (typeof onOpen === 'function') {
            onOpen();
        }
    }, [
        onOpen,
        selectedOptionIndex
    ]);
    var onBlur = React.useCallback(function() {
        var _selectElRef_current;
        close();
        var event = new Event('focusout', {
            bubbles: true
        });
        (_selectElRef_current = selectElRef.current) === null || _selectElRef_current === void 0 ? void 0 : _selectElRef_current.dispatchEvent(event);
    }, [
        close,
        selectElRef
    ]);
    var onFocus = React.useCallback(function() {
        var _selectElRef_current;
        var event = new Event('focusin', {
            bubbles: true
        });
        (_selectElRef_current = selectElRef.current) === null || _selectElRef_current === void 0 ? void 0 : _selectElRef_current.dispatchEvent(event);
    }, [
        selectElRef
    ]);
    var onClick = React.useCallback(function() {
        if (opened) {
            close();
        } else {
            open();
        }
    }, [
        close,
        open,
        opened
    ]);
    var handleKeyUp = React.useMemo(function() {
        return debounce(resetKeyboardInput, 1000);
    }, [
        resetKeyboardInput
    ]);
    var focusOption = React.useCallback(function(type) {
        var index = focusedOptionIndex;
        if (type === 'next') {
            var nextIndex = CustomSelect_findIndexAfter(options, index);
            index = nextIndex === -1 ? CustomSelect_findIndexAfter(options) : nextIndex; // Следующий за index или первый валидный до index
        } else if (type === 'prev') {
            var beforeIndex = CustomSelect_findIndexBefore(options, index);
            index = beforeIndex === -1 ? CustomSelect_findIndexBefore(options) : beforeIndex; // Предшествующий index или последний валидный после index
        }
        focusOptionByIndex(index);
    }, [
        focusOptionByIndex,
        focusedOptionIndex,
        options
    ]);
    React.useEffect(function updateOptionsAndSelectedOptionIndex() {
        var _props_value, _ref;
        var value = (_ref = (_props_value = props.value) !== null && _props_value !== void 0 ? _props_value : nativeSelectValue) !== null && _ref !== void 0 ? _ref : defaultValue;
        var options = searchable && inputValue !== undefined ? filter(optionsProp, inputValue, filterFn) : optionsProp;
        setOptions(options);
        setSelectedOptionIndex(findSelectedIndex(options, value, allowClearButton));
    }, [
        filterFn,
        inputValue,
        nativeSelectValue,
        optionsProp,
        defaultValue,
        props.value,
        searchable,
        allowClearButton
    ]);
    var onNativeSelectChange = function(e) {
        var newSelectedOptionIndex = findSelectedIndex(options, e.currentTarget.value, allowClearButton);
        if (selectedOptionIndex !== newSelectedOptionIndex) {
            if (!isControlledOutside) {
                setSelectedOptionIndex(newSelectedOptionIndex);
            }
            onChange === null || onChange === void 0 ? void 0 : onChange(e);
        }
    };
    var onInputChange = React.useCallback(function(e) {
        onInputChangeProp && onInputChangeProp(e);
        var options = filter(optionsProp, e.target.value, filterFn);
        setOptions(options);
        setSelectedOptionIndex(findSelectedIndex(options, nativeSelectValue, allowClearButton));
        setInputValue(e.target.value);
    }, [
        filterFn,
        nativeSelectValue,
        onInputChangeProp,
        optionsProp,
        allowClearButton
    ]);
    var areOptionsShown = React.useCallback(function() {
        return scrollBoxRef.current !== null;
    }, []);
    var handleKeyDownSelect = React.useCallback(function(event) {
        if (event.key.length === 1 && event.key !== ' ') {
            onKeyboardInput(event.key);
            return;
        }
        [
            'ArrowUp',
            'ArrowDown',
            'Escape',
            'Enter'
        ].includes(event.key) && areOptionsShown() && event.preventDefault();
        switch(event.key){
            case 'ArrowUp':
                if (opened) {
                    areOptionsShown() && focusOption('prev');
                } else {
                    open();
                }
                break;
            case 'ArrowDown':
                if (opened) {
                    areOptionsShown() && focusOption('next');
                } else {
                    open();
                }
                break;
            case 'Escape':
                close();
                break;
            case 'Backspace':
            case 'Delete':
                {
                    if (!opened) {
                        setOpened(true);
                    }
                    resetFocusedOption();
                    break;
                }
            case 'Enter':
            case 'Spacebar':
            case ' ':
                if (opened) {
                    areOptionsShown() && selectFocused();
                } else {
                    open();
                }
                break;
        }
    }, [
        areOptionsShown,
        close,
        focusOption,
        onKeyboardInput,
        open,
        opened,
        selectFocused,
        resetFocusedOption
    ]);
    var handleOptionClick = React.useCallback(function(e) {
        var _e_currentTarget_parentNode;
        var index = Array.prototype.indexOf.call((_e_currentTarget_parentNode = e.currentTarget.parentNode) === null || _e_currentTarget_parentNode === void 0 ? void 0 : _e_currentTarget_parentNode.children, e.currentTarget);
        var option = options[index];
        if (option && !option.disabled) {
            selectOption(index);
        }
    }, [
        options,
        selectOption
    ]);
    var prevMousePositionRef = React.useRef({
        x: 0,
        y: 0
    });
    var focusOptionOnMouseMove = React.useCallback(function(e, index) {
        var isMouseChangedPosition = Math.abs(prevMousePositionRef.current.x - e.clientX) >= 1 || Math.abs(prevMousePositionRef.current.y - e.clientY) >= 1;
        if (isMouseChangedPosition) {
            focusOptionByIndex(index, false);
        }
        prevMousePositionRef.current = {
            x: e.clientX,
            y: e.clientY
        };
    }, [
        focusOptionByIndex
    ]);
    var popupAriaId = React.useId();
    var renderOption = React.useCallback(function(option, index) {
        var hovered = index === focusedOptionIndex;
        var selected = index === selectedOptionIndex;
        return /*#__PURE__*/ React.createElement(React.Fragment, {
            key: "".concat(CustomSelect_type_of(option.value), "-").concat(option.value)
        }, renderOptionProp({
            option: option,
            hovered: hovered,
            children: option.label,
            selected: selected,
            disabled: option.disabled,
            onClick: handleOptionClick,
            onMouseDown: handleOptionDown,
            // Используем `onMouseMove` вместо `onMouseEnter/onMouseOver`.
            // Потому что если при навигации с клавиатуры курсор наведён на
            // список, то при первом автоматическом скролле списка вызывается событие MouseOver/MouseEnter
            // обработчик которого фокусирует опцию под курсором, хотя при навигация с клавиатуры пользователь мог уйти дальше по списку, это путает.
            // Причём координаты события меняются на пару пикселей по сравнению с прошлым вызовом,
            // а значит нельзя на них опираться, чтобы запретить обработку такого события.
            // C mousemove такой проблемы нет, что позволяет реализовать поведение при наведении с клавиатуры и при наведении мышью идентично `<select>`.
            onMouseMove: function(e) {
                return focusOptionOnMouseMove(e, index);
            },
            id: "".concat(popupAriaId, "-").concat(option.value)
        }));
    }, [
        focusedOptionIndex,
        handleOptionClick,
        focusOptionOnMouseMove,
        renderOptionProp,
        selectedOptionIndex,
        popupAriaId
    ]);
    var resolvedContent = React.useMemo(function() {
        var defaultDropdownContent = options.length > 0 ? /*#__PURE__*/ React.createElement("div", {
            ref: optionsWrapperRef
        }, options.map(renderOption)) : /*#__PURE__*/ React.createElement(Footnote, {
            className: "vkuiCustomSelect__empty"
        }, emptyText);
        if (typeof renderDropdown === 'function') {
            return renderDropdown({
                defaultDropdownContent: defaultDropdownContent
            });
        } else {
            return defaultDropdownContent;
        }
    }, [
        emptyText,
        options,
        renderDropdown,
        renderOption
    ]);
    var selectInputRef = useExternRef(getSelectInputRef);
    var focusOnInputTimerRef = React.useRef();
    var focusOnInput = React.useCallback(function() {
        clearTimeout(focusOnInputTimerRef.current);
        focusOnInputTimerRef.current = setTimeout(function() {
            selectInputRef.current && selectInputRef.current.focus();
        }, 0);
    }, [
        selectInputRef
    ]);
    useIsomorphicLayoutEffect(function clearFocusOnInputTimer() {
        return function() {
            clearTimeout(focusOnInputTimerRef.current);
        };
    }, []);
    var controlledValueSet = isControlledOutside && props.value !== '';
    var uncontrolledValueSet = !isControlledOutside && nativeSelectValue !== '';
    var clearButtonShown = allowClearButton && !opened && (controlledValueSet || uncontrolledValueSet);
    var clearButton = React.useMemo(function() {
        if (!clearButtonShown) {
            return null;
        }
        return /*#__PURE__*/ React.createElement(ClearButton, {
            className: iconProp === undefined ? "vkuiCustomSelect--clear-icon" : undefined,
            onClick: function clearSelectState() {
                setNativeSelectValue('');
                setInputValue('');
                focusOnInput();
            },
            disabled: restProps.disabled,
            "data-testid": clearButtonTestId
        });
    }, [
        clearButtonShown,
        ClearButton,
        iconProp,
        restProps.disabled,
        clearButtonTestId,
        focusOnInput
    ]);
    var icon = React.useMemo(function() {
        if (iconProp !== undefined) {
            return iconProp;
        }
        return /*#__PURE__*/ React.createElement(DropdownIcon, {
            className: clearButtonShown ? "vkuiCustomSelect__dropdown-icon" : undefined,
            opened: opened
        });
    }, [
        clearButtonShown,
        iconProp,
        opened
    ]);
    var afterIcons = (icon || clearButtonShown) && /*#__PURE__*/ React.createElement(React.Fragment, null, clearButton, icon);
    var document = useDOM().document;
    var passClickAndFocusToInputOnClick = React.useCallback(function(e) {
        // Раньше внешней оберткой CustomSelect был <label>, что позволяло по клику в любую область CustomSelect,
        // даже где нету интерактивного элемента, фокусировать <input> и передавать на него событие клика.
        // Так как мы больше не оборачиваем CustomSelect в <label>, то для обертки CustomSelect мы симулируем работу <label>.
        // передаем фокус и клик по <input>, если пользователь кликнул в зоне обертки.
        // В <label> мы не больше не оборачиваем, потому что это заставляет скринридер
        // дважды произносить текст выбранной опции при фокусе, если CustomSelect связан с внешним <label>.
        // Воспроизводится в некоторых версиях Chrome, при навигации по странице с помощью стрелок.
        // Договорились со специалистом по доступности убрать <label>-обёртки из Select и CustomSelect
        if (!selectInputRef.current || !document) {
            return;
        }
        var clickTargetIsNotAnInput = e.target !== selectInputRef.current;
        if (clickTargetIsNotAnInput) {
            selectInputRef.current.click();
            var inputIsNotFocused = document.activeElement !== selectInputRef.current;
            if (inputIsNotFocused) {
                focusOnInput();
            }
        }
    }, [
        document,
        focusOnInput,
        selectInputRef
    ]);
    var preventInputBlurWhenClickInsideFocusedSelectArea = function(e) {
        // Так как инпут больше не оборачивается пустым лэйблом, то клик внутри обертки,
        // но вне инпута (например по иконке дропдауна), будет убирать фокус с инпута.
        // Чтобы в такой ситуации отключить blur инпута мы превентим mousedown событие обёртки
        var isInputFocused = document && document.activeElement === selectInputRef.current;
        if (isInputFocused) {
            e.preventDefault();
        }
    };
    var ariaActiveDescendantOptionIndex = focusedOptionIndex !== -1 ? focusedOptionIndex : undefined;
    var ariaActiveDescendantId = ariaActiveDescendantOptionIndex !== undefined ? options[ariaActiveDescendantOptionIndex] && options[ariaActiveDescendantOptionIndex].value : null;
    var selectInputAriaProps = {
        'role': 'combobox',
        'aria-controls': popupAriaId,
        'aria-owns': popupAriaId,
        'aria-expanded': opened,
        'aria-activedescendant': ariaActiveDescendantId && opened ? "".concat(popupAriaId, "-").concat(ariaActiveDescendantId) : undefined,
        'aria-labelledby': ariaLabelledBy,
        'aria-haspopup': 'listbox',
        'aria-autocomplete': 'none'
    };
    var focusWithin = useFocusWithin(handleRootRef);
    return /*#__PURE__*/ React.createElement("div", {
        className: classNames("vkuiCustomSelect", sizeY !== 'regular' && CustomSelect_sizeYClassNames[sizeY], className),
        style: style,
        ref: handleRootRef,
        onClick: passClickAndFocusToInputOnClick,
        onMouseDown: preventInputBlurWhenClickInsideFocusedSelectArea
    }, focusWithin && selected && !opened && /*#__PURE__*/ React.createElement(VisuallyHidden, {
        "aria-live": "polite"
    }, selected.label), /*#__PURE__*/ React.createElement(CustomSelectInput, CustomSelect_object_spread_props(CustomSelect_object_spread({
        autoComplete: "off",
        autoCapitalize: "none",
        autoCorrect: "off",
        spellCheck: "false"
    }, restProps, selectInputAriaProps), {
        getRef: selectInputRef,
        onFocus: onFocus,
        onBlur: onBlur,
        className: openedClassNames,
        readOnly: !searchable,
        fetching: fetching,
        value: inputValue,
        onKeyUp: handleKeyUp,
        onKeyDown: handleKeyDownSelect,
        onChange: onInputChange,
        onClick: onClick,
        before: before,
        after: afterIcons,
        selectType: selectType
    }), selected === null || selected === void 0 ? void 0 : selected.label), /*#__PURE__*/ React.createElement("select", {
        ref: selectElRef,
        name: name,
        onChange: onNativeSelectChange,
        onBlur: props.onBlur,
        onFocus: props.onFocus,
        onClick: props.onClick,
        value: nativeSelectValue,
        "aria-hidden": true,
        className: "vkuiCustomSelect__control",
        "data-testid": nativeSelectTestId,
        required: required
    }, allowClearButton && /*#__PURE__*/ React.createElement("option", {
        key: "",
        value: ""
    }), optionsProp.map(function(item) {
        return /*#__PURE__*/ React.createElement("option", {
            key: "".concat(item.value),
            value: item.value
        });
    })), opened && /*#__PURE__*/ React.createElement(CustomSelectDropdown, {
        targetRef: containerRef,
        placement: popperPlacement,
        scrollBoxRef: setScrollBoxRef,
        onPlacementChange: setPopperPlacement,
        onMouseLeave: resetFocusedOption,
        fetching: fetching,
        overscrollBehavior: overscrollBehavior,
        offsetDistance: dropdownOffsetDistance,
        autoWidth: dropdownAutoWidth,
        forcePortal: forceDropdownPortal,
        autoHideScrollbar: autoHideScrollbar,
        autoHideScrollbarDelay: autoHideScrollbarDelay,
        noMaxHeight: noMaxHeight,
        role: "listbox",
        id: popupAriaId,
        "aria-labelledby": ariaLabelledBy,
        tabIndex: -1
    }, resolvedContent));
}

;// CONCATENATED MODULE: ./src/components/Select/Select.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/NativeSelect/NativeSelect.tsx
function NativeSelect_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function NativeSelect_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function NativeSelect_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function NativeSelect_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function NativeSelect_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function NativeSelect_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            NativeSelect_define_property(target, key, source[key]);
        });
    }
    return target;
}
function NativeSelect_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function NativeSelect_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        NativeSelect_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function NativeSelect_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = NativeSelect_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function NativeSelect_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function NativeSelect_sliced_to_array(arr, i) {
    return NativeSelect_array_with_holes(arr) || NativeSelect_iterable_to_array_limit(arr, i) || NativeSelect_unsupported_iterable_to_array(arr, i) || NativeSelect_non_iterable_rest();
}
function NativeSelect_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return NativeSelect_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return NativeSelect_array_like_to_array(o, minLen);
}











var NativeSelect_sizeYClassNames = {
    none: "vkuiSelect--sizeY-none",
    compact: "vkuiSelect--sizeY-compact"
};
/**
 * @see https://vkcom.github.io/VKUI/#/NativeSelect
 */ var NativeSelect_NativeSelect = function(_param) {
    var style = _param.style, align = _param.align, placeholder = _param.placeholder, children = _param.children, className = _param.className, getRef = _param.getRef, getRootRef = _param.getRootRef, disabled = _param.disabled, multiline = _param.multiline, _param_selectType = _param.selectType, selectType = _param_selectType === void 0 ? 'default' : _param_selectType, status = _param.status, _param_icon = _param.icon, icon = _param_icon === void 0 ? /*#__PURE__*/ React.createElement(DropdownIcon, null) : _param_icon, before = _param.before, onChange = _param.onChange, restProps = NativeSelect_object_without_properties(_param, [
        "style",
        "align",
        "placeholder",
        "children",
        "className",
        "getRef",
        "getRootRef",
        "disabled",
        "multiline",
        "selectType",
        "status",
        "icon",
        "before",
        "onChange"
    ]);
    var _React_useState = NativeSelect_sliced_to_array(React.useState(''), 2), title = _React_useState[0], setTitle = _React_useState[1];
    var _React_useState1 = NativeSelect_sliced_to_array(React.useState(false), 2), empty = _React_useState1[0], setEmpty = _React_useState1[1];
    var selectRef = useExternRef(getRef);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var checkSelectedOption = function() {
        var _selectRef_current;
        var selectedOption = (_selectRef_current = selectRef.current) === null || _selectRef_current === void 0 ? void 0 : _selectRef_current.options[selectRef.current.selectedIndex];
        if (selectedOption) {
            setTitle(selectedOption.text);
            setEmpty(selectedOption.value === '' && placeholder != null);
        }
    };
    useIsomorphicLayoutEffect(checkSelectedOption, [
        children
    ]);
    return /*#__PURE__*/ React.createElement(FormField, {
        Component: "div",
        className: classNames("vkuiSelect", 'vkuiInternalNativeSelect', before && "vkuiSelect--hasBefore", empty && "vkuiSelect--empty", multiline && "vkuiSelect--multiline", align === 'center' && "vkuiSelect--align-center", align === 'right' && "vkuiSelect--align-right", sizeY !== 'regular' && NativeSelect_sizeYClassNames[sizeY], className),
        style: style,
        getRootRef: getRootRef,
        disabled: disabled,
        before: before,
        after: icon,
        status: status,
        mode: getFormFieldModeFromSelectType(selectType)
    }, /*#__PURE__*/ React.createElement("select", NativeSelect_object_spread_props(NativeSelect_object_spread({}, restProps), {
        disabled: disabled,
        className: "vkuiSelect__el",
        onChange: callMultiple(onChange, checkSelectedOption),
        ref: selectRef
    }), placeholder && /*#__PURE__*/ React.createElement("option", {
        value: ""
    }, placeholder), children), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiSelect__container",
        "aria-hidden": true
    }, /*#__PURE__*/ React.createElement(SelectTypography, {
        className: "vkuiSelect__title",
        selectType: selectType
    }, title)));
};


;// CONCATENATED MODULE: ./src/components/Select/Select.tsx
function Select_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Select_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Select_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Select_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Select_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Select_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





/**
 * @see https://vkcom.github.io/VKUI/#/Select
 */ var Select = function(_param) {
    var children = _param.children, className = _param.className, props = Select_object_without_properties(_param, [
        "children",
        "className"
    ]);
    var _props_options = props.options, options = _props_options === void 0 ? [] : _props_options, searchable = props.searchable, emptyText = props.emptyText, onInputChange = props.onInputChange, filterFn = props.filterFn, popupDirection = props.popupDirection, renderOption = props.renderOption, renderDropdown = props.renderDropdown, fetching = props.fetching, onClose = props.onClose, onOpen = props.onOpen, icon = props.icon, ClearButton = props.ClearButton, allowClearButton = props.allowClearButton, clearButtonTestId = props.clearButtonTestId, dropdownOffsetDistance = props.dropdownOffsetDistance, dropdownAutoWidth = props.dropdownAutoWidth, forceDropdownPortal = props.forceDropdownPortal, noMaxHeight = props.noMaxHeight, autoHideScrollbar = props.autoHideScrollbar, autoHideScrollbarDelay = props.autoHideScrollbarDelay, labelTextTestId = props.labelTextTestId, nativeSelectTestId = props.nativeSelectTestId, after = props.after, mode = props.mode, pattern = props.pattern, minLength = props.minLength, maxLength = props.maxLength, readOnly = props.readOnly, getSelectInputRef = props.getSelectInputRef, overscrollBehavior = props.overscrollBehavior, beforeAlign = props.beforeAlign, afterAlign = props.afterAlign, restProps = Select_object_without_properties(props, [
        "options",
        "searchable",
        "emptyText",
        "onInputChange",
        "filterFn",
        "popupDirection",
        "renderOption",
        "renderDropdown",
        "fetching",
        "onClose",
        "onOpen",
        "icon",
        "ClearButton",
        "allowClearButton",
        "clearButtonTestId",
        "dropdownOffsetDistance",
        "dropdownAutoWidth",
        "forceDropdownPortal",
        "noMaxHeight",
        "autoHideScrollbar",
        "autoHideScrollbarDelay",
        "labelTextTestId",
        "nativeSelectTestId",
        "after",
        "mode",
        "pattern",
        "minLength",
        "maxLength",
        "readOnly",
        "getSelectInputRef",
        "overscrollBehavior",
        "beforeAlign",
        "afterAlign"
    ]);
    var deviceType = useAdaptivityConditionalRender().deviceType;
    var nativeProps = restProps;
    return /*#__PURE__*/ React.createElement(React.Fragment, null, deviceType.desktop && /*#__PURE__*/ React.createElement(CustomSelect, Select_object_spread({
        className: classNames(className, deviceType.desktop.className)
    }, props)), deviceType.mobile && /*#__PURE__*/ React.createElement(NativeSelect, Select_object_spread({
        className: classNames(className, deviceType.mobile.className)
    }, nativeProps), options.map(function(param) {
        var label = param.label, value = param.value, disabled = param.disabled;
        return /*#__PURE__*/ React.createElement("option", {
            value: value,
            key: "".concat(value),
            disabled: disabled
        }, label);
    })));
};

;// CONCATENATED MODULE: ./src/hooks/useAutoFocus.ts

function useAutoFocus_useAutoFocus(ref, autoFocus) {
    useIsomorphicLayoutEffect(function() {
        if (!autoFocus || !ref.current) {
            return;
        }
        ref.current.focus();
    }, []);
}

;// CONCATENATED MODULE: ./src/components/SelectMimicry/SelectMimicry.tsx
function SelectMimicry_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function SelectMimicry_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            SelectMimicry_define_property(target, key, source[key]);
        });
    }
    return target;
}
function SelectMimicry_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function SelectMimicry_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        SelectMimicry_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function SelectMimicry_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = SelectMimicry_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function SelectMimicry_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}










var SelectMimicry_sizeYClassNames = {
    none: "vkuiSelect--sizeY-none",
    compact: "vkuiSelect--sizeY-compact"
};
/**
 * @see https://vkcom.github.io/VKUI/#/SelectMimicry
 */ var SelectMimicry = function(_param) {
    var _param_tabIndex = _param.tabIndex, tabIndex = _param_tabIndex === void 0 ? 0 : _param_tabIndex, placeholder = _param.placeholder, children = _param.children, align = _param.align, getRootRef = _param.getRootRef, multiline = _param.multiline, disabled = _param.disabled, onClick = _param.onClick, before = _param.before, _param_after = _param.after, after = _param_after === void 0 ? /*#__PURE__*/ React.createElement(DropdownIcon, null) : _param_after, _param_selectType = _param.selectType, selectType = _param_selectType === void 0 ? 'default' : _param_selectType, status = _param.status, className = _param.className, autoFocus = _param.autoFocus, restProps = SelectMimicry_object_without_properties(_param, [
        "tabIndex",
        "placeholder",
        "children",
        "align",
        "getRootRef",
        "multiline",
        "disabled",
        "onClick",
        "before",
        "after",
        "selectType",
        "status",
        "className",
        "autoFocus"
    ]);
    var rootRef = useExternRef(getRootRef);
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var title = children || placeholder;
    useAutoFocus(rootRef, autoFocus);
    return /*#__PURE__*/ React.createElement(FormField, SelectMimicry_object_spread_props(SelectMimicry_object_spread({}, restProps), {
        tabIndex: disabled ? undefined : tabIndex,
        className: classNames("vkuiSelect", sizeY !== 'regular' && SelectMimicry_sizeYClassNames[sizeY], !children && "vkuiSelect--empty", multiline && "vkuiSelect--multiline", align === 'center' && "vkuiSelect--align-center", align === 'right' && "vkuiSelect--align-right", before && "vkuiSelect--hasBefore", className),
        getRootRef: rootRef,
        onClick: disabled ? undefined : onClick,
        disabled: disabled,
        before: before,
        after: after,
        mode: getFormFieldModeFromSelectType(selectType),
        status: status
    }), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiSelect__container"
    }, /*#__PURE__*/ React.createElement(SelectTypography, {
        selectType: selectType,
        className: "vkuiSelect__title"
    }, title)));
};

;// CONCATENATED MODULE: ./src/components/DatePicker/DatePicker.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/DatePicker/DatePicker.tsx
function DatePicker_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function DatePicker_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function DatePicker_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function DatePicker_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function DatePicker_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function DatePicker_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            DatePicker_define_property(target, key, source[key]);
        });
    }
    return target;
}
function DatePicker_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function DatePicker_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        DatePicker_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function DatePicker_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = DatePicker_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function DatePicker_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function DatePicker_sliced_to_array(arr, i) {
    return DatePicker_array_with_holes(arr) || DatePicker_iterable_to_array_limit(arr, i) || DatePicker_unsupported_iterable_to_array(arr, i) || DatePicker_non_iterable_rest();
}
function DatePicker_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return DatePicker_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return DatePicker_array_like_to_array(o, minLen);
}











var DefaultMonths = (/* unused pure expression or super */ null && ([
    'Января',
    'Февраля',
    'Марта',
    'Апреля',
    'Мая',
    'Июня',
    'Июля',
    'Августа',
    'Сентября',
    'Октября',
    'Ноября',
    'Декабря'
]));
var DEFAULT_EMPTY_DATE = {
    day: 0,
    month: 0,
    year: 0
};
// Переводим state к формату гг-мм-дд
function convertToInputFormat(value) {
    if (!value) {
        return undefined;
    }
    var _value_day = value.day, day = _value_day === void 0 ? 0 : _value_day, _value_month = value.month, month = _value_month === void 0 ? 0 : _value_month, _value_year = value.year, year = _value_year === void 0 ? 0 : _value_year;
    return "".concat(year, "-").concat(leadingZero(month), "-").concat(leadingZero(day));
}
// Переводим дату формата гг-мм-дд к объекту
function parseInputDate(date) {
    if (date.length === 0) {
        return DEFAULT_EMPTY_DATE;
    }
    var splited = date.split('-');
    return {
        day: Number(splited[2]),
        month: Number(splited[1]),
        year: Number(splited[0])
    };
}
function getMonthMaxDay(month, year) {
    return month ? new Date(year || 2016, month, 0).getDate() : 31;
}
var DatePickerCustom = function(_param) {
    var name = _param.name, _param_min = _param.min, min = _param_min === void 0 ? {
        day: 0,
        month: 0,
        year: 0
    } : _param_min, _param_max = _param.max, max = _param_max === void 0 ? {
        day: 31,
        month: 12,
        year: 2100
    } : _param_max, dayPlaceholder = _param.dayPlaceholder, monthPlaceholder = _param.monthPlaceholder, yearPlaceholder = _param.yearPlaceholder, popupDirection = _param.popupDirection, value = _param.value, monthNames = _param.monthNames, onDateChange = _param.onDateChange, disabled = _param.disabled, _param_defaultValue = _param.defaultValue, defaultValue = _param_defaultValue === void 0 ? DEFAULT_EMPTY_DATE : _param_defaultValue, restProps = DatePicker_object_without_properties(_param, [
        "name",
        "min",
        "max",
        "dayPlaceholder",
        "monthPlaceholder",
        "yearPlaceholder",
        "popupDirection",
        "value",
        "monthNames",
        "onDateChange",
        "disabled",
        "defaultValue"
    ]);
    var isControlled = value !== undefined;
    var _useCustomEnsuredControl = DatePicker_sliced_to_array(useCustomEnsuredControl({
        value: value,
        defaultValue: defaultValue
    }), 2), internalValue = _useCustomEnsuredControl[0], setInternalValue = _useCustomEnsuredControl[1];
    var hiddenInput = React.useRef(null);
    var onSelectChange = function(e) {
        var nextDate = {
            day: internalValue.day,
            month: internalValue.month,
            year: internalValue.year
        };
        nextDate[e.target.name] = Number(e.target.value);
        nextDate.day = nextDate.day ? clamp(nextDate.day, 1, getMonthMaxDay(nextDate.month, nextDate.year)) : nextDate.day;
        setInternalValue(nextDate);
        onDateChange === null || onDateChange === void 0 ? void 0 : onDateChange(nextDate);
    };
    var dayOptions = range(1, getMonthMaxDay(internalValue.month, internalValue.year)).map(function(value) {
        return {
            label: String(value),
            value: value
        };
    });
    var monthOptions = (monthNames || DefaultMonths).map(function(name, index) {
        return {
            label: name,
            value: index + 1
        };
    });
    var yearOptions = range(max.year, min.year).map(function(value) {
        return {
            label: String(value),
            value: value
        };
    });
    useNativeFormResetListener(hiddenInput, function() {
        if (!isControlled) {
            setInternalValue(defaultValue);
        }
    });
    return /*#__PURE__*/ React.createElement(RootComponent, DatePicker_object_spread({
        baseClassName: "vkuiDatePicker"
    }, restProps), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiDatePicker__container"
    }, /*#__PURE__*/ React.createElement("div", {
        className: "vkuiDatePicker__day"
    }, /*#__PURE__*/ React.createElement(CustomSelect, {
        name: "day",
        value: internalValue.day,
        options: dayOptions,
        placeholder: dayPlaceholder,
        popupDirection: popupDirection,
        onChange: onSelectChange,
        disabled: disabled
    })), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiDatePicker__month"
    }, /*#__PURE__*/ React.createElement(CustomSelect, {
        className: "vkuiDatePicker__monthSelect",
        name: "month",
        value: internalValue.month,
        options: monthOptions,
        placeholder: monthPlaceholder,
        popupDirection: popupDirection,
        onChange: onSelectChange,
        disabled: disabled
    })), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiDatePicker__year"
    }, /*#__PURE__*/ React.createElement(CustomSelect, {
        name: "year",
        value: internalValue.year,
        options: yearOptions,
        placeholder: yearPlaceholder,
        popupDirection: popupDirection,
        onChange: onSelectChange,
        disabled: disabled
    }))), /*#__PURE__*/ React.createElement("input", {
        type: "hidden",
        name: name,
        ref: hiddenInput,
        value: convertToInputFormat(internalValue)
    }));
};
var DatePickerNative = function(_param) {
    var _param_min = _param.min, min = _param_min === void 0 ? {
        day: 0,
        month: 0,
        year: 0
    } : _param_min, _param_max = _param.max, max = _param_max === void 0 ? {
        day: 31,
        month: 12,
        year: 2100
    } : _param_max, monthNames = _param.monthNames, popupDirection = _param.popupDirection, dayPlaceholder = _param.dayPlaceholder, monthPlaceholder = _param.monthPlaceholder, yearPlaceholder = _param.yearPlaceholder, value = _param.value, _param_defaultValue = _param.defaultValue, defaultValue = _param_defaultValue === void 0 ? DEFAULT_EMPTY_DATE : _param_defaultValue, onDateChange = _param.onDateChange, restProps = DatePicker_object_without_properties(_param, [
        "min",
        "max",
        "monthNames",
        "popupDirection",
        "dayPlaceholder",
        "monthPlaceholder",
        "yearPlaceholder",
        "value",
        "defaultValue",
        "onDateChange"
    ]);
    var onStringChange = React.useCallback(function(e) {
        onDateChange === null || onDateChange === void 0 ? void 0 : onDateChange(parseInputDate(e.currentTarget.value));
    }, [
        onDateChange
    ]);
    var inputProps = restProps;
    var valueProps = value ? {
        value: convertToInputFormat(value)
    } : {
        defaultValue: convertToInputFormat(defaultValue)
    };
    return /*#__PURE__*/ React.createElement(Input, DatePicker_object_spread_props(DatePicker_object_spread({}, inputProps, valueProps), {
        type: "date",
        onChange: onStringChange,
        min: convertToInputFormat(min),
        max: convertToInputFormat(max)
    }));
};
/**
 * @see https://vkcom.github.io/VKUI/#/DatePicker
 *
 * @deprecated 6.2.0
 *
 * Компонент устарел и будет удален в v7. Используйте вместо него компоненты
 * [Input](https://vkcom.github.io/VKUI/#/Input) и
 * [Select](https://vkcom.github.io/VKUI/#/Select).
 */ var DatePicker = function(_param) {
    var onDateChange = _param.onDateChange, props = DatePicker_object_without_properties(_param, [
        "onDateChange"
    ]);
    var hasPointer = useAdaptivityHasPointer();
    var onChange = function(update) {
        onDateChange && onDateChange(DatePicker_object_spread({}, update));
    };
    var Cmp = hasPointer ? DatePickerCustom : DatePickerNative;
    return /*#__PURE__*/ React.createElement(Cmp, DatePicker_object_spread_props(DatePicker_object_spread({}, props), {
        onDateChange: onChange
    }));
};

;// CONCATENATED MODULE: ./src/components/SegmentedControl/SegmentedControlOption/SegmentedControlOption.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/SegmentedControl/SegmentedControlOption/SegmentedControlOption.tsx
function SegmentedControlOption_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function SegmentedControlOption_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            SegmentedControlOption_define_property(target, key, source[key]);
        });
    }
    return target;
}
function SegmentedControlOption_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function SegmentedControlOption_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        SegmentedControlOption_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function SegmentedControlOption_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = SegmentedControlOption_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function SegmentedControlOption_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






/**
 * @see https://vkcom.github.io/VKUI/#/SegmentedControl
 */ var SegmentedControlOption_SegmentedControlOption = function(_param) {
    var getRef = _param.getRef, className = _param.className, style = _param.style, children = _param.children, getRootRef = _param.getRootRef, before = _param.before, restProps = SegmentedControlOption_object_without_properties(_param, [
        "getRef",
        "className",
        "style",
        "children",
        "getRootRef",
        "before"
    ]);
    return /*#__PURE__*/ React.createElement(Clickable, {
        Component: "label",
        baseClassName: "vkuiSegmentedControlOption",
        hoverClassName: "vkuiSegmentedControlOption--hover",
        activeClassName: "vkuiSegmentedControlOption--hover",
        className: className,
        getRootRef: getRootRef,
        style: style
    }, /*#__PURE__*/ React.createElement(VisuallyHidden, SegmentedControlOption_object_spread_props(SegmentedControlOption_object_spread({}, restProps), {
        Component: "input",
        getRootRef: getRef,
        type: "radio"
    })), hasReactNode(before) && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiSegmentedControlOption__before"
    }, before), /*#__PURE__*/ React.createElement(Headline, {
        level: "2",
        weight: "2"
    }, children));
};

;// CONCATENATED MODULE: ./src/components/SegmentedControl/SegmentedControl.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/SegmentedControl/SegmentedControl.tsx
function SegmentedControl_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function SegmentedControl_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function SegmentedControl_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function SegmentedControl_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function SegmentedControl_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function SegmentedControl_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            SegmentedControl_define_property(target, key, source[key]);
        });
    }
    return target;
}
function SegmentedControl_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function SegmentedControl_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        SegmentedControl_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function SegmentedControl_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = SegmentedControl_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function SegmentedControl_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function SegmentedControl_sliced_to_array(arr, i) {
    return SegmentedControl_array_with_holes(arr) || SegmentedControl_iterable_to_array_limit(arr, i) || SegmentedControl_unsupported_iterable_to_array(arr, i) || SegmentedControl_non_iterable_rest();
}
function SegmentedControl_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return SegmentedControl_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return SegmentedControl_array_like_to_array(o, minLen);
}
var _options_;









var SegmentedControl_sizeYClassNames = {
    none: "vkuiSegmentedControl--sizeY-none",
    regular: "vkuiSegmentedControl--sizeY-regular"
};
var SegmentedControl_warn = warnOnce('SegmentedControl');
/**
 * @see https://vkcom.github.io/VKUI/#/SegmentedControl
 */ var SegmentedControl = function(_param) {
    var _param_size = _param.size, size = _param_size === void 0 ? 'l' : _param_size, name = _param.name, options = _param.options, _param_defaultValue = _param.defaultValue, defaultValue = _param_defaultValue === void 0 ? (_options_ = options[0]) === null || _options_ === void 0 ? void 0 : _options_.value : _param_defaultValue, children = _param.children, onChangeProp = _param.onChange, valueProp = _param.value, restProps = SegmentedControl_object_without_properties(_param, [
        "size",
        "name",
        "options",
        "defaultValue",
        "children",
        "onChange",
        "value"
    ]);
    var id = React.useId();
    var _useCustomEnsuredControl = SegmentedControl_sliced_to_array(useCustomEnsuredControl({
        onChange: onChangeProp,
        value: valueProp,
        defaultValue: defaultValue
    }), 2), value = _useCustomEnsuredControl[0], onChange = _useCustomEnsuredControl[1];
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var actualIndex = options.findIndex(function(option) {
        return option.value === value;
    });
    useIsomorphicLayoutEffect(function() {
        if (actualIndex === -1 && "production" === 'development') {}
    }, [
        actualIndex
    ]);
    var translateX = "translateX(".concat(100 * actualIndex, "%)");
    return /*#__PURE__*/ React.createElement(RootComponent, SegmentedControl_object_spread_props(SegmentedControl_object_spread({}, restProps), {
        baseClassName: classNames("vkuiSegmentedControl", sizeY !== 'compact' && SegmentedControl_sizeYClassNames[sizeY], size === 'l' && "vkuiSegmentedControl--size-l")
    }), /*#__PURE__*/ React.createElement("div", {
        role: "radiogroup",
        className: "vkuiSegmentedControl__in"
    }, actualIndex > -1 && /*#__PURE__*/ React.createElement("div", {
        "aria-hidden": true,
        className: "vkuiSegmentedControl__slider",
        style: {
            width: "".concat(100 / options.length, "%"),
            transform: translateX
        }
    }), options.map(function(_param) {
        var label = _param.label, optionProps = SegmentedControl_object_without_properties(_param, [
            "label"
        ]);
        return /*#__PURE__*/ React.createElement(SegmentedControlOption, SegmentedControl_object_spread_props(SegmentedControl_object_spread({
            key: "".concat(optionProps.value)
        }, optionProps), {
            name: name !== null && name !== void 0 ? name : id,
            checked: value === optionProps.value,
            onChange: function() {
                return onChange(optionProps.value);
            }
        }), label);
    })));
};

;// CONCATENATED MODULE: ./src/lib/calendar.ts


var calendar_DEFAULT_MAX_YEAR = 9999;
// 100 - из-за ограничений dayjs https://github.com/iamkun/dayjs/issues/2591
var calendar_DEFAULT_MIN_YEAR = 100;
var calendar_getYears = function(currentYear, range) {
    var years = [];
    var minYear = clampNumber(currentYear - range, calendar_DEFAULT_MIN_YEAR, calendar_DEFAULT_MAX_YEAR);
    var maxYear = clampNumber(currentYear + range, calendar_DEFAULT_MIN_YEAR, calendar_DEFAULT_MAX_YEAR);
    for(var i = minYear; i <= maxYear; i++){
        years.push({
            label: String(i).padStart(4, '0'),
            value: i
        });
    }
    return years;
};
var calendar_getMonths = function(locale) {
    var months = [];
    var formatter = new Intl.DateTimeFormat(locale, {
        month: 'long'
    });
    for(var i = 0; i < 12; i++){
        months.push({
            label: formatter.format(new Date('1970-01-01').setMonth(i)),
            value: i
        });
    }
    return months;
};
var calendar_getDaysNames = function(now, weekStartsOn, locale) {
    var formatter = new Intl.DateTimeFormat(locale, {
        weekday: 'short'
    });
    return eachDayOfInterval({
        start: startOfWeek(now, {
            weekStartsOn: weekStartsOn
        }),
        end: endOfWeek(now, {
            weekStartsOn: weekStartsOn
        })
    }).map(function(day) {
        return formatter.format(day);
    });
};
var calendar_navigateDate = function(date, key) {
    var newDate = date !== null && date !== void 0 ? date : new Date();
    switch(key){
        case 'ArrowRight':
            newDate = addDays(newDate, 1);
            break;
        case 'ArrowLeft':
            newDate = subDays(newDate, 1);
            break;
        case 'ArrowUp':
            newDate = subWeeks(newDate, 1);
            break;
        case 'ArrowDown':
            newDate = addWeeks(newDate, 1);
            break;
    }
    return newDate;
};
var calendar_getWeeks = function(viewDate, weekStartsOn) {
    var start = startOfWeek(startOfMonth(viewDate), {
        weekStartsOn: weekStartsOn
    });
    var end = endOfWeek(endOfMonth(viewDate), {
        weekStartsOn: weekStartsOn
    });
    var count = 0;
    var current = start;
    var nestedWeeks = [];
    var lastDay = null;
    while(isBefore(current, end)){
        var weekNumber = Math.floor(count / 7);
        nestedWeeks[weekNumber] = nestedWeeks[weekNumber] || [];
        var day = current.getDay();
        if (lastDay !== day) {
            lastDay = day;
            nestedWeeks[weekNumber].push(current);
            count += 1;
        }
        current = addDays(current, 1);
    }
    return nestedWeeks;
};
var calendar_setTimeEqual = function(to, from) {
    if (from) {
        to.setHours(from.getHours());
        to.setMinutes(from.getMinutes());
        to.setSeconds(from.getSeconds());
        to.setMilliseconds(from.getMilliseconds());
    }
    return to;
};
var calendar_isFirstDay = function(day, dayOfWeek) {
    return dayOfWeek === 0 || isFirstDayOfMonth(day);
};
var calendar_isLastDay = function(day, dayOfWeek) {
    return dayOfWeek === 6 || isLastDayOfMonth(day);
};
/**
 * Возвращает дату, ограниченную `min` и/или `max` значениями
 */ function calendar_clamp(day) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var min = options.min, max = options.max;
    if (min && isBefore(day, min)) {
        return min;
    }
    if (max && isAfter(day, max)) {
        return max;
    }
    return day;
}
/**
 * Позволяет определить удовлетворяет ли исходная дата заданным ограничения `min` и/или `max`
 */ function calendar_isDayMinMaxRestricted(day) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var min = options.min, max = options.max, _options_withTime = options.withTime, withTime = _options_withTime === void 0 ? false : _options_withTime;
    if (!withTime && (min && isSameDay(day, min) || max && isSameDay(day, max))) {
        return false;
    }
    return Boolean(min && isBefore(day, min) || max && isAfter(day, max));
}

;// CONCATENATED MODULE: ./src/hooks/useCalendar.ts
function useCalendar_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useCalendar_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useCalendar_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useCalendar_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useCalendar_sliced_to_array(arr, i) {
    return useCalendar_array_with_holes(arr) || useCalendar_iterable_to_array_limit(arr, i) || useCalendar_unsupported_iterable_to_array(arr, i) || useCalendar_non_iterable_rest();
}
function useCalendar_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useCalendar_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useCalendar_array_like_to_array(o, minLen);
}



function useCalendar_useCalendar(param) {
    var value = param.value, disablePast = param.disablePast, disableFuture = param.disableFuture, shouldDisableDate = param.shouldDisableDate, onHeaderChange = param.onHeaderChange, onNextMonth = param.onNextMonth, onPrevMonth = param.onPrevMonth, minDateTime = param.minDateTime, maxDateTime = param.maxDateTime;
    var _ref;
    var _React_useState = useCalendar_sliced_to_array(React.useState((_ref = Array.isArray(value) ? value[0] : value) !== null && _ref !== void 0 ? _ref : new Date()), 2), viewDate = _React_useState[0], setViewDate = _React_useState[1];
    var _React_useState1 = useCalendar_sliced_to_array(React.useState(), 2), focusedDay = _React_useState1[0], setFocusedDay = _React_useState1[1];
    var setPrevMonth = React.useCallback(function() {
        onPrevMonth === null || onPrevMonth === void 0 ? void 0 : onPrevMonth();
        setViewDate(subMonths(viewDate, 1));
    }, [
        viewDate,
        onPrevMonth
    ]);
    var setNextMonth = React.useCallback(function() {
        onNextMonth === null || onNextMonth === void 0 ? void 0 : onNextMonth();
        setViewDate(addMonths(viewDate, 1));
    }, [
        viewDate,
        onNextMonth
    ]);
    var handleSetViewDate = React.useCallback(function(value) {
        onHeaderChange === null || onHeaderChange === void 0 ? void 0 : onHeaderChange(value);
        setViewDate(value);
    }, [
        onHeaderChange
    ]);
    var isDayFocused = React.useCallback(function(day) {
        return Boolean(focusedDay && isSameDay(day, focusedDay));
    }, [
        focusedDay
    ]);
    var isDayDisabled = React.useCallback(function(day, withTime) {
        var now = new Date();
        if (shouldDisableDate) {
            return shouldDisableDate(day);
        }
        if (disableFuture) {
            return isAfter(startOfDay(day), now);
        }
        if (disablePast) {
            return isBefore(endOfDay(day), now);
        }
        if (minDateTime || maxDateTime) {
            return isDayMinMaxRestricted(day, {
                min: minDateTime,
                max: maxDateTime,
                withTime: withTime
            });
        }
        return false;
    }, [
        disableFuture,
        disablePast,
        shouldDisableDate,
        minDateTime,
        maxDateTime
    ]);
    var isMonthDisabled = React.useCallback(function(month, year) {
        var now = new Date();
        year = year || viewDate.getFullYear();
        var minMonth = minDateTime ? minDateTime.getMonth() : 0;
        var maxMonth = maxDateTime ? maxDateTime.getMonth() : 11;
        var minYear = (minDateTime === null || minDateTime === void 0 ? void 0 : minDateTime.getFullYear()) || DEFAULT_MIN_YEAR;
        var maxYear = (maxDateTime === null || maxDateTime === void 0 ? void 0 : maxDateTime.getFullYear()) || DEFAULT_MAX_YEAR;
        var isDisabled = year >= minYear && year <= maxYear ? year === minYear && minMonth > month || year === maxYear && month > maxMonth : true;
        if (disableFuture) {
            isDisabled = isDisabled || (year === now.getFullYear() ? month > now.getMonth() : year > now.getFullYear());
        }
        if (disablePast) {
            isDisabled = isDisabled || (year === now.getFullYear() ? month < now.getMonth() : year < now.getFullYear());
        }
        return isDisabled;
    }, [
        disableFuture,
        disablePast,
        viewDate,
        minDateTime,
        maxDateTime
    ]);
    var isYearDisabled = React.useCallback(function(year) {
        var now = new Date();
        var minYear = (minDateTime === null || minDateTime === void 0 ? void 0 : minDateTime.getFullYear()) || DEFAULT_MIN_YEAR;
        var maxYear = (maxDateTime === null || maxDateTime === void 0 ? void 0 : maxDateTime.getFullYear()) || DEFAULT_MAX_YEAR;
        var isDisabled = minYear > year || year > maxYear;
        if (disableFuture) {
            isDisabled = isDisabled || year > now.getFullYear();
        }
        if (disablePast) {
            isDisabled = isDisabled || year < now.getFullYear();
        }
        return isDisabled;
    }, [
        disableFuture,
        disablePast,
        minDateTime,
        maxDateTime
    ]);
    var resetSelectedDay = React.useCallback(function() {
        setFocusedDay(undefined);
    }, [
        setFocusedDay
    ]);
    return {
        viewDate: viewDate,
        setViewDate: handleSetViewDate,
        setPrevMonth: setPrevMonth,
        setNextMonth: setNextMonth,
        focusedDay: focusedDay,
        setFocusedDay: setFocusedDay,
        isDayFocused: isDayFocused,
        isDayDisabled: isDayDisabled,
        resetSelectedDay: resetSelectedDay,
        isMonthDisabled: isMonthDisabled,
        isYearDisabled: isYearDisabled
    };
}

;// CONCATENATED MODULE: ./src/hooks/useTodayDate.ts
function useTodayDate_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useTodayDate_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useTodayDate_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useTodayDate_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useTodayDate_sliced_to_array(arr, i) {
    return useTodayDate_array_with_holes(arr) || useTodayDate_iterable_to_array_limit(arr, i) || useTodayDate_unsupported_iterable_to_array(arr, i) || useTodayDate_non_iterable_rest();
}
function useTodayDate_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useTodayDate_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useTodayDate_array_like_to_array(o, minLen);
}



/**
 * Опционально обновляемая дата сегодняшнего дня
 *
 * Дата - сегодня (в соответствии с системным временем)
 *
 * Часы, минуты, секунды, миллисекунды - произвольные
 *
 * @param listenDayChangesForUpdate - флаг по которому определяется, будет ли создаваться подписка на смену календарного дня
 */ function useTodayDate_useTodayDate() {
    var listenDayChangesForUpdate = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
    var _useDOM = useDOM(), document = _useDOM.document, window = _useDOM.window;
    var _React_useState = useTodayDate_sliced_to_array(React.useState(function() {
        return new Date();
    }), 2), todayDate = _React_useState[0], setTodayDate = _React_useState[1];
    React.useEffect(function() {
        if (!listenDayChangesForUpdate || !document || !window) {
            return;
        }
        var timeout = undefined;
        var recalcTimeout = function() {
            if (document.visibilityState === 'visible') {
                var now = new Date();
                var timeToDayChange = differenceInMilliseconds(endOfToday(), now);
                // Удаляем старый таймаут
                window.clearTimeout(timeout);
                // Создаем новый таймаут
                timeout = window.setTimeout(function() {
                    setTodayDate(now);
                }, timeToDayChange);
                // Если todayDate не обновился в таймаут - обновить при заходе на вкладку
                if (!isSameDay(todayDate, now)) {
                    setTodayDate(now);
                }
            }
        };
        recalcTimeout();
        // Создаем слушатель visibilitychange, чтобы предотвратить пропуск обновления стейта после заморозки вкладки
        // Если человек ее долго не трогал или закрывал крышку ноута и тп
        // https://developer.chrome.com/blog/page-lifecycle-api/
        document.addEventListener('visibilitychange', recalcTimeout);
        return function() {
            window.clearTimeout(timeout);
            document.removeEventListener('visibilitychange', recalcTimeout);
        };
    }, [
        document,
        listenDayChangesForUpdate,
        todayDate,
        window
    ]);
    return todayDate;
}

;// CONCATENATED MODULE: ./src/components/CalendarDay/CalendarDay.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/CalendarDay/CalendarDay.tsx
function CalendarDay_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CalendarDay_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CalendarDay_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CalendarDay_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CalendarDay_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CalendarDay_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}







var CalendarDay_CalendarDay = /*#__PURE__*/ react.memo(function(_param) {
    var day = _param.day, today = _param.today, selected = _param.selected, onChange = _param.onChange, hidden = _param.hidden, disabled = _param.disabled, active = _param.active, selectionStart = _param.selectionStart, selectionEnd = _param.selectionEnd, focused = _param.focused, onEnter = _param.onEnter, onLeave = _param.onLeave, hinted = _param.hinted, hintedSelectionStart = _param.hintedSelectionStart, hintedSelectionEnd = _param.hintedSelectionEnd, sameMonth = _param.sameMonth, size = _param.size, className = _param.className, children = _param.children, renderDayContent = _param.renderDayContent, restProps = CalendarDay_object_without_properties(_param, [
        "day",
        "today",
        "selected",
        "onChange",
        "hidden",
        "disabled",
        "active",
        "selectionStart",
        "selectionEnd",
        "focused",
        "onEnter",
        "onLeave",
        "hinted",
        "hintedSelectionStart",
        "hintedSelectionEnd",
        "sameMonth",
        "size",
        "className",
        "children",
        "renderDayContent"
    ]);
    var locale = ConfigProviderContext_useConfigProvider().locale;
    var ref = react.useRef(null);
    var onClick = react.useCallback(function() {
        return onChange(day);
    }, [
        day,
        onChange
    ]);
    var handleEnter = react.useCallback(function() {
        return onEnter === null || onEnter === void 0 ? void 0 : onEnter(day);
    }, [
        day,
        onEnter
    ]);
    var handleLeave = react.useCallback(function() {
        return onLeave === null || onLeave === void 0 ? void 0 : onLeave(day);
    }, [
        day,
        onLeave
    ]);
    var label = new Intl.DateTimeFormat(locale, {
        weekday: 'long',
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    }).format(day);
    react.useEffect(function() {
        if (focused && ref.current) {
            ref.current.dispatchEvent(new Event(ENABLE_KEYBOARD_INPUT_EVENT_NAME, {
                bubbles: true
            }));
            ref.current.focus();
        }
    }, [
        focused
    ]);
    var content = react.useMemo(function() {
        if (renderDayContent) {
            return renderDayContent(day);
        }
        return /*#__PURE__*/ react.createElement("div", {
            className: "vkuiCalendarDay__day-number"
        }, /*#__PURE__*/ react.createElement(VisuallyHidden_VisuallyHidden, null, children !== null && children !== void 0 ? children : label), /*#__PURE__*/ react.createElement("span", {
            "aria-hidden": true
        }, day.getDate()));
    }, [
        renderDayContent,
        day,
        children,
        label
    ]);
    if (hidden) {
        return /*#__PURE__*/ react.createElement("div", {
            className: "vkuiCalendarDay__hidden"
        });
    }
    return /*#__PURE__*/ react.createElement(Tappable_Tappable, CalendarDay_object_spread({
        className: clsx("vkuiCalendarDay", size === 's' && "vkuiCalendarDay--size-s", today && "vkuiCalendarDay--today", selected && !disabled && "vkuiCalendarDay--selected", selectionStart && "vkuiCalendarDay--selection-start", selectionEnd && "vkuiCalendarDay--selection-end", disabled && "vkuiCalendarDay--disabled", !sameMonth && "vkuiCalendarDay--not-same-month", className),
        hoverMode: active ? '' : "vkuiCalendarDay--hover",
        hasActive: false,
        onClick: onClick,
        disabled: disabled,
        tabIndex: -1,
        getRootRef: ref,
        focusVisibleMode: active ? 'outside' : 'inside',
        onPointerEnter: handleEnter,
        onPointerLeave: handleLeave
    }, restProps), /*#__PURE__*/ react.createElement("div", {
        className: clsx("vkuiCalendarDay__hinted", hinted && "vkuiCalendarDay__hinted--active", hintedSelectionStart && "vkuiCalendarDay__hinted--selection-start", hintedSelectionEnd && "vkuiCalendarDay__hinted--selection-end")
    }, /*#__PURE__*/ react.createElement("div", {
        className: clsx("vkuiCalendarDay__inner", active && !disabled && "vkuiCalendarDay__inner--active")
    }, content)));
});
CalendarDay_CalendarDay.displayName = 'CalendarDay';

;// CONCATENATED MODULE: ./src/components/CalendarDays/CalendarDays.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/CalendarDays/CalendarDays.tsx
function CalendarDays_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CalendarDays_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CalendarDays_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CalendarDays_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function CalendarDays_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        CalendarDays_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function CalendarDays_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CalendarDays_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CalendarDays_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}











var CalendarDays_CalendarDays = function(_param) {
    var viewDate = _param.viewDate, value = _param.value, weekStartsOn = _param.weekStartsOn, onDayChange = _param.onDayChange, isDaySelected = _param.isDaySelected, isDayActive = _param.isDayActive, isDaySelectionEnd = _param.isDaySelectionEnd, isDaySelectionStart = _param.isDaySelectionStart, onDayEnter = _param.onDayEnter, onDayLeave = _param.onDayLeave, isDayHinted = _param.isDayHinted, isHintedDaySelectionStart = _param.isHintedDaySelectionStart, isHintedDaySelectionEnd = _param.isHintedDaySelectionEnd, isDayFocused = _param.isDayFocused, isDayDisabled = _param.isDayDisabled, size = _param.size, _param_showNeighboringMonth = _param.showNeighboringMonth, showNeighboringMonth = _param_showNeighboringMonth === void 0 ? false : _param_showNeighboringMonth, dayProps = _param.dayProps, _param_listenDayChangesForUpdate = _param.listenDayChangesForUpdate, listenDayChangesForUpdate = _param_listenDayChangesForUpdate === void 0 ? false : _param_listenDayChangesForUpdate, getRootRef = _param.getRootRef, renderDayContent = _param.renderDayContent, props = CalendarDays_object_without_properties(_param, [
        "viewDate",
        "value",
        "weekStartsOn",
        "onDayChange",
        "isDaySelected",
        "isDayActive",
        "isDaySelectionEnd",
        "isDaySelectionStart",
        "onDayEnter",
        "onDayLeave",
        "isDayHinted",
        "isHintedDaySelectionStart",
        "isHintedDaySelectionEnd",
        "isDayFocused",
        "isDayDisabled",
        "size",
        "showNeighboringMonth",
        "dayProps",
        "listenDayChangesForUpdate",
        "getRootRef",
        "renderDayContent"
    ]);
    var locale = useConfigProvider().locale;
    var ref = useExternRef(getRootRef);
    var now = useTodayDate(listenDayChangesForUpdate);
    var weeks = React.useMemo(function() {
        return getWeeks(viewDate, weekStartsOn);
    }, [
        weekStartsOn,
        viewDate
    ]);
    var daysNames = React.useMemo(function() {
        return getDaysNames(now, weekStartsOn, locale);
    }, [
        locale,
        now,
        weekStartsOn
    ]);
    var handleDayChange = React.useCallback(function(date) {
        var _ref_current;
        onDayChange(date);
        (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.focus();
    }, [
        onDayChange,
        ref
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, CalendarDays_object_spread_props(CalendarDays_object_spread({}, props), {
        baseClassName: "vkuiCalendarDays",
        getRootRef: ref
    }), /*#__PURE__*/ React.createElement("div", {
        className: classNames("vkuiCalendarDays__row", size === 's' && "vkuiCalendarDays__row--size-s")
    }, daysNames.map(function(dayName) {
        return /*#__PURE__*/ React.createElement(Footnote, {
            key: dayName,
            className: "vkuiCalendarDays__weekday"
        }, dayName);
    })), weeks.map(function(week, i) {
        return /*#__PURE__*/ React.createElement("div", {
            className: classNames("vkuiCalendarDays__row", size === 's' && "vkuiCalendarDays__row--size-s"),
            key: i
        }, week.map(function(day, i) {
            var sameMonth = isSameMonth(day, viewDate);
            return /*#__PURE__*/ React.createElement(CalendarDay, CalendarDays_object_spread({
                key: day.toISOString(),
                day: day,
                today: isSameDay(day, now),
                active: isDayActive(day),
                onChange: handleDayChange,
                hidden: !showNeighboringMonth && !sameMonth,
                disabled: isDayDisabled(day),
                selectionStart: isDaySelectionStart(day, i),
                selectionEnd: isDaySelectionEnd(day, i),
                hintedSelectionStart: isHintedDaySelectionStart === null || isHintedDaySelectionStart === void 0 ? void 0 : isHintedDaySelectionStart(day, i),
                hintedSelectionEnd: isHintedDaySelectionEnd === null || isHintedDaySelectionEnd === void 0 ? void 0 : isHintedDaySelectionEnd(day, i),
                selected: isDaySelected === null || isDaySelected === void 0 ? void 0 : isDaySelected(day),
                focused: isDayFocused(day),
                onEnter: onDayEnter,
                onLeave: onDayLeave,
                hinted: isDayHinted === null || isDayHinted === void 0 ? void 0 : isDayHinted(day),
                sameMonth: sameMonth,
                size: size,
                renderDayContent: renderDayContent
            }, dayProps));
        }));
    }));
};

;// CONCATENATED MODULE: ./src/components/AdaptivityProvider/AdaptivityProvider.tsx



/**
 * @see https://vkcom.github.io/VKUI/#/AdaptivityProvider
 */ var AdaptivityProvider_AdaptivityProvider = function(param) {
    var viewWidth = param.viewWidth, viewHeight = param.viewHeight, sizeXProp = param.sizeX, sizeYProp = param.sizeY, hasPointer = param.hasPointer, hasHover = param.hasHover, children = param.children;
    var adaptivity = React.useMemo(function() {
        var nextProps = {
            viewWidth: viewWidth,
            viewHeight: viewHeight,
            sizeX: sizeXProp,
            sizeY: sizeYProp,
            hasPointer: hasPointer,
            hasHover: hasHover
        };
        if (sizeXProp === undefined && viewWidth !== undefined) {
            nextProps.sizeX = getSizeX(viewWidth);
        }
        if (sizeYProp === undefined) {
            if (isCompactByViewWidth(viewWidth, hasPointer) || isCompactByViewHeight(viewHeight)) {
                nextProps.sizeY = 'compact';
            } else if (viewWidth !== undefined || viewHeight !== undefined) {
                nextProps.sizeY = 'regular';
            }
        }
        return nextProps;
    }, [
        viewWidth,
        viewHeight,
        sizeXProp,
        sizeYProp,
        hasPointer,
        hasHover
    ]);
    return /*#__PURE__*/ React.createElement(AdaptivityContext.Provider, {
        value: adaptivity
    }, children);
};

;// CONCATENATED MODULE: ./src/components/CalendarHeader/CalendarHeader.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/CalendarHeader/CalendarHeader.tsx
function CalendarHeader_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CalendarHeader_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CalendarHeader_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CalendarHeader_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function CalendarHeader_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        CalendarHeader_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function CalendarHeader_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CalendarHeader_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CalendarHeader_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}













var CalendarHeader_CalendarHeader = function(_param) {
    var viewDate = _param.viewDate, onChange = _param.onChange, tmp = _param.prevMonthHidden, prevMonthHiddenProp = tmp === void 0 ? false : tmp, tmp1 = _param.nextMonthHidden, nextMonthHiddenProp = tmp1 === void 0 ? false : tmp1, _param_disablePickers = _param.disablePickers, disablePickers = _param_disablePickers === void 0 ? false : _param_disablePickers, onNextMonth = _param.onNextMonth, onPrevMonth = _param.onPrevMonth, _param_prevMonthProps = _param.prevMonthProps, prevMonthProps = _param_prevMonthProps === void 0 ? {} : _param_prevMonthProps, _param_nextMonthProps = _param.nextMonthProps, nextMonthProps = _param_nextMonthProps === void 0 ? {} : _param_nextMonthProps, _param_prevMonthLabel = _param.prevMonthLabel, prevMonthLabel = _param_prevMonthLabel === void 0 ? 'Предыдущий месяц' : _param_prevMonthLabel, _param_nextMonthLabel = _param.nextMonthLabel, nextMonthLabel = _param_nextMonthLabel === void 0 ? 'Следующий месяц' : _param_nextMonthLabel, _param_changeMonthLabel = _param.changeMonthLabel, changeMonthLabel = _param_changeMonthLabel === void 0 ? 'Изменить месяц' : _param_changeMonthLabel, _param_changeYearLabel = _param.changeYearLabel, changeYearLabel = _param_changeYearLabel === void 0 ? 'Изменить год' : _param_changeYearLabel, _param_prevMonthIcon = _param.prevMonthIcon, prevMonthIcon = _param_prevMonthIcon === void 0 ? /*#__PURE__*/ React.createElement(Icon20ChevronLeftOutline, {
        className: "vkuiCalendarHeader__nav-icon--accent",
        width: 30,
        height: 30
    }) : _param_prevMonthIcon, _param_nextMonthIcon = _param.nextMonthIcon, nextMonthIcon = _param_nextMonthIcon === void 0 ? /*#__PURE__*/ React.createElement(Icon20ChevronRightOutline, {
        className: "vkuiCalendarHeader__nav-icon--accent",
        width: 30,
        height: 30
    }) : _param_nextMonthIcon, isMonthDisabled = _param.isMonthDisabled, isYearDisabled = _param.isYearDisabled, restProps = CalendarHeader_object_without_properties(_param, [
        "viewDate",
        "onChange",
        "prevMonthHidden",
        "nextMonthHidden",
        "disablePickers",
        "onNextMonth",
        "onPrevMonth",
        "prevMonthProps",
        "nextMonthProps",
        "prevMonthLabel",
        "nextMonthLabel",
        "changeMonthLabel",
        "changeYearLabel",
        "prevMonthIcon",
        "nextMonthIcon",
        "isMonthDisabled",
        "isYearDisabled"
    ]);
    var locale = useConfigProvider().locale;
    var onMonthsChange = React.useCallback(function(event) {
        return onChange(setMonth(viewDate, Number(event.target.value)));
    }, [
        onChange,
        viewDate
    ]);
    var onYearChange = React.useCallback(function(event) {
        return onChange(setYear(viewDate, Number(event.target.value)));
    }, [
        onChange,
        viewDate
    ]);
    var currentYear = viewDate.getFullYear();
    var currentMonth = viewDate.getMonth();
    var months = React.useMemo(function() {
        return getMonths(locale).map(function(param) {
            var value = param.value, label = param.label;
            return {
                value: value,
                label: /*#__PURE__*/ React.createElement("span", {
                    className: "vkuiCalendarHeader__month"
                }, label),
                disabled: isMonthDisabled && isMonthDisabled(value)
            };
        });
    }, [
        locale,
        isMonthDisabled
    ]);
    var years = React.useMemo(function() {
        return getYears(currentYear, 100).map(function(year) {
            return CalendarHeader_object_spread_props(CalendarHeader_object_spread({}, year), {
                disabled: isYearDisabled && isYearDisabled(year.value)
            });
        });
    }, [
        currentYear,
        isYearDisabled
    ]);
    var formatter = new Intl.DateTimeFormat(locale, {
        year: 'numeric',
        month: 'long'
    });
    var prevMonthClassName = prevMonthProps.className, restPrevMonthProps = CalendarHeader_object_without_properties(prevMonthProps, [
        "className"
    ]);
    var nextMonthClassName = nextMonthProps.className, restNextMonthProps = CalendarHeader_object_without_properties(nextMonthProps, [
        "className"
    ]);
    var nextMonthHidden = nextMonthHiddenProp || currentMonth === 11 && currentYear === DEFAULT_MAX_YEAR;
    if (isMonthDisabled && !nextMonthHidden) {
        nextMonthHidden = isMonthDisabled(currentMonth === 11 ? 0 : currentMonth + 1, currentMonth === 11 ? Math.min(currentYear + 1, DEFAULT_MAX_YEAR) : currentYear);
    }
    var prevMonthHidden = prevMonthHiddenProp || currentMonth === 0 && currentYear === DEFAULT_MIN_YEAR;
    if (isMonthDisabled && !prevMonthHidden) {
        prevMonthHidden = isMonthDisabled(currentMonth === 0 ? 11 : currentMonth - 1, currentMonth === 0 ? Math.max(currentYear - 1, DEFAULT_MIN_YEAR) : currentYear);
    }
    return /*#__PURE__*/ React.createElement(RootComponent, CalendarHeader_object_spread({
        baseClassName: "vkuiCalendarHeader"
    }, restProps), !prevMonthHidden && /*#__PURE__*/ React.createElement(AdaptivityProvider, {
        sizeX: "regular"
    }, /*#__PURE__*/ React.createElement(Tappable, CalendarHeader_object_spread({
        className: classNames("vkuiCalendarHeader__nav-icon", "vkuiCalendarHeader__nav-icon-prev", prevMonthClassName),
        onClick: onPrevMonth
    }, restPrevMonthProps), /*#__PURE__*/ React.createElement(VisuallyHidden, null, prevMonthLabel, ", ", formatter.format(subMonths(viewDate, 1))), prevMonthIcon)), disablePickers ? /*#__PURE__*/ React.createElement(Paragraph, {
        className: classNames("vkuiCalendarHeader__pickers", 'vkuiInternalCalendarHeader__pickers'),
        weight: "2"
    }, /*#__PURE__*/ React.createElement("span", {
        className: "vkuiCalendarHeader__month"
    }, new Intl.DateTimeFormat(locale, {
        month: 'long'
    }).format(viewDate)), "\xa0", new Intl.DateTimeFormat(locale, {
        year: 'numeric'
    }).format(viewDate)) : /*#__PURE__*/ React.createElement(AdaptivityProvider, {
        sizeY: "compact"
    }, /*#__PURE__*/ React.createElement("div", {
        className: classNames("vkuiCalendarHeader__pickers", 'vkuiInternalCalendarHeader__pickers')
    }, /*#__PURE__*/ React.createElement(CustomSelect, {
        className: classNames("vkuiCalendarHeader__picker", 'vkuiInternalCalendarHeader__picker'),
        value: currentMonth,
        options: months,
        dropdownOffsetDistance: 4,
        dropdownAutoWidth: true,
        icon: /*#__PURE__*/ React.createElement(Icon12Dropdown, null),
        onChange: onMonthsChange,
        forceDropdownPortal: false,
        selectType: "accent",
        "aria-label": changeMonthLabel
    }), /*#__PURE__*/ React.createElement(CustomSelect, {
        className: classNames("vkuiCalendarHeader__picker", 'vkuiInternalCalendarHeader__picker'),
        value: currentYear,
        options: years,
        dropdownOffsetDistance: 4,
        dropdownAutoWidth: true,
        icon: /*#__PURE__*/ React.createElement(Icon12Dropdown, null),
        onChange: onYearChange,
        forceDropdownPortal: false,
        selectType: "accent",
        "aria-label": changeYearLabel
    }))), !nextMonthHidden && /*#__PURE__*/ React.createElement(AdaptivityProvider, {
        sizeX: "regular"
    }, /*#__PURE__*/ React.createElement(Tappable, CalendarHeader_object_spread({
        className: classNames("vkuiCalendarHeader__nav-icon", "vkuiCalendarHeader__nav-icon-next", nextMonthClassName),
        onClick: onNextMonth
    }, restNextMonthProps), /*#__PURE__*/ React.createElement(VisuallyHidden, null, nextMonthLabel, ", ", formatter.format(addMonths(viewDate, 1))), nextMonthIcon)));
};

;// CONCATENATED MODULE: ./src/components/CalendarTime/CalendarTime.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/CalendarTime/CalendarTime.tsx
function CalendarTime_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CalendarTime_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CalendarTime_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CalendarTime_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function CalendarTime_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        CalendarTime_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}






var hours = [];
for(var i = 0; i < 24; i += 1){
    hours.push({
        value: i,
        label: String(i).padStart(2, '0')
    });
}
var minutes = [];
for(var i1 = 0; i1 < 60; i1 += 1){
    minutes.push({
        value: i1,
        label: String(i1).padStart(2, '0')
    });
}
var CalendarTime_CalendarTime = function(param) {
    var value = param.value, _param_doneButtonText = param.doneButtonText, doneButtonText = _param_doneButtonText === void 0 ? 'Готово' : _param_doneButtonText, onChange = param.onChange, onClose = param.onClose, changeHoursLabel = param.changeHoursLabel, changeMinutesLabel = param.changeMinutesLabel, isDayDisabled = param.isDayDisabled;
    var localHours = isDayDisabled ? hours.map(function(hour) {
        return CalendarTime_object_spread_props(CalendarTime_object_spread({}, hour), {
            disabled: isDayDisabled(setHours(value, hour.value), true)
        });
    }) : hours;
    var localMinutes = isDayDisabled ? minutes.map(function(minute) {
        return CalendarTime_object_spread_props(CalendarTime_object_spread({}, minute), {
            disabled: isDayDisabled(setMinutes(value, minute.value), true)
        });
    }) : minutes;
    var onHoursChange = React.useCallback(function(event) {
        return onChange === null || onChange === void 0 ? void 0 : onChange(setHours(value, Number(event.target.value)));
    }, [
        onChange,
        value
    ]);
    var onMinutesChange = React.useCallback(function(event) {
        return onChange === null || onChange === void 0 ? void 0 : onChange(setMinutes(value, Number(event.target.value)));
    }, [
        onChange,
        value
    ]);
    return /*#__PURE__*/ React.createElement("div", {
        className: "vkuiCalendarTime"
    }, /*#__PURE__*/ React.createElement("div", {
        className: "vkuiCalendarTime__picker"
    }, /*#__PURE__*/ React.createElement(AdaptivityProvider, {
        sizeY: "compact"
    }, /*#__PURE__*/ React.createElement(CustomSelect, {
        value: value.getHours(),
        options: localHours,
        onChange: onHoursChange,
        forceDropdownPortal: false,
        "aria-label": changeHoursLabel
    }))), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiCalendarTime__divider"
    }, ":"), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiCalendarTime__picker"
    }, /*#__PURE__*/ React.createElement(AdaptivityProvider, {
        sizeY: "compact"
    }, /*#__PURE__*/ React.createElement(CustomSelect, {
        value: value.getMinutes(),
        options: localMinutes,
        onChange: onMinutesChange,
        forceDropdownPortal: false,
        "aria-label": changeMinutesLabel
    }))), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiCalendarTime__button"
    }, /*#__PURE__*/ React.createElement(AdaptivityProvider, {
        sizeY: "compact"
    }, /*#__PURE__*/ React.createElement(Button, {
        mode: "secondary",
        onClick: onClose,
        size: "l"
    }, doneButtonText))));
};

;// CONCATENATED MODULE: ./src/components/Calendar/Calendar.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Calendar/Calendar.tsx
function Calendar_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Calendar_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Calendar_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Calendar_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Calendar_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Calendar_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Calendar_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Calendar_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Calendar_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}












var Calendar_warn = warnOnce('Calendar');
/**
 * @see https://vkcom.github.io/VKUI/#/Calendar
 */ var Calendar_Calendar = function(_param) {
    var value = _param.value, onChange = _param.onChange, disablePast = _param.disablePast, disableFuture = _param.disableFuture, shouldDisableDate = _param.shouldDisableDate, onClose = _param.onClose, _param_enableTime = _param.enableTime, enableTime = _param_enableTime === void 0 ? false : _param_enableTime, doneButtonText = _param.doneButtonText, _param_weekStartsOn = _param.weekStartsOn, weekStartsOn = _param_weekStartsOn === void 0 ? 1 : _param_weekStartsOn, disablePickers = _param.disablePickers, _param_changeHoursLabel = _param.changeHoursLabel, changeHoursLabel = _param_changeHoursLabel === void 0 ? 'Изменить час' : _param_changeHoursLabel, _param_changeMinutesLabel = _param.changeMinutesLabel, changeMinutesLabel = _param_changeMinutesLabel === void 0 ? 'Изменить минуту' : _param_changeMinutesLabel, _param_prevMonthLabel = _param.prevMonthLabel, prevMonthLabel = _param_prevMonthLabel === void 0 ? 'Предыдущий месяц' : _param_prevMonthLabel, _param_nextMonthLabel = _param.nextMonthLabel, nextMonthLabel = _param_nextMonthLabel === void 0 ? 'Следующий месяц' : _param_nextMonthLabel, _param_changeMonthLabel = _param.changeMonthLabel, changeMonthLabel = _param_changeMonthLabel === void 0 ? 'Изменить месяц' : _param_changeMonthLabel, _param_changeYearLabel = _param.changeYearLabel, changeYearLabel = _param_changeYearLabel === void 0 ? 'Изменить год' : _param_changeYearLabel, showNeighboringMonth = _param.showNeighboringMonth, _param_changeDayLabel = _param.changeDayLabel, changeDayLabel = _param_changeDayLabel === void 0 ? 'Изменить день' : _param_changeDayLabel, _param_size = _param.size, size = _param_size === void 0 ? 'm' : _param_size, externalViewDate = _param.viewDate, onHeaderChange = _param.onHeaderChange, onNextMonth = _param.onNextMonth, onPrevMonth = _param.onPrevMonth, prevMonthIcon = _param.prevMonthIcon, nextMonthIcon = _param.nextMonthIcon, prevMonthProps = _param.prevMonthProps, nextMonthProps = _param.nextMonthProps, dayProps = _param.dayProps, listenDayChangesForUpdate = _param.listenDayChangesForUpdate, renderDayContent = _param.renderDayContent, minDateTime = _param.minDateTime, maxDateTime = _param.maxDateTime, props = Calendar_object_without_properties(_param, [
        "value",
        "onChange",
        "disablePast",
        "disableFuture",
        "shouldDisableDate",
        "onClose",
        "enableTime",
        "doneButtonText",
        "weekStartsOn",
        "disablePickers",
        "changeHoursLabel",
        "changeMinutesLabel",
        "prevMonthLabel",
        "nextMonthLabel",
        "changeMonthLabel",
        "changeYearLabel",
        "showNeighboringMonth",
        "changeDayLabel",
        "size",
        "viewDate",
        "onHeaderChange",
        "onNextMonth",
        "onPrevMonth",
        "prevMonthIcon",
        "nextMonthIcon",
        "prevMonthProps",
        "nextMonthProps",
        "dayProps",
        "listenDayChangesForUpdate",
        "renderDayContent",
        "minDateTime",
        "maxDateTime"
    ]);
    var _useCalendar = useCalendar({
        value: value,
        disableFuture: disableFuture,
        disablePast: disablePast,
        shouldDisableDate: shouldDisableDate,
        onHeaderChange: onHeaderChange,
        onNextMonth: onNextMonth,
        onPrevMonth: onPrevMonth,
        minDateTime: minDateTime,
        maxDateTime: maxDateTime
    }), viewDate = _useCalendar.viewDate, setViewDate = _useCalendar.setViewDate, setPrevMonth = _useCalendar.setPrevMonth, setNextMonth = _useCalendar.setNextMonth, focusedDay = _useCalendar.focusedDay, setFocusedDay = _useCalendar.setFocusedDay, isDayFocused = _useCalendar.isDayFocused, isDayDisabled = _useCalendar.isDayDisabled, resetSelectedDay = _useCalendar.resetSelectedDay, isMonthDisabled = _useCalendar.isMonthDisabled, isYearDisabled = _useCalendar.isYearDisabled;
    useIsomorphicLayoutEffect(function() {
        if (value) {
            setViewDate(value);
        }
    }, [
        value
    ]);
    if (false) {}
    if (false) {}
    var handleKeyDown = React.useCallback(function(event) {
        if ([
            'ArrowUp',
            'ArrowDown',
            'ArrowLeft',
            'ArrowRight'
        ].includes(event.key)) {
            event.preventDefault();
        }
        var newFocusedDay = navigateDate(focusedDay !== null && focusedDay !== void 0 ? focusedDay : value, event.key);
        if (newFocusedDay && !isSameMonth(newFocusedDay, viewDate)) {
            setViewDate(newFocusedDay);
        }
        setFocusedDay(newFocusedDay);
    }, [
        focusedDay,
        setFocusedDay,
        setViewDate,
        value,
        viewDate
    ]);
    var onDayChange = React.useCallback(function(date) {
        var actualDate = setTimeEqual(date, value);
        if (minDateTime || maxDateTime) {
            actualDate = clamp(actualDate, {
                min: minDateTime,
                max: maxDateTime
            });
        }
        onChange === null || onChange === void 0 ? void 0 : onChange(actualDate);
    }, [
        value,
        onChange,
        maxDateTime,
        minDateTime
    ]);
    var isDayActive = React.useCallback(function(day) {
        return Boolean(value && isSameDay(day, value));
    }, [
        value
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, Calendar_object_spread_props(Calendar_object_spread({}, props), {
        baseClassName: classNames("vkuiCalendar", size === 's' && "vkuiCalendar--size-s")
    }), /*#__PURE__*/ React.createElement(CalendarHeader, {
        viewDate: externalViewDate || viewDate,
        onChange: setViewDate,
        onNextMonth: setNextMonth,
        onPrevMonth: setPrevMonth,
        disablePickers: disablePickers || size === 's',
        className: "vkuiCalendar__header",
        prevMonthLabel: prevMonthLabel,
        nextMonthLabel: nextMonthLabel,
        changeMonthLabel: changeMonthLabel,
        changeYearLabel: changeYearLabel,
        prevMonthIcon: prevMonthIcon,
        nextMonthIcon: nextMonthIcon,
        prevMonthProps: prevMonthProps,
        nextMonthProps: nextMonthProps,
        isMonthDisabled: isMonthDisabled,
        isYearDisabled: isYearDisabled
    }), /*#__PURE__*/ React.createElement(CalendarDays, {
        viewDate: externalViewDate || viewDate,
        value: value,
        weekStartsOn: weekStartsOn,
        isDayFocused: isDayFocused,
        tabIndex: 0,
        "aria-label": changeDayLabel,
        onKeyDown: handleKeyDown,
        onDayChange: onDayChange,
        isDayActive: isDayActive,
        isDaySelectionStart: isFirstDay,
        isDaySelectionEnd: isLastDay,
        isDayDisabled: isDayDisabled,
        onBlur: resetSelectedDay,
        showNeighboringMonth: showNeighboringMonth,
        size: size,
        dayProps: dayProps,
        listenDayChangesForUpdate: listenDayChangesForUpdate,
        renderDayContent: renderDayContent
    }), enableTime && value && size !== 's' && /*#__PURE__*/ React.createElement("div", {
        className: "vkuiCalendar__time"
    }, /*#__PURE__*/ React.createElement(CalendarTime, {
        value: value,
        onChange: onChange,
        onClose: onClose,
        doneButtonText: doneButtonText,
        changeHoursLabel: changeHoursLabel,
        changeMinutesLabel: changeMinutesLabel,
        isDayDisabled: minDateTime || maxDateTime ? isDayDisabled : undefined
    })));
};

;// CONCATENATED MODULE: ./src/components/CalendarRange/CalendarRange.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/CalendarRange/CalendarRange.tsx
function CalendarRange_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function CalendarRange_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function CalendarRange_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function CalendarRange_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function CalendarRange_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function CalendarRange_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            CalendarRange_define_property(target, key, source[key]);
        });
    }
    return target;
}
function CalendarRange_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function CalendarRange_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        CalendarRange_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function CalendarRange_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = CalendarRange_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function CalendarRange_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function CalendarRange_sliced_to_array(arr, i) {
    return CalendarRange_array_with_holes(arr) || CalendarRange_iterable_to_array_limit(arr, i) || CalendarRange_unsupported_iterable_to_array(arr, i) || CalendarRange_non_iterable_rest();
}
function CalendarRange_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return CalendarRange_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return CalendarRange_array_like_to_array(o, minLen);
}








var getIsDaySelected = function(day, value) {
    if (!(value === null || value === void 0 ? void 0 : value[0]) || !value[1]) {
        return false;
    }
    return isWithinInterval(day, {
        start: startOfDay(value[0]),
        end: endOfDay(value[1])
    });
};
/**
 * @see https://vkcom.github.io/VKUI/#/CalendarRange
 */ var CalendarRange_CalendarRange = function(_param) {
    var value = _param.value, onChange = _param.onChange, disablePast = _param.disablePast, disableFuture = _param.disableFuture, shouldDisableDate = _param.shouldDisableDate, onClose = _param.onClose, _param_weekStartsOn = _param.weekStartsOn, weekStartsOn = _param_weekStartsOn === void 0 ? 1 : _param_weekStartsOn, disablePickers = _param.disablePickers, _param_prevMonthLabel = _param.prevMonthLabel, prevMonthLabel = _param_prevMonthLabel === void 0 ? 'Предыдущий месяц' : _param_prevMonthLabel, _param_nextMonthLabel = _param.nextMonthLabel, nextMonthLabel = _param_nextMonthLabel === void 0 ? 'Следующий месяц' : _param_nextMonthLabel, _param_changeMonthLabel = _param.changeMonthLabel, changeMonthLabel = _param_changeMonthLabel === void 0 ? 'Изменить месяц' : _param_changeMonthLabel, _param_changeYearLabel = _param.changeYearLabel, changeYearLabel = _param_changeYearLabel === void 0 ? 'Изменить год' : _param_changeYearLabel, _param_changeDayLabel = _param.changeDayLabel, changeDayLabel = _param_changeDayLabel === void 0 ? 'Изменить день' : _param_changeDayLabel, prevMonthIcon = _param.prevMonthIcon, nextMonthIcon = _param.nextMonthIcon, listenDayChangesForUpdate = _param.listenDayChangesForUpdate, renderDayContent = _param.renderDayContent, props = CalendarRange_object_without_properties(_param, [
        "value",
        "onChange",
        "disablePast",
        "disableFuture",
        "shouldDisableDate",
        "onClose",
        "weekStartsOn",
        "disablePickers",
        "prevMonthLabel",
        "nextMonthLabel",
        "changeMonthLabel",
        "changeYearLabel",
        "changeDayLabel",
        "prevMonthIcon",
        "nextMonthIcon",
        "listenDayChangesForUpdate",
        "renderDayContent"
    ]);
    var _useCalendar = useCalendar({
        value: value,
        disableFuture: disableFuture,
        disablePast: disablePast,
        shouldDisableDate: shouldDisableDate
    }), viewDate = _useCalendar.viewDate, setViewDate = _useCalendar.setViewDate, setPrevMonth = _useCalendar.setPrevMonth, setNextMonth = _useCalendar.setNextMonth, focusedDay = _useCalendar.focusedDay, setFocusedDay = _useCalendar.setFocusedDay, isDayFocused = _useCalendar.isDayFocused, isDayDisabled = _useCalendar.isDayDisabled, resetSelectedDay = _useCalendar.resetSelectedDay, isMonthDisabled = _useCalendar.isMonthDisabled, isYearDisabled = _useCalendar.isYearDisabled;
    var _React_useState = CalendarRange_sliced_to_array(React.useState(), 2), hintedDate = _React_useState[0], setHintedDate = _React_useState[1];
    var secondViewDate = addMonths(viewDate, 1);
    var handleKeyDown = React.useCallback(function(event) {
        if ([
            'ArrowUp',
            'ArrowDown',
            'ArrowLeft',
            'ArrowRight'
        ].includes(event.key)) {
            event.preventDefault();
        }
        var newFocusedDay = navigateDate(focusedDay !== null && focusedDay !== void 0 ? focusedDay : value === null || value === void 0 ? void 0 : value[1], event.key);
        if (newFocusedDay && !isSameMonth(newFocusedDay, viewDate) && !isSameMonth(newFocusedDay, addMonths(viewDate, 1))) {
            setViewDate(newFocusedDay);
        }
        setFocusedDay(newFocusedDay);
    }, [
        focusedDay,
        setFocusedDay,
        setViewDate,
        value,
        viewDate
    ]);
    var getNewValue = React.useCallback(function(date) {
        var isValueEmpty = !value || value[0] === null && value[1] === null;
        if (isValueEmpty) {
            return [
                date,
                null
            ];
        }
        var _value = CalendarRange_sliced_to_array(value, 2), start = _value[0], end = _value[1];
        if (start && isSameDay(date, start) || end && isSameDay(date, end)) {
            return [
                setTimeEqual(date, start),
                setTimeEqual(date, end)
            ];
        } else if (start && isBefore(date, start)) {
            return [
                setTimeEqual(date, start),
                end
            ];
        } else if (start && isAfter(date, start)) {
            return [
                start,
                setTimeEqual(date, end)
            ];
        }
        return value;
    }, [
        value
    ]);
    var onDayChange = React.useCallback(function(date) {
        onChange === null || onChange === void 0 ? void 0 : onChange(getNewValue(date));
        setHintedDate(undefined);
    }, [
        onChange,
        getNewValue
    ]);
    var isDaySelected = React.useCallback(function(day) {
        return getIsDaySelected(day, value);
    }, [
        value
    ]);
    var isDayActive = React.useCallback(function(day) {
        return Boolean((value === null || value === void 0 ? void 0 : value[0]) && isSameDay(day, value[0]) || (value === null || value === void 0 ? void 0 : value[1]) && isSameDay(day, value[1]));
    }, [
        value
    ]);
    var isDaySelectionEnd = React.useCallback(function(day, dayOfWeek) {
        return Boolean(isLastDay(day, dayOfWeek) || (value === null || value === void 0 ? void 0 : value[1]) && isSameDay(day, value[1]));
    }, [
        value
    ]);
    var isHintedDaySelectionEnd = React.useCallback(function(day, dayOfWeek) {
        return Boolean(isLastDay(day, dayOfWeek) || (hintedDate === null || hintedDate === void 0 ? void 0 : hintedDate[1]) && isSameDay(day, hintedDate[1]));
    }, [
        hintedDate
    ]);
    var isDaySelectionStart = React.useCallback(function(day, dayOfWeek) {
        return Boolean(isFirstDay(day, dayOfWeek) || (value === null || value === void 0 ? void 0 : value[0]) && isSameDay(day, value[0]));
    }, [
        value
    ]);
    var isHintedDaySelectionStart = React.useCallback(function(day, dayOfWeek) {
        return Boolean(isFirstDay(day, dayOfWeek) || (hintedDate === null || hintedDate === void 0 ? void 0 : hintedDate[0]) && isSameDay(day, hintedDate[0]));
    }, [
        hintedDate
    ]);
    var onDayEnter = React.useCallback(function(date) {
        return setHintedDate(getNewValue(date));
    }, [
        setHintedDate,
        getNewValue
    ]);
    var onDayLeave = React.useCallback(function() {
        return setHintedDate(undefined);
    }, [
        setHintedDate
    ]);
    var isDayHinted = React.useCallback(function(day) {
        return getIsDaySelected(day, hintedDate);
    }, [
        hintedDate
    ]);
    var onRightPartViewDateChange = React.useCallback(function(newDate) {
        return setViewDate(subMonths(newDate, 1));
    }, [
        setViewDate
    ]);
    return /*#__PURE__*/ React.createElement(RootComponent, CalendarRange_object_spread_props(CalendarRange_object_spread({}, props), {
        baseClassName: "vkuiCalendarRange"
    }), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiCalendarRange__inner"
    }, /*#__PURE__*/ React.createElement(CalendarHeader, {
        viewDate: viewDate,
        onChange: setViewDate,
        nextMonthHidden: true,
        onPrevMonth: setPrevMonth,
        disablePickers: disablePickers,
        className: "vkuiCalendarRange__header",
        prevMonthLabel: prevMonthLabel,
        nextMonthLabel: nextMonthLabel,
        changeMonthLabel: changeMonthLabel,
        changeYearLabel: changeYearLabel,
        prevMonthIcon: prevMonthIcon,
        isMonthDisabled: isMonthDisabled,
        isYearDisabled: isYearDisabled
    }), /*#__PURE__*/ React.createElement(CalendarDays, {
        viewDate: viewDate,
        value: value,
        weekStartsOn: weekStartsOn,
        onKeyDown: handleKeyDown,
        isDayFocused: isDayFocused,
        onDayChange: onDayChange,
        isDaySelected: isDaySelected,
        isDayActive: isDayActive,
        isDaySelectionEnd: isDaySelectionEnd,
        isDaySelectionStart: isDaySelectionStart,
        isDayHinted: isDayHinted,
        onDayEnter: onDayEnter,
        onDayLeave: onDayLeave,
        isHintedDaySelectionEnd: isHintedDaySelectionEnd,
        isHintedDaySelectionStart: isHintedDaySelectionStart,
        isDayDisabled: isDayDisabled,
        listenDayChangesForUpdate: listenDayChangesForUpdate,
        renderDayContent: renderDayContent,
        "aria-label": changeDayLabel
    })), /*#__PURE__*/ React.createElement("div", {
        className: "vkuiCalendarRange__inner"
    }, /*#__PURE__*/ React.createElement(CalendarHeader, {
        viewDate: secondViewDate,
        onChange: onRightPartViewDateChange,
        prevMonthHidden: true,
        onNextMonth: setNextMonth,
        disablePickers: disablePickers,
        className: "vkuiCalendarRange__header",
        prevMonthLabel: prevMonthLabel,
        nextMonthLabel: nextMonthLabel,
        changeMonthLabel: changeMonthLabel,
        changeYearLabel: changeYearLabel,
        nextMonthIcon: nextMonthIcon,
        isMonthDisabled: isMonthDisabled,
        isYearDisabled: isYearDisabled
    }), /*#__PURE__*/ React.createElement(CalendarDays, {
        viewDate: secondViewDate,
        value: value,
        weekStartsOn: weekStartsOn,
        "aria-label": changeDayLabel,
        onKeyDown: handleKeyDown,
        isDayFocused: isDayFocused,
        onDayChange: onDayChange,
        isDaySelected: isDaySelected,
        isDayActive: isDayActive,
        isDaySelectionEnd: isDaySelectionEnd,
        isDaySelectionStart: isDaySelectionStart,
        isDayHinted: isDayHinted,
        onDayEnter: onDayEnter,
        onDayLeave: onDayLeave,
        isHintedDaySelectionEnd: isHintedDaySelectionEnd,
        isHintedDaySelectionStart: isHintedDaySelectionStart,
        isDayDisabled: isDayDisabled,
        listenDayChangesForUpdate: listenDayChangesForUpdate,
        renderDayContent: renderDayContent,
        tabIndex: 0,
        onBlur: resetSelectedDay
    })));
};

;// CONCATENATED MODULE: ./src/hooks/useDateInput.ts
function useDateInput_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useDateInput_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useDateInput_array_without_holes(arr) {
    if (Array.isArray(arr)) return useDateInput_array_like_to_array(arr);
}
function useDateInput_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function useDateInput_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useDateInput_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useDateInput_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useDateInput_sliced_to_array(arr, i) {
    return useDateInput_array_with_holes(arr) || useDateInput_iterable_to_array_limit(arr, i) || useDateInput_unsupported_iterable_to_array(arr, i) || useDateInput_non_iterable_rest();
}
function useDateInput_to_consumable_array(arr) {
    return useDateInput_array_without_holes(arr) || useDateInput_iterable_to_array(arr) || useDateInput_unsupported_iterable_to_array(arr) || useDateInput_non_iterable_spread();
}
function useDateInput_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useDateInput_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useDateInput_array_like_to_array(o, minLen);
}




function useDateInput_useDateInput(param) {
    var maxElement = param.maxElement, refs = param.refs, autoFocus = param.autoFocus, disabled = param.disabled, elementsConfig = param.elementsConfig, onChange = param.onChange, onInternalValueChange = param.onInternalValueChange, getInternalValue = param.getInternalValue, value = param.value;
    var document = useDOM().document;
    var _useBooleanState = useBooleanState(false), open = _useBooleanState.value, openCalendar = _useBooleanState.setTrue, closeCalendar = _useBooleanState.setFalse;
    var rootRef = React.useRef(null);
    var calendarRef = React.useRef(null);
    var _React_useState = useDateInput_sliced_to_array(React.useState([]), 2), internalValue = _React_useState[0], setInternalValue = _React_useState[1];
    var _React_useState1 = useDateInput_sliced_to_array(React.useState(null), 2), focusedElement = _React_useState1[0], setFocusedElement = _React_useState1[1];
    var window = useDOM().window;
    var removeFocusFromField = React.useCallback(function() {
        if (focusedElement !== null) {
            var _window_getSelection;
            setFocusedElement(null);
            closeCalendar();
            (_window_getSelection = window.getSelection()) === null || _window_getSelection === void 0 ? void 0 : _window_getSelection.removeAllRanges();
            setInternalValue(getInternalValue(value));
        }
    }, [
        focusedElement,
        closeCalendar,
        getInternalValue,
        value,
        window
    ]);
    var handleClickOutside = React.useCallback(function(e) {
        var _rootRef_current, _calendarRef_current;
        if (!((_rootRef_current = rootRef.current) === null || _rootRef_current === void 0 ? void 0 : _rootRef_current.contains(e.target)) && !((_calendarRef_current = calendarRef.current) === null || _calendarRef_current === void 0 ? void 0 : _calendarRef_current.contains(e.target))) {
            removeFocusFromField();
        }
    }, [
        removeFocusFromField
    ]);
    var selectFirst = React.useCallback(function() {
        setFocusedElement(0);
    }, []);
    useGlobalEventListener(document, 'click', handleClickOutside, {
        capture: true
    });
    React.useEffect(function() {
        setInternalValue(getInternalValue(value));
    }, [
        getInternalValue,
        value
    ]);
    React.useEffect(function() {
        if (autoFocus) {
            selectFirst();
        }
    }, [
        autoFocus,
        selectFirst
    ]);
    React.useEffect(function() {
        if (disabled || focusedElement === null) {
            return;
        }
        var range = window.document.createRange();
        var element = refs[focusedElement].current;
        if (element) {
            element.focus();
            openCalendar();
            range.selectNodeContents(element);
            var selection = window.getSelection();
            selection === null || selection === void 0 ? void 0 : selection.removeAllRanges();
            selection === null || selection === void 0 ? void 0 : selection.addRange(range);
        }
    }, [
        disabled,
        focusedElement,
        openCalendar,
        refs,
        window
    ]);
    var clear = React.useCallback(function() {
        onChange === null || onChange === void 0 ? void 0 : onChange(undefined);
        selectFirst();
    }, [
        onChange,
        selectFirst
    ]);
    var handleFieldEnter = React.useCallback(function() {
        if (!open) {
            selectFirst();
        }
    }, [
        open,
        selectFirst
    ]);
    var handleKeyDown = React.useCallback(function(e) {
        if (focusedElement === null) {
            return;
        }
        var _value = useDateInput_to_consumable_array(internalValue);
        var config = elementsConfig(focusedElement);
        if (/^\d+$/.test(e.key)) {
            if (_value[focusedElement].length >= config.length) {
                _value[focusedElement] = e.key;
            } else {
                _value[focusedElement] += e.key;
                if (_value[focusedElement].length >= config.length && focusedElement < maxElement) {
                    setFocusedElement(focusedElement + 1);
                }
            }
        } else if (e.key === 'Backspace') {
            if (!_value[focusedElement]) {
                setFocusedElement(focusedElement <= 0 ? maxElement : focusedElement - 1);
            } else {
                _value[focusedElement] = _value[focusedElement].slice(0, -1);
            }
        } else if (e.key === 'ArrowDown' || e.key === 'Down') {
            var currentValue = Number(_value[focusedElement]);
            _value[focusedElement] = String(currentValue <= config.min ? config.max : currentValue - 1).padStart(config.length, '0');
        } else if (e.key === 'ArrowUp' || e.key === 'Up') {
            var currentValue1 = Number(_value[focusedElement]);
            _value[focusedElement] = String(currentValue1 >= config.max ? config.min : currentValue1 + 1).padStart(config.length, '0');
        } else if (e.key === 'Enter' || e.key === 'Tab' && focusedElement === maxElement || e.key === 'Tab' && e.shiftKey && focusedElement === 0) {
            removeFocusFromField();
            return;
        } else if (e.key === 'ArrowLeft' || e.key === 'Left' || e.key === 'Tab' && e.shiftKey) {
            setFocusedElement(focusedElement <= 0 ? maxElement : focusedElement - 1);
        } else if (e.key === 'ArrowRight' || e.key === 'Right' || e.key === 'Tab') {
            setFocusedElement(focusedElement >= maxElement ? 0 : focusedElement + 1);
        } else if (e.key === 'Delete' || e.key === 'Del') {
            _value[focusedElement] = '';
        } else {
            return;
        }
        e.preventDefault();
        setInternalValue(_value);
        onInternalValueChange(_value);
    }, [
        elementsConfig,
        focusedElement,
        internalValue,
        maxElement,
        onInternalValueChange,
        removeFocusFromField
    ]);
    return {
        rootRef: rootRef,
        calendarRef: calendarRef,
        open: open,
        openCalendar: openCalendar,
        closeCalendar: closeCalendar,
        internalValue: internalValue,
        focusedElement: focusedElement,
        setFocusedElement: setFocusedElement,
        handleKeyDown: handleKeyDown,
        clear: clear,
        handleFieldEnter: handleFieldEnter,
        removeFocusFromField: removeFocusFromField
    };
}

;// CONCATENATED MODULE: ./src/lib/date.ts
function date_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function date_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function date_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function date_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function date_sliced_to_array(arr, i) {
    return date_array_with_holes(arr) || date_iterable_to_array_limit(arr, i) || date_unsupported_iterable_to_array(arr, i) || date_non_iterable_rest();
}
function date_type_of(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}
function date_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return date_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return date_array_like_to_array(o, minLen);
}

function date_parse(input, format) {
    var _loop = function() {
        var match = superRegExp.exec(format);
        if (!match) {
            return "break";
        }
        var length = match[0].length;
        var atIndex = superRegExp.lastIndex - length;
        var item = entries.find(function(item) {
            return item[0] === match[0];
        });
        lastNonFormatting = format.slice(lastFormatIndex, atIndex);
        lastFormatIndex = superRegExp.lastIndex;
        if (input.slice(prevInputIndex, prevInputIndex + lastNonFormatting.length) !== lastNonFormatting) {
            return {
                v: new Date('')
            };
        }
        var value = input.slice(prevInputIndex + lastNonFormatting.length).match(item[1]);
        if (!value) {
            return {
                v: new Date('')
            };
        }
        prevInputIndex = prevInputIndex + lastNonFormatting.length + value[0].length;
        var _item_ = date_sliced_to_array(item[2](value[0]), 3), key = _item_[0], newValue = _item_[1], okay = _item_[2];
        if (!okay) {
            return {
                v: new Date('')
            };
        }
        store[key] = newValue;
        found = true;
    };
    var referenceDate = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : new Date();
    var match2 = /^\d\d/; // 00 - 99
    var match4 = /^\d{4}/; // 0000 - 9999
    var entries = [
        [
            'yyyy',
            match4,
            function(val) {
                return [
                    'Y',
                    +val,
                    true
                ];
            }
        ],
        [
            'MM',
            match2,
            function(val) {
                var numVal = +val;
                var okay = numVal > 0 && numVal <= 12;
                return [
                    'M',
                    numVal - 1,
                    okay
                ];
            }
        ],
        [
            'dd',
            match2,
            function(val) {
                return [
                    'D',
                    +val,
                    true
                ];
            }
        ],
        [
            'HH',
            match2,
            function(val) {
                var numVal = parseInt(val, 10);
                var okay = numVal >= 0 && numVal < 24;
                return [
                    'h',
                    numVal,
                    okay
                ];
            }
        ],
        [
            'mm',
            match2,
            function(val) {
                var numVal = parseInt(val, 10);
                var okay = numVal >= 0 && numVal < 60;
                return [
                    'm',
                    numVal,
                    okay
                ];
            }
        ]
    ];
    var superRegExp = new RegExp(entries.map(function(item) {
        return item[0];
    }).join('|'), 'g');
    var store = {
        y: referenceDate.getFullYear(),
        M: referenceDate.getMonth(),
        d: referenceDate.getDate(),
        h: referenceDate.getHours(),
        m: referenceDate.getMinutes(),
        s: referenceDate.getSeconds(),
        ms: referenceDate.getMilliseconds()
    };
    var prevInputIndex = 0;
    var lastNonFormatting = '';
    var lastFormatIndex = 0;
    var found = false;
    while(true){
        var _ret = _loop();
        if (date_type_of(_ret) === "object") return _ret.v;
        if (_ret === "break") break;
    }
    if (!found) {
        return new Date('');
    }
    var date = new Date(store.Y, store.M, store.D, store.h, store.m, store.s, store.ms);
    // Since days of months are dynamic, they can't be validated in entries,
    // so we check it here, in the finalized date
    if (date.getMonth() !== store.M || date.getDate() !== store.D) {
        return new Date('');
    }
    return date;
}
function date_format(date, format) {
    return lightFormat(date, format);
}
function date_isMatch(input, format) {
    return !isNaN(+date_parse(input, format));
}

;// CONCATENATED MODULE: ./src/components/InputLike/InputLike.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/InputLike/InputLike.tsx
function InputLike_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function InputLike_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            InputLike_define_property(target, key, source[key]);
        });
    }
    return target;
}
function InputLike_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = InputLike_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function InputLike_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






var MASK_SYMBOL = String.fromCharCode(0x2007);
function getMaskElements(length) {
    var result = [];
    for(var index = 0; index < length; index += 1){
        result.push(/*#__PURE__*/ react.createElement("span", {
            key: index,
            className: "vkuiInputLike__mask"
        }, MASK_SYMBOL));
    }
    return result;
}
var InputLike_InputLike = function(_param) {
    var value = _param.value, length = _param.length, index = _param.index, onElementSelect = _param.onElementSelect, onClick = _param.onClick, onFocus = _param.onFocus, label = _param.label, restProps = InputLike_object_without_properties(_param, [
        "value",
        "length",
        "index",
        "onElementSelect",
        "onClick",
        "onFocus",
        "label"
    ]);
    var handleElementSelect = react.useCallback(function(event) {
        utils_stopPropagation(event);
        onElementSelect === null || onElementSelect === void 0 ? void 0 : onElementSelect(index);
    }, [
        index,
        onElementSelect
    ]);
    var _value_length;
    return /*#__PURE__*/ react.createElement(RootComponent_RootComponent, InputLike_object_spread({
        Component: "span",
        baseClassName: (value === null || value === void 0 ? void 0 : value.length) === length ? "vkuiInputLike--full" : undefined,
        tabIndex: 0,
        onClick: callMultiple_callMultiple(onClick, handleElementSelect),
        onFocus: callMultiple_callMultiple(utils_stopPropagation, onFocus)
    }, restProps), label && /*#__PURE__*/ react.createElement(VisuallyHidden_VisuallyHidden, null, label), value === null || value === void 0 ? void 0 : value.slice(0, length - 1), (value === null || value === void 0 ? void 0 : value.slice(length - 1)) && /*#__PURE__*/ react.createElement("span", {
        key: index,
        className: "vkuiInputLike__last_character"
    }, value.slice(length - 1)), getMaskElements(length - ((_value_length = value === null || value === void 0 ? void 0 : value.length) !== null && _value_length !== void 0 ? _value_length : 0)));
};
InputLike_InputLike.displayName = 'InputLike';

;// CONCATENATED MODULE: ./src/components/InputLike/InputLikeDivider.tsx
function InputLikeDivider_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function InputLikeDivider_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            InputLikeDivider_define_property(target, key, source[key]);
        });
    }
    return target;
}
function InputLikeDivider_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = InputLikeDivider_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function InputLikeDivider_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



var InputLikeDivider_InputLikeDivider = function(_param) {
    var children = _param.children, className = _param.className, props = InputLikeDivider_object_without_properties(_param, [
        "children",
        "className"
    ]);
    return /*#__PURE__*/ React.createElement("span", InputLikeDivider_object_spread({
        className: classNames("vkuiInputLike__divider", className)
    }, props), children);
};

;// CONCATENATED MODULE: ./src/components/DateInput/DateInput.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/DateInput/DateInput.tsx
function DateInput_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function DateInput_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            DateInput_define_property(target, key, source[key]);
        });
    }
    return target;
}
function DateInput_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = DateInput_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function DateInput_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}















 // Reorder css

var DateInput_sizeYClassNames = {
    none: "vkuiDateInput--sizeY-none",
    compact: "vkuiDateInput--sizeY-compact"
};
var elementsConfig = function(index) {
    var length = 2;
    var min = 1;
    var max = 0;
    switch(index){
        case 0:
            max = 31;
            break;
        case 1:
            max = 12;
            break;
        case 2:
            max = 2100;
            min = 1900;
            length = 4;
            break;
        case 3:
            max = 23;
            break;
        case 4:
            max = 59;
            break;
    }
    return {
        length: length,
        min: min,
        max: max
    };
};
var getInternalValue = function(value) {
    var newValue = [
        '',
        '',
        '',
        '',
        ''
    ];
    if (value) {
        newValue[0] = String(value.getDate()).padStart(2, '0');
        newValue[1] = String(value.getMonth() + 1).padStart(2, '0');
        newValue[2] = String(value.getFullYear()).padStart(4, '0');
        newValue[3] = String(value.getHours()).padStart(2, '0');
        newValue[4] = String(value.getMinutes()).padStart(2, '0');
    }
    return newValue;
};
/**
 * @see https://vkcom.github.io/VKUI/#/DateInput
 */ var DateInput = function(_param) {
    var enableTime = _param.enableTime, shouldDisableDate = _param.shouldDisableDate, disableFuture = _param.disableFuture, disablePast = _param.disablePast, minDateTime = _param.minDateTime, maxDateTime = _param.maxDateTime, value = _param.value, onChange = _param.onChange, _param_calendarPlacement = _param.calendarPlacement, calendarPlacement = _param_calendarPlacement === void 0 ? 'bottom-start' : _param_calendarPlacement, style = _param.style, className = _param.className, doneButtonText = _param.doneButtonText, _param_closeOnChange = _param.closeOnChange, closeOnChange = _param_closeOnChange === void 0 ? true : _param_closeOnChange, disablePickers = _param.disablePickers, getRootRef = _param.getRootRef, name = _param.name, autoFocus = _param.autoFocus, disabled = _param.disabled, onClick = _param.onClick, onFocus = _param.onFocus, _param_prevMonthLabel = _param.prevMonthLabel, prevMonthLabel = _param_prevMonthLabel === void 0 ? 'Предыдущий месяц' : _param_prevMonthLabel, _param_nextMonthLabel = _param.nextMonthLabel, nextMonthLabel = _param_nextMonthLabel === void 0 ? 'Следующий месяц' : _param_nextMonthLabel, showNeighboringMonth = _param.showNeighboringMonth, size = _param.size, _param_changeMonthLabel = _param.changeMonthLabel, changeMonthLabel = _param_changeMonthLabel === void 0 ? 'Изменить месяц' : _param_changeMonthLabel, _param_changeYearLabel = _param.changeYearLabel, changeYearLabel = _param_changeYearLabel === void 0 ? 'Изменить год' : _param_changeYearLabel, _param_changeDayLabel = _param.changeDayLabel, changeDayLabel = _param_changeDayLabel === void 0 ? 'Изменить день' : _param_changeDayLabel, _param_changeHoursLabel = _param.changeHoursLabel, changeHoursLabel = _param_changeHoursLabel === void 0 ? 'Изменить час' : _param_changeHoursLabel, _param_changeMinutesLabel = _param.changeMinutesLabel, changeMinutesLabel = _param_changeMinutesLabel === void 0 ? 'Изменить минуту' : _param_changeMinutesLabel, _param_clearFieldLabel = _param.clearFieldLabel, clearFieldLabel = _param_clearFieldLabel === void 0 ? 'Очистить поле' : _param_clearFieldLabel, _param_showCalendarLabel = _param.showCalendarLabel, showCalendarLabel = _param_showCalendarLabel === void 0 ? 'Показать календарь' : _param_showCalendarLabel, viewDate = _param.viewDate, onHeaderChange = _param.onHeaderChange, onNextMonth = _param.onNextMonth, onPrevMonth = _param.onPrevMonth, prevMonthIcon = _param.prevMonthIcon, nextMonthIcon = _param.nextMonthIcon, _param_disableCalendar = _param.disableCalendar, disableCalendar = _param_disableCalendar === void 0 ? false : _param_disableCalendar, renderDayContent = _param.renderDayContent, props = DateInput_object_without_properties(_param, [
        "enableTime",
        "shouldDisableDate",
        "disableFuture",
        "disablePast",
        "minDateTime",
        "maxDateTime",
        "value",
        "onChange",
        "calendarPlacement",
        "style",
        "className",
        "doneButtonText",
        "closeOnChange",
        "disablePickers",
        "getRootRef",
        "name",
        "autoFocus",
        "disabled",
        "onClick",
        "onFocus",
        "prevMonthLabel",
        "nextMonthLabel",
        "showNeighboringMonth",
        "size",
        "changeMonthLabel",
        "changeYearLabel",
        "changeDayLabel",
        "changeHoursLabel",
        "changeMinutesLabel",
        "clearFieldLabel",
        "showCalendarLabel",
        "viewDate",
        "onHeaderChange",
        "onNextMonth",
        "onPrevMonth",
        "prevMonthIcon",
        "nextMonthIcon",
        "disableCalendar",
        "renderDayContent"
    ]);
    var daysRef = React.useRef(null);
    var monthsRef = React.useRef(null);
    var yearsRef = React.useRef(null);
    var hoursRef = React.useRef(null);
    var minutesRef = React.useRef(null);
    var maxElement = enableTime ? 4 : 2;
    var onInternalValueChange = React.useCallback(function(internalValue) {
        for(var i = 0; i <= maxElement; i += 1){
            if (internalValue[i].length < elementsConfig(i).length) {
                return;
            }
        }
        var formattedValue = "".concat(internalValue[0], ".").concat(internalValue[1], ".").concat(internalValue[2]);
        var mask = 'dd.MM.yyyy';
        if (enableTime) {
            formattedValue += " ".concat(internalValue[3], ":").concat(internalValue[4]);
            mask += ' HH:mm';
        }
        if (isMatch(formattedValue, mask)) {
            onChange === null || onChange === void 0 ? void 0 : onChange(parse(formattedValue, mask, value !== null && value !== void 0 ? value : new Date()));
        }
    }, [
        enableTime,
        maxElement,
        onChange,
        value
    ]);
    var refs = React.useMemo(function() {
        return [
            daysRef,
            monthsRef,
            yearsRef,
            hoursRef,
            minutesRef
        ];
    }, [
        daysRef,
        monthsRef,
        yearsRef,
        hoursRef,
        minutesRef
    ]);
    var _useDateInput = useDateInput({
        maxElement: maxElement,
        refs: refs,
        autoFocus: autoFocus,
        disabled: disabled,
        elementsConfig: elementsConfig,
        onChange: onChange,
        onInternalValueChange: onInternalValueChange,
        getInternalValue: getInternalValue,
        value: value
    }), rootRef = _useDateInput.rootRef, calendarRef = _useDateInput.calendarRef, open = _useDateInput.open, openCalendar = _useDateInput.openCalendar, internalValue = _useDateInput.internalValue, handleKeyDown = _useDateInput.handleKeyDown, setFocusedElement = _useDateInput.setFocusedElement, handleFieldEnter = _useDateInput.handleFieldEnter, clear = _useDateInput.clear, removeFocusFromField = _useDateInput.removeFocusFromField;
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var handleRootRef = useExternRef(rootRef, getRootRef);
    var onCalendarChange = React.useCallback(function(value) {
        onChange === null || onChange === void 0 ? void 0 : onChange(value);
        if (closeOnChange && !enableTime) {
            removeFocusFromField();
        }
    }, [
        onChange,
        removeFocusFromField,
        closeOnChange,
        enableTime
    ]);
    return /*#__PURE__*/ React.createElement(FormField, DateInput_object_spread({
        style: style,
        className: classNames(sizeY !== 'regular' && DateInput_sizeYClassNames[sizeY], className),
        getRootRef: handleRootRef,
        after: value ? /*#__PURE__*/ React.createElement(IconButton, {
            hoverMode: "opacity",
            label: clearFieldLabel,
            onClick: clear
        }, /*#__PURE__*/ React.createElement(Icon16Clear, null)) : /*#__PURE__*/ React.createElement(IconButton, {
            hoverMode: "opacity",
            label: showCalendarLabel,
            onClick: openCalendar
        }, /*#__PURE__*/ React.createElement(Icon20CalendarOutline, null)),
        disabled: disabled,
        onClick: callMultiple(handleFieldEnter, onClick),
        onFocus: callMultiple(handleFieldEnter, onFocus)
    }, props), /*#__PURE__*/ React.createElement("input", {
        type: "hidden",
        name: name,
        value: value ? format(value, enableTime ? "dd.MM.yyyy'T'HH:mm" : 'dd.MM.yyyy') : ''
    }), /*#__PURE__*/ React.createElement(Text, {
        className: "vkuiDateInput__input",
        onKeyDown: handleKeyDown,
        // Инцидент: в PR https://github.com/VKCOM/VKUI/pull/6649 стабильно ломается порядок стилей
        // из-за чего `.Typography--normalize` перебивает стили.
        normalize: false,
        Component: "span" // для <span> нормализация не нужна
    }, /*#__PURE__*/ React.createElement(InputLike, {
        length: 2,
        getRootRef: daysRef,
        index: 0,
        onElementSelect: setFocusedElement,
        value: internalValue[0],
        label: changeDayLabel
    }), /*#__PURE__*/ React.createElement(InputLikeDivider, null, "."), /*#__PURE__*/ React.createElement(InputLike, {
        length: 2,
        getRootRef: monthsRef,
        index: 1,
        onElementSelect: setFocusedElement,
        value: internalValue[1],
        label: changeMonthLabel
    }), /*#__PURE__*/ React.createElement(InputLikeDivider, null, "."), /*#__PURE__*/ React.createElement(InputLike, {
        length: 4,
        getRootRef: yearsRef,
        index: 2,
        onElementSelect: setFocusedElement,
        value: internalValue[2],
        label: changeYearLabel
    }), enableTime && /*#__PURE__*/ React.createElement(React.Fragment, null, /*#__PURE__*/ React.createElement(InputLikeDivider, {
        className: "vkuiDateInput__input--time-divider"
    }, ' '), /*#__PURE__*/ React.createElement(InputLike, {
        length: 2,
        getRootRef: hoursRef,
        index: 3,
        onElementSelect: setFocusedElement,
        value: internalValue[3],
        label: changeHoursLabel
    }), /*#__PURE__*/ React.createElement(InputLikeDivider, null, ":"), /*#__PURE__*/ React.createElement(InputLike, {
        length: 2,
        getRootRef: minutesRef,
        index: 4,
        onElementSelect: setFocusedElement,
        value: internalValue[4],
        label: changeMinutesLabel
    }))), open && !disableCalendar && /*#__PURE__*/ React.createElement(Popper, {
        targetRef: rootRef,
        offsetByMainAxis: 8,
        placement: calendarPlacement,
        autoUpdateOnTargetResize: true
    }, /*#__PURE__*/ React.createElement(Calendar, {
        value: value,
        onChange: onCalendarChange,
        enableTime: enableTime,
        disablePast: disablePast,
        disableFuture: disableFuture,
        shouldDisableDate: shouldDisableDate,
        onClose: removeFocusFromField,
        getRootRef: calendarRef,
        doneButtonText: doneButtonText,
        disablePickers: disablePickers,
        changeHoursLabel: changeHoursLabel,
        changeMinutesLabel: changeMinutesLabel,
        prevMonthLabel: prevMonthLabel,
        nextMonthLabel: nextMonthLabel,
        changeMonthLabel: changeMonthLabel,
        changeYearLabel: changeYearLabel,
        changeDayLabel: changeDayLabel,
        showNeighboringMonth: showNeighboringMonth,
        renderDayContent: renderDayContent,
        size: size,
        viewDate: viewDate,
        onHeaderChange: onHeaderChange,
        onNextMonth: onNextMonth,
        onPrevMonth: onPrevMonth,
        prevMonthIcon: prevMonthIcon,
        nextMonthIcon: nextMonthIcon,
        minDateTime: minDateTime,
        maxDateTime: maxDateTime
    })));
};

;// CONCATENATED MODULE: ./src/components/DateRangeInput/DateRangeInput.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/DateRangeInput/DateRangeInput.tsx
function DateRangeInput_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function DateRangeInput_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            DateRangeInput_define_property(target, key, source[key]);
        });
    }
    return target;
}
function DateRangeInput_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = DateRangeInput_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function DateRangeInput_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}



















var DateRangeInput_sizeYClassNames = {
    none: "vkuiDateRangeInput--sizeY-none",
    compact: "vkuiDateRangeInput--sizeY-compact"
};
var DateRangeInput_elementsConfig = function(index) {
    var length = 2;
    var min = 1;
    var max = 0;
    switch(index){
        case 0:
        case 3:
            max = 31;
            break;
        case 1:
        case 4:
            max = 12;
            break;
        case 2:
        case 5:
            max = 2100;
            min = 1900;
            length = 4;
            break;
    }
    return {
        length: length,
        min: min,
        max: max
    };
};
var DateRangeInput_getInternalValue = function(value) {
    var newValue = [
        '',
        '',
        '',
        '',
        '',
        ''
    ];
    if (value === null || value === void 0 ? void 0 : value[0]) {
        newValue[0] = String(value[0].getDate()).padStart(2, '0');
        newValue[1] = String(value[0].getMonth() + 1).padStart(2, '0');
        newValue[2] = String(value[0].getFullYear()).padStart(4, '0');
    }
    if (value === null || value === void 0 ? void 0 : value[1]) {
        newValue[3] = String(value[1].getDate()).padStart(2, '0');
        newValue[4] = String(value[1].getMonth() + 1).padStart(2, '0');
        newValue[5] = String(value[1].getFullYear()).padStart(4, '0');
    }
    return newValue;
};
/**
 * @see https://vkcom.github.io/VKUI/#/DateRangeInput
 */ var DateRangeInput = function(_param) {
    var shouldDisableDate = _param.shouldDisableDate, disableFuture = _param.disableFuture, disablePast = _param.disablePast, value = _param.value, onChange = _param.onChange, _param_calendarPlacement = _param.calendarPlacement, calendarPlacement = _param_calendarPlacement === void 0 ? 'bottom-start' : _param_calendarPlacement, style = _param.style, className = _param.className, _param_closeOnChange = _param.closeOnChange, closeOnChange = _param_closeOnChange === void 0 ? true : _param_closeOnChange, disablePickers = _param.disablePickers, getRootRef = _param.getRootRef, name = _param.name, autoFocus = _param.autoFocus, disabled = _param.disabled, onClick = _param.onClick, onFocus = _param.onFocus, _param_prevMonthLabel = _param.prevMonthLabel, prevMonthLabel = _param_prevMonthLabel === void 0 ? 'Предыдущий месяц' : _param_prevMonthLabel, _param_nextMonthLabel = _param.nextMonthLabel, nextMonthLabel = _param_nextMonthLabel === void 0 ? 'Следующий месяц' : _param_nextMonthLabel, _param_changeDayLabel = _param.changeDayLabel, changeDayLabel = _param_changeDayLabel === void 0 ? 'Изменить день' : _param_changeDayLabel, _param_changeMonthLabel = _param.changeMonthLabel, changeMonthLabel = _param_changeMonthLabel === void 0 ? 'Изменить месяц' : _param_changeMonthLabel, _param_changeYearLabel = _param.changeYearLabel, changeYearLabel = _param_changeYearLabel === void 0 ? 'Изменить год' : _param_changeYearLabel, _param_changeStartDayLabel = _param.changeStartDayLabel, changeStartDayLabel = _param_changeStartDayLabel === void 0 ? 'Изменить день начала' : _param_changeStartDayLabel, _param_changeStartMonthLabel = _param.changeStartMonthLabel, changeStartMonthLabel = _param_changeStartMonthLabel === void 0 ? 'Изменить месяц начала' : _param_changeStartMonthLabel, _param_changeStartYearLabel = _param.changeStartYearLabel, changeStartYearLabel = _param_changeStartYearLabel === void 0 ? 'Изменить год начала' : _param_changeStartYearLabel, _param_changeEndDayLabel = _param.changeEndDayLabel, changeEndDayLabel = _param_changeEndDayLabel === void 0 ? 'Изменить день окончания' : _param_changeEndDayLabel, _param_changeEndMonthLabel = _param.changeEndMonthLabel, changeEndMonthLabel = _param_changeEndMonthLabel === void 0 ? 'Изменить месяц окончания' : _param_changeEndMonthLabel, _param_changeEndYearLabel = _param.changeEndYearLabel, changeEndYearLabel = _param_changeEndYearLabel === void 0 ? 'Изменить год окончания' : _param_changeEndYearLabel, _param_clearFieldLabel = _param.clearFieldLabel, clearFieldLabel = _param_clearFieldLabel === void 0 ? 'Очистить поле' : _param_clearFieldLabel, _param_showCalendarLabel = _param.showCalendarLabel, showCalendarLabel = _param_showCalendarLabel === void 0 ? 'Показать календарь' : _param_showCalendarLabel, prevMonthIcon = _param.prevMonthIcon, nextMonthIcon = _param.nextMonthIcon, _param_disableCalendar = _param.disableCalendar, disableCalendar = _param_disableCalendar === void 0 ? false : _param_disableCalendar, renderDayContent = _param.renderDayContent, props = DateRangeInput_object_without_properties(_param, [
        "shouldDisableDate",
        "disableFuture",
        "disablePast",
        "value",
        "onChange",
        "calendarPlacement",
        "style",
        "className",
        "closeOnChange",
        "disablePickers",
        "getRootRef",
        "name",
        "autoFocus",
        "disabled",
        "onClick",
        "onFocus",
        "prevMonthLabel",
        "nextMonthLabel",
        "changeDayLabel",
        "changeMonthLabel",
        "changeYearLabel",
        "changeStartDayLabel",
        "changeStartMonthLabel",
        "changeStartYearLabel",
        "changeEndDayLabel",
        "changeEndMonthLabel",
        "changeEndYearLabel",
        "clearFieldLabel",
        "showCalendarLabel",
        "prevMonthIcon",
        "nextMonthIcon",
        "disableCalendar",
        "renderDayContent"
    ]);
    var daysStartRef = React.useRef(null);
    var monthsStartRef = React.useRef(null);
    var yearsStartRef = React.useRef(null);
    var daysEndRef = React.useRef(null);
    var monthsEndRef = React.useRef(null);
    var yearsEndRef = React.useRef(null);
    var onInternalValueChange = React.useCallback(function(internalValue) {
        var isStartValid = true;
        var isEndValid = true;
        for(var i = 0; i <= 2; i += 1){
            if (internalValue[i].length < DateRangeInput_elementsConfig(i).length) {
                isStartValid = false;
            }
        }
        for(var i1 = 3; i1 <= 5; i1 += 1){
            if (internalValue[i1].length < DateRangeInput_elementsConfig(i1).length) {
                isEndValid = false;
            }
        }
        var formattedStartValue = "".concat(internalValue[0], ".").concat(internalValue[1], ".").concat(internalValue[2]);
        var formattedEndValue = "".concat(internalValue[3], ".").concat(internalValue[4], ".").concat(internalValue[5]);
        var mask = 'dd.MM.yyyy';
        if (!isMatch(formattedStartValue, mask)) {
            isStartValid = false;
        }
        if (!isMatch(formattedEndValue, mask)) {
            isEndValid = false;
        }
        if (!isStartValid && !isEndValid) {
            return;
        }
        var valueExists = Array.isArray(value);
        var now = new Date();
        var start = isStartValid ? parse(formattedStartValue, mask, valueExists && (value === null || value === void 0 ? void 0 : value[0]) || now) : null;
        var end = isEndValid ? parse(formattedEndValue, mask, valueExists && (value === null || value === void 0 ? void 0 : value[1]) || now) : null;
        if (start && end && isAfter(end, start)) {
            onChange === null || onChange === void 0 ? void 0 : onChange([
                start,
                end
            ]);
        }
    }, [
        onChange,
        value
    ]);
    var refs = React.useMemo(function() {
        return [
            daysStartRef,
            monthsStartRef,
            yearsStartRef,
            daysEndRef,
            monthsEndRef,
            yearsEndRef
        ];
    }, [
        daysStartRef,
        monthsStartRef,
        yearsStartRef,
        daysEndRef,
        monthsEndRef,
        yearsEndRef
    ]);
    var _useDateInput = useDateInput({
        maxElement: 5,
        refs: refs,
        autoFocus: autoFocus,
        disabled: disabled,
        elementsConfig: DateRangeInput_elementsConfig,
        onChange: onChange,
        onInternalValueChange: onInternalValueChange,
        getInternalValue: DateRangeInput_getInternalValue,
        value: value
    }), rootRef = _useDateInput.rootRef, calendarRef = _useDateInput.calendarRef, open = _useDateInput.open, openCalendar = _useDateInput.openCalendar, closeCalendar = _useDateInput.closeCalendar, internalValue = _useDateInput.internalValue, handleKeyDown = _useDateInput.handleKeyDown, setFocusedElement = _useDateInput.setFocusedElement, handleFieldEnter = _useDateInput.handleFieldEnter, clear = _useDateInput.clear, removeFocusFromField = _useDateInput.removeFocusFromField;
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeY = _useAdaptivity.sizeY, sizeY = _useAdaptivity_sizeY === void 0 ? 'none' : _useAdaptivity_sizeY;
    var handleRootRef = useExternRef(rootRef, getRootRef);
    var onCalendarChange = React.useCallback(function(newValue) {
        onChange === null || onChange === void 0 ? void 0 : onChange(newValue);
        if (closeOnChange && (newValue === null || newValue === void 0 ? void 0 : newValue[1]) && newValue[1] !== (value === null || value === void 0 ? void 0 : value[1])) {
            removeFocusFromField();
        }
    }, [
        onChange,
        closeOnChange,
        value,
        removeFocusFromField
    ]);
    return /*#__PURE__*/ React.createElement(FormField, DateRangeInput_object_spread({
        style: style,
        className: classNames(sizeY !== 'regular' && DateRangeInput_sizeYClassNames[sizeY], className),
        getRootRef: handleRootRef,
        after: value ? /*#__PURE__*/ React.createElement(IconButton, {
            hoverMode: "opacity",
            onClick: clear
        }, /*#__PURE__*/ React.createElement(VisuallyHidden, null, clearFieldLabel), /*#__PURE__*/ React.createElement(Icon16Clear, null)) : /*#__PURE__*/ React.createElement(IconButton, {
            hoverMode: "opacity",
            onClick: openCalendar
        }, /*#__PURE__*/ React.createElement(VisuallyHidden, null, showCalendarLabel), /*#__PURE__*/ React.createElement(Icon20CalendarOutline, null)),
        disabled: disabled,
        onClick: callMultiple(handleFieldEnter, onClick),
        onFocus: callMultiple(handleFieldEnter, onFocus)
    }, props), /*#__PURE__*/ React.createElement("input", {
        type: "hidden",
        name: name,
        value: value ? "".concat(value[0] ? format(value[0], 'dd.MM.yyyy') : '', " - ").concat(value[1] ? format(value[1], 'dd.MM.yyyy') : '') : ''
    }), /*#__PURE__*/ React.createElement(Text, {
        className: "vkuiDateInput__input",
        onKeyDown: handleKeyDown
    }, /*#__PURE__*/ React.createElement(InputLike, {
        length: 2,
        getRootRef: daysStartRef,
        index: 0,
        onElementSelect: setFocusedElement,
        value: internalValue[0],
        label: changeStartDayLabel
    }), /*#__PURE__*/ React.createElement(InputLikeDivider, null, "."), /*#__PURE__*/ React.createElement(InputLike, {
        length: 2,
        getRootRef: monthsStartRef,
        index: 1,
        onElementSelect: setFocusedElement,
        value: internalValue[1],
        label: changeStartMonthLabel
    }), /*#__PURE__*/ React.createElement(InputLikeDivider, null, "."), /*#__PURE__*/ React.createElement(InputLike, {
        length: 4,
        getRootRef: yearsStartRef,
        index: 2,
        onElementSelect: setFocusedElement,
        value: internalValue[2],
        label: changeStartYearLabel
    }), /*#__PURE__*/ React.createElement(InputLikeDivider, null, ' — '), /*#__PURE__*/ React.createElement(InputLike, {
        length: 2,
        getRootRef: daysEndRef,
        index: 3,
        onElementSelect: setFocusedElement,
        value: internalValue[3],
        label: changeEndDayLabel
    }), /*#__PURE__*/ React.createElement(InputLikeDivider, null, "."), /*#__PURE__*/ React.createElement(InputLike, {
        length: 2,
        getRootRef: monthsEndRef,
        index: 4,
        onElementSelect: setFocusedElement,
        value: internalValue[4],
        label: changeEndMonthLabel
    }), /*#__PURE__*/ React.createElement(InputLikeDivider, null, "."), /*#__PURE__*/ React.createElement(InputLike, {
        length: 4,
        getRootRef: yearsEndRef,
        index: 5,
        onElementSelect: setFocusedElement,
        value: internalValue[5],
        label: changeEndYearLabel
    })), open && !disableCalendar && /*#__PURE__*/ React.createElement(Popper, {
        targetRef: rootRef,
        offsetByMainAxis: 8,
        placement: calendarPlacement
    }, /*#__PURE__*/ React.createElement(CalendarRange, {
        value: value,
        onChange: onCalendarChange,
        disablePast: disablePast,
        disableFuture: disableFuture,
        shouldDisableDate: shouldDisableDate,
        onClose: closeCalendar,
        getRootRef: calendarRef,
        disablePickers: disablePickers,
        prevMonthLabel: prevMonthLabel,
        nextMonthLabel: nextMonthLabel,
        changeMonthLabel: changeMonthLabel,
        changeYearLabel: changeYearLabel,
        changeDayLabel: changeDayLabel,
        prevMonthIcon: prevMonthIcon,
        nextMonthIcon: nextMonthIcon,
        renderDayContent: renderDayContent
    })));
};

;// CONCATENATED MODULE: ./src/components/Skeleton/Skeleton.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Skeleton/Skeleton.tsx
function Skeleton_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Skeleton_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Skeleton_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Skeleton_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Skeleton_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Skeleton_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Skeleton_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Skeleton_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Skeleton_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Skeleton_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Skeleton_sliced_to_array(arr, i) {
    return Skeleton_array_with_holes(arr) || Skeleton_iterable_to_array_limit(arr, i) || Skeleton_unsupported_iterable_to_array(arr, i) || Skeleton_non_iterable_rest();
}
function Skeleton_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Skeleton_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Skeleton_array_like_to_array(o, minLen);
}









var CUSTOM_PROPERTY_GRADIENT_LEFT = '--vkui_internal--skeleton_gradient_left';
/**
 * Синхронизирует анимацию скелетонов с помощью временных отрезков
 *
 * ## visibilitychange
 *
 * В синхронизацию не заложен механизм перехода на оптимизации браузеров при
 * переходе на другую вкладку, поскольку нет уверенности в реальности таких
 * кейсов со скелетонами. Если такой кейс принесут, необходимо обработать
 * событие `visibilitychange` используя функцию `syncAnimation`
 *
 * https://developer.chrome.com/blog/page-lifecycle-api/
 *
 * @param duration длительность анимации в секундах
 */ function useSkeletonSyncAnimation(disableAnimation) {
    var duration = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1.5;
    var _React_useState = Skeleton_sliced_to_array(React.useState(false), 2), isAnimationStarted = _React_useState[0], setIsAnimationStarted = _React_useState[1];
    var timer = React.useRef(undefined);
    var syncAnimation = React.useCallback(function() {
        clearTimeout(timer.current);
        setIsAnimationStarted(false);
        var durationInMilliseconds = duration * millisecondsInSecond;
        var delay = durationInMilliseconds - performance.now() % durationInMilliseconds;
        timer.current = setTimeout(function() {
            return setIsAnimationStarted(true);
        }, delay);
        return function() {
            return clearTimeout(timer.current);
        };
    }, [
        duration
    ]);
    React.useEffect(function() {
        if (disableAnimation) {
            setIsAnimationStarted(false);
            return;
        }
        if (isAnimationStarted) {
            return;
        }
        return syncAnimation();
    }, [
        disableAnimation,
        isAnimationStarted,
        syncAnimation
    ]);
    return isAnimationStarted;
}
/**
 * Вычисляет позицию скелетона
 */ function useSkeletonPosition(rootRef) {
    var _useDOM = useDOM(), document = _useDOM.document, window = _useDOM.window;
    var _React_useState = Skeleton_sliced_to_array(React.useState('0'), 2), skeletonGradientLeft = _React_useState[0], setSkeletonGradientLeft = _React_useState[1];
    var prevSkeletonGradientLeft = usePrevious(skeletonGradientLeft);
    var updatePosition = React.useCallback(function() {
        var el = rootRef.current;
        if (!el || !document) {
            return;
        }
        var value = -(el.getBoundingClientRect().left - document.body.getBoundingClientRect().left);
        var gradientValue = value === 0 ? '0' : "".concat(value, "px");
        if (prevSkeletonGradientLeft !== gradientValue) {
            setSkeletonGradientLeft(gradientValue);
        }
    }, [
        document,
        prevSkeletonGradientLeft,
        rootRef
    ]);
    React.useEffect(updatePosition, [
        updatePosition
    ]);
    useGlobalEventListener(window, 'resize', updatePosition);
    return skeletonGradientLeft;
}
/**
 * > Старайтесь минимизировать количество заглушек на экране. Не каждый элемент
 * > на экране должен заменяться заглушкой.
 * >
 * > Текстовые блоки лучше сокращать до трёх строк. Ширина последней строки
 * > скелета вычисляется, как 75% от ширины текстового блока. Высота скелетона
 * > автоматически подстраивается под размер шрифта, поэтому идеально
 * > вписывается в слоты компонентов, которые обычно ожидают текст.
 *
 * @since 6.1.0
 */ var Skeleton = function(_param) {
    var width = _param.width, height = _param.height, inlineSize = _param.inlineSize, blockSize = _param.blockSize, maxWidth = _param.maxWidth, maxInlineSize = _param.maxInlineSize, borderRadius = _param.borderRadius, style = _param.style, children = _param.children, colorFrom = _param.colorFrom, colorTo = _param.colorTo, _param_noAnimation = _param.noAnimation, noAnimation = _param_noAnimation === void 0 ? false : _param_noAnimation, duration = _param.duration, margin = _param.margin, getRootRef = _param.getRootRef, restProps = Skeleton_object_without_properties(_param, [
        "width",
        "height",
        "inlineSize",
        "blockSize",
        "maxWidth",
        "maxInlineSize",
        "borderRadius",
        "style",
        "children",
        "colorFrom",
        "colorTo",
        "noAnimation",
        "duration",
        "margin",
        "getRootRef"
    ]);
    var rootRef = useExternRef(getRootRef);
    var disableAnimation = !useSkeletonSyncAnimation(noAnimation, duration);
    var skeletonGradientLeft = useSkeletonPosition(rootRef);
    var skeletonStyle = Skeleton_define_property({
        width: width,
        height: height,
        inlineSize: inlineSize,
        blockSize: blockSize,
        maxWidth: maxWidth,
        maxInlineSize: maxInlineSize,
        borderRadius: borderRadius,
        margin: margin
    }, CUSTOM_PROPERTY_GRADIENT_LEFT, skeletonGradientLeft);
    if (colorFrom) {
        skeletonStyle['--vkui_internal--skeleton_color_from'] = colorFrom;
    }
    if (colorTo) {
        skeletonStyle['--vkui_internal--skeleton_color_to'] = colorTo;
    }
    if (Number.isFinite(duration)) {
        skeletonStyle['--vkui_internal--skeleton_animation_duration'] = "".concat(duration, "s");
    }
    return /*#__PURE__*/ React.createElement(RootComponent, Skeleton_object_spread({
        getRootRef: rootRef,
        Component: "span",
        baseClassName: classNames("vkuiSkeleton", disableAnimation && "vkuiSkeleton--disableAnimation"),
        style: Skeleton_object_spread({}, skeletonStyle, style)
    }, restProps), children || /*#__PURE__*/ React.createElement(React.Fragment, null, "‌"));
};

;// CONCATENATED MODULE: ./src/components/Div/Div.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Div/Div.tsx
function Div_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Div_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Div_define_property(target, key, source[key]);
        });
    }
    return target;
}



/**
 * @see https://vkcom.github.io/VKUI/#/Div
 */ var Div = function(props) {
    return /*#__PURE__*/ React.createElement(RootComponent, Div_object_spread({
        baseClassName: "vkuiDiv"
    }, props));
};

;// CONCATENATED MODULE: ./src/components/PanelSpinner/PanelSpinner.tsx
function PanelSpinner_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function PanelSpinner_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            PanelSpinner_define_property(target, key, source[key]);
        });
    }
    return target;
}
function PanelSpinner_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function PanelSpinner_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        PanelSpinner_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function PanelSpinner_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = PanelSpinner_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function PanelSpinner_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}


/**
 * @see https://vkcom.github.io/VKUI/#/PanelSpinner
 */ var PanelSpinner = /*#__PURE__*/ react.memo(function(_param) {
    var _param_height = _param.height, height = _param_height === void 0 ? 96 : _param_height, style = _param.style, restProps = PanelSpinner_object_without_properties(_param, [
        "height",
        "style"
    ]);
    return /*#__PURE__*/ react.createElement(Spinner_Spinner, PanelSpinner_object_spread_props(PanelSpinner_object_spread({
        size: "regular"
    }, restProps), {
        style: PanelSpinner_object_spread({
            height: height
        }, style)
    }));
});
PanelSpinner.displayName = 'PanelSpinner';

;// CONCATENATED MODULE: ./src/components/PanelHeaderClose/PanelHeaderClose.tsx
function PanelHeaderClose_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = PanelHeaderClose_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function PanelHeaderClose_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





/**
 * @see https://vkcom.github.io/VKUI/#/PanelHeaderButton
 */ var PanelHeaderClose = function(_param) {
    var _param_children = _param.children, children = _param_children === void 0 ? 'Отмена' : _param_children, restProps = PanelHeaderClose_object_without_properties(_param, [
        "children"
    ]);
    var platform = usePlatform();
    return /*#__PURE__*/ React.createElement(PanelHeaderButton, restProps, platform === 'ios' ? children : /*#__PURE__*/ React.createElement(React.Fragment, null, /*#__PURE__*/ React.createElement(VisuallyHidden, null, children), /*#__PURE__*/ React.createElement(AdaptiveIconRenderer, {
        IconCompact: Icon24CancelOutline,
        IconRegular: Icon28CancelOutline
    })));
};

;// CONCATENATED MODULE: ./src/components/PanelHeaderBack/PanelHeaderBack.tsx
function PanelHeaderBack_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function PanelHeaderBack_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            PanelHeaderBack_define_property(target, key, source[key]);
        });
    }
    return target;
}
function PanelHeaderBack_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function PanelHeaderBack_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        PanelHeaderBack_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function PanelHeaderBack_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = PanelHeaderBack_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function PanelHeaderBack_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}









var getBackIcon = function(platform) {
    switch(platform){
        case 'ios':
            return /*#__PURE__*/ React.createElement(Icon28ChevronBack, null);
        case 'vkcom':
            return /*#__PURE__*/ React.createElement(AdaptiveIconRenderer, {
                IconCompact: Icon20ChevronLeftOutline,
                IconRegular: Icon28ChevronLeftOutline
            });
        default:
            return /*#__PURE__*/ React.createElement(AdaptiveIconRenderer, {
                IconCompact: Icon24ArrowLeftOutline,
                IconRegular: Icon28ArrowLeftOutline
            });
    }
};
/**
 * @see https://vkcom.github.io/VKUI/#/PanelHeaderButton
 */ var PanelHeaderBack = function(_param) {
    var label = _param.label, className = _param.className, _param_children = _param.children, children = _param_children === void 0 ? 'Назад' : _param_children, restProps = PanelHeaderBack_object_without_properties(_param, [
        "label",
        "className",
        "children"
    ]);
    var platform = usePlatform();
    var _useAdaptivity = useAdaptivity(), _useAdaptivity_sizeX = _useAdaptivity.sizeX, sizeX = _useAdaptivity_sizeX === void 0 ? 'none' : _useAdaptivity_sizeX;
    // также label нужно скрывать при platform === 'ios' && sizeX === regular
    // https://github.com/VKCOM/VKUI/blob/master/src/components/PanelHeaderButton/PanelHeaderButton.css#L104
    var showLabel = platform === 'vkcom' || platform === 'ios';
    return /*#__PURE__*/ React.createElement(PanelHeaderButton, PanelHeaderBack_object_spread_props(PanelHeaderBack_object_spread({}, restProps), {
        className: classNames(sizeX === 'compact' && "vkuiPanelHeaderBack--sizeX-compact", platform === 'ios' && "vkuiPanelHeaderBack--ios", platform === 'vkcom' && "vkuiPanelHeaderBack--vkcom", showLabel && !!label && "vkuiPanelHeaderBack--has-label", className),
        label: showLabel && label
    }), children && /*#__PURE__*/ React.createElement(VisuallyHidden, null, children), getBackIcon(platform));
};

;// CONCATENATED MODULE: ./src/components/PanelHeaderSubmit/PanelHeaderSubmit.tsx
function PanelHeaderSubmit_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function PanelHeaderSubmit_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            PanelHeaderSubmit_define_property(target, key, source[key]);
        });
    }
    return target;
}
function PanelHeaderSubmit_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = PanelHeaderSubmit_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function PanelHeaderSubmit_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}





/**
 * @see https://vkcom.github.io/VKUI/#/PanelHeaderButton
 */ var PanelHeaderSubmit = function(_param) {
    var _param_children = _param.children, children = _param_children === void 0 ? 'Готово' : _param_children, restProps = PanelHeaderSubmit_object_without_properties(_param, [
        "children"
    ]);
    var platform = usePlatform();
    return /*#__PURE__*/ React.createElement(PanelHeaderButton, PanelHeaderSubmit_object_spread({
        primary: true
    }, restProps), platform === 'ios' ? children : /*#__PURE__*/ React.createElement(React.Fragment, null, /*#__PURE__*/ React.createElement(VisuallyHidden, null, children), /*#__PURE__*/ React.createElement(AdaptiveIconRenderer, {
        IconCompact: Icon24DoneOutline,
        IconRegular: Icon28DoneOutline
    })));
};

;// CONCATENATED MODULE: ./src/components/PanelHeaderEdit/PanelHeaderEdit.tsx
function PanelHeaderEdit_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = PanelHeaderEdit_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function PanelHeaderEdit_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}






/**
 * @see https://vkcom.github.io/VKUI/#/PanelHeaderButton
 */ var PanelHeaderEdit = function(_param) {
    var _param_isActive = _param.isActive, isActive = _param_isActive === void 0 ? false : _param_isActive, _param_editLabel = _param.editLabel, editLabel = _param_editLabel === void 0 ? 'Редактировать' : _param_editLabel, _param_doneLabel = _param.doneLabel, doneLabel = _param_doneLabel === void 0 ? 'Готово' : _param_doneLabel, restProps = PanelHeaderEdit_object_without_properties(_param, [
        "isActive",
        "editLabel",
        "doneLabel"
    ]);
    var platform = usePlatform();
    var label = isActive ? doneLabel : editLabel;
    return /*#__PURE__*/ React.createElement(PanelHeaderButton, restProps, platform === 'ios' ? label : /*#__PURE__*/ React.createElement(React.Fragment, null, /*#__PURE__*/ React.createElement(VisuallyHidden, null, label), /*#__PURE__*/ React.createElement(AdaptiveIconRenderer, {
        IconCompact: isActive ? Icon24DoneOutline : Icon24PenOutline,
        IconRegular: isActive ? Icon28DoneOutline : Icon28EditOutline
    })));
};

;// CONCATENATED MODULE: ./src/hooks/useAutoDetectAppearance.ts
function useAutoDetectAppearance_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function useAutoDetectAppearance_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function useAutoDetectAppearance_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function useAutoDetectAppearance_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function useAutoDetectAppearance_sliced_to_array(arr, i) {
    return useAutoDetectAppearance_array_with_holes(arr) || useAutoDetectAppearance_iterable_to_array_limit(arr, i) || useAutoDetectAppearance_unsupported_iterable_to_array(arr, i) || useAutoDetectAppearance_non_iterable_rest();
}
function useAutoDetectAppearance_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return useAutoDetectAppearance_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useAutoDetectAppearance_array_like_to_array(o, minLen);
}






/**
 * @private
 */ var useAutoDetectAppearance_useAutoDetectAppearance = function(appearanceProp) {
    var window = useDOM().window;
    var _React_useState = useAutoDetectAppearance_sliced_to_array(React.useState(appearanceProp || Appearance.LIGHT), 2), appearance = _React_useState[0], setAppearance = _React_useState[1];
    useIsomorphicLayoutEffect(function() {
        if (appearanceProp) {
            setAppearance(appearanceProp);
            return noop;
        }
        var mediaQuery = window ? window.matchMedia('(prefers-color-scheme: dark)') : undefined;
        if (!mediaQuery) {
            return noop;
        }
        var check = function(event) {
            // eslint-disable-next-line no-restricted-properties
            setAppearance(event.matches ? Appearance.DARK : Appearance.LIGHT);
        };
        check(mediaQuery);
        matchMediaListAddListener(mediaQuery, check);
        return function() {
            return matchMediaListRemoveListener(mediaQuery, check);
        };
    }, [
        window,
        appearanceProp
    ]);
    return appearance;
};

;// CONCATENATED MODULE: ./src/components/ConfigProvider/ConfigProvider.tsx
function ConfigProvider_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ConfigProvider_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ConfigProvider_define_property(target, key, source[key]);
        });
    }
    return target;
}







/**
 * @see https://vkcom.github.io/VKUI/#/ConfigProvider
 */ var ConfigProvider = function(propsRaw) {
    var props = excludeKeysWithUndefined(propsRaw);
    var parentConfig = useConfigProvider();
    var _$_object_spread = ConfigProvider_object_spread({}, parentConfig, props), children = _$_object_spread.children, hasCustomPanelHeaderAfter = _$_object_spread.hasCustomPanelHeaderAfter, customPanelHeaderAfterMinWidth = _$_object_spread.customPanelHeaderAfterMinWidth, isWebView = _$_object_spread.isWebView, transitionMotionEnabled = _$_object_spread.transitionMotionEnabled, platform = _$_object_spread.platform, locale = _$_object_spread.locale, appearanceProp = _$_object_spread.appearance, tokensClassNames = _$_object_spread.tokensClassNames;
    var appearance = useAutoDetectAppearance(appearanceProp);
    var configContext = useObjectMemo({
        hasCustomPanelHeaderAfter: hasCustomPanelHeaderAfter,
        customPanelHeaderAfterMinWidth: customPanelHeaderAfterMinWidth,
        isWebView: isWebView,
        transitionMotionEnabled: transitionMotionEnabled,
        platform: platform,
        locale: locale,
        tokensClassNames: tokensClassNames,
        appearance: appearance
    });
    return /*#__PURE__*/ React.createElement(ConfigProviderContext.Provider, {
        value: configContext
    }, /*#__PURE__*/ React.createElement(IconAppearanceProvider, {
        value: appearance
    }, /*#__PURE__*/ React.createElement(TokensClassProvider, null, children)));
};

;// CONCATENATED MODULE: ./src/components/LocaleProvider/LocaleProvider.tsx


/**
 * Компонент, прокидывающий локаль. Список можно найти в
 * [реестре языковых подметок IANA](https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry)
 *
 * @since 5.0.0
 * @see https://vkcom.github.io/VKUI/#/LocaleProvider
 */ function LocaleProvider(param) {
    var value = param.value, children = param.children;
    return /*#__PURE__*/ React.createElement(ConfigProviderOverride, {
        locale: value
    }, children);
}

;// CONCATENATED MODULE: ./src/components/PlatformProvider/PlatformProvider.tsx



/**
 * Компонент, позволяющий переопределить платформу для части приложения
 *
 * @since 5.1.0
 * @see https://vkcom.github.io/VKUI/#/PlatformProvider
 */ function PlatformProvider(param) {
    var value = param.value, children = param.children;
    return /*#__PURE__*/ React.createElement(ConfigProviderOverride, {
        platform: value
    }, /*#__PURE__*/ React.createElement(TokensClassProvider, null, children));
}

;// CONCATENATED MODULE: ./src/components/Popover/Popover.module.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/components/Popover/Popover.tsx
function Popover_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function Popover_array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function Popover_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function Popover_iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function Popover_non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function Popover_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            Popover_define_property(target, key, source[key]);
        });
    }
    return target;
}
function Popover_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function Popover_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        Popover_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function Popover_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = Popover_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function Popover_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Popover_sliced_to_array(arr, i) {
    return Popover_array_with_holes(arr) || Popover_iterable_to_array_limit(arr, i) || Popover_unsupported_iterable_to_array(arr, i) || Popover_non_iterable_rest();
}
function Popover_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return Popover_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Popover_array_like_to_array(o, minLen);
}











/**
 * @see https://vkcom.github.io/VKUI/#/Popover
 */ var Popover = function(_param) {
    var // UsePopoverProps
    withArrow = _param.arrow, _param_arrowHeight = _param.arrowHeight, arrowHeight = _param_arrowHeight === void 0 ? DEFAULT_ARROW_HEIGHT : _param_arrowHeight, _param_arrowPadding = _param.arrowPadding, arrowPadding = _param_arrowPadding === void 0 ? DEFAULT_ARROW_PADDING : _param_arrowPadding, tmp = _param.placement, expectedPlacement = tmp === void 0 ? 'bottom-start' : tmp, onPlacementChange = _param.onPlacementChange, _param_disableFlipMiddleware = _param.disableFlipMiddleware, disableFlipMiddleware = _param_disableFlipMiddleware === void 0 ? false : _param_disableFlipMiddleware, _param_trigger = _param.trigger, trigger = _param_trigger === void 0 ? 'click' : _param_trigger, content = _param.content, _param_hoverDelay = _param.hoverDelay, hoverDelay = _param_hoverDelay === void 0 ? 150 : _param_hoverDelay, closeAfterClick = _param.closeAfterClick, _param_offsetByMainAxis = _param.offsetByMainAxis, offsetByMainAxis = _param_offsetByMainAxis === void 0 ? 8 : _param_offsetByMainAxis, _param_offsetByCrossAxis = _param.offsetByCrossAxis, offsetByCrossAxis = _param_offsetByCrossAxis === void 0 ? 0 : _param_offsetByCrossAxis, sameWidth = _param.sameWidth, hideWhenReferenceHidden = _param.hideWhenReferenceHidden, disabled = _param.disabled, disableInteractive = _param.disableInteractive, disableCloseOnClickOutside = _param.disableCloseOnClickOutside, disableCloseOnEscKey = _param.disableCloseOnEscKey, _param_keepMounted = _param.keepMounted, keepMounted = _param_keepMounted === void 0 ? false : _param_keepMounted, customMiddlewares = _param.customMiddlewares, _param_defaultShown = _param.// uncontrolled
    defaultShown, defaultShown = _param_defaultShown === void 0 ? false : _param_defaultShown, // controlled
    shownProp = _param.shown, onShownChange = _param.onShownChange, onShownChanged = _param.onShownChanged, _param_usePortal = _param.// Для AppRootPortal
    usePortal, usePortal = _param_usePortal === void 0 ? true : _param_usePortal, // Для FloatingArrow
    arrowProps = _param.arrowProps, _param_ArrowIcon = _param.ArrowIcon, ArrowIcon = _param_ArrowIcon === void 0 ? DefaultIcon : _param_ArrowIcon, _param_autoFocus = _param.// FocusTrapProps
    autoFocus, autoFocus = _param_autoFocus === void 0 ? true : _param_autoFocus, _param_restoreFocus = _param.restoreFocus, restoreFocus = _param_restoreFocus === void 0 ? true : _param_restoreFocus, className = _param.className, children = _param.children, _param_noStyling = _param.noStyling, noStyling = _param_noStyling === void 0 ? false : _param_noStyling, _param_zIndex = _param.zIndex, zIndex = _param_zIndex === void 0 ? 'var(--vkui--z_index_popout)' : _param_zIndex, _param_role = _param.// a11y
    role, role = _param_role === void 0 ? 'dialog' : _param_role, restPopoverProps = Popover_object_without_properties(_param, [
        "arrow",
        "arrowHeight",
        "arrowPadding",
        "placement",
        "onPlacementChange",
        "disableFlipMiddleware",
        "trigger",
        "content",
        "hoverDelay",
        "closeAfterClick",
        "offsetByMainAxis",
        "offsetByCrossAxis",
        "sameWidth",
        "hideWhenReferenceHidden",
        "disabled",
        "disableInteractive",
        "disableCloseOnClickOutside",
        "disableCloseOnEscKey",
        "keepMounted",
        "customMiddlewares",
        "defaultShown",
        "shown",
        "onShownChange",
        "onShownChanged",
        "usePortal",
        "arrowProps",
        "ArrowIcon",
        "autoFocus",
        "restoreFocus",
        "className",
        "children",
        "noStyling",
        "zIndex",
        "role"
    ]);
    var _React_useState = Popover_sliced_to_array(React.useState(null), 2), arrowRef = _React_useState[0], setArrowRef = _React_useState[1];
    var _useFloatingMiddlewaresBootstrap = useFloatingMiddlewaresBootstrap({
        arrow: withArrow,
        arrowRef: arrowRef,
        arrowHeight: arrowHeight,
        arrowPadding: arrowPadding,
        placement: expectedPlacement,
        offsetByMainAxis: offsetByMainAxis,
        offsetByCrossAxis: offsetByCrossAxis,
        sameWidth: sameWidth,
        hideWhenReferenceHidden: hideWhenReferenceHidden,
        disableFlipMiddleware: disableFlipMiddleware,
        customMiddlewares: customMiddlewares
    }), middlewares = _useFloatingMiddlewaresBootstrap.middlewares, strictPlacement = _useFloatingMiddlewaresBootstrap.strictPlacement;
    var _useFloatingWithInteractions = useFloatingWithInteractions({
        middlewares: middlewares,
        placement: strictPlacement,
        trigger: trigger,
        hoverDelay: hoverDelay,
        closeAfterClick: closeAfterClick,
        disabled: disabled,
        disableInteractive: disableInteractive,
        disableCloseOnClickOutside: disableCloseOnClickOutside,
        disableCloseOnEscKey: disableCloseOnEscKey,
        defaultShown: defaultShown,
        shown: shownProp,
        onShownChange: onShownChange,
        onShownChanged: onShownChanged
    }), resolvedPlacement = _useFloatingWithInteractions.placement, shown = _useFloatingWithInteractions.shown, willBeHide = _useFloatingWithInteractions.willBeHide, refs = _useFloatingWithInteractions.refs, referenceProps = _useFloatingWithInteractions.referenceProps, floatingProps = _useFloatingWithInteractions.floatingProps, middlewareData = _useFloatingWithInteractions.middlewareData, onClose = _useFloatingWithInteractions.onClose, onRestoreFocus = _useFloatingWithInteractions.onRestoreFocus, onEscapeKeyDown = _useFloatingWithInteractions.onEscapeKeyDown;
    usePlacementChangeCallback(expectedPlacement, resolvedPlacement, onPlacementChange);
    var _usePatchChildren = Popover_sliced_to_array(usePatchChildren(children, injectAriaExpandedPropByRole(referenceProps, shown, role), refs.setReference), 2), child = _usePatchChildren[1];
    var popover = null;
    if (shown || keepMounted) {
        var hidden = keepMounted && !shown;
        var arrow = null;
        if (withArrow) {
            var arrowCoords = middlewareData.arrow;
            arrow = /*#__PURE__*/ React.createElement(FloatingArrow, Popover_object_spread_props(Popover_object_spread({
                iconClassName: noStyling ? undefined : "vkuiPopover__arrow"
            }, arrowProps), {
                coords: arrowCoords,
                placement: resolvedPlacement,
                getRootRef: setArrowRef,
                Icon: ArrowIcon
            }));
        }
        popover = /*#__PURE__*/ React.createElement(AppRootPortal, {
            usePortal: usePortal
        }, /*#__PURE__*/ React.createElement("div", Popover_object_spread_props(Popover_object_spread({
            ref: refs.setFloating,
            className: classNames("vkuiPopover", hidden && "vkuiPopover--hidden")
        }, floatingProps), {
            style: Popover_object_spread({
                zIndex: !hidden ? zIndex : undefined
            }, floatingProps.style)
        }), /*#__PURE__*/ React.createElement(FocusTrap, Popover_object_spread_props(Popover_object_spread({}, restPopoverProps), {
            role: role,
            className: classNames("vkuiPopover__in", noStyling ? undefined : "vkuiPopover__in--withStyling", willBeHide ? animationFadeClassNames.out : animationFadeClassNames.in, transformOriginClassNames[resolvedPlacement], className),
            mount: !hidden,
            disabled: hidden,
            autoFocus: disableInteractive ? false : autoFocus,
            restoreFocus: restoreFocus ? onRestoreFocus : false,
            onClose: onEscapeKeyDown
        }), arrow, typeof content === 'function' ? content({
            onClose: onClose
        }) : content)));
    }
    return /*#__PURE__*/ React.createElement(React.Fragment, null, child, popover);
};

;// CONCATENATED MODULE: ./src/components/NavIdContext/useNavId.ts


var useNavId = function() {
    return {
        view: React.useContext(NavViewIdContext),
        panel: React.useContext(NavPanelIdContext)
    };
};

;// CONCATENATED MODULE: ./src/lib/removeObjectKeys.ts
function removeObjectKeys_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function removeObjectKeys_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            removeObjectKeys_define_property(target, key, source[key]);
        });
    }
    return target;
}
function removeObjectKeys(obj) {
    var keys = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    var newObj = removeObjectKeys_object_spread({}, obj);
    keys.forEach(function(key) {
        return delete newObj[key];
    });
    return newObj;
}

;// CONCATENATED MODULE: ./src/lib/SSR.tsx






/**
 * @see https://vkcom.github.io/VKUI/#/SSR
 */ var SSRWrapper = function(param) {
    var userAgent = param.userAgent, browserInfo = param.browserInfo, children = param.children;
    if (!browserInfo && userAgent) {
        browserInfo = computeBrowserInfo(userAgent);
    }
    var dom = useObjectMemo(getDOM());
    return /*#__PURE__*/ React.createElement(ConfigProviderOverride, {
        platform: getPlatform(browserInfo)
    }, /*#__PURE__*/ React.createElement(DOMContext.Provider, {
        value: dom
    }, children));
};

;// CONCATENATED MODULE: ./src/helpers/avatar.ts
/**
 * Вычисляет цвет InitialsAvatar на основании переданного идентификатора объекта
 */ function calcInitialsAvatarColor(objectId) {
    return objectId % 6 + 1;
}

;// CONCATENATED MODULE: ./src/components/View/ViewInfinite.tsx
function ViewInfinite_array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function ViewInfinite_array_without_holes(arr) {
    if (Array.isArray(arr)) return ViewInfinite_array_like_to_array(arr);
}
function ViewInfinite_assert_this_initialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function ViewInfinite_call_super(_this, derived, args) {
    derived = ViewInfinite_get_prototype_of(derived);
    return ViewInfinite_possible_constructor_return(_this, ViewInfinite_is_native_reflect_construct() ? Reflect.construct(derived, args || [], ViewInfinite_get_prototype_of(_this).constructor) : derived.apply(_this, args));
}
function ViewInfinite_class_call_check(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function ViewInfinite_defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function ViewInfinite_create_class(Constructor, protoProps, staticProps) {
    if (protoProps) ViewInfinite_defineProperties(Constructor.prototype, protoProps);
    if (staticProps) ViewInfinite_defineProperties(Constructor, staticProps);
    return Constructor;
}
function ViewInfinite_define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ViewInfinite_get_prototype_of(o) {
    ViewInfinite_get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return ViewInfinite_get_prototype_of(o);
}
function ViewInfinite_inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) ViewInfinite_set_prototype_of(subClass, superClass);
}
function ViewInfinite_iterable_to_array(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function ViewInfinite_non_iterable_spread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function ViewInfinite_object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            ViewInfinite_define_property(target, key, source[key]);
        });
    }
    return target;
}
function ViewInfinite_ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function ViewInfinite_object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ViewInfinite_ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function ViewInfinite_object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = ViewInfinite_object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function ViewInfinite_object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function ViewInfinite_possible_constructor_return(self, call) {
    if (call && (ViewInfinite_type_of(call) === "object" || typeof call === "function")) {
        return call;
    }
    return ViewInfinite_assert_this_initialized(self);
}
function ViewInfinite_set_prototype_of(o, p) {
    ViewInfinite_set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return ViewInfinite_set_prototype_of(o, p);
}
function ViewInfinite_to_consumable_array(arr) {
    return ViewInfinite_array_without_holes(arr) || ViewInfinite_iterable_to_array(arr) || ViewInfinite_unsupported_iterable_to_array(arr) || ViewInfinite_non_iterable_spread();
}
function ViewInfinite_type_of(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}
function ViewInfinite_unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return ViewInfinite_array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ViewInfinite_array_like_to_array(o, minLen);
}
function ViewInfinite_is_native_reflect_construct() {
    try {
        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (_) {}
    return (ViewInfinite_is_native_reflect_construct = function() {
        return !!result;
    })();
}
















var ViewInfinite_warn = warnOnce('ViewInfinite');
var ViewInfinite_scrollsCache = {};
var _React_Component;
var ViewInfiniteComponent = /*#__PURE__*/ function(_superClass) {
    "use strict";
    ViewInfinite_inherits(ViewInfiniteComponent, _superClass);
    function ViewInfiniteComponent(props) {
        ViewInfinite_class_call_check(this, ViewInfiniteComponent);
        var _this;
        _this = ViewInfinite_call_super(this, ViewInfiniteComponent, [
            props
        ]), ViewInfinite_define_property(_this, "swipeBackPrevented", false), ViewInfinite_define_property(_this, "scrolls", ViewInfinite_scrollsCache[getNavId_getNavId(_this.props, ViewInfinite_warn)] || {}), ViewInfinite_define_property(_this, "transitionFinishTimeout", undefined), ViewInfinite_define_property(_this, "animationFinishTimeout", undefined), ViewInfinite_define_property(_this, "panelNodes", {}), ViewInfinite_define_property(_this, "transitionDisposer", functions_noop), ViewInfinite_define_property(_this, "transitionEndHandler", function() {
            if (_this.state.prevPanel !== null) {
                _this.flushTransition(_this.state.prevPanel, Boolean(_this.state.isBack));
            }
        }), ViewInfinite_define_property(_this, "swipingBackTransitionEndHandler", function(e) {
            // indexOf because of vendor prefixes in old browsers
            if (!e || e.propertyName.includes('transform') && e.target === _this.pickPanel(_this.state.swipeBackNextPanel)) {
                switch(_this.state.swipeBackResult){
                    case 'fail':
                        _this.onSwipeBackCancel();
                        break;
                    case 'success':
                        _this.onSwipeBackSuccess();
                }
            }
        }), ViewInfinite_define_property(_this, "handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext", function(event) {
            if (_this.state.browserSwipe) {
                return;
            }
            var _getSwipeBackPredicates = utils_getSwipeBackPredicates(event.startX, event.shiftX, _this.window.innerWidth), swipeBackTriggered = _getSwipeBackPredicates.swipeBackTriggered, viewportStartEdgeTouched = _getSwipeBackPredicates.viewportStartEdgeTouched, viewportEndEdgeTouched = _getSwipeBackPredicates.viewportEndEdgeTouched;
            if ((viewportStartEdgeTouched || viewportEndEdgeTouched) && swipeBackTriggered) {
                _this.setState({
                    browserSwipe: true
                });
            }
        }), ViewInfinite_define_property(_this, "handleTouchMoveXForIOSSwipeBackSimulation", function(event) {
            if (_this.swipeBackPrevented || utils_swipeBackExcluded(event)) {
                return;
            }
            var _getSwipeBackPredicates = utils_getSwipeBackPredicates(event.startX, event.shiftX, _this.window.innerWidth), swipedToOpposite = _getSwipeBackPredicates.swipedToOpposite, swipeBackTriggered = _getSwipeBackPredicates.swipeBackTriggered, viewportStartEdgeTouched = _getSwipeBackPredicates.viewportStartEdgeTouched;
            if (_this.state.animated && swipeBackTriggered) {
                return;
            }
            if (!_this.state.swipingBack && _this.props.history && _this.props.history.length > 1) {
                if (swipedToOpposite) {
                    _this.swipeBackPrevented = true;
                    return;
                }
                if (!swipeBackTriggered) {
                    return;
                }
                if (!viewportStartEdgeTouched && utils_hasHorizontalScrollableElementWithScrolledToLeft(event.originalEvent.target)) {
                    _this.swipeBackPrevented = true;
                    return;
                }
                // Начался свайп назад
                if (_this.props.onSwipeBackStart) {
                    var payload = _this.props.onSwipeBackStart(_this.state.activePanel);
                    if (payload === 'prevent') {
                        _this.swipeBackPrevented = true;
                        return;
                    }
                }
                if (_this.state.activePanel !== null) {
                    var _this_props_scroll;
                    // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.
                    _this.blurActiveElement();
                    var prevScrolls = _this.scrolls[_this.state.activePanel] || [];
                    _this.scrolls = ViewInfinite_object_spread_props(ViewInfinite_object_spread({}, _this.scrolls), ViewInfinite_define_property({}, _this.state.activePanel, ViewInfinite_to_consumable_array(prevScrolls).concat([
                        (_this_props_scroll = _this.props.scroll) === null || _this_props_scroll === void 0 ? void 0 : _this_props_scroll.getScroll().y
                    ])));
                }
                _this.setState({
                    swipingBack: true,
                    swipeBackStartX: event.startX,
                    swipeBackPrevPanel: _this.state.activePanel,
                    swipeBackNextPanel: _this.props.history.slice(-2)[0]
                });
            }
            if (_this.state.swipingBack) {
                if (event.shiftX < 0) {
                    _this.setState({
                        swipeBackShift: 0
                    });
                } else if (event.shiftX > _this.window.innerWidth - _this.state.swipeBackStartX) {
                    _this.setState({
                        swipeBackShift: _this.window.innerWidth
                    });
                } else {
                    _this.setState({
                        swipeBackShift: event.shiftX
                    });
                }
            }
        }), ViewInfinite_define_property(_this, "handleTouchEndForIOSSwipeBackSimulation", function(event) {
            _this.swipeBackPrevented = false;
            if (_this.state.swipingBack && _this.window) {
                var speed = _this.state.swipeBackShift / event.duration * 1000;
                if (_this.state.swipeBackShift === 0) {
                    _this.onSwipeBackCancel();
                } else if (_this.state.swipeBackShift >= _this.window.innerWidth) {
                    _this.onSwipeBackSuccess();
                } else if (speed > 250 || _this.state.swipeBackShift >= _this.window.innerWidth / 2) {
                    _this.setState({
                        swipeBackResult: 'success'
                    });
                } else {
                    _this.setState({
                        swipeBackResult: 'fail'
                    });
                }
            }
        });
        _this.state = {
            animated: false,
            visiblePanels: [
                props.activePanel
            ],
            activePanel: props.activePanel,
            isBack: undefined,
            prevPanel: null,
            nextPanel: null,
            swipingBack: undefined,
            swipeBackStartX: 0,
            swipeBackShift: 0,
            swipeBackNextPanel: null,
            swipeBackPrevPanel: null,
            swipeBackResult: null,
            browserSwipe: false
        };
        return _this;
    }
    ViewInfinite_create_class(ViewInfiniteComponent, [
        {
            key: "document",
            get: function get() {
                return this.props.document;
            }
        },
        {
            key: "window",
            get: function get() {
                return this.props.window;
            }
        },
        {
            key: "panels",
            get: function get() {
                return react.Children.toArray(this.props.children);
            }
        },
        {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                var id = getNavId_getNavId(this.props);
                if (id) {
                    ViewInfinite_scrollsCache[id] = this.scrolls;
                }
                if (this.animationFinishTimeout) {
                    clearTimeout(this.animationFinishTimeout);
                }
            }
        },
        {
            key: "componentDidUpdate",
            value: function componentDidUpdate(prevProps, prevState) {
                var _this = this;
                // Нужен переход
                if (prevProps.activePanel !== this.props.activePanel && !prevState.swipingBack && !prevState.browserSwipe) {
                    var _this_props_scroll;
                    var isBack = false;
                    if (this.props.isBackCheck) {
                        isBack = this.props.isBackCheck({
                            from: prevProps.activePanel,
                            to: this.props.activePanel
                        });
                    } else {
                        var firstLayerId = this.panels.map(function(panel) {
                            return getNavId_getNavId(panel.props, ViewInfinite_warn);
                        }).find(function(id) {
                            return id === prevProps.activePanel || id === _this.props.activePanel;
                        });
                        isBack = firstLayerId === this.props.activePanel;
                    }
                    this.blurActiveElement();
                    var prevScrolls = this.scrolls[prevProps.activePanel] || [];
                    var scrolls = ViewInfinite_object_spread_props(ViewInfinite_object_spread({}, this.scrolls), ViewInfinite_define_property({}, prevProps.activePanel, ViewInfinite_to_consumable_array(prevScrolls).concat([
                        (_this_props_scroll = this.props.scroll) === null || _this_props_scroll === void 0 ? void 0 : _this_props_scroll.getScroll({
                            compensateKeyboardHeight: false
                        }).y
                    ])));
                    this.scrolls = scrolls;
                    if (this.shouldDisableTransitionMotion()) {
                        this.flushTransition(prevProps.activePanel, isBack);
                    } else {
                        this.setState({
                            visiblePanels: [
                                prevProps.activePanel,
                                this.props.activePanel
                            ],
                            prevPanel: prevProps.activePanel,
                            nextPanel: this.props.activePanel,
                            activePanel: null,
                            animated: true,
                            isBack: isBack
                        });
                    }
                }
                // Закончилась анимация свайпа назад
                if (prevProps.activePanel !== this.props.activePanel && prevState.swipingBack) {
                    var nextPanel = this.state.swipeBackNextPanel;
                    var prevPanel = this.state.swipeBackPrevPanel;
                    var scrollPosition = undefined;
                    this.scrolls = ViewInfinite_object_spread({}, this.scrolls);
                    if (prevPanel !== null) {
                        var prevPanelScrolls = ViewInfinite_to_consumable_array(this.scrolls[prevPanel] || []).slice(0, -1);
                        this.scrolls[prevPanel] = prevPanelScrolls;
                    }
                    if (nextPanel !== null) {
                        var newPanelScrolls = ViewInfinite_to_consumable_array(this.scrolls[nextPanel] || []);
                        scrollPosition = newPanelScrolls.pop();
                        this.scrolls[nextPanel] = newPanelScrolls;
                    }
                    this.setState({
                        swipeBackPrevPanel: null,
                        swipeBackNextPanel: null,
                        swipingBack: false,
                        swipeBackResult: null,
                        swipeBackStartX: 0,
                        swipeBackShift: 0,
                        activePanel: nextPanel,
                        visiblePanels: [
                            nextPanel
                        ]
                    }, function() {
                        var _this_props_scroll;
                        (_this_props_scroll = _this.props.scroll) === null || _this_props_scroll === void 0 ? void 0 : _this_props_scroll.scrollTo(0, scrollPosition);
                        prevProps.onTransition && prevProps.onTransition({
                            isBack: true,
                            from: prevPanel,
                            to: nextPanel
                        });
                    });
                }
                // Началась анимация завершения свайпа назад.
                if (!prevState.swipeBackResult && this.state.swipeBackResult) {
                    this.waitTransitionFinish(this.pickPanel(this.state.swipeBackNextPanel), this.swipingBackTransitionEndHandler);
                }
                // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)
                if (prevState.swipeBackResult === 'fail' && !this.state.swipeBackResult && this.state.activePanel !== null) {
                    var _this_props_scroll1;
                    var newPanelScrolls1 = ViewInfinite_to_consumable_array(this.scrolls[this.state.activePanel] || []);
                    var scrollPosition1 = newPanelScrolls1.pop();
                    this.scrolls = ViewInfinite_object_spread_props(ViewInfinite_object_spread({}, this.scrolls), ViewInfinite_define_property({}, this.state.activePanel, newPanelScrolls1));
                    (_this_props_scroll1 = this.props.scroll) === null || _this_props_scroll1 === void 0 ? void 0 : _this_props_scroll1.scrollTo(0, scrollPosition1);
                }
                // Закончился Safari свайп
                if (prevProps.activePanel !== this.props.activePanel && this.state.browserSwipe) {
                    this.setState({
                        browserSwipe: false,
                        nextPanel: null,
                        prevPanel: null,
                        animated: false,
                        visiblePanels: [
                            this.props.activePanel
                        ],
                        activePanel: this.props.activePanel
                    });
                }
            }
        },
        {
            key: "shouldDisableTransitionMotion",
            value: function shouldDisableTransitionMotion() {
                var _this_props_configProvider, _this_props_splitCol;
                return ((_this_props_configProvider = this.props.configProvider) === null || _this_props_configProvider === void 0 ? void 0 : _this_props_configProvider.transitionMotionEnabled) === false || !((_this_props_splitCol = this.props.splitCol) === null || _this_props_splitCol === void 0 ? void 0 : _this_props_splitCol.animate) || this.props.platform === 'vkcom';
            }
        },
        {
            key: "disposeTransition",
            value: function disposeTransition() {
                this.transitionDisposer();
                this.transitionDisposer = functions_noop;
            }
        },
        {
            key: "waitTransitionFinish",
            value: function waitTransitionFinish(elem, eventHandler) {
                if (this.shouldDisableTransitionMotion()) {
                    this.disposeTransition();
                    this.transitionFinishTimeout = setTimeout(eventHandler);
                } else if (elem) {
                    this.disposeTransition();
                    elem.addEventListener('transitionend', eventHandler);
                    this.transitionDisposer = function() {
                        elem.removeEventListener('transitionend', eventHandler);
                    };
                } else {
                    if (this.transitionFinishTimeout) {
                        clearTimeout(this.transitionFinishTimeout);
                    }
                    this.transitionFinishTimeout = setTimeout(eventHandler, this.props.platform === 'android' || this.props.platform === 'vkcom' ? 300 : 600);
                }
            }
        },
        {
            key: "blurActiveElement",
            value: function blurActiveElement() {
                var _this_document;
                if (typeof this.window !== 'undefined' && ((_this_document = this.document) === null || _this_document === void 0 ? void 0 : _this_document.activeElement)) {
                    this.document.activeElement.blur();
                }
            }
        },
        {
            key: "pickPanel",
            value: function pickPanel(id) {
                if (id === null) {
                    return undefined;
                }
                return this.panelNodes[id];
            }
        },
        {
            key: "flushTransition",
            value: function flushTransition(prevPanel, isBack) {
                var _this = this;
                var activePanel = this.props.activePanel;
                var prevPanelScrolls = ViewInfinite_to_consumable_array(this.scrolls[prevPanel] || []).slice(0, -1);
                var newPanelScrolls = ViewInfinite_to_consumable_array(this.scrolls[activePanel] || []);
                var scrollPosition = isBack ? newPanelScrolls.pop() : 0;
                if (isBack) {
                    var _obj;
                    this.scrolls = ViewInfinite_object_spread_props(ViewInfinite_object_spread({}, this.scrolls), (_obj = {}, ViewInfinite_define_property(_obj, prevPanel, prevPanelScrolls), ViewInfinite_define_property(_obj, activePanel, newPanelScrolls), _obj));
                }
                this.setState({
                    prevPanel: null,
                    nextPanel: null,
                    visiblePanels: [
                        activePanel
                    ],
                    activePanel: activePanel,
                    animated: false,
                    isBack: isBack
                }, function() {
                    var _this_props_scroll;
                    (_this_props_scroll = _this.props.scroll) === null || _this_props_scroll === void 0 ? void 0 : _this_props_scroll.scrollTo(0, isBack ? scrollPosition : 0);
                    _this.props.onTransition && _this.props.onTransition({
                        isBack: isBack,
                        from: prevPanel,
                        to: activePanel
                    });
                });
            }
        },
        {
            key: "onSwipeBackSuccess",
            value: function onSwipeBackSuccess() {
                this.props.onSwipeBack && this.props.onSwipeBack();
            }
        },
        {
            key: "onSwipeBackCancel",
            value: function onSwipeBackCancel() {
                this.props.onSwipeBackCancel && this.props.onSwipeBackCancel();
                this.setState({
                    swipeBackPrevPanel: null,
                    swipeBackNextPanel: null,
                    swipingBack: false,
                    swipeBackResult: null,
                    swipeBackStartX: 0,
                    swipeBackShift: 0
                });
            }
        },
        {
            key: "calcPanelSwipeStyles",
            value: function calcPanelSwipeStyles(panelId) {
                if (!dom_canUseDOM || !this.window) {
                    return {};
                }
                var isPrev = panelId === this.state.swipeBackPrevPanel;
                var isNext = panelId === this.state.swipeBackNextPanel;
                if (!isPrev && !isNext || this.state.swipeBackResult) {
                    return {};
                }
                var prevPanelTranslate = "".concat(this.state.swipeBackShift, "px");
                var nextPanelTranslate = "".concat(-50 + this.state.swipeBackShift * 100 / this.window.innerWidth / 2, "%");
                var prevPanelShadow = 0.3 * (this.window.innerWidth - this.state.swipeBackShift) / this.window.innerWidth;
                if (this.state.swipeBackResult) {
                    return isPrev ? {
                        boxShadow: "-2px 0 12px rgba(0, 0, 0, ".concat(prevPanelShadow, ")")
                    } : {};
                }
                if (isNext) {
                    return {
                        transform: "translate3d(".concat(nextPanelTranslate, ", 0, 0)")
                    };
                }
                if (isPrev) {
                    return {
                        transform: "translate3d(".concat(prevPanelTranslate, ", 0, 0)"),
                        boxShadow: "-2px 0 12px rgba(0, 0, 0, ".concat(prevPanelShadow, ")")
                    };
                }
                return {};
            }
        },
        {
            key: "render",
            value: function render() {
                var _this = this;
                var _this_props = this.props, platform = _this_props.platform, _1 = _this_props.activePanel, splitCol = _this_props.splitCol, configProvider = _this_props.configProvider, history = _this_props.history, id = _this_props.id, nav = _this_props.nav, onTransition = _this_props.onTransition, onSwipeBack = _this_props.onSwipeBack, onSwipeBackStart = _this_props.onSwipeBackStart, onSwipeBackCancel = _this_props.onSwipeBackCancel, window = _this_props.window, document = _this_props.document, scroll = _this_props.scroll, isBackCheck = _this_props.isBackCheck, className = _this_props.className, restProps = ViewInfinite_object_without_properties(_this_props, [
                    "platform",
                    "activePanel",
                    "splitCol",
                    "configProvider",
                    "history",
                    "id",
                    "nav",
                    "onTransition",
                    "onSwipeBack",
                    "onSwipeBackStart",
                    "onSwipeBackCancel",
                    "window",
                    "document",
                    "scroll",
                    "isBackCheck",
                    "className"
                ]);
                var _this_state = this.state, prevPanel = _this_state.prevPanel, nextPanel = _this_state.nextPanel, activePanel = _this_state.activePanel, isBack = _this_state.isBack, animated = _this_state.animated, swipeBackPrevPanel = _this_state.swipeBackPrevPanel, swipeBackNextPanel = _this_state.swipeBackNextPanel, swipeBackResult = _this_state.swipeBackResult, swipingBack = _this_state.swipingBack;
                var panels = this.panels.filter(function(panel) {
                    var panelId = getNavId_getNavId(panel.props, ViewInfinite_warn);
                    return panelId !== undefined && _this.state.visiblePanels.includes(panelId) || panelId === swipeBackPrevPanel || panelId === swipeBackNextPanel;
                }).sort(function(panel) {
                    var panelId = getNavId_getNavId(panel.props, ViewInfinite_warn);
                    var isPrevPanel = panelId === prevPanel || panelId === swipeBackPrevPanel;
                    var isNextPanel = panelId === nextPanel || panelId === swipeBackNextPanel;
                    if (isNextPanel) {
                        return swipingBack || _this.state.isBack ? -1 : 1;
                    }
                    if (isPrevPanel) {
                        return swipingBack || _this.state.isBack ? 1 : -1;
                    }
                    return 0;
                });
                var disableAnimation = this.shouldDisableTransitionMotion();
                var iOSSwipeBackSimulationEnabled = !disableAnimation && platform === 'ios' && (configProvider === null || configProvider === void 0 ? void 0 : configProvider.isWebView) && Boolean(onSwipeBack);
                return /*#__PURE__*/ react.createElement(NavIdContext_NavViewIdContext.Provider, {
                    value: id || nav
                }, /*#__PURE__*/ react.createElement(Touch_Touch, ViewInfinite_object_spread_props(ViewInfinite_object_spread({
                    Component: "section"
                }, restProps), {
                    className: clsx("vkuiView", platform === 'ios' && clsx("vkuiView--ios", 'vkuiInternalView--ios'), !disableAnimation && this.state.animated && "vkuiView--animated", !disableAnimation && this.state.swipingBack && "vkuiView--swiping-back", disableAnimation && "vkuiView--no-motion", className),
                    onMoveX: iOSSwipeBackSimulationEnabled ? this.handleTouchMoveXForIOSSwipeBackSimulation : platform === 'ios' ? this.handleTouchMoveXForNativeIOSSwipeBackOrSwipeNext : undefined,
                    onEnd: iOSSwipeBackSimulationEnabled ? this.handleTouchEndForIOSSwipeBackSimulation : undefined
                }), /*#__PURE__*/ react.createElement("div", {
                    className: "vkuiView__panels"
                }, panels.map(function(panel) {
                    var panelId = getNavId_getNavId(panel.props, ViewInfinite_warn);
                    var isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;
                    var compensateScroll = isPrev || panelId === swipeBackNextPanel || panelId === nextPanel && isBack;
                    var isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);
                    var scrollList = panelId && _this.scrolls[panelId] || [];
                    var scroll = scrollList[scrollList.length - 1] || 0;
                    return /*#__PURE__*/ react.createElement("div", {
                        className: clsx("vkuiView__panel", panelId === activePanel && "vkuiView__panel--active", panelId === prevPanel && "vkuiView__panel--prev", panelId === nextPanel && "vkuiView__panel--next", panelId === swipeBackPrevPanel && "vkuiView__panel--swipe-back-prev", panelId === swipeBackNextPanel && "vkuiView__panel--swipe-back-next", swipeBackResult === 'success' && "vkuiView__panel--swipe-back-success", swipeBackResult === 'fail' && "vkuiView__panel--swipe-back-failed"),
                        onAnimationEnd: isTransitionTarget ? _this.transitionEndHandler : undefined,
                        ref: function(el) {
                            return panelId !== undefined && (_this.panelNodes[panelId] = el);
                        },
                        style: _this.calcPanelSwipeStyles(panelId),
                        key: panelId
                    }, /*#__PURE__*/ react.createElement("div", {
                        className: "vkuiView__panel-in",
                        style: {
                            marginTop: compensateScroll ? -scroll : undefined
                        }
                    }, /*#__PURE__*/ react.createElement(NavTransitionDirectionContext_NavTransitionDirectionProvider, {
                        isBack: swipingBack || isBack
                    }, /*#__PURE__*/ react.createElement(NavTransitionContext_NavTransitionProvider, {
                        entering: panelId === nextPanel || panelId === swipeBackNextPanel
                    }, panel))));
                }))));
            }
        }
    ]);
    return ViewInfiniteComponent;
}(_React_Component = react.Component);
ViewInfinite_define_property(ViewInfiniteComponent, "defaultProps", {
    history: []
});
var ViewInfinite = withContext(withContext(withContext(withPlatform(withDOM(ViewInfiniteComponent)), SplitColContext_SplitColContext, 'splitCol'), ConfigProviderContext_ConfigProviderContext, 'configProvider'), ScrollContext_ScrollContext, 'scroll');

;// CONCATENATED MODULE: ./src/styles/common.css
// extracted by mini-css-extract-plugin

;// CONCATENATED MODULE: ./src/index.ts

















/**
 * Service
 */ 



/**
 * Primitives
 */ 


/**
 * Layout
 */ 
















/**
 * Popouts
 */ 








/**
 * Modals
 */ 






/**
 * Blocks
 */ 













































/**
 * Forms
 */ 




























/**
 * Helpers
 */ 









/**
 * Wrappers
 */ 







/**
 * HOCs
 */ 
/**
 * Hooks
 */ 












/**
 * Utils
 */ 









/**
 * Unstable
 */ 


/******/ })()
;