import * as React from 'react';
import type { HTMLAttributesWithRootRef } from '../../types';
import type { TypographyProps } from '../Typography/Typography';
import { ContentBadgeSlotIcon } from './ContentBadgeSlotIcon';
import type { ContentBadgeModeType, ContentBadgeSizeType } from './types';
export interface ContentBadgeProps extends HTMLAttributesWithRootRef<HTMLDivElement>, Pick<TypographyProps, 'weight'> {
    /**
     * Вид отображения.
     */
    mode?: ContentBadgeModeType;
    /**
     * Цвет оформления.
     */
    appearance?: 'accent' | 'neutral' | 'accent-green' | 'accent-red' | 'overlay';
    /**
     * Включает приближение значения закругления к форме круга.
     *
     * > Note: игнорируется при size="s"
     */
    capsule?: boolean;
    /**
     * Определяет отступы и размер текста.
     *
     * Соответствие размеров иконок в слоте `<ContentBadge.SlotIcon />`:
     *
     * - size="s" – ⚠️ не поддерживает иконки;
     * - size="m" – при **одиночной** иконке `16x16`, в остальных случаях `12x12`;
     * - size="l" – при **одиночной** иконке `20x20`, в остальных случаях `16x16`;
     */
    size?: ContentBadgeSizeType;
}
/**
 * Компонент, который позволяет добавить текстовые или иконочные бейджи. Как правило, используются
 * поверх других элементов или рядом с ними.
 *
 * Используйте `ContentBadge.SlotIcon` для размещения иконок внутри `ContentBadge`.
 *
 * @since 6.1.0
 * @see https://vkcom.github.io/VKUI/#/ContentBadge
 *
 * TODO [>=7]: переименовать в Badge
 */
export declare const ContentBadge: React.FC<ContentBadgeProps> & {
    SlotIcon: typeof ContentBadgeSlotIcon;
};
//# sourceMappingURL=ContentBadge.d.ts.map