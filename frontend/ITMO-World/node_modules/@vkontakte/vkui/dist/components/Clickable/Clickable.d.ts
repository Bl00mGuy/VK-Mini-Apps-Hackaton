import * as React from 'react';
import { type FocusVisibleModeProps } from '../../hooks/useFocusVisibleClassName';
import { type RootComponentProps } from '../RootComponent/RootComponent';
import { type StateProps } from './useState';
export interface ClickableProps<T = HTMLElement> extends RootComponentProps<T>, FocusVisibleModeProps, StateProps {
}
/**
 * Проверяем, является ли компонент кликабельным
 */
export declare function checkClickable<T>(props: ClickableProps<T>): boolean;
/**
 * Базовый кликабельный корневой компонент.
 *
 * - при передаче `href` превратится в `a`,
 * - при передаче `onClick` превратится в `div` c `role="button"` и `tabIndex="0"`.
 * - иначе используется `div`.
 *
 * Отвечает за:
 *
 * - стейты наведения и нажатия
 * - a11y компонентов
 */
export declare const Clickable: <T>({ focusVisibleMode, baseClassName: baseClassNameProp, ...restProps }: ClickableProps<T>) => React.ReactNode;
//# sourceMappingURL=Clickable.d.ts.map