import * as React from 'react';
import type { HasComponent, HasRootRef } from '../../types';
export type FieldIconsAlign = 'start' | 'center' | 'end';
export interface FormFieldProps {
    status?: 'default' | 'error' | 'valid';
    /**
     * Добавляет иконку слева.
     *
     * Рекомендации:
     *
     * - Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.
     * - Используйте [IconButton](https://vkcom.github.io/VKUI/#/IconButton), если вам нужна кликабельная иконка.
     */
    before?: React.ReactNode;
    /**
     * Вертикальное выравнивание иконки слева
     */
    beforeAlign?: FieldIconsAlign;
    /**
     * Добавляет иконку справа.
     *
     * Рекомендации:
     *
     * - Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.
     * - Используйте [IconButton](https://vkcom.github.io/VKUI/#/IconButton), если вам нужна кликабельная иконка.
     */
    after?: React.ReactNode;
    /**
     * Вертикальное выравнивание иконки справа
     */
    afterAlign?: FieldIconsAlign;
    /**
     * Режим отображения.
     *
     * - `default` — показывает фон, обводку и, при наличии, текст-подсказку.
     * - `plain` — показывает только текст-подсказку.
     */
    mode?: 'default' | 'plain';
    /**
     * Максимальная высота поля
     */
    maxHeight?: number;
}
export interface FormFieldOwnProps extends React.AllHTMLAttributes<HTMLElement>, HasRootRef<HTMLElement>, HasComponent, FormFieldProps {
    disabled?: boolean;
}
/**
 * @see https://vkcom.github.io/VKUI/#/FormField
 */
export declare const FormField: ({ Component, status, children, getRootRef, before, after, beforeAlign, afterAlign, disabled, mode, className, maxHeight, style, ...restProps }: FormFieldOwnProps) => React.ReactNode;
//# sourceMappingURL=FormField.d.ts.map