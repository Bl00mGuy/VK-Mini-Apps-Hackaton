{"version":3,"sources":["../../../src/components/Tooltip/Tooltip.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useGlobalEscKeyDown } from '../../hooks/useGlobalEscKeyDown';\nimport { usePatchChildren } from '../../hooks/usePatchChildren';\nimport { animationFadeClassNames } from '../../lib/animation';\nimport {\n  type FloatingComponentProps,\n  getArrowCoordsByMiddlewareData,\n  type OnShownChange,\n  useFloatingMiddlewaresBootstrap,\n  useFloatingWithInteractions,\n  usePlacementChangeCallback,\n} from '../../lib/floating';\nimport { AppRootPortal } from '../AppRoot/AppRootPortal';\nimport { type FloatingArrowProps as FloatingArrowPropsPrivate } from '../FloatingArrow/FloatingArrow';\nimport { TooltipBase, type TooltipBaseProps } from '../TooltipBase/TooltipBase';\n\ntype AllowedFloatingComponentProps = Pick<\n  FloatingComponentProps,\n  | 'arrowHeight'\n  | 'arrowPadding'\n  | 'hoverDelay'\n  | 'placement'\n  | 'offsetByMainAxis'\n  | 'offsetByCrossAxis'\n  | 'defaultShown'\n  | 'onShownChange'\n  | 'hideWhenReferenceHidden'\n  | 'children'\n  | 'zIndex'\n  | 'usePortal'\n  | 'onPlacementChange'\n  | 'disableFlipMiddleware'\n>;\n\ntype AllowedTooltipBaseProps = Omit<TooltipBaseProps, 'arrowProps' | 'onCloseIconClick'>;\n\n/**\n * @alias\n * @public\n */\nexport type TooltipArrowProps = Omit<\n  FloatingArrowPropsPrivate,\n  'getRootRef' | 'coords' | 'placement' | 'Icon'\n>;\n\n/**\n * @alias\n * @public\n */\nexport type TooltipOnShownChange = OnShownChange;\n\nexport interface TooltipProps extends AllowedFloatingComponentProps, AllowedTooltipBaseProps {\n  /**\n   * Передача `boolean` позволяет контролировать состояния показа и скрытия вручную. Используйте\n   * совместно с `onShawnChange`.\n   *\n   * > Если нужно разово инициировать показ тултипа при первом рендере, то используйте `defaultShown`.\n   */\n  shown?: boolean;\n  /**\n   * Добавляет возможность наводить на тултип.\n   */\n  enableInteractive?: boolean;\n  /**\n   * Добавляет возможность закрыть тултип через иконку-крестик.\n   *\n   * > Работает в сочетании с `enableInteractive` или при использовании `shown` и `onShownChange`.\n   */\n  closable?: boolean;\n  /**\n   * Скрывает стрелку, указывающую на якорный элемент.\n   */\n  disableArrow?: boolean;\n  /**\n   * Отключает закрытие по клику.\n   */\n  disableCloseAfterClick?: boolean;\n  /**\n   * Отключает появление при фокусе.\n   */\n  disableTriggerOnFocus?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Tooltip\n */\nexport const Tooltip = ({\n  // UseFloatingMiddlewaresBootstrapOptions\n  placement: placementProp = 'bottom',\n  arrowPadding = 10,\n  arrowHeight = 8,\n  offsetByMainAxis = 8,\n  offsetByCrossAxis = 0,\n  hideWhenReferenceHidden,\n  disableFlipMiddleware = false,\n  disableTriggerOnFocus = false,\n\n  // useFloatingWithInteractions\n  defaultShown,\n  shown: shownProp,\n  onShownChange,\n  hoverDelay = 150,\n\n  // инверсированные св-ва для useFloatingWithInteractions\n  enableInteractive = false,\n  disableArrow = false,\n  disableCloseAfterClick = false,\n\n  // Reference\n  children,\n\n  // AppRootProps\n  usePortal,\n\n  // TooltipBaseProps\n  id: idProp,\n  getRootRef,\n  appearance = 'neutral',\n  style: styleProp,\n  className,\n  zIndex = 'var(--vkui--z_index_popout)',\n  closable,\n  onPlacementChange,\n  ...popperProps\n}: TooltipProps): React.ReactNode => {\n  const generatedId = React.useId();\n  const tooltipId = idProp || generatedId;\n\n  const [arrowRef, setArrowRef] = React.useState<HTMLDivElement | null>(null);\n  const { middlewares, strictPlacement } = useFloatingMiddlewaresBootstrap({\n    placement: placementProp,\n\n    offsetByMainAxis,\n    offsetByCrossAxis,\n\n    hideWhenReferenceHidden,\n\n    arrow: !disableArrow,\n    arrowRef,\n    arrowPadding,\n    arrowHeight,\n    disableFlipMiddleware,\n  });\n  const {\n    shown,\n    willBeHide,\n    placement,\n    refs,\n    referenceProps,\n    floatingProps,\n    middlewareData,\n    onClose,\n    onEscapeKeyDown,\n  } = useFloatingWithInteractions({\n    defaultShown,\n    shown: shownProp,\n    onShownChange,\n    placement: strictPlacement,\n    trigger: disableTriggerOnFocus ? 'hover' : ['hover', 'focus'],\n    hoverDelay,\n    closeAfterClick: !disableCloseAfterClick,\n    disableInteractive: !enableInteractive,\n    middlewares,\n  });\n  const tooltipRef = useExternRef<HTMLDivElement>(getRootRef, refs.setFloating);\n\n  usePlacementChangeCallback(placementProp, placement, onPlacementChange);\n\n  let tooltip: React.ReactNode = null;\n  if (shown) {\n    tooltip = (\n      <AppRootPortal usePortal={usePortal}>\n        <TooltipBase\n          {...popperProps}\n          {...floatingProps}\n          style={{\n            ...floatingProps.style,\n            zIndex,\n            ...styleProp,\n          }}\n          id={tooltipId}\n          getRootRef={tooltipRef}\n          appearance={appearance}\n          arrowProps={\n            disableArrow\n              ? undefined\n              : {\n                  placement,\n                  coords: getArrowCoordsByMiddlewareData(middlewareData),\n                  getRootRef: setArrowRef,\n                }\n          }\n          className={classNames(\n            willBeHide ? animationFadeClassNames.out : animationFadeClassNames.in,\n            className,\n          )}\n          onCloseIconClick={closable ? onClose : undefined}\n        />\n      </AppRootPortal>\n    );\n  }\n  const [, child] = usePatchChildren(\n    children,\n    {\n      ...referenceProps,\n      ...(shown && { 'aria-describedby': tooltipId }),\n    },\n    refs.setReference,\n  );\n\n  useGlobalEscKeyDown(shown, onEscapeKeyDown);\n\n  return (\n    <React.Fragment>\n      {child}\n      {tooltip}\n    </React.Fragment>\n  );\n};\n"],"names":["React","classNames","useExternRef","useGlobalEscKeyDown","usePatchChildren","animationFadeClassNames","getArrowCoordsByMiddlewareData","useFloatingMiddlewaresBootstrap","useFloatingWithInteractions","usePlacementChangeCallback","AppRootPortal","TooltipBase","Tooltip","placement","placementProp","arrowPadding","arrowHeight","offsetByMainAxis","offsetByCrossAxis","hideWhenReferenceHidden","disableFlipMiddleware","disableTriggerOnFocus","defaultShown","shown","shownProp","onShownChange","hoverDelay","enableInteractive","disableArrow","disableCloseAfterClick","children","usePortal","id","idProp","getRootRef","appearance","style","styleProp","className","zIndex","closable","onPlacementChange","popperProps","generatedId","useId","tooltipId","arrowRef","setArrowRef","useState","middlewares","strictPlacement","arrow","willBeHide","refs","referenceProps","floatingProps","middlewareData","onClose","onEscapeKeyDown","trigger","closeAfterClick","disableInteractive","tooltipRef","setFloating","tooltip","arrowProps","undefined","coords","out","in","onCloseIconClick","child","setReference","Fragment"],"mappings":"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"}