import * as React from 'react';
import type { HTMLAttributesWithRootRef } from '../../types';
export interface SkeletonProps extends HTMLAttributesWithRootRef<HTMLDivElement | HTMLSpanElement>, Pick<React.CSSProperties, 'width' | 'height' | 'inlineSize' | 'blockSize' | 'maxWidth' | 'maxInlineSize' | 'borderRadius' | 'margin'> {
    /**
     * Начальный цвет анимации
     */
    colorFrom?: string;
    /**
     * Финальный цвет анимации
     */
    colorTo?: string;
    /**
     * Выключает анимацию, в результате чего показывается только один цвет
     */
    noAnimation?: boolean;
    /**
     * Длительность анимации в секундах
     */
    duration?: number;
}
/**
 * > Старайтесь минимизировать количество заглушек на экране. Не каждый элемент
 * > на экране должен заменяться заглушкой.
 * >
 * > Текстовые блоки лучше сокращать до трёх строк. Ширина последней строки
 * > скелета вычисляется, как 75% от ширины текстового блока. Высота скелетона
 * > автоматически подстраивается под размер шрифта, поэтому идеально
 * > вписывается в слоты компонентов, которые обычно ожидают текст.
 *
 * @since 6.1.0
 */
export declare const Skeleton: ({ width, height, inlineSize, blockSize, maxWidth, maxInlineSize, borderRadius, style, children, colorFrom, colorTo, noAnimation, duration, margin, getRootRef, ...restProps }: SkeletonProps) => React.ReactNode;
//# sourceMappingURL=Skeleton.d.ts.map