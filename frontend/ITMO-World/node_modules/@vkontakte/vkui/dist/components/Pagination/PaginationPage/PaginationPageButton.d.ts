import * as React from 'react';
import { type SizeTypeValues } from '../../../lib/adaptivity';
import { type TappableProps } from '../../Tappable/Tappable';
import type { PaginationProps } from '../Pagination';
export interface PaginationPageButtonOpts extends Pick<React.ButtonHTMLAttributes<HTMLButtonElement>, 'onClick' | 'disabled' | 'className'>, Pick<PaginationProps, 'getPageLabel'> {
    isCurrent?: boolean;
    sizeY?: SizeTypeValues;
    children: number;
}
export interface PaginationPageButtonProps extends PaginationPageButtonOpts {
    renderPageButton?: (props: CustomPaginationPageButtonProps) => React.ReactNode;
}
declare const getTappablePropsFromPaginationPage: (opts: PaginationPageButtonOpts) => TappableProps & {
    "data-page": number;
};
export type CustomPaginationPageButtonProps = ReturnType<typeof getTappablePropsFromPaginationPage>;
export declare const PaginationPageButton: ({ renderPageButton, ...restProps }: PaginationPageButtonProps) => React.ReactNode;
export {};
//# sourceMappingURL=PaginationPageButton.d.ts.map