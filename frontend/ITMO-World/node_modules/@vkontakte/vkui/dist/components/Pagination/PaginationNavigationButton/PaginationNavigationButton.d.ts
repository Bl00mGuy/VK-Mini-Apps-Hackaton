import * as React from 'react';
import { type ButtonProps } from '../../Button/Button';
export interface PaginationNavigationButtonOpts {
    'type': 'prev' | 'next';
    'style': 'icon' | 'caption' | 'both';
    'caption': React.ReactNode;
    'Icon': React.ComponentType;
    'a11yLabel': React.ReactNode;
    'disabled'?: boolean;
    'onClick': (event: React.MouseEvent<HTMLElement>) => void;
    'data-page': number | undefined;
}
export interface PaginationNavigationButtonProps extends PaginationNavigationButtonOpts {
    renderNavigationButton?: (props: CustomPaginationNavigationButton) => React.ReactNode;
}
/**
 * @private
 */
declare const getButtonPropsFromPaginationNavigationButton: (opts: PaginationNavigationButtonOpts) => ButtonProps & {
    "data-page": number | undefined;
};
/**
 * @private
 */
export type CustomPaginationNavigationButton = ReturnType<typeof getButtonPropsFromPaginationNavigationButton>;
/**
 * @private
 */
export declare const PaginationNavigationButton: ({ renderNavigationButton, ...restProps }: PaginationNavigationButtonProps) => React.ReactNode;
export {};
//# sourceMappingURL=PaginationNavigationButton.d.ts.map